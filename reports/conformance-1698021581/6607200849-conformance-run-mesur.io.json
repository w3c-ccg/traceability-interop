{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf183d6e-ba91-44ad-971e-94a2e096a837",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7279c137-5455-4e40-9ad5-a8d8b365b369",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "665cf673-4b2f-42a5-8600-a4db958f8ef9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e743805-732d-472d-9917-e74a9a5a8376"
                }
              }
            ]
          },
          {
            "id": "b8d18bfc-34cd-477d-8b71-03bb155b94a6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50c155b8-a626-44f0-8fd5-1cf4dab833aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "556b141a-7ad1-4f70-a6be-94070cf01324"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "59819ff6-697a-4e2e-906b-94b4cd529811",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2e1bf3c2-0488-4f7a-ab29-eb2b95bcf85d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8db8cae-50b6-4299-b8a4-99d1b430f930",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d15a5ccc-8a00-4422-b364-3e9c66d0a38f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "998acf2f-5d74-490c-a74a-9e740629467d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba675a83-bbe9-4d25-87d1-1cfcbbb1219e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84161935-18a4-4603-9eec-138b2c5ac0e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4240c702-b810-403b-ad83-da5e1b67f34a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b443d05-f21e-45a5-bff2-2b89e35ec2e5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47590016-55c9-446f-a066-3257100cdbfa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f7f5bfce-8e0a-4eae-ac2f-b61ec6bb2a13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b98bee1b-da7c-47f9-b813-1ba85b3d446a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf591acd-dd04-4e0c-9bc0-ff9ae1c7dc26"
            }
          }
        ]
      },
      {
        "id": "f82492a0-38b4-4171-a0c4-9d4d459a70d4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e27a638f-2044-4bef-804f-a53ef231303a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "686d06c9-d4cd-43cb-92fa-9a0638ab73b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca9bffb2-ca92-4705-a339-23d2e0060a58",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda599f2-ae74-4047-a916-e9292c4dc611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5842db88-5bd8-4098-9ebb-ebf5bd3be8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690ca335-6ff1-426a-8379-2e24e8dbf8da",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02574318-1a3e-4f86-9b2a-1eb256721f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e89eb6b-81a4-41ee-bb33-55d763794bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7dce6a-0e89-4eba-936f-2ba897f7f2b3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059268ff-e525-48ef-a50c-1fd479d05e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88953753-3ba9-4351-949b-f020f8fcec22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "674e5e0f-78d2-4284-8c4c-a5184b70149c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "253514f6-fed7-43c8-9189-6c090f20ddcc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353114a2-915a-43b4-b246-c8812e504805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb54b409-7f35-439b-8c83-645aaea0aea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7712d5-01d1-4478-9465-5215fc23b218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0eac4f-0243-4ed6-9e06-e168e8516c92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "009eb180-9e33-4250-a2ae-23fe972b3e07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f069e93e-dc14-42cd-b312-d58f00cc6952",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3867a56-cf9d-492c-b14d-c0e6d2cacb0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d4a5883c-1e47-4b18-b637-582bae534259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95ec0cd8-af53-4c8f-b06b-75edec2a220a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cc9ad697-8eda-440e-ba19-94adb0b00fa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "907e5d28-918a-4538-9ad7-06d0ec38a1fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04d34a17-d913-42a0-bb26-484be261f591"
            }
          }
        ]
      },
      {
        "id": "9a5dfadd-44f7-409c-8fbd-77782dd5f5a0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "63b13e9a-3564-482a-a2ac-0e2a72c6e3e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15dffaf8-6253-4f1c-9bfa-8e05acbf2c33",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "838a66d3-f89b-48e4-8983-81bf82652e72",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb716c6-700e-4e68-b183-8a19746adc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a8ce85-d852-4f59-ba2d-ce4fdc89bba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29afe2f-1088-4252-9614-6f79d022d058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "380d2d75-50a3-40f8-8aa2-7c6701f2251a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ca2aee-4f45-46fa-8e05-22d001656827",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e5a468-f2c4-4fb3-aeb8-982f103d2e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90913a4-050a-4840-a4f1-cabc2f41e791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1d72bc-c54b-46e6-b441-8202bd606a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "164dcfb9-6d0d-435a-bfd4-f82a988644db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70330e3-61d1-49a7-921e-11e9b1646a6c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd1c22-9f29-41ac-8143-c199dacd9b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c9dd2c-8665-4d96-9540-b2741b4e6758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6613ea80-7a45-4cb1-aff3-35fdbb51a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8677f8d-5ab5-4efe-8514-688b499f6d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984a8fed-3b42-4a66-8592-6d586d28d1d1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a067770-1747-4a3e-9e58-464b58993bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a676ae-1332-4e92-b365-178b276944a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ae64c5-4f2e-47ed-8469-62d3c856536d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceb946ab-389e-4e4f-9f16-ef36098d4f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45577968-875f-4b30-ac8c-e265def1cf7c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b445da9b-b555-49c3-bbe4-0be01dd2c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f2bfc9-b944-43a6-8470-48cdd7c3199e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3e3184-b336-418a-b8b5-88c05ef7081a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e0ba8f-2592-4ea6-b989-3ec2b94eb825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df7dee4-79cc-4fc5-97ae-074ebdcf7ee7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61041d-d919-44dd-acd6-9dbc9c8828fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468103d0-3328-4d46-b85d-8c3dd71cd750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fb72eb-6396-4b12-8e23-fcfa9a031a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddcd6267-bed9-4273-a71c-5300bfac7a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14825b80-9eed-403c-9a36-ee4f27967faf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38226632-4575-43b0-bdda-2498f584d8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc2941c-0785-4f3f-8af1-5e8da267ddd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09676b73-e830-4146-9e89-9190866816c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1740794a-af76-437b-80de-cbaf536ef29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1319bd4-1c76-4d84-9f59-b624eae48c2f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa5c80-11c3-4a78-81f2-8a087a15e92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597272ae-5fdb-478f-bf58-2de15a061bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4382fb1d-d15a-479a-b5be-12e878bb7095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "867517e5-0c23-452d-89c9-a0ab50c30b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970a0b17-000e-4640-9ad2-d7e337d23a0a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973234e7-e44c-4f0f-bc53-e5dcd2fc191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61071c94-6b8d-46a7-994e-93b281685dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196c6bb3-b8f1-4321-bbff-2ae44058758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9e44b35-9600-42d3-bed2-edfafc6423a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044a2020-db6a-4d4a-b6af-e269ea39b310",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8c0ade-a916-4798-8032-a828b23471d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244311ec-d674-49d0-ab5b-3a743563062a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8aa25f-369b-46b9-a0e4-a6a50a798b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "846122ea-4176-4248-a5bb-b39c862100a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baff2db7-303f-4296-b258-22d65ee8f9c3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b63ffd2-2444-4a8d-a883-51c10ea95738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbbfb03-98c4-457d-9ef3-a9fef38c8f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2739fe61-9d56-48c8-bcb0-de4e131f9220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c813552c-e605-4934-ad4c-f41d2140a230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93321247-f51c-44bb-b776-6694a28d0810",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b6b5b4-5a51-4f45-a09c-ca33ce27f9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00eaec4-e8a2-466b-8ffd-6cf6a6a196ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85562a4-09f2-4805-b03b-10ef032f89ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9834a11d-0eea-4ff7-9fc6-3f8d60541e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f80fa1-d04e-46e6-9bd0-f95118b1caab",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ee8655-b094-4489-802b-72a05ca8f05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e5462b-f6fe-4341-b995-f5dce51509de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0035abff-4b2d-4b81-81b9-b7e0db024f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33c1baba-3a87-4247-a395-4dbcaad829f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ac18da-54a9-4574-965f-5825721a940f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8864d8-71b1-4b28-840c-56a61701db84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7496f54a-13f6-42d6-9059-fd91bc5cf19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56dee9c-928b-45ca-843c-9237a98fe34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f74f2a5d-ef34-412a-87af-36e67a936c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dc028f-f000-4025-8b32-ab986a6d5b16",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1277efcf-d531-4109-a991-ef7dc0bc1d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b19aa3-fc23-41df-8db3-d880c5bcd894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2948c9-9557-432c-94f0-a3b2525655de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e87dc640-1038-4ab7-a269-92dbe1bdc1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b962c50f-03bd-46ee-b22c-383d22a7c443",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8657f1cd-c9d9-433f-a989-5d61bf8fbad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dc8d11-8c87-4ee2-8b98-9a0e7ac7828d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3e46a8-ff33-4fa0-b5f9-714adbbd8fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1a0522-c951-48c6-8f74-262324526c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9bcd8f-b2bd-498b-b6a6-b1b4dbbc41ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e11bf0-748f-4949-8c75-39dfc1b08956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03c38c4-723e-4eb2-8194-3c65fdaac928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fec86d4-b4a1-4494-9bcd-91752a69d937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4444703b-b36d-4aa0-8137-850a1c8bc565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db757048-e705-41e8-bb18-f74b1643b5ff",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3157f97d-6a9d-4fe0-94f4-20fce65e7467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad018c4-467c-4bd2-8d68-5b95d8443e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b126bfb-a2c9-48a6-8818-0f04c52201ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f985dc89-c0e8-4cff-883e-3877b1c8e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaec1419-fcce-463d-a9e0-50490f23f929",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ee3a76-92fc-475d-8f77-ce409ad64eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfca770c-d39e-4444-9326-259b72750a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f512b5-d459-47ea-afa3-030257b10d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d179c1b-dc0f-4c62-a6b6-57036ee39d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7032bd35-22a3-4dc0-802b-b806c7c3e48d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac3412b-f8e7-4bc4-81b5-b205d659c7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b53c0d-0500-42c5-a188-8259f7f8be92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef91cf03-ada1-4daf-898d-c9fc0655ee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59b4615-d7f4-4bd4-9e45-c65bf902bc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0996cf0-782e-43b3-9924-8a0055493cbe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3907c82-910f-477a-a659-617c94a85d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b4fef9-c73d-4a41-a6b1-691012e63f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce737a6e-155f-4811-8afb-34978fc69479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3956efa-9b1e-4566-8e44-0fb631556d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83546f7-dfc8-4a14-95f8-3fb1817920f5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7767a7-7e21-4acd-b6aa-bbc4b737b1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d2e8f0-4ee6-41c5-94c1-18fe2334ef25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02b9352-8ccb-4136-96b6-9f5cd23dcea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e54a0252-71cb-48c5-9145-662ea5c213b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd421b5b-6a8a-438b-9fef-ceeea1d23335",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b5425e-6ca5-4978-a28e-1390ae0d1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307a83b8-f6b3-4569-9d2d-fe097748c73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a5d9a0-fb97-4c62-8881-92f7d5bef71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6e201d-f41c-4c65-87ad-db8dea5de91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e344ba-1b38-4ec4-96bb-194711e6f767",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3debf5d-8e79-4397-8907-984b35b77124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06209df-9bee-489e-9c75-917876a56134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b1b0e2-a252-464f-a6af-3c8842a2ae16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "756e59cd-b0a4-40c0-81e0-b876fb6e5248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4487fcb9-c9e1-49a6-870b-ecb71dee52f4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40199689-d41a-47d2-966e-896ecfd35c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f728840-5b09-45bd-9b34-d3e604feb5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd902cec-d95d-47a0-b0d1-23b3a39d6aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "555e8122-ccb1-4dad-a606-6295d80b983b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcff088-e38f-4861-b64b-a231257ada8d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7e20d2-3ffe-403e-ba0b-4aca3f0fa31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c96878-aa4c-4686-9c9a-c97018b93d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a648df8-8b6d-47a4-b91f-65ed220600ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5fe544-fa68-418c-aefb-3418f572f906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686541a3-3bec-4775-8113-a2627d4f4ad2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6554656c-895a-4c60-8bc6-99cc5c45a826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669e9064-7785-4fd2-9092-b8019fc6fe2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f013ded0-cd7a-4b51-84bd-3123f15dddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f84e75a-1648-4a75-9f5a-deddda3ca697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3341aa4-5c40-4727-8fea-7e2e46a5a23b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b25f43-c90b-4902-93f1-0c8a077e5bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b16d7c0-ef6f-418a-9e35-1e055c0d07ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d706dc3e-f7d2-4913-9a9d-b02214ccaf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "683b5eea-e20c-4bb4-a8f0-1afb3d760fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97963233-fb1e-4994-9ff7-69145178cf13",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f003c519-853c-4622-9722-17633d55bd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547af335-f13e-4282-bdef-9c7988662238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4288cee8-6e94-4daf-89b5-45e9118f6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ea3c65-675b-437e-b4bd-7b45584a77cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d2d689-eb35-44e9-9a12-c12394be6ce7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90651839-0fcd-4718-ac21-7b2fae725d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef22e71-28e6-44b7-9bcd-4fc7a4379dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbaad23-5e92-448e-b975-d9db489c71a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cc1d55-63dc-45e1-a8cd-0029c7c61945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f66530b-32ef-4953-9fc3-625668d120bf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb17056-0421-4cc2-9735-b42a20abfe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93426f0a-ea10-4552-8e24-32273d8a172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62419594-c185-48c2-a0c1-d0dfe8d03b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd92130-a53c-439d-89bf-a7f6faf43ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386dbd2c-5550-4cad-85a3-705231c0c83d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b951d9e-690c-4cb2-8ba9-09199f75eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba495a43-6b51-47af-a2aa-a983a056dd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc662d2-8c98-4fd5-9740-971a8ff5ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d607ab-817a-41ed-b119-32cec249ed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf03f17d-b081-4db6-9c99-d530f76bde8c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0903e744-a5d5-42f8-8d21-b3089a78b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f877371-3066-4a22-8011-dc8e97ff5a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bccd07-5636-4e43-bfd6-e72d7fecda76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "664c087f-4c94-4dfe-81fe-b30fe01d0b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f57c06-fc01-40c2-9753-147011429b89",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e5faf4-69e5-47b1-a233-e1354a70f8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a06725-8652-494f-b508-2a1bc8d1d92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041d9cac-a491-4cdb-9b79-295af41fe1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2690b0-e99e-4197-a222-ec68e67527cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac89a5f-e407-40d2-be45-fbf5fd4c542f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eec875-ffc5-4f46-aeb6-67b05be5298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc627ba-b7ad-454a-88b0-a21eaa8ae692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738b6fc3-bd20-4b8c-85bb-5cf8b11d5ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4876bd7f-f326-46a1-bd60-f91d35deeb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b418b5-ac3b-458f-a076-524631d4881f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d006a4-fc2e-40f7-815c-3f80e5f0bcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fdc1bca-0a3c-418d-9e26-d372f7745200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57a7942-8c9d-4186-bd93-d08c3ac236d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91936f73-ff50-4f97-8e62-f3a738494d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0217322-073d-4eea-9dbf-7d1b19d0d618",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeb8e7d-a366-428e-929c-eb8a64fc0766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2144dd96-89c0-42d8-b0ff-11fe9c8309ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d007b6-d7fc-44aa-8c9f-90a2f00c8a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca58530d-b7c5-4c73-acb6-678a21ddafae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade40bb3-008a-4f80-ad9c-13a21f4339d2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5683e273-eb65-426a-943c-8acb052a65d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a69771-ceef-48f6-abc8-21fa100262d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bf1380-4de9-4d8d-a192-cf8a6ea27592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3979dd7-d49b-4b8f-a489-77f96466db76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12129607-57a0-40f9-8eac-1549663d43e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebb01a7-7253-47dc-9c1c-965ef903c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fdbb6a-07cd-48df-bce3-324d1fdfbf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2b870a-beba-410f-b823-d7569cea6100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6a7834-acca-46ab-8b93-5571afc5aea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f03459-c1dd-447e-9b89-b3d4138208c7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36c9877-06cc-4489-817c-82ccacd7b439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465d3e20-ab93-4207-8927-b5757c825b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fa785d-b372-42e4-9fb8-c81b05ce994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c60d9d-593a-40c0-a636-e64bda69f034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e75932-4c5f-4a21-bbd2-ad74e9376bda",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c33572-cbf0-4b02-a096-91a3898e48b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f395fae-d936-4147-85e8-d5b27310be6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac637d20-f4d6-4d18-8ffd-9d860fe7901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3a300d-7b6f-40a4-886e-4fe9fd039d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a419e57f-0edb-49f2-a15f-4cccb163255d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acfa676-5e8e-4256-8b76-0b017b1c3e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b3fccc-09cb-4523-a9a5-8d847e0afa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb6d9e9-2763-4846-9333-19dc937da84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bc187b0b-528c-4538-977d-a7854cd33e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d34446-35f9-4750-8d5c-4c3cd3d11eed",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408dcda0-50b0-4c93-b8d3-bed8475d55f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1b77b6-4593-42ed-9825-799174dfae95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2e656a-0095-4fc3-adf1-39df80a23859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5f0c87-3e80-409c-833e-45b7ac05c096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586045ec-145a-4e82-8e19-f7b1cc8f1b4c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f58ac7-845d-4536-882e-5621decf1f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc28fb4-687c-4b38-9072-2c0ddf8ccecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5547cd-bde9-47ae-970b-1727f1e27353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f782811b-d9f5-4b48-84c5-a0ccac3ed6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d710f43-87f4-4017-a06c-63bfb6496549",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caab6e11-5b40-4f13-967a-c1f55617e83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a6fc84-a6e4-4af3-998b-1dd8a0c868d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cb71b8-1dc8-4e9f-91b2-898d1879484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfb9367-1a17-4ef2-a580-51dacf984371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cac6f4-aa83-48f5-ba52-187a2f9b27e6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314f18aa-2d58-46a0-b913-f73017e9c03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d70ff7-fbd1-4108-9f0b-20c3f6b3227a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cce5ca4-d148-4edd-b2c1-99c2a92339fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d63b2c-cd6f-4cce-afed-e96d65a381c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058434f8-309b-41ac-9b85-f7cd8d55f4b7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf2188f-c384-4edb-a54a-e86b230f346a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2819f8-1597-406b-bff5-a6c69bd36724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a13a66-1bbb-4848-8292-4d6ad8a0ec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f157ae-daf9-4f12-98ea-9f5225bd37c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8502c1-8cc9-441b-bf96-6dea6f40e961",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117d0f01-f0de-47b5-8aad-d2670a712ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07a80bf-5a6e-41d4-9ebd-b345ed749a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5f1aeb-4b7c-4d48-a507-da3e950a541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db62b3ca-ee80-4b2e-89d7-cb6e1921a28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8a0f15-64a9-4909-9dda-fd7615af0e11",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ae570f-d9e5-46a3-81c5-278a3e9ed742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf556043-a557-473c-a1a5-c40cb457cdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cf5809-92dd-49d0-8608-7a1a9ad62de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83080e87-efe3-4638-81cf-5b7e9f4a97bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f65f41-6784-4a38-a858-df836517fbb6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915279ba-26dd-48dd-9cfc-8135cc449ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7d769e-c191-470e-bb96-1307d6812ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e0b1d7-02de-4a56-a850-e63edb8017c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b58f5e3-aaf2-48ef-8049-b2a7b6d56843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214db04b-0acf-40ce-98ed-9abd17e3ac8c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dea053e-2fdd-42b8-a719-05a1fd4306b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9803c933-ab21-4ecc-9bdf-d7d732c7e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48218eac-0ecb-4325-b764-f0f8406048bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa1cde7-41ef-4447-a87d-d537e3edd765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fd814c-a4be-40a6-92b2-7a5cb3075c90",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5faf73-5a44-4b5f-9f1f-e8eb3a0d6dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130f99a6-448c-42a7-83f8-60c8dfbbbf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5241cb5-5ac5-4815-ac6f-dc2f84894d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e415e1-9d06-47b0-9709-1d65da210480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f09547-9ab3-423a-9175-61937afa29cb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62633694-e6cb-4335-bcbf-06dccb7989b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727498fd-2861-4b3b-893c-27c5b9774dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc55574a-da38-47e3-b5e6-d8754a20cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d14da96-fb4c-4b71-b138-b4d8ba2cb244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e413872-4195-45c7-b636-c10df5be7849",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249bf4fe-3d4b-4769-aaa4-8150a83fcdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6055e0-e08f-4dd0-bd3a-b1cf34f13201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989ae6bf-1a91-4b16-9c53-1cb7b58a00fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b39ee4b0-baf6-4e6b-9550-1a8f2587b5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1ced54-6ec2-4da1-ae72-9cd4e0f58749",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6411bb1e-dc3d-42bf-8612-5bde146dc5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5132228-4426-4497-bfb3-76386215c89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e012c5a-3723-4948-87a4-5118fdf13b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "336f2d40-c766-47db-b0e8-50f3f78556b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddda9f95-798b-40d9-81a5-9025e2dc15cf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe040f1-3934-457f-95a4-4e627042654c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cdfcbb-e1d7-46fe-98f4-bccb491dc1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9538176f-78ef-4034-9c5b-949d51edc4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "17835d08-c43f-473d-ad72-a99a1419ff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f1293-4e13-42b3-a69a-84830ba5cad4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb4ade7-3651-4cf7-8336-a1d167d185b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc665ffd-7bb2-4cf6-b252-a8c719927354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77ba062-a260-477a-8d8c-5a68116ff034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6aaa2da-128a-46f5-8e6b-3407bb7e39e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d926bb-5485-4d60-8505-e2755dda3206",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e84f35-38f6-456d-a7f2-43fbbaf39d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8028a46b-a3d1-4458-8235-262ea4e27872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ada3924-f40c-4c2d-bf09-8d8a647ab698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5523c2-9aa4-4cd7-ae27-49c494213bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e64f4b8-ef15-410b-9099-c6cfd182bea1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1858826a-c91a-444b-8661-f8bdc39c3e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c3967c-8b68-4245-9134-92e442650b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd9e0aa-c2ce-4e41-9885-47cff4eb11eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c65c5edd-58e1-4cce-a742-964c6d45a924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3492474d-2f51-4bd5-b1f4-206d5a216a84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a7eb49-cea3-48a8-9a0f-438ff452c4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b81ae1c-ed2a-4f99-97fd-1b99711eadde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f227d9f7-b5a5-4370-ae9f-0722e4974990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6187339-5a44-4e13-a9d3-6e72cd19b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a8008e-063b-4113-b2fd-c0ad226dd964",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643dd317-ce47-401b-b1ee-b8726e380a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6003f2-df06-4a26-bf6b-256ee73bd4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36468858-01fa-494e-8e14-36f37ccdf52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d34cc0eb-5556-404a-92a1-0d1f644dc3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcff434e-acbe-4453-ad92-bbf7bfebc833",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e188877f-82f8-4bf0-bb0b-6865d5e2a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac979a99-eef5-495f-b077-7b7a88784047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c8de4-a9f7-440e-9f27-33eae5151680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f068095-2310-4e5c-a80d-38c2d1fbd085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba742e3-fd42-4721-9d90-4479c2322619",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397327d8-d6f5-43f0-a412-385d56a41538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f926e54-7eff-441c-bd78-b7c539172a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1332f9e4-c6b2-443c-b360-3af4087a76ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70150840-6728-42fe-a736-68684886ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75935e7d-7e18-46ed-bea8-693c146086b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521c008a-5599-4e00-abce-e4b9194dfcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272420bd-2aa5-4a62-aa31-49a319382fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5c017-ffa9-4c0b-bccb-68ec7cb1a980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19d8c689-caab-4011-b322-9da8066900d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ebbf35-ac4c-4fc1-9485-fdfcd93c0053",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ecdf92-4868-4bfc-80a7-2b938ba58490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3007c7-4953-41d5-90ae-481cf3664cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0a0cd4-0167-4f91-95a7-ea50ec781f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3016a7d-3b60-463c-9b6b-c21db0514da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc20725e-6237-488a-82d9-ff62096b41b1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa630907-9165-470e-9441-2e96ec6a5be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc50626-43dd-4c7b-ac6d-f4e48bb33b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceff2c73-8eb1-4c85-a31b-e09e1c13b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b112b874-bd52-4dc1-9ff6-0bd16b35343f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce4d26d-163c-4865-8dfc-ba1e8bf18abe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d37a3e-e5b8-4f2c-9f4f-4798e0dcfc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1171cea0-29bf-4ec3-91d9-a34272234b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ad6a8d-9a73-4e47-b413-31543b940374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68d91207-c521-4f2d-baa5-3001c5280aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e746a73e-2704-40d0-b939-7a08245e933c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45284d1-20af-4e92-9f63-9f1f0eb69b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c25c27c-c49c-46e3-a1f4-321bbe329bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78a50d3-4d69-44cb-9d6d-db5f7d536d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9adb2b21-56fa-4ab2-9f84-e9f710fb05f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c9b524-2668-4598-8ec2-3fc438bdff10",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8077b8-325f-4c96-9769-06703971e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b2098-be5f-4a92-8e81-b6362a8cc8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9951700b-eea0-434e-9109-827fb7ecffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "695e627c-8878-4566-917c-46903271eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa458934-b4ac-4559-b0ae-8bfc2b3cc670",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e23e0f5-8a52-453d-add6-dc32a751ec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde2a4ae-6bdc-432b-9e0a-e1e002635879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59e121e-723c-4be1-958b-6ffcd7b24f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58c70d7-e025-4158-bc70-ff1e59ef2e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815eaa0f-f74b-421e-ac24-c705565d9603",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbfe423-52e8-4737-bb2d-1d7920ceb401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf03e92-f86c-4001-9157-fff2d68c9476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06304408-eb53-4f03-a29b-025d08dc4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13d69c5-7987-4446-8c85-b67d0c605b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d5e7f2-2279-45a0-8404-6f5cbdaea053",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e598d16-c580-47be-aca7-e34b00f6af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b8ded9-01d9-4848-8545-43dc53812527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743b3d7e-a7ef-4db5-a0cd-6156371330f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daee9e4-940a-4651-a933-911d86eeb12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaadf49-7a2d-467c-9440-3ec3c98e4ff9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc969f3-5e0c-4cfc-9e25-0ecce37ee053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda33f97-e454-4fe8-846b-0832f0db777e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f49ccb8-9da8-4f40-98b6-5693c685b494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4854f4c-5b3e-41d5-8868-cc01a922b67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6d50a1-d25a-48f1-b309-9b74c964db60",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990605cc-1319-4e27-a934-11285014352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2751925b-dff8-4c33-8193-e1309e101f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825d8bee-6b54-4afd-b8c9-d14fd9db13db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b46d0f70-99d6-444b-8412-ac41f4120e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05e18b1-6708-490e-98a0-a870f4210490",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd50914f-7fac-47b4-8064-9a0f7ac3f9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793851bc-806f-4619-825d-d68436b68509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cc3b58-2ee3-4d9f-8512-bdbc436a8138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b22be0-a69a-42e0-92d2-c95786fb8622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544c8377-b2ef-410d-bc94-ffa92ac2440c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905f48de-7aca-4851-ba00-2e860380e152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86906bfa-bf37-449d-868e-01e75827df7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f596f1-aa3a-41fb-aacd-06a81acc25b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b9288c-15b4-401e-9824-0bc29067522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de62f3-69bb-4240-94f2-1fbd6c327958",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e395dab-ee49-4489-bac9-b114a8c92fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b2a0cf-8da7-4066-a85d-8e92f43bf19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ea32f9-7fd8-47be-9eae-106a43251ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8322292a-b4f9-4718-84af-da4b7e772cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a44070-ee2c-4971-b769-5adc5a300282",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d30cac-4543-4445-bc7c-8b7344082177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d99977c-eaad-4dbe-8789-9b27a521d58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da92107f-cf26-462c-aa9e-39a2380561d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "044fe305-81bc-4d58-b1bf-1647eac80000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbe2f37-3b23-49e7-99a3-26daa9b827ce",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e0f376-5c52-4cda-a4d5-c2b1bb1bdd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc286a60-a35c-41e6-9623-1f49e4f21e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117fa282-a628-461e-b809-657b44670a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b910dd40-6883-48b6-ab94-ae39940b11c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafc6686-a25d-4afd-8aa9-3a9537bce6e6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55f62a-3994-4c1a-98a1-0a22d1e0f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e950dd68-5d61-4eda-81e6-4c003359f28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0c685d-e7a9-425a-9c35-493f4a632fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "112a0edc-9e59-4de0-8b44-3b2f32f08bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cffb2b-a911-4f17-90a1-fef59fd945ef",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47218f77-bfcc-4b71-9cc1-85bce3b9f586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c2ce47-e216-4415-8e58-a4287c5d50f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b7b6d2-5d99-4b85-b571-ff5a34718f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b96b32b-fbcf-42bd-ac42-4d1eed6eb0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd52f12a-1145-470c-a77a-43b9cb407cbc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d9e47-b9d3-47b7-a765-636f49a9e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9851a2f9-bb0b-427b-8064-cabe794172e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324af798-280d-442c-854f-47b3d7a2a3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d50ea083-d037-4c3e-a901-2b89949be62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568cf36-17fc-44cb-8e7b-7e8b2e65afd8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0c58e9-cb32-4d78-950d-4181ec642908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb393794-c637-4c3d-b46c-1dc441c92579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7857a758-3c7e-4a06-b8bc-e68104a77497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "353af3bf-2970-4bda-b8a6-3f23f5d69868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757393e6-d1ea-415a-84de-f7b4157f7d07",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28d8492-e885-4901-ba9d-981eeae0e31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea20025-1f40-401a-b79f-2e8c35c835f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0bd50-1fe7-4e40-903d-19a9ff89fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83881d30-c994-41f9-b960-2676d5302410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07025714-5972-4e9d-98b8-81411cca963c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e84f0e-641c-4436-9c6c-62c116c4ff07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f007d51-e3c1-4e9f-93f5-3c2f662e1f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8e0dbe-78d4-4ac1-a2b1-f579fc4932bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11409a0f-02dc-498e-9028-e48ec9a85ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2763f4-0af4-4c4d-aa68-d407a542c82a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fff4376-e988-4078-8ef9-5e88169d3f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58138c4a-c2b0-454e-b517-b6baff891129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27691052-6d7c-42d8-abfc-5703997cdcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af9a42ce-87be-4cc5-ac5c-a9fdb303bca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afadfcac-e855-472a-94d6-64e994866f30",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b523f3c-e978-4a9b-b06f-6283b5e6d9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4187af8-7924-4771-a695-a12e2a836d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d07d34-17b5-4055-bebe-a57be30765a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "553b2c85-e371-4673-82d7-8d7fd80ae0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7df5ff6-c679-44d0-8827-7b1e5a61907d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e3fea-0ca9-4484-93b9-ccd3cba7cd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb4f3c0-9828-47c3-9ea2-d1cd7fc1b075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338c5848-a939-4c39-afeb-30bd3597d3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ab2e39-86c7-4c80-9cf9-6d84a7aba5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f895c9f-a69d-464a-aff0-c6aa65df67d7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc09991d-f361-4357-9cdf-a3b14b67d890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4401ed37-2ffb-4707-9003-133821ee28f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3765d129-e054-4767-8f46-ad3a49bbf6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ace5d4-eca3-4c87-ad3b-a4312f4d7663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb9cb8f-d4c7-4559-a07c-43a0e958cab2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dccf31e-0a50-4abc-9a4c-8962b0c9a248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892efeac-32e9-4586-a7ad-a474cf1c0f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a73ad9-20b0-421e-8ea2-aa764511849d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21320543-ca83-45bf-8372-e7cea69250d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b017906-6306-4ee6-92a8-abdea9d76440",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccff7be9-c6ac-46e7-b67d-a5d81e5d2bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2052d4f-5dd3-4f67-a9be-f3a1e753c982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff89974-3a2e-4f54-896a-0d20f856db0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef18aa43-2f27-464a-a86e-ea4031928013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a718328-b145-4044-95be-037d2ad005dd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e69c39-c675-4b05-b019-85bdb9279a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "498ce7fb-0474-4637-928f-1539db168240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a91ca73-6351-41d1-b138-0178864f0613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "63859104-25f1-4b96-a81d-5f5058e1c5e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60647afa-274e-46a6-9b2a-dec12d6b35ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc8175ba-a46d-487f-a404-044b21bd6ae1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091b9bb-d72c-47d3-9562-55a7599d5e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8afa9762-0706-424b-8c3d-e3d419633a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5e0f55-5f51-418c-b2dd-93e2fb78a882",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90d900e9-8f99-4929-af8a-fcd3bb7a5a4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6e1bf48-fa5a-4c66-b089-7eabb84fa6b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a97e0921-a3dc-4519-b3c4-214ef0ada8ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4bbc88b-2644-4d0c-92f6-364a0a2a19f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d9b095-8e38-4eb8-aa16-93f5b34d5c83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb056822-1adb-4763-9452-f35c58276117",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c8bfc42-29b5-4132-9b12-817d75b0d78f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76ef4fba-3762-4988-ae66-9f5092ad354f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3255671b-dfdc-4c7b-a0d4-bbb2b6106d10"
                }
              }
            ]
          },
          {
            "id": "91621bc8-6b78-406b-9a56-c631d6b611e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "818caf52-f3d2-4f69-8ced-b798cf169117",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "10407b06-1384-48dc-b6db-98b1432b9d27",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1746b48c-7f4a-4b47-aaac-afb4963e4ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c0696490-408d-4c6d-9378-1b7c0dd0925b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d48b41-7b04-4d35-a8ca-f79ecd4ce6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11557e4d-a2de-479a-b1b1-0da5791a3975"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "765cf0a8-b31f-4429-af22-81c93c732c21",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90d958b8-b13c-4746-944a-de9453228a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22f695cd-32fc-42c1-9d1d-2fff9ebe5e1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8421a666-5dbe-4c8d-83d0-ae4efa388203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb341687-ef2a-4f67-b265-7c62006e2478"
                    }
                  }
                ]
              },
              {
                "id": "bd630549-38d7-4b3b-b00b-42b90d7fa3f8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c805f1b4-d9fc-4c76-93a3-15b63f54b6ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92fd7aa9-a85c-485c-8d13-c9a0a88448d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ceb5726-f029-4518-b2d3-583ffb37dd32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b644520-be2b-48b8-833f-6925efac9ec0"
                    }
                  }
                ]
              },
              {
                "id": "22365cfa-ab4e-4382-af38-96bed8de3938",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e8169a8-21d1-4131-8769-b80ae9c3a993",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f348338d-d11b-4870-9540-ba300b105ac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f521917e-17e6-4de1-9fce-1e7512922b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1645d9db-ee1e-4457-bf68-fe153eeed8ed"
                    }
                  }
                ]
              },
              {
                "id": "c5ee9c7d-531a-4c44-91fd-ab4299c5baa3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39624864-aa91-4a86-ad18-4d44854637fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "988bf4db-2109-470c-94ec-065e7833e0ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8580c40c-91ac-4a54-80a1-4bfd0f7f89f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e737914-dfc1-46d7-b9a7-46cc07ac0a51"
                    }
                  }
                ]
              },
              {
                "id": "8ea99e48-394d-4505-9996-c8331a56270a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2853861f-ec5f-4533-84f6-b9a58b330ab8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d5591cd-b11a-4a93-8a9a-e87f845aa4b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b86e900-e5e7-487b-b5b6-4af9f6e0d6cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9eaae606-3494-4b23-a7c7-fbfce0ba3d8a"
                    }
                  }
                ]
              },
              {
                "id": "44de5e9f-36bc-4f39-a79a-cdeb98d77154",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69f445bd-18da-4d22-9a10-33e8b0936c08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c78fc9e8-79d9-4222-8a62-8a95cc4abab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe5ff0c-059b-4909-8c69-a8781ee77954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "754f84f8-5295-40ee-ae50-b58b95994f9d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cde3cf1c-2ec4-4b22-80b9-9bbab9bc992f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f49c5c0f-819c-4c94-b3f3-ce42d4fe8ad2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b4b6734-83fb-4105-bd61-9e0833572755",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23ed92bb-4887-44d6-acbb-d798c5c12f62"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c178135-a16a-4e7f-8ce7-35dbee28bed8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dacbf917-008c-4319-b60c-923fa37eb6f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9dc79fd7-dbdf-4c2d-8372-63fea04ef504",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82df1762-5f8c-491b-a316-acb29bd6a1a7"
            }
          }
        ]
      },
      {
        "id": "cb212b37-a156-4099-bd93-655386b8cf36",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a335bed4-f766-4d65-8816-cad24f6da3aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91c8eeaa-a6d0-4c6b-8f81-862091c8a6dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be6359ce-d747-4852-8447-a19806131330",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd32ae7-7dce-49c0-b793-439761bb621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a36a6be-412c-4a98-b0e4-617d81a43492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c3b9d1-3d04-457c-8e5d-9f1274923635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c99303e-fd56-4779-8bad-fa8d74ca7d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76fb55f-4eb6-41cb-80a9-61dde248b2d2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2c893a-5ec8-400f-b7cc-06da7d204d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd603b7a-1a2c-49d4-b27e-2cbe3809b7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e43e78-8abd-4c86-847c-3007ff9c6a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3294766c-a49d-4f56-8acb-6ac6e95a886f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2599db30-9737-41b8-b003-2626944a63fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f79659e-b8aa-4ca1-bf79-66f122b2a56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830c28ca-f36a-4b4a-8779-c374c2f0f2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ffe30d-b962-48af-a71d-6e333fb9d115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "479f2daf-cd48-40ae-821d-e935441660f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b605251d-b9e6-46d6-9427-bb3a95243c5f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cad547-ef0b-4a23-8fab-b4a674deab4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f00a8e3-20c7-4021-b893-a691f31ed00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1e93e5-8d98-4744-b73d-aff9c7d786b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e76165-b6c7-488e-936a-f172768b2880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1161d052-22fa-4b99-8f66-ca96b470a5d2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138cccc0-9181-4854-8935-30c4880a404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6f7449-5cc6-458b-821a-870985e9fb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c683eb6-935d-402a-a260-0d21ff0c7443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8158a67e-5cc6-4b4e-a632-0b26b33d5fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eb899a-76cc-4a76-9489-229859795761",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ec5a95-0f91-41eb-9651-ab06dff7753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2514e76-4336-4cb1-851b-c47c4b43331b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5778589a-2324-4cf7-a35c-c07468c53cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b2d86d-e870-4727-a113-06110e77d5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b283471c-82c2-4498-82a3-db18fa6bb5ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dfaafb-a7bc-4a61-a534-6be80070ba9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75237f19-5ff3-4a63-b533-d0ebf9c3a481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bada83d0-c215-4438-88ca-b8329b103f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f96ddf-b497-49d3-aee9-ccc3eb786028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacebfe2-7f2b-4c04-981d-eafcc2019552",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda69355-4683-4267-b693-3e9389ea29ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671248ed-d88e-45d9-9027-7772d4b5b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505aeb01-1620-40e9-8d9e-2a0028a8a480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "029c0a20-aa33-4e20-9639-af9431ad7634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca4cce1-8fb9-4a97-919a-da2ae1e81e1b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b8c0f6-6f44-4137-981c-267fd9353d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2efc5f-5ce4-4ea4-b355-f5f30b163448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cb9c94-2e1b-481e-8be9-02ef092de407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f822b9c-bf8b-45ad-8bf5-bd09eec876d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c7359b-91b0-41a6-a18c-25c096630b37",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b28714-4442-4436-8e68-be6635c8d7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faffdbb4-3d6c-40e1-8add-870754b5ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f184b2ad-dcce-428d-b0a3-1e7ffe53e1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9c4bb5-5c18-496c-8899-58f5853cec38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddbb502-b6fb-4316-8445-ceb89cb82e7b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a8dc2e-6a48-4ab2-a11d-bc983e9ea3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a3b08c-ee36-4bfe-8a5f-0a16c7541fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7728af-aa8e-4bf9-88c9-d98dc72b4f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cded1907-3011-47a3-b319-b45398955fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd3a433-333c-4b20-89d5-298a697857d0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eacaba-957a-4e17-9d87-a27b99c5b8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7cc52a-9d01-4781-a515-8cd8374cef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb607fdf-ac5e-48ab-95dd-7d19a8ebe04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e77771b9-3c1c-40c0-96b3-fea7e39ae2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d229b4-2610-4a5c-b889-674e741ae940",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c354991-f092-4a9e-8bc1-dfb034e5b3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeeeab6-8012-4a22-ba4a-9d89f1fbd399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479a9e13-4676-4ddb-9d4c-0637962a57d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e9f556-7464-45bc-9685-c6acee3088cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dde6fcb-5f02-4e88-b904-091b349c1375",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8abbbe-6818-4427-a31c-2b1de121eabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50a141f-de59-43b8-ade0-88bebe48f6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157271bc-ec4c-4725-95fd-8a240d193b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b06e4f-f6db-49b5-bbf4-50453e6b534e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fea5754-9b25-46cc-9e0c-9dc166f155cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028ca8d6-3c93-40bd-bf30-71adb7d71656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf92da5a-d096-4b0d-9377-17d86392224c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa9b5a0-4589-4ffa-9b42-a194067d0d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c962de-4d3a-4511-bd60-e88db4a2af53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46722e1-f3b4-4db7-b96f-ed829d2ca3bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a4d3b8-c5ee-485a-80cf-cd5d4bfcb168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a28b6b-ba42-48ae-a7f6-674acc5baf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c057e39d-11c3-475e-95d8-f8b3c2e2408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd645cab-c2f8-452b-8b38-71f8786303b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3af0020-3118-4e2c-8596-e1b9d9a15a7d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452fb96c-c023-4610-868b-165bcb61c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa5bc44-6363-40e5-aa37-ec49097b3c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999bc4fa-def0-4c7e-ab9a-1f4afd584e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf550bbe-38de-415f-b5dd-88de4dc36f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c13a8a-1c08-4c4f-af7a-9ff44635ebd5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7833ca58-a5e1-4a2f-a100-dfe939fad3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b609314-8e36-4ac7-91f0-47bffbeb260a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab629c4-cee6-42ee-a77c-fc300e9059e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e75696-a3f4-4e33-b3c8-90a2e6d80c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc9b9b6-5b9f-41b5-a8ca-418c70f7586b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c2c556-ed86-40ed-a12c-c502d21fb177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c252ae4-e9ec-4577-bc86-6a30b5dd51dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286070e3-8f04-47a2-9b9e-8996c4ac415a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba98e28-8332-47f3-bd67-b6f27355ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6ee2d9-0ad3-4a17-b7d5-55f33ffbbb77",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3aa825-fa15-4fa5-a703-f38a04d00835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9708b31-f424-41ec-89ed-9681e8bc1d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420e585e-ba13-4d59-b4cf-eb7d4f49394a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71436800-15d7-435b-aa21-f2627f6a23fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa9e14e-ba9b-4c3a-a1cd-92865bb92171",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52e3d36-1d1d-4362-93c1-adf25821c12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d057a70-ada6-4820-8f11-3e8cae64a8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d537aeb-eeb2-40b6-9015-893b9d5f87e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3feef255-1269-4dca-8328-44dad46e4a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7afd40-3286-4567-9798-ea4b793f4633",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb03248-26b4-46b6-a8ac-ca38d6b3a880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c315d12f-c3b0-4e6e-b6ac-00323452810d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0eee0fb-f983-4683-9638-e71d85f03f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b81d58-78a8-4ee0-9915-fefa0951b164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e2c40b-d9fb-492e-aab2-ddfaee610e3b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f71bc64-f231-4178-92c2-e44dcd7bcdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760cd398-3cc8-4429-a309-5a90e33503a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a1e9e4-ccb0-445e-bedf-ba113e7694a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0e7fae-cc93-477c-8a44-c1922a2a1239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4be4ee9-27cb-4522-9a06-c16699b09def",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5dcd27-3132-4797-967e-8f0cad76439a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2dd2aa-e7bc-4fc1-a22d-322839b39987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf47f2df-a982-4c52-9a71-9e92a70eb2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cccf4210-3b93-45b7-bf69-ce192d532cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edae017-297e-4aad-8192-efa05ec764ba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7ff925-e484-455e-b68e-3057deb006b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7568cac2-5888-472b-a713-7a3adc4303b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12288b3-7511-407c-97e1-b6cc9d7c4294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0140615a-c90a-44f9-a02d-cd78fd9fa330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c32d9-6879-4121-9d44-852297926d1b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02863933-a8ed-4628-8379-47b8550b0e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ee26e6-855e-40c4-a821-a4c7093a8019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a547c-f576-488d-929a-8b2475244d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0943dc-2897-47e9-acc4-219a51a77ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febcec43-f95f-41cf-869c-ed1ed1655d58",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b1f01b-1722-4b9f-81c4-db4bf269ec0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f197f4-2eca-40f5-a431-c456eb5d5f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393d3da5-5c61-49c2-b435-7da86eb58cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6323ba-6628-46b6-8556-9bd45bb864e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446d8250-5bf8-4de3-9549-0d9916e8d80a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338957d2-52dd-4325-a564-7932212d1d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a69994-58e0-4353-aa14-b09d230f3a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4367a7-dc0d-4c86-bc30-51bd6ba023a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe95d53-643d-43ac-929b-b040e8b3a4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1960339-f336-43e7-a2ee-f7b472f8d3d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa05908d-fdae-4e8c-be90-665adff369ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573ff6dc-3f6f-4b40-b8ec-75265cf7e3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd80263c-76be-4010-9bfb-40697dc55a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3061d16b-d195-4315-a5d1-024d786c6f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de8e9dc-edf0-4584-91ed-a91d0af9a742",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe219fc-6ab6-471a-8654-03b359e828c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939f9dac-ab0a-4e56-aa18-b76016c07854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbaafcb-64a3-4073-a603-f663470b6efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad05a731-60cd-4e1b-8e4e-11c142f6b710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e136e594-3a03-4a83-903b-5f94e0e0c9f4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f0a37a-f7ad-4b74-acec-31b26b5ab3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8629a29-5637-4a27-8bc4-b4cb4d0bcbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6031f5b4-f0d9-4b9d-961c-e888a05ba4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd27d9b5-81b7-420e-858d-4589f5007e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5fd4f7-145a-4e31-abd8-96724c1282b1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4aca8f-0168-4e05-a8c1-b60d1566f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddf2478-f52d-4426-98cd-686bf2654cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d22f93a-a398-485a-8e38-24d85cddb370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2928cc8-6790-478e-80c3-296c5fcdb807"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12442ce7-c347-4a6e-a1b2-c62a2170cad5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07348537-0b64-44ec-8fc3-977638dd6ef9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cd2884-1804-4b2e-bbcf-0af0010e45c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c65c4bfc-78db-4d70-9518-47ccfd47cd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6cc4e3-0c5c-45ab-9d21-2ca4ca70c19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24f0271e-fd84-4d3d-92df-ad38238f9403"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0b89af-57fd-4369-8db3-ee93665cadce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "607bd224-1863-496b-87dd-d2711bab5514"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a02f6de3-83dc-4fc5-9671-d03a23afeeb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90bd8b7c-b6cd-4674-ac0f-40ca8ecc2e7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e02c9d5a-aeb8-4ed0-989d-1ca1baffa7ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3c37d18-043d-40da-b704-f839ad343008"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6055adf1-7c10-4612-91d2-be3982996cd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2335346d-aaaa-4054-a76d-92fd088787aa"
            }
          }
        ]
      },
      {
        "id": "326868a9-4959-4291-85bc-e9973fc4b1c9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3980715a-b393-4de5-9bef-637dac163b91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fef5ae3a-a828-4616-9f94-001b9935c381",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab658ddb-4571-44a0-874f-4513ea40093d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3f0454-88e2-42f1-ac57-fd52f1e47f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87deeaf9-8aa8-4d8d-929e-693ebd58dfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0310eabd-01d7-47a4-88dd-94be2108dd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a659c0-8d94-4ebb-930a-ff59376208e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0e853d-1a05-47bb-9318-e03ad8e043dd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b29fff0-3955-44e9-b7fc-46fedab0a05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c93b6b9-9c67-44b2-96c8-05595e0c3cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa7b323-b05f-44e6-91f5-7e2ec4491ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f7db6e-1d9b-4111-bab7-a37c05527d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16934ac0-ca2f-4dbc-8725-283619c1db33",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31648bfe-5643-42fb-b896-ea311490b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae60461-09c6-4643-9fd2-9280efeafed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c12051-3f28-4ef0-87df-2ad37c422a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "181c2a5e-aaa1-4edf-983e-a2c5ef2bdc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7be8c9-c1a5-4e9c-9d52-a5e12ced811c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4837d24-cf4d-420d-b213-a6c41a004673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df049cbb-0337-41bd-b14b-eaaee7cd58af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d16511a-0691-48a0-a9b9-83a6dcb18bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9ae7d7-0d82-4983-b79a-2be8fb064901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3633891-f44f-482f-949f-1f833f9c3a9e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4b739c-f340-47a3-968b-3181296a85bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d60c9c4-433b-4a9c-846e-a03cc4403c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f9f277-e70d-4281-af6a-fd6512e3fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3234bb-0b0d-4c0e-bde5-f102a6846907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6c5c62-ee08-4ebe-80cb-c1fe8a34eaa2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afde610-368c-4095-ac73-82fd40239a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dcc95d-1806-434f-bdfe-13b5183b9dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09638b43-911c-43d8-a6ec-203d83aec316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf499dc4-e1da-465f-bb40-3abe772db6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246322ba-d714-4556-92ef-4c2ba88d2ec4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec6d08a-92c8-4776-9101-bc925ff50d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac1d8cd-04a0-4164-b251-7c2a6c403c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ef6706-d00e-4d94-bc96-1e9e63a6fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f9e72f-75c3-476e-b112-a4724d17cf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a33d460-d138-4c74-a86c-190a2aba01b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee18ba01-eabd-4f6a-9151-9826efb4f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b108d8-90aa-4112-ad10-f7e559c23a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e85ce2-6a84-4f3d-b58f-da3878e3dcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe789f05-b225-43af-adc4-53a77b160088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3734add3-d686-4666-b787-0735a3ad5b60",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc25e3d6-8ae7-4ab2-87ee-ec342268787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8d1bf7-5aeb-41e1-81f6-299128de2b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f81960-2545-4112-b1a7-43e74e892d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7f81da-a064-46fd-81ed-625f0eefb9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf2a200-ca41-4660-9b3b-c3f67b25b6f9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaf7470-a2cb-4de5-8120-be61320fac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af49e3a-374f-4b45-91f0-410cb657bc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa1fb64-5d89-4f85-ae3a-60f63e539d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3275bd-d84b-4b70-ba11-6899571f0af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f636719c-52db-4196-8169-1c391ea2a8d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702a6800-49db-42b8-a2ae-93e584409cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59ec6b8-2492-4d50-add0-64c95cf9ddd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aa7fbc-b7d5-4c5c-82c0-f97e2972cfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eb430158-f9ef-40e3-b2b8-8e310eb7c64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b93b85e-80d9-4251-9301-8a92a1e497d9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978aa223-a42a-44d7-9c1d-fa6dd5aa0ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202d9798-6adb-4a09-ab65-120a9b781fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82637fd-32cf-42ee-b524-c546e0aec8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44a5ac51-99b9-496c-821d-859e1a722017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e4b2e-9688-472e-9ae0-ed31f2b40143",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e930d311-a22f-4a06-8b61-bbb50271051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a547f4d-b38e-42e2-a984-b11477c2c420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16232c0-0006-40a2-8ecd-d94e5ed5d7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "011dfed7-86b9-4e64-9198-657458e48fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c7b9a9-8c92-4d8e-890d-623316ed6f3b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf523f7-9f55-44be-a6f8-8191c31767f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b04869-48fe-4cec-9adc-ad4f11c22087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116afe46-293b-4498-bcff-f1768b7f8b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee7e3b0-5aa0-45fe-957b-9e6a1a7a9c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814385c1-749f-4725-9c1e-e842ea8b3c47",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e188147-d560-4c4d-beb2-fb4cf8ff77a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2949550f-ac3a-48c9-8be1-c664b4c48bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d4963-92c0-4ae5-9a74-23cd013d26ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b9e7ba-e732-4b24-a53f-0dbb637cb4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc85e56f-eb11-4371-85b5-33bbeb8c22cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146c7103-3b03-4952-947f-fbee18a53caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49d7bcc-6e5f-4770-a92c-ede3d137b247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910965e8-483d-491b-8db7-8f3462843e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87bc3e2-b415-49cf-8ee0-3ce617b0b3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06a5c3f-760b-4dc1-9d2d-86d0c7778794",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6971538b-a50a-46f0-abc3-3be8bcd268db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0405e134-cec4-4689-bc84-b7430e7d38e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6ecc35-5ae8-42c3-a801-2ea5cd16e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbb5079-c945-4692-b82a-f4ae038e71bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609bc826-c206-4fa3-8757-5d5dd76b16a2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3816041a-7256-4378-b18e-07395e2400e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8523f707-7802-4d2c-8427-97d79cb2cea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec3bcca-0287-4ab4-9dfb-523a24ff576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69eb04e7-5a45-411e-81c8-8045d30804ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e455dab-ebb1-4aff-8420-c5f05674cc59",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c98688-a1cf-4d3f-8e9c-cbbc93bf5011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc1cc98-9ca5-45ce-948a-d39ef2d4b220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c86571f-4ff4-4803-9943-679c08b044c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce59c43-1fd2-4e2c-bbd1-6d1ab5accb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11825157-b1e6-4caf-ab8a-88e9cb1a9b29",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e457b9-3df9-4878-83ea-a938880f1a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15c1653-e58e-4a66-ae15-88e86b86cdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb545d72-0c1b-4ce5-8973-d44278fff962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8fac94-983e-4d8f-9d4e-d4cf776346d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7a6b9c-3cac-4256-aa1b-6c9f506f40b9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2836ff40-097e-4e41-94aa-e3dde9cfd4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214dad35-2374-4ae1-921d-9488fdc03c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b262b39f-5674-4059-b86f-402530076668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c67c714-fe3c-44dd-ae0c-bc608ca21437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b13805-6884-4529-8ebf-59c5a2788048",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55beb7c-e62c-4d5d-a9bd-fa248896ac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ebd591-3ad8-46df-8228-20c832195ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc77856-2187-487c-a031-2dccfd609b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee9f02f-ca11-4c16-a2b0-990432d5f363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1806b069-2671-495e-8e08-f96c3ec95359",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70e302f-7fc3-47a7-9e86-94045503c730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccde80b-445e-440e-a909-56c923f0ac28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad88f0d0-e12e-45d0-a98c-486d84f59e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05772358-77b4-4242-b876-53653a91b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398968c9-afe5-40fe-9de7-5e92cecb8dcc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee79693-43be-4a7c-b008-c17911a6f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631d7e43-6245-4182-a0b6-738fe92936ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bca9e3-0f25-4166-97fb-4f20c04ae419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "259c30a2-adf5-43c2-8099-edeb71369fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5b7f3a-10a6-4a5d-891a-d3ec6d6ff1ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba733e5-9999-42f0-9422-09c84ba8d492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d709582-baaa-488e-9fff-17469d3e942c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566e4c63-d67f-4527-ba03-4ec730a9a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04d3c96-085a-4c1a-94e8-d1e0b03464f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3262405a-d504-42ff-a5eb-2622f9c10284",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c12776-b4a6-4167-b0aa-bf9ee9e92301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cfe6c2-eae2-4160-96df-d0b400011008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031fded0-1bc7-4b48-b5f9-f7f7ebc54496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f017af-f173-41f6-93f6-ca720c1801ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0949e7-8571-4c27-9375-640c483d51ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeb47c0-3eff-4aed-b747-3e50a040b5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a69cd5-3743-4ef8-82bb-160c59942c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d10d457-fc59-4f95-9df1-d7bd03b31142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5b5f06-63ef-4a3a-9d4d-1dde4c5717a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b622fde-7fa2-4173-97a5-0443a0d8001d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85068225-4612-4102-839e-da9e5f2ba9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94884cdd-423c-443e-b814-a7dd3edcc2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fe2058-232a-4677-91e9-eceacc95d68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b35fa238-6f18-45f6-895d-6b941712a47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fd69ff-396c-49b3-b874-f6ad9405072c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd2f788-ba20-4415-8a45-2b2b155b3e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6162ae-9c92-4dc6-8e84-2d0d70b2215e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2a4aff-2947-40d5-826b-e18800a79f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f912b9c-0340-420f-bede-6fd1b79340d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98340fc5-df05-4205-8362-68107bb8f674",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c442eb-9a9b-4969-ab9e-91c890498481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25ffeb0-2adf-4866-8a06-b2dfcb65ff8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e08ce8-3659-4d17-993b-1203cf4234f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b728ac0-6476-4b1e-a9d3-dc86dfaa5dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42fd825-e3b4-442f-bab5-692890744bea",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53645489-9d4f-43c7-83a0-57e3bf1af098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983cecc3-3fde-465c-b10a-d1ce28965cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ddfa6e-d04b-4a59-84be-f2d2a6e1e914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3ba1e1-2429-4b0a-941f-132f8c2dfc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf78129-e299-4a3d-94ae-d888115f2549",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79e7c3d-0cfd-475e-9c93-4d9161ba7ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d3a0a0-bb92-4af2-9a32-6ed7a86e91dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1982adf-1982-4b46-9492-421b0f045412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d52f60-4cb2-4d73-a60b-0d9c8abc5b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd45f67a-d819-4dee-99ef-44a155b29fe0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5bc1ed-19db-4a56-bb17-ebbf1fb1fa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f381e40e-1098-46af-9dbc-358c7702d95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426840a6-7084-4021-a4cb-774804298302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c059bb-b8c8-4e8c-abec-c829cfad7380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb177fc-19a4-44bb-a178-fcdafdd34944",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d23970a-9ce2-4ec5-a51f-e72ad4d9b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf020879-a77b-4669-8abc-8c018c3dffa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74da9511-40c6-4671-b692-1f15f754d9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "498f50fe-fb3c-415a-909f-f50841fc55e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d61c0de-30ac-4738-9a9f-740f3216f4ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bd5145-a54e-4c8c-b5f6-4766e87114a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a019a44-10cc-4127-bd5e-9ac3c647195c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a05aa14-e1b8-42e3-956b-2d93291beb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "335a6739-d316-45af-a122-b5e4b3c29f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223803f9-3d05-4e3d-b362-32ebd9110318",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d43baa8-5958-437c-8fbc-50f357b9e919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ca62b9-65a5-4dd1-a012-e2e50ed449e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a226deea-fc19-4eab-a912-8f5c1fe32b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8c8258-3c2d-40f6-a00a-d81bd1a8233e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cbf085-4024-4995-99cc-c9252d351733",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45599803-4189-4c2e-8fcf-91ccfdccaca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462e8cc7-7570-49ef-a9c8-c4880e6f6f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7acfeaa-172e-4831-8bc1-7816633232b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8a2d1a-1c16-4a90-9f1f-a1c53df504b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fcfb388-2317-487a-99c9-bfe6fd30f9a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "672226e2-5b1f-4903-a543-22438b5eada2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d34d2c6-9d31-40b2-b0eb-d1b584a22db1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "57195bb7-d74e-4223-85e1-dbf4771fa89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3947751-967b-451a-8028-e81fe84a492a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c54bdbd7-ba77-4874-85e9-c1d3f07f09a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91e0175c-fb9d-4e7c-90a4-1677ebc3965c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6415cbe3-b665-47bf-ae32-ac47fed14616"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dcb22c2-4d57-42cc-a90f-1c0fd201a9e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "121d9c25-861f-49f3-9616-4e57ca3d7a4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea75f339-39b8-4511-afaa-a626ace20703",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45029b4e-4ee3-4efd-8361-4fdd6f669b99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6063140-72ba-44c6-ad88-aa3218d47a72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91edc5af-6252-4de6-ad54-f4c3fc4db770"
            }
          }
        ]
      },
      {
        "id": "b0de3d1c-e376-4bc2-91cb-e0551921f19a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b8581ddf-051e-439e-ae1e-639998c83169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca6e45db-a044-4885-9a1a-73378de6c009",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e6c926a-08fb-4199-93e2-bfe364b5583c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22135a7-feaf-498e-ad94-1e2f31e6f4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b4f15e-5a80-498b-a794-79d8c12acfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b1b3a6-9c85-42c3-b621-c6fac233cc23",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6966e429-71f6-4697-b6eb-3e521d0e2ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bec873d-2744-4c1a-8c9b-24aacffeb300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d367ed-c392-4aa6-8972-9e4abc795471",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edf18a3-f073-4b83-aa61-401679e06a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261f450f-fc54-4c53-a160-34ad61d99313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85acbbf5-a78d-4271-bec0-427086fcb418",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c21db3-a790-45b7-90a1-4bc36646f161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82d4c7a-6e82-400a-8416-873a7a8f4b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00828743-7c24-4ec0-a834-976daf98167f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2047aa-8e41-45df-a473-ece3101c5ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be0e559-1cfb-43b3-90f6-754376eb0688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbb0cb5-6a4c-4d9e-b9fc-446a6e2e3342",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b942398-33dc-4dd9-9a39-e71da0b80497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698d0d83-da88-4b37-8945-e2af2a9edeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14442eb-d9c2-44fb-b095-bfe391432367",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604dce0e-4180-4606-9805-cfbb99012773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a0fdfd-b3f7-4b88-818d-279e40896590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc718d95-a365-41eb-a186-d5e4318d0f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0588df64-fcbb-4833-9c3a-24a6f7015961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1636a5-75da-4aa0-9ef1-413157ca795e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3661b447-9cf9-4b74-aadc-9a807218843b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd175157-f69a-4e4e-8cf4-0e30f805f6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29336276-fcd6-47f6-b017-8d76e994fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f6318e-a9a9-48ac-bfc9-331a05d6859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e56971-17d9-4eaa-a694-465e67222909",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f2be8c-b5fa-4a98-be48-7b67c8d72bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b707ffd-e81a-4a4f-90e6-5fcd174f5d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61539c36-d478-4ee6-94ae-80312fe7c2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77af402f-39bb-4f3c-8613-41e4ff6172ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0a17d7-ab7f-42a1-9f5b-d73aa58f08bb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2738ed7c-c26a-41fd-a24d-c72da8eb81a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc51f0e-bcb0-4eff-af21-2bfe9d5f54e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21fa7ff-a92d-4b6a-938f-1e0b4fa8c299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e538988-12c7-4cbd-9e59-3f71efbe8024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fb8a94-e03a-4acb-8cb2-cd8ea00dbeca",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdbed18-37a7-4b0e-ae99-15bdbba7b4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d299cf7-0871-45e3-9b8a-77dbfa5c5d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38251b13-df35-4527-ac79-3479bb2b6f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bcc33d-cff7-44f1-b1f8-a20afcf151f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90149b1e-de4a-49a7-800e-9ec8acdf105b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12b9812-05f6-4fa3-b504-15a36261cb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36902a2b-3079-42ce-9939-8071811ca557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ecdc26-369c-4593-afcd-d8e8b6957dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5caf7ac-a15c-4d01-bc00-b58cf3b9fbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b118856-dca8-4f85-a5c8-5147b069fb10",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef8325-b82d-44c4-842d-922b894c23ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adcdc285-3ca9-457e-8f48-88dc8078b6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86df3cb3-db57-435f-bc2b-c83d207fbe44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e38409-cc80-4e49-a171-58dcef67072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f051069-7d45-460d-961e-b1e364e26b88",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90f1a38-07f8-4dc4-aaf2-933edb375a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc35ccd8-42f1-4531-b35b-58f975c2e8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806d87f5-70fc-4e86-8ad4-813e0a1dcc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b3add4-2e80-4e7b-bb0e-72c10ea86bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9e1255-5abb-4abd-a641-f2a88f062e84",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5507c6-8a9e-45bc-811d-c9016aeacbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1cb506-d42b-49e8-af42-b46a750dcab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bfbfd7-103d-4bc5-9005-f6678a657d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f41c3ab-4df4-434a-b922-322dcb6ca600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce997483-3506-4f6b-8b3e-4ec80d041821",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4322ac8-ae75-4575-93dc-357fef067cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8257d383-3e56-478d-a57c-da10af3df49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440fe809-dec0-443f-8f24-cdff932e0d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a463f39-1191-47e1-a84c-7c6ceb4a2420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdbc6a8-53b5-4583-8e7f-ea93377811db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c52271d-cb38-41a1-9ea9-c1d667c6be23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372ed14b-6137-4948-9e33-80767d3b6517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc0082b-1ae2-4103-a2d1-f24342a16c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea99005-e39e-4c25-bbe9-af5171afac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183b7da4-ad3f-4b6e-a928-8bcd4b7efe6e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd64f8d-9213-4ac4-93ca-9cf688a57e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda147fa-b3a7-47f4-bc14-cbf01fb3f340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02f5a4f-b0d1-4bee-8cba-1e5d6bd51a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ac9785-3866-46fc-a207-fbd28b7ff5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b5802-5e19-4fbf-98d5-fe37938a4f3b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581ae8c6-1c0b-49a6-a516-9f73da4f5fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9344045f-8d98-415a-a6ca-62cf965054c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0334443-0870-4be0-b16b-1da7ce7377f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc08e26f-f638-4e63-9682-321fc2068040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64675790-48e2-44af-8ded-7ac9f65c4d68",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63072922-7b4e-455d-934b-76d17efee453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2235a03b-d1a0-43c3-8b83-c2d92c9e40a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9126a999-eb57-4cdf-8668-cb8162a5ecc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19326e1-d498-4fe8-b410-6e87de134dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef92963d-c3df-4d04-ad72-0d49af6a916c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d7270-f3a1-43e6-b978-815a32edf440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020e44a1-d5cc-4415-bc94-a175ee02d043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4de491-d8ae-49f5-87e2-cc3d5360d98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a91ac5-413b-4d42-9e3f-3ad8a45b5341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e0a5f3-9f1f-4fc1-b6dd-f5fb438f4cb6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a34c48f-0f8e-429d-9174-15b0a676710a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2b222c-0782-4c05-a430-363e5c301862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95593152-4b39-4cf8-aa35-4b65b46e7c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58353e2-b397-445a-9b79-66c074293118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02365a27-6de8-4732-8b44-5b3ea5e7b4c8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b12f18a-34ca-4b2b-9f6c-5932db732d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b85d79-4925-4a4e-b946-7ec897e4e601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3dd2a1-04a2-4465-a7b3-861ef8b37d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8e6015-b9a4-4068-b36c-152d21ee2baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8960067-4449-487c-8d49-28031380aa6f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48f9769-3d4e-4214-ba59-483f7a9c8178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79faacc-788e-4d25-87c9-b723ed08928b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e2abac-9edb-4fa3-a048-cfe46648c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de477b58-d747-4815-9596-a144aa795bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255e7e18-a274-409c-a4cc-451159a09191",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3978d2-c164-479d-8e29-f83a150d5939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73fc969-de7c-4361-b693-842e34a8325c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb696790-32d9-42e7-aed8-f7d8a6a8752f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc3eaee-5b9e-43d0-80e6-4847e8a8d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060ed9bb-dd00-470f-bf2b-89656d0547f9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d1b5f4-ea89-4aa1-bca5-66f1170ee9fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d957e6b8-9cab-45c3-adf5-c9b80b0e8a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9067a-3923-463d-8ef6-ce3901d6d6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe4e5b4-50b5-42e1-96ac-479c7b168f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424c44a9-292c-4f87-a91c-c120e50af23b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14e6397-952f-4ef3-99e3-f7f56e5f742f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4dffcc-5936-4156-bdf8-89bed1c10033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b742f441-1941-4674-806d-0fdb2c7113ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cda813-fddd-40a3-8ad8-2a8845283095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181e0bb9-2ce1-40b3-9f28-0c3bcd9dbb7f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ab42d7-b645-418d-a7ee-24d339e0facd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2769911-a8b8-43b3-a3be-6cf2522f0247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b87a01-6ee4-42ba-8aec-39fd49584f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a439a249-b922-4ae4-9daf-38826dc24f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a687d024-4481-4399-8f15-529fcfd2c81e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889b9baf-de4b-474b-b687-872131431b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bffe3db-54f9-4c69-82c4-ccc9df368578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d449d3-2b20-4763-b825-fea467f98215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db32308f-5757-4869-8637-c1bcc056d628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d7691-5832-439c-833f-e5fb615ada25",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd1f0eb-9784-46ae-b7b9-d321ac4910ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e306dbf-f434-4b02-bdee-f287664517b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce03f67-b7b6-4ac6-b309-032a11549875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761b1414-253a-4e29-bcb5-b8499b862ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf9e4f3-1ae2-4594-ba59-18c673964aa3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14f939a-c8b6-4b9e-aa13-94862dd87439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117b1a8a-d11d-40b0-b268-5968e2ef735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e232c3f9-c37c-4262-b358-fd2bc6be326d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de0140e-fe21-4995-9277-a3499f71da57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d75f37-c377-4259-a9a1-8e75edbd45c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69888f3-f142-4598-a3c5-d90e338b8393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ff6043-34f3-410d-9109-15aae3345eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dbe40a-c7c0-497d-978a-4992762105bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248a3dd5-248e-4eee-97e9-36f233d82bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e477070c-de46-4b39-b862-fbb887eb3888",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cfde5b-5dbe-4451-adf0-1f79943b74bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af4f916-0c4f-4652-8712-9f9cda873c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eb5c5f-4c01-44a5-92db-247cee220492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31056062-3995-4cb8-9d33-f778c83581b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fe7157-fd8e-43dd-8858-c8f0263cca66",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d030b-bc70-42f3-b582-10f08ea0e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3daf4e5c-6972-4b47-a67d-8ad11c669183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99701906-5ffc-4336-b7f2-aa99fbd7a423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29147aef-7a56-403a-b174-31e76b6e81b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdd549d-d2f7-46e8-9bda-45885023e7f1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f35638-539b-458a-be46-23249a98943a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cc8c1c-3e9e-4da5-8279-bbfc5b86f987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578e8f5a-3a40-4ac3-a109-c83f49f0a1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28002cb-06a4-49c6-b951-1ab7764b2242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb8114-150c-44f2-8337-3cdd8157ad82",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4f0e2f-4953-42f9-bede-70ec95e12954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6289fadf-2ff8-407c-b55e-59247b4a35a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c937c4-e6b4-4f43-a965-c573b18913c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62424a08-7f88-4c80-9c98-cdd6b7ddd682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0079202-b48c-42bd-af5c-3c954484d7a4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233b75ef-a22e-41cf-a07e-4139ad90500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd5449f-9bae-40b1-b2e4-f94c1e28680d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f8c48f-51d4-4527-8f62-78e8999e4bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23f0113-4a18-4987-b10b-5767c235f161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecc15ea-9aae-4b34-a806-83a8830e331a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f63df0a-8889-4ace-9003-50d28c817b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b001e0e-8418-4d97-93a0-6de0160ddbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065a409b-1bfb-4348-aa62-88c03b696c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf13ed2b-defd-4f50-b980-22c1dad08629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccdf40c-06c0-4301-a004-3fb1de7a09cf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f47fe95-4068-42ce-95fa-22e0a5bbdc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0f5e25-6c1a-4be5-b1e6-9c248d68f3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc17954-d079-4d66-a21b-720af1ef6df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b106fe0b-123d-426a-bdd6-b825ded2f3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ec3411-a83e-4d9f-a653-976d1717454f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64340563-99ab-4738-9989-c1bf8edf19b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf45663-d918-4c08-92f4-0ec0a65ecffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0009179f-1828-4972-ba1f-2f3a6cd17f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9731b07-1114-4724-81a7-741e6c565a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de824c31-f9a9-4de1-b44a-536734e4b931",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fbfd8a-18ed-438d-a012-260c0e1210f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a23331-a10a-4ae0-8984-9816d0163c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c32473e-e6af-4716-841e-c77fb1438447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ade2e8-3ada-4eb4-b485-6426c3765fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0db781-2b8c-441d-be1e-26c6571ef9e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e510a3-6d15-4ba3-95e2-0a6c6d0cb488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6662197c-f95f-440e-b0f0-c6cb7d4fc9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1bd1b-7a2b-45e6-be4e-f098e4be0278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d551d842-600b-427a-bcb6-0c638a3bbed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0defc090-9830-46df-95a1-313537797300",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd5ff71-3027-4503-a5de-fed2891a271b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ec2e7f-88e6-4a43-9bf9-e4a74aea0ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aa996b-984a-4395-9509-07f9fcad5f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914d2c5b-3715-48d9-b36d-3f7396fcea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88dce75-a85c-4727-ad50-d77514e406fc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ca8fcb-d4b3-446b-91ef-1b15174df1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d49480-ed2a-487d-8295-e37d2cc7735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f98c5a-d5a1-43bc-a66b-b06662ba6555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edd6801-0527-4892-b2e2-8b6d40dd8a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31973f51-a4a5-4421-bb22-8a542b4c1633",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1629ec19-33a9-4538-80f5-1fc9ad275d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a6cd88-35d5-4b91-8301-26e9a8f1f379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b44afb1-a765-4f2e-9df6-98e15deb724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7c8c10-18a3-4259-a826-d0f5deb95434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c470285-8b6a-4e9c-838d-0925573a92bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f763de-63f9-41ec-bfe2-15810cfdf5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531f9c98-beb5-4571-a7ae-ff7de21cf930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b451d571-78c3-4af3-a5fe-5cd0ddf7832e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7396eb79-2025-4e02-b4f1-dde888aec957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6268dd5-40b6-4e40-bed0-58fc305812ec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d2699-25ba-44c8-9481-44f82b60ee1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4968ad0c-4683-4e2f-8b55-b0e3aa1ca566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c44b2f-a11d-4fdd-b0ec-60fbb6617e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185c4e33-6306-40af-9182-82e4714bae72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2b5690-5888-4cea-9e5f-387c78c4d783",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8b0c47-e500-4a12-bcc0-1d70f6f48b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48720d9-3726-49fc-acde-968fcc4fc745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d72b41e-213b-4759-aeca-9ba93e240c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34237bcf-7310-494e-b4da-44b8f80dca83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0742b2-0b7c-4e0d-90c1-c15e878ea260",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0194517-1ea8-47e8-82eb-c37e81d96a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d94890-c2ed-4be9-8064-318b96488e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cca0be-3f22-4984-ab84-b2e181dec9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2332bc4-4a3e-4dc1-ab20-e5bb975ff8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82752c6b-032c-4cff-a9d5-32151066763f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d874002-3434-4838-abd9-1be93ca7decd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fcb1b0-3514-4423-a624-9eebb1196561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c5a0a8-b0c6-4b38-814d-d37db65732f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb81c06-42c9-4e30-9582-42ea4f75c705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa47cb02-b9a3-4371-8162-9e59b21e1483",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1aac7d-2a8a-436a-84a4-eab4a0d77ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca1e32d-78b3-4d59-86ac-b25af8e7c933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790614aa-930d-404d-978f-55bfb68d1f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60cdabf-4d12-4b02-bd2e-c5f335ed87f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e208d2bc-767f-4024-812e-bd28fb4d5ca8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a6cc65-79a5-42fe-b323-c921dd76f789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcf2c32-6dd0-4fae-935b-5c56a2fafb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb5760c-2672-4e63-bdb0-3ed2530bd602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401dbb7f-9128-410b-bf2f-0a7400aa11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49baa19-c454-4991-8550-75cf7d081c45",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1adf8a-9bf6-4d65-8d67-3437d0f60d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950be5b7-502b-4758-b78a-660dd9aa18ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e712e4d5-9b25-4210-99a9-f9741610a71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07192cbb-a8f0-47cd-8c4a-67741ba7a9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd124c-7ce3-42e9-a049-fce905698f1a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c44e1da-2cc0-4b2a-b236-09d66232b67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d22cce-7ac1-423e-94df-2785f0109f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4213f365-0b79-48cc-ac2f-2953cb19295d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c93e92f-a72a-44a8-a8e1-6bea6f448be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2682aa9b-e34f-4d84-9d23-f4c98d197fee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d434b2dd-ba99-4316-ba8c-66d85c884aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d447d96d-fe3b-4e83-9d7c-ef64fc09db2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d14f65-f651-4d8c-bbd3-c846a83765c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9e1d05-f1ad-4a04-9f26-2a9871afc3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf70af4-86a3-48c9-b093-ac09a054f69c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cebced7-548a-4430-89ea-c42e56cd897e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f863199-f4c6-42ab-ac52-f74c7e88deb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09733c9-e300-405f-84e1-7e1ed66d3cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdec3b6b-3336-4d8b-b0e6-3bf2ea85f8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17942e6-b136-46a6-9e6a-f8d6458ce85a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f3021c-c790-45ef-9590-afa369ae8d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8860483-a20f-4554-9901-d94d4dce45bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a85dc2-50c9-4d9b-a9a2-4db06172bd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c9d668-9e0a-4788-902d-bca0b096809c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f61f2d-0543-4175-bd4f-b2d1be6f1b49",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c59870-a69c-43f8-91d7-f1af10dde8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d97887-f8dc-4c52-938a-30b6211a3f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1c23a2-c953-44a8-a2ae-8b62dd4d1462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743c3b4d-e4bc-43d8-b6e3-7f94e1a14dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdea8de-e595-4ab2-b116-24ccd91eed50",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ca36e2-b305-449d-a852-d019e5fe8234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a115a1-4d3d-46f7-a38c-f129268b1e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02608dcd-f3ba-4c59-b8fe-1a9e6b573f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a94b39-615c-474a-baaa-aceed617a29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7689c906-3625-4e24-a374-d99ee4608c4c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedb6430-b54a-4ee6-8519-13298b80fd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa897b59-8c4b-46fa-a60d-289b1fbdb286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac39dce-e631-41c1-adf4-7f4071acc8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8267e9d2-5887-4a11-902a-401e013f977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46e988-1a75-4640-93d2-50797e97dad1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d4ba63-1911-4fb3-b500-320185c0297c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45216ca6-9007-4647-8cc1-296869bde7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ce9722-61b5-4c06-ab04-713ad6f9b4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2198bcbe-aaf8-47c9-8c12-a9f5e271f334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945ea1bd-03e1-4d98-834e-d17357f7da16",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30396598-9451-4f3b-9659-b9ed8d589eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666df293-385a-46a9-8ba3-8ef3a040fea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183bcc78-6f59-45d3-b8da-bcf71349f4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7154bcc7-c6c9-4b1f-8dc1-d454fccb7297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29371aa-4a58-4c13-8dc4-a67e2f7ad355",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de95029-751c-4ef3-a76d-6954d031e459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49aef384-b1c9-4b34-9bbc-d9aad2524548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233ece68-32cb-43b2-961c-949b052bb7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8063d2-5831-4815-ab41-f850e0985376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301577a6-a5f9-4121-81a5-dc152f46c1e0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cb3e47-a5a2-45c8-9e22-29478854dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53154753-8a2a-447a-ab07-40ee1d9ef461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96999c54-b0cd-475c-a857-2e0d2c405d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb87881-dc48-44b5-84c8-81d530262e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35e6a08-ec6e-460d-9c26-f5aae2d88fd9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f31e6a8-421a-48a4-8746-f79fdac0d294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04cee218-66a6-4729-86c8-92bb68b311d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a84004-1aa3-4571-afcd-9ff790e07501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d7460d-6bbc-4ded-8c88-764bbce86ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec102cb-c6ae-4dc0-a906-df6bd8b56d16",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44974747-f966-4291-943d-b58f0c7ace38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332234b0-05cf-4a53-b402-378ae6aff78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1083d569-ff85-4c8d-9e80-c301a735031c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77ab7a7-f722-4226-b7d4-84c8a823f1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d388c3f5-5870-4698-84e1-ea8b43fb76a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f99fbf-6984-4e58-9a01-d1ce32ca765b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7899678a-d5c8-4b67-80f4-f40c1a4b3360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703fa10-0133-4244-af9e-46c48c0e5870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846790b4-bfc7-4518-95b4-1cdc1c63afd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d508a-40f3-4431-ad37-655215afaf0f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6db410e-69ac-4ff5-ab90-a0ee58d8d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc2b1f3c-5091-49aa-8594-101a0a12483c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bd5863-6352-4799-8e5a-54af0e055034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54ce08b-d688-4c8e-a52d-f4498a19ef01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f4d980-c5f8-4a69-8336-a0eb527fddfb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dc9fff-a3e8-4fc5-89d4-4330f08f56d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552a2191-ee8c-424c-8765-1ccaa40a6517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dce6fcc-1b20-44db-95e2-9c7ff5d1e8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b793fe46-5bf9-4aa2-90cb-9d244e17d26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3eb9d1-15c9-4974-940b-1dbe74d2bc38",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beb017d-3462-44f8-aedd-dc7a52673348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c5200f-e2d3-4c1e-9b9a-7f45f2cc446c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b58c63-af6c-435e-9709-838464f01eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad3dba6-5049-4893-a825-2a0c64db44d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2b5c24-eefc-4f5f-aea9-5faf1e9c4ddd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75830eb1-0e18-477b-898b-09b3180da060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafc2e2a-483b-41e6-b3ab-f468f6afd773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b44fe28-8ed5-484f-b640-ed455f298929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13c7d2e-1270-4af2-a4c3-4f93948e8483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2186b59e-92ec-4ff5-ab5a-aecb09516377",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e41b0a-053c-455d-b26d-cb21b96af92c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5ee188-f360-458f-a43a-4ac878c3f196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a19c9fe-2be9-4dc7-ab42-3cbadf4b7b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894685aa-4dce-41dd-b1f2-713000d58d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3671c216-99b8-4344-8752-1196a3187b7d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0ba55-76b4-4e1e-88c8-107cbcc6c154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a579951b-1487-4be3-9504-7206758911f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4fa6e2-00e4-4081-8aa0-3567d87889b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f699f2aa-40c9-457f-8c20-f102db37f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc556664-8e9e-494a-8509-3b387f4d38d7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0011a93d-8440-419b-a2a5-744fa371bf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbad69e-c299-4e4f-bea0-42cb8834460e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a780eb1-9b1e-4f34-965f-f49dcdbdd95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91578c56-b840-4aa8-a94a-7b4262bdf170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e88968-c237-4fb3-b066-de035f95cd57",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87932494-5c58-4b6f-8466-3127e46fd1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55533d6d-7ccf-454b-bd87-bcdd4cb6fcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9349f3a2-36df-4f95-a5b5-2c38587883c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7383cdff-6dcb-4f91-bc6d-35d5f50bd851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082fcea4-9905-4fea-84d4-8422e7b2bdf6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606fe271-40d1-42a7-9c3b-e5049568a730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06633ea7-6425-4de6-a426-8fdb9903f5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3772d233-06ec-43a0-9204-93d1a42c8d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd4d1dc-5b43-432e-a258-65f20f8075cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba52e16b-3994-4fc4-8554-ef9507d9b14a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6386ae-ed81-43e0-b2dc-c2f08f8dcf68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b370d952-d63c-49eb-9ff5-bb508072ef3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37eb6b05-9d9c-433f-ac91-a9f90be6307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed15f1c-863b-41a3-abd9-2009f7457faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bbb55b-ea58-4ff0-93ab-c135959c46f3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94339a6-76a7-4f08-a40c-671d6c0de09a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0121d3-2bf3-49dc-8f01-ccba6256dd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a68f06-92fd-43db-b33a-31d20ea3ef69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319945ee-0081-4999-8539-a59bda7e5475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af450fa4-b4b7-425a-b4c7-9c2d694a05cb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c63ba6-9e15-4916-b8e1-91aa8b9335ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f01f4c4-9c5f-4b71-bc29-d7005d2690ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7962550f-bedf-42a7-ba0e-f926e7875046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8300726b-d87e-4718-8be2-476354d45258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c5851f-04b9-4d93-a013-d5e5202546e4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68888618-5cbd-4ed7-b7ad-d2825f9c43c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d421474-9df8-465b-917f-71a2fff687fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b93bb-f9d7-417a-b563-03868a7f3254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea53dd-7a62-4328-aab5-08c72e224f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96a40db-3b33-4670-8702-835c411b2ce2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ba160d-51d7-451c-a316-22c556cb4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a101b119-85b6-4cf9-8b5d-7fc11dbea6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc8a4b9-92ba-4948-990c-4ab141c899e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4e8e1c-ed8c-4f44-b9de-0f5b02217659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aa4993-f731-4101-b052-7f76f844802c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bd4a6c-6fa3-4697-aea0-47a2728300d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07f638d-a52a-4978-a909-85900870fe36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e6c0d5-d2b1-469f-b73d-a2476b772933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e308f28b-7c85-471f-8db7-c50bec5da7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a9ec88-ce5b-43c1-bf26-1c7b6646bf31",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749ed355-07c8-42a5-9570-cc912a5010c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d238e11-445a-479c-8529-490b59dc041f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920d551-a298-4371-8917-6709783d81ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9d8540-5730-4438-bab8-c1b7fbf46018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba436696-25d7-47d0-9851-434ea8eae1a4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd7d383-af5f-4291-b395-2c8badaa7069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bcc986-5b87-4030-ba9f-dfc4d72f9f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed511b52-0740-45a6-84f2-f0058aee4b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f6360a-261d-4276-91c0-4c87a6cc4abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6cd0d9-fbce-4eba-8e5d-71483e4a4956",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a741d480-d987-41c3-9b2b-d63ae0e74128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6a8c57-ef8d-46f8-9bce-a60e5247784a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8df3f02-c72d-4b7a-b380-2bd60b53bfd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0082935b-4408-4bd7-9832-a5e99c348104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745d37c7-3ed0-4cbc-a452-d8a378a08962",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb83ee37-d942-49ea-a264-cff1117bf532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55484869-bb1a-4f68-b9a7-8fb37f1d9f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1080df66-5e3a-4ae8-9de6-52397f74a44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea55db45-2f0f-4884-88f8-f56e78d346ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529602f8-e9ea-40f2-87f9-613f92b74c6c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46abbf9c-9a9f-423b-9edd-773692f51317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef86b11-37a3-4b28-b705-864144e9f002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e56c02-b9a6-4d15-acf1-9838c1bfcbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110dd57b-31c3-4f7b-b90d-9715b27acbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7d13e9-9588-442f-9587-e044a743c7de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef07b51a-fc76-438e-866b-8d3800093d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e6b5bc-54af-450a-9072-6ab6e2d4b127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8435b86b-f820-4e10-a71e-0467fca1bd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49fefcc-3e9b-41ec-91d0-952324796b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298740b6-1a75-439d-b544-cb48bea517ac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115baf3e-530e-42b4-903e-b2b7d282425b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1efb061-9b6b-479e-81e9-85c9c7bcd3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2556d93-1255-4a47-9b83-8a3f1210aa90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11a5d7f-40eb-4651-99fa-e2644a30c2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5504c0d5-c94c-4772-95e5-ec548fec4e5c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f99ce-b3a9-46e5-bfdd-607230de7802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28a8baa-3a1f-4dda-a6ff-83837d7946f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56072216-9785-4170-aaee-2b10e03ebaf4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050e6afe-8826-4bb6-85f4-f0fc26e4e593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d09741-cbef-4443-a7ec-2c22698d97b5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d6837b-8ca7-46bb-b95d-e996ce59bbff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e99bdbc-a23f-47ac-a1f4-c54276a089d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8eb4df-29cf-4b77-88d8-f6f6547b3697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f58a436-2d41-46ac-a8da-6ef8e7b83112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c226b4-1378-476a-821b-0e9067e23499",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791179e8-eb93-47a3-8f7a-fe40655e09ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c83dec-26b3-4957-9ec0-d46350185a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dee7012-a1e0-4d94-a088-a62c4c27745f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0b0264-d132-459d-ac01-38fd94c7d718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de4339-992c-49d5-984e-1bc7ca338aa8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa5c02d-e5f4-438d-b833-3ff52da23fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463371a7-d315-47cd-a1d1-9d3f292ed9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17613be-3aeb-4646-a920-0d55786110b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d309cea6-5403-43df-bf06-3a37c48c2706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca012bbf-d0be-4445-9970-f969755f54d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd176fb-544d-4792-a54c-9628c4735865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194f0244-5ffd-4b09-a916-f41298be1a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aef34d-2895-46cf-9bad-b1cc19ac69b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af19a17c-18a8-476f-ad30-91ce34c7aea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086d8866-f144-4d3a-b7c8-4dbbd670b165",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc1eb4-8193-4f05-b46f-d1e8548d85ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8361055d-b572-4d4c-b1f9-71e0a90f2a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a019fc9-f1ed-48dd-a13f-c6b0f8d60dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cb73c2-786c-4bf4-842d-b5fdf58db5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49adaf06-5e66-42b1-804d-ccc8594954c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139254bc-0882-4f28-8bdb-bd1451134aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5747e9ee-9b4d-4611-b98d-c470f6a1c250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eadca0e-bcfe-4de2-a7b6-4976496c4aa5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf82af3-3e88-4af3-8b57-92087846c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5788ed5-7fd9-4409-aa95-f5ab9b06ceb5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acaea73-2aa6-4eb4-97b7-7c373d9ce8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19c4aa0-caf1-4d23-9bed-8b07f30d0f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c230ba5-966e-464b-bdbf-88435126c7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa82b190-ef73-4348-b3d7-e8f20266f6e7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16222f8-5a4c-40bd-b942-3fe1843c6944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9f82ac1-c501-46dc-a586-9cbace197420"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "495df6af-6d01-4b35-9f6e-0eb742b279de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72a5832a-5721-4621-aadc-87753489dd5a"
                    }
                  }
                ]
              },
              {
                "id": "0d5b582a-1288-4dfd-b471-39a2f36b5984",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "febb0ce3-c930-4ce6-81dd-06400fb848e3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eda3692-d9ab-45ba-b467-3b857c5fa73d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5227ef50-ed33-425c-b8fa-d8da72c1c767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c8c474-56bc-45c1-bc60-5aa97efc48d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a17bc5d-2228-47f9-bce5-3053ad44d0d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ffa44e2-561f-436e-9132-7ecb89dc01ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87d338bf-05a8-4f33-9730-497245e86934"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d5b1861-b338-4f3b-b40d-fd5e59accf60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbabad0a-5ae4-4afa-bc95-fa8f960b90d3"
                    }
                  }
                ]
              },
              {
                "id": "074c015c-7c60-4bcc-9418-dc027cccd443",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2097cf9f-83fc-46f6-b212-ab77b61f2a3c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230128ca-124a-4fc9-92e1-6c55f74250f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "273dc1c1-3976-40b2-8545-b21f145cef55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2790dfd-20d8-4e3c-909c-bbc29083ff55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e773cea-87cb-4485-a821-b72f73d67a9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "61206c91-0a7a-4c59-a39e-fe4997c9bfe4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b1b707d1-8b00-424a-8687-550c14cb9d62",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f773bb30-db0d-4e0a-889e-8ab4e6a20a5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d4010eb9-4e2c-47df-a9f5-66fd02d0b275"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65679405-f1c4-4c44-8104-511434c09528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb4a481-ea36-4ace-806a-b65d139e5574"
                    }
                  }
                ]
              },
              {
                "id": "420c21a8-cea6-4c49-8e22-0bd12f395c06",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fd6e1ba-fd91-41c3-881e-9119e5574b07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa46e498-a3fa-4073-927b-fbb6a584882b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f02e995c-292e-4ae7-89be-c3437fbcf31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88fd9c19-4c8d-4384-8471-e5c333bd98a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0c140fe-a2b5-450e-a12f-bcd47a5fcd9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dc3daa33-3615-4409-b121-4fdae0375b3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fbbf3ce-3085-4cb7-9c49-dca7e700fec3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0658bccc-51cc-4a8e-873c-3a3fe8311a9c"
            }
          }
        ]
      },
      {
        "id": "384ade2f-67a3-44f1-bb04-3019a8f32b18",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1289b7ac-45e6-40fb-8324-985793a706c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6386997b-090f-4f52-8b90-9917b6ccfda2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45d628e0-7e7c-4d63-a765-12748111101a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4c233b-3b39-4fd1-b837-79e1915269d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d4ce026f-1597-4f20-b6fd-4b06132b7958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ea2561-e343-41d5-8099-6e8506099193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b42eaa13-cc58-419a-abca-48c9b746af32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a1542be-b781-4ff4-ade2-ff53877c2ffa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b13ec98b-40db-457d-ad33-43a2b5a4d19e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef4d39bf-12f8-4356-b535-9d2b64f27c67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a83f16-2046-4bcb-99ff-123e0d9bafe3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71387949-9000-40de-81aa-2db656e12fb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ab1a4a6-fea4-4480-ac70-75b1f73c3391"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e609dec-6560-4d34-8bd5-6f8d3c394b65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2628eabb-e39c-47d2-a867-0455a410b0dc"
            }
          }
        ]
      },
      {
        "id": "2db05c09-362c-408c-b03b-d1ec520dc5d0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ec55f7e2-a6c4-4fb8-b279-9ec631bc6866",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad74862f-fc74-4716-a07c-346eca005587",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e78f8609-315c-46c1-b69c-d27f8f73786a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714d23f0-a7a7-4f9c-b1d1-36c26088bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1adf31eb-ed39-49fb-8fdc-14a187e97d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b057f4-46ba-4413-b6cb-5256697fb1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bcd20f8-274b-406d-9228-5efc27779b91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead2e0f0-ff5a-4845-bd3a-2e4a69f42f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5462f4d-677d-4646-bfbe-55291c9be61d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f029a7-9537-4614-b257-574d3bd7eec7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dffb2025-bf83-4d4b-8df6-182fa75dc341"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f30bd4a-b194-4593-9a1f-429d7535d57b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4678bf12-4848-4fa8-b819-628925bab0e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec62f745-759d-42f0-a08c-68ada63193bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "786a4c83-0d4b-4f8f-8d29-da9374326985"
            }
          }
        ]
      },
      {
        "id": "c0d51c25-3a3a-4bef-9ddc-bdccd6cee754",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1d0cbe42-c653-4a95-8bbd-fb93ea601030",
            "name": "Negative Testing",
            "item": [
              {
                "id": "517a5865-c621-4d38-a0a5-db2e43a92531",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf82b93c-7ddf-45b9-8848-85f876be3a20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ab0d7f-7673-4447-b560-7e548edebd46",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a53846b1-bf24-4a16-85e4-25ea90241958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3e619a-3dee-46c8-9180-e2d32bd4710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "379969ae-6cad-436e-be09-711a905d5fdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b28b7a-5d75-4748-baf1-c5934432a445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c315d23-9385-4a06-aefa-cfb1c4024ed7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dca1a2a-20af-443f-bd47-8c5dc9335679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38975a07-9ca8-4fba-a918-a74caa8e92da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2718658b-b926-4088-aeec-cb1d68f8ea44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "831a4d82-474d-4e73-b6d2-3719788227ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "790b5fb1-5890-4db1-8f8b-03502d082f05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0b2c06c-3165-4cc5-9d6d-d6e17a5d35d4"
            }
          }
        ]
      },
      {
        "id": "a00fca9e-356a-4008-9a5d-aaed032272e2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee17778e-0425-4d4e-a5e4-75abf55aa201",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddf89451-9a27-4f67-b085-60d03d169d1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "86a29026-a708-49a8-8a30-aa2af2fe4cfb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcd3e35d-faa6-4f1f-8a9c-623d3df7d1ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e516e34-1082-452a-9393-91e1aaff6f2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.29122807017542,
      "responseMin": 6,
      "responseMax": 328,
      "responseSd": 26.87350668687918,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698021249005,
      "completed": 1698021282343
    },
    "executions": [
      {
        "id": "7279c137-5455-4e40-9ad5-a8d8b365b369",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2f31c6be-2ce3-44b4-bd03-7dbbec313e99",
          "httpRequestId": "52a1c524-a041-4877-b2d5-03f10e909fbf"
        },
        "item": {
          "id": "7279c137-5455-4e40-9ad5-a8d8b365b369",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ae7880f0-73c0-411a-bcf5-79501b25d415",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "b8d18bfc-34cd-477d-8b71-03bb155b94a6",
        "cursor": {
          "ref": "582975ab-827e-49bb-926e-8c07930bf2f2",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bde3496a-fc01-45b7-9e87-796b79b89715"
        },
        "item": {
          "id": "b8d18bfc-34cd-477d-8b71-03bb155b94a6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "da452901-97b7-4d3e-b88d-9549afd56dbf",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d8db8cae-50b6-4299-b8a4-99d1b430f930",
        "cursor": {
          "ref": "4f4fe1eb-08c0-48ab-940c-9392afb526eb",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b1e09975-c53e-4941-b81f-86beab9adebe"
        },
        "item": {
          "id": "d8db8cae-50b6-4299-b8a4-99d1b430f930",
          "name": "did_json"
        },
        "response": {
          "id": "de67bd49-b56c-44f4-ad3c-7c0617904f40",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9bffb2-ca92-4705-a339-23d2e0060a58",
        "cursor": {
          "ref": "c707d00d-c373-40e9-80aa-22103bb11c05",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9f590f6e-ed26-47f6-8b1e-2ee571c9c542"
        },
        "item": {
          "id": "ca9bffb2-ca92-4705-a339-23d2e0060a58",
          "name": "did:invalid"
        },
        "response": {
          "id": "48222cdc-461b-4217-b157-26bf1980bdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9bffb2-ca92-4705-a339-23d2e0060a58",
        "cursor": {
          "ref": "c707d00d-c373-40e9-80aa-22103bb11c05",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9f590f6e-ed26-47f6-8b1e-2ee571c9c542"
        },
        "item": {
          "id": "ca9bffb2-ca92-4705-a339-23d2e0060a58",
          "name": "did:invalid"
        },
        "response": {
          "id": "48222cdc-461b-4217-b157-26bf1980bdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ca335-6ff1-426a-8379-2e24e8dbf8da",
        "cursor": {
          "ref": "b9948d1f-1c0c-4b45-93f5-a541745c512a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cfff6dd6-0082-4666-9fca-5cf179dbb498"
        },
        "item": {
          "id": "690ca335-6ff1-426a-8379-2e24e8dbf8da",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9df98d4a-1e92-40da-a6f7-93f23599ce59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7dce6a-0e89-4eba-936f-2ba897f7f2b3",
        "cursor": {
          "ref": "fe703f66-7f8d-4e2f-bf9d-eb33e8f06236",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6dd96bfa-e23b-418a-b50a-8b6b307c5a04"
        },
        "item": {
          "id": "7a7dce6a-0e89-4eba-936f-2ba897f7f2b3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9c908493-c3fb-4d33-a91c-52c1d615f258",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253514f6-fed7-43c8-9189-6c090f20ddcc",
        "cursor": {
          "ref": "4b0792ba-54cc-4006-ae7e-f16e2c493dac",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cccb5558-0685-486a-8933-a506f90b2808"
        },
        "item": {
          "id": "253514f6-fed7-43c8-9189-6c090f20ddcc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "87f4be99-faeb-45f6-b120-ecc0c9b5ba21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f069e93e-dc14-42cd-b312-d58f00cc6952",
        "cursor": {
          "ref": "340fc12c-2dfa-40f0-8359-7eabbb9fab0f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4fc88a9e-49ad-4da3-933a-272f86329fda"
        },
        "item": {
          "id": "f069e93e-dc14-42cd-b312-d58f00cc6952",
          "name": "identifiers"
        },
        "response": {
          "id": "3c3f4228-7be6-44cc-8c03-71010d272c52",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838a66d3-f89b-48e4-8983-81bf82652e72",
        "cursor": {
          "ref": "e920ef34-a622-481a-867e-a714783d08bf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "382bba81-3bb0-4c9c-bbc3-c887c8c813d8"
        },
        "item": {
          "id": "838a66d3-f89b-48e4-8983-81bf82652e72",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9e5beeb6-bcc0-40f7-aeef-fbdc0a08ba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ca2aee-4f45-46fa-8e05-22d001656827",
        "cursor": {
          "ref": "f752ead7-104b-4cdd-a97c-6184ec2c2f68",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ade7dfe-d3bc-461e-9d70-dc2d4bc09edc"
        },
        "item": {
          "id": "17ca2aee-4f45-46fa-8e05-22d001656827",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1cd05146-e2bb-47e5-a5b4-126a22b28216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70330e3-61d1-49a7-921e-11e9b1646a6c",
        "cursor": {
          "ref": "427471cb-a4c9-4bc3-925a-2a16787dc067",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "53f1d332-c621-452e-8425-e61673f72861"
        },
        "item": {
          "id": "f70330e3-61d1-49a7-921e-11e9b1646a6c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "34b0d202-3b42-4e01-8ef2-238fdeda314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984a8fed-3b42-4a66-8592-6d586d28d1d1",
        "cursor": {
          "ref": "91f0f425-1820-4db8-8c10-344b59d64cc2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6977eed7-b2cc-4ae1-82df-98ec1fa99fda"
        },
        "item": {
          "id": "984a8fed-3b42-4a66-8592-6d586d28d1d1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25bee289-16b1-40e2-97f2-eb56d0db6e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45577968-875f-4b30-ac8c-e265def1cf7c",
        "cursor": {
          "ref": "615d1fbf-cb18-4f49-bddf-64999d465322",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "87858a15-8e66-401c-bb67-b763bae97cab"
        },
        "item": {
          "id": "45577968-875f-4b30-ac8c-e265def1cf7c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "000c344e-c85a-444d-9954-bbca426026e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df7dee4-79cc-4fc5-97ae-074ebdcf7ee7",
        "cursor": {
          "ref": "78ef9525-30bc-474b-81c4-c98dd7a06fe2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8186fb26-07d7-418e-a73a-c83d441ae2ed"
        },
        "item": {
          "id": "9df7dee4-79cc-4fc5-97ae-074ebdcf7ee7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7314a2a2-1731-4e1a-91e0-f8aa7e0afe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14825b80-9eed-403c-9a36-ee4f27967faf",
        "cursor": {
          "ref": "ea0fe0cc-5994-46eb-acec-714a5bdfd616",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12e9ec8c-478c-4ab4-8555-ec96b7b7607b"
        },
        "item": {
          "id": "14825b80-9eed-403c-9a36-ee4f27967faf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a14e38dc-f279-4c32-97db-92aa062afe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1319bd4-1c76-4d84-9f59-b624eae48c2f",
        "cursor": {
          "ref": "3c0e9d95-dc86-40e9-9c5e-405df8d12d4e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d853908-ac72-4915-9332-9f80442ef46c"
        },
        "item": {
          "id": "c1319bd4-1c76-4d84-9f59-b624eae48c2f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3ec898a1-5299-4c6f-8e70-0ddfc2a1f82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970a0b17-000e-4640-9ad2-d7e337d23a0a",
        "cursor": {
          "ref": "5a2b99d1-1d41-4af5-b566-bb7821e2474a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5b57380f-f13c-4bc5-a299-651883b7bbd8"
        },
        "item": {
          "id": "970a0b17-000e-4640-9ad2-d7e337d23a0a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3b93f83e-f23e-446e-9ffe-64fd9013da94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044a2020-db6a-4d4a-b6af-e269ea39b310",
        "cursor": {
          "ref": "f1f2a4e1-1174-4eaf-b2d6-204d6f488752",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0164e9d6-c37e-4832-8e54-f46f01416a92"
        },
        "item": {
          "id": "044a2020-db6a-4d4a-b6af-e269ea39b310",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c1792931-ac4d-45f5-8330-40be72ccd02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baff2db7-303f-4296-b258-22d65ee8f9c3",
        "cursor": {
          "ref": "aceb25a1-d7b2-4f15-9d0c-b1893d9b0de9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0b4bcd5e-2e9d-4112-bb83-e3c40edc89b9"
        },
        "item": {
          "id": "baff2db7-303f-4296-b258-22d65ee8f9c3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7154c56f-8563-41c7-bf94-eb6179c57a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93321247-f51c-44bb-b776-6694a28d0810",
        "cursor": {
          "ref": "52aa7baf-2ae3-4a9c-8fd8-dcbea9c0e626",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "46abafcb-4dbd-49fa-b0a5-9df0354e5bc1"
        },
        "item": {
          "id": "93321247-f51c-44bb-b776-6694a28d0810",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ae43cead-6647-4b1c-b015-4aef7c2505d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f80fa1-d04e-46e6-9bd0-f95118b1caab",
        "cursor": {
          "ref": "4fb3a86a-e4dc-4c60-9865-41c45dabd16d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b40c0ee6-a639-4875-a030-55a7276c3565"
        },
        "item": {
          "id": "15f80fa1-d04e-46e6-9bd0-f95118b1caab",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b16dcc57-6f14-4183-b18e-894de0e87c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac18da-54a9-4574-965f-5825721a940f",
        "cursor": {
          "ref": "2a767f73-b416-410a-a9bc-b385365d15b3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d3356218-4428-450b-932a-cb66caef8365"
        },
        "item": {
          "id": "03ac18da-54a9-4574-965f-5825721a940f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d58717f3-f1a9-4f6c-b6f0-3d7405b58ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dc028f-f000-4025-8b32-ab986a6d5b16",
        "cursor": {
          "ref": "01c702e8-bc53-4e82-a3df-69fa3cabd7cf",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f6ec3064-ab0d-403e-af19-22fa2fc38d26"
        },
        "item": {
          "id": "e7dc028f-f000-4025-8b32-ab986a6d5b16",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "854a65aa-aed5-4add-a77d-c56b7b66107e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b962c50f-03bd-46ee-b22c-383d22a7c443",
        "cursor": {
          "ref": "30162530-0ad4-4167-a374-efb4f78a042c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2036fab4-5de7-4157-82f9-271320c8045d"
        },
        "item": {
          "id": "b962c50f-03bd-46ee-b22c-383d22a7c443",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1484da99-d5de-49ce-af8c-ec2018bfcc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9bcd8f-b2bd-498b-b6a6-b1b4dbbc41ea",
        "cursor": {
          "ref": "ff75108c-67ae-44fe-820d-ba21fedfd752",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "999f3433-d9e7-4dee-a96f-5d12f63efd9d"
        },
        "item": {
          "id": "bd9bcd8f-b2bd-498b-b6a6-b1b4dbbc41ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "82b3b2f5-5f65-488e-8719-08e818041240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db757048-e705-41e8-bb18-f74b1643b5ff",
        "cursor": {
          "ref": "67b6f2d3-9e1f-4015-9557-edb247d65c8d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "86b1d02b-378c-4a91-9d9f-1a55e7d432c8"
        },
        "item": {
          "id": "db757048-e705-41e8-bb18-f74b1643b5ff",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f6d4cf47-49fd-4ed7-a301-a1d84b0227f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaec1419-fcce-463d-a9e0-50490f23f929",
        "cursor": {
          "ref": "26179fcd-fb8b-4de6-bbf1-45831d2a9e93",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4aaf0ac7-84ef-4f39-a079-dd17149b5894"
        },
        "item": {
          "id": "aaec1419-fcce-463d-a9e0-50490f23f929",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4d7ff4f4-9ade-477d-96f5-c13d2dccca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7032bd35-22a3-4dc0-802b-b806c7c3e48d",
        "cursor": {
          "ref": "d777da30-06aa-4062-a729-61e753594d58",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3234534e-ecbb-4e3e-b67f-59c62e99205e"
        },
        "item": {
          "id": "7032bd35-22a3-4dc0-802b-b806c7c3e48d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4be28d5f-0cc8-464b-8e7c-21725969f2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0996cf0-782e-43b3-9924-8a0055493cbe",
        "cursor": {
          "ref": "ce5096a0-97fd-422b-b5aa-ace48724fd7c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "edf0be5d-11c1-45db-898a-f9a53fb6b529"
        },
        "item": {
          "id": "d0996cf0-782e-43b3-9924-8a0055493cbe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d588c598-c76a-424c-b71f-16fcc082af7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83546f7-dfc8-4a14-95f8-3fb1817920f5",
        "cursor": {
          "ref": "0e9a6f27-1d70-4109-8a8d-e65a1b59c5e7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a8e0320-5c69-4c3f-9c38-5ac942740986"
        },
        "item": {
          "id": "e83546f7-dfc8-4a14-95f8-3fb1817920f5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "34d55c74-c499-4745-b4ca-375b4277d33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd421b5b-6a8a-438b-9fef-ceeea1d23335",
        "cursor": {
          "ref": "72a892f1-fe9c-448a-9c2c-a710049273ac",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ef43390c-3116-4f9e-9424-fdf7bdc23570"
        },
        "item": {
          "id": "bd421b5b-6a8a-438b-9fef-ceeea1d23335",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "67e5b9f8-b4a5-4b94-b1d3-da1862dac2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e344ba-1b38-4ec4-96bb-194711e6f767",
        "cursor": {
          "ref": "44eb482f-cefa-46e5-9ebc-c4e973b64472",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fe2a0ca3-2b39-4cef-ae49-6ccc4b19fc3d"
        },
        "item": {
          "id": "93e344ba-1b38-4ec4-96bb-194711e6f767",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0beb5a6e-0ffc-4bce-951a-63df4e94eb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4487fcb9-c9e1-49a6-870b-ecb71dee52f4",
        "cursor": {
          "ref": "4b9f28b8-eb0f-4adb-96e2-71e986a04e2b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4577d489-f802-43a5-82ab-d7350f9672da"
        },
        "item": {
          "id": "4487fcb9-c9e1-49a6-870b-ecb71dee52f4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "31846c52-3c1a-46a2-aecc-ff521a1dfdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcff088-e38f-4861-b64b-a231257ada8d",
        "cursor": {
          "ref": "d09abba2-4420-4758-8755-96fbe313094b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "06fa217b-5d39-446a-934d-d9629ffbce91"
        },
        "item": {
          "id": "3dcff088-e38f-4861-b64b-a231257ada8d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "79ebef82-4c58-4e0f-b115-57a67870b384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686541a3-3bec-4775-8113-a2627d4f4ad2",
        "cursor": {
          "ref": "8502bc09-e4fe-4395-8d80-7eb10ce4479a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "91e8107d-db4d-4711-b704-5128c9ed1900"
        },
        "item": {
          "id": "686541a3-3bec-4775-8113-a2627d4f4ad2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba778fa2-00ab-490d-85c1-50b9e6725d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3341aa4-5c40-4727-8fea-7e2e46a5a23b",
        "cursor": {
          "ref": "62573e8c-dd9e-4703-8e59-05906498c4ae",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "99cac5b7-bdd0-4e8e-99b5-4cd67b177bd2"
        },
        "item": {
          "id": "f3341aa4-5c40-4727-8fea-7e2e46a5a23b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f0438803-dbb4-4400-b0ba-979e53e9e1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97963233-fb1e-4994-9ff7-69145178cf13",
        "cursor": {
          "ref": "50c5d5a5-9c2f-4268-abaf-be7b17bdbb60",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b0ed5b4e-77e0-4f9f-8e72-66be92e6f454"
        },
        "item": {
          "id": "97963233-fb1e-4994-9ff7-69145178cf13",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f2a5da46-e007-4eb3-88d9-66457d481d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d2d689-eb35-44e9-9a12-c12394be6ce7",
        "cursor": {
          "ref": "9267f9c2-0133-483c-84cd-610405c50d2e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "544d4e09-6bdf-4cb8-92df-2c075d0175af"
        },
        "item": {
          "id": "77d2d689-eb35-44e9-9a12-c12394be6ce7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "36a793c6-2441-4218-9ed0-25da5f3b3e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f66530b-32ef-4953-9fc3-625668d120bf",
        "cursor": {
          "ref": "f09d3c16-2991-4e2b-9017-806158ff802c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1653c74a-d4bb-4d65-869f-75cce591adb0"
        },
        "item": {
          "id": "0f66530b-32ef-4953-9fc3-625668d120bf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3f54a25f-e8c2-42cc-bdf5-6135e7d91307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386dbd2c-5550-4cad-85a3-705231c0c83d",
        "cursor": {
          "ref": "29399f86-c98b-4418-a3d2-32094e914ba0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ac479c5a-cffc-465a-ad9f-b7c413282eb7"
        },
        "item": {
          "id": "386dbd2c-5550-4cad-85a3-705231c0c83d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fe04ec33-5441-46d6-b64f-8ca5329e933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf03f17d-b081-4db6-9c99-d530f76bde8c",
        "cursor": {
          "ref": "e6267124-60db-4811-917d-0d1fb979fcbe",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d8183a23-12bf-4d12-b0a7-c73cc137295b"
        },
        "item": {
          "id": "bf03f17d-b081-4db6-9c99-d530f76bde8c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0dd4808f-0ae0-4cd9-995e-6d39a59d6015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f57c06-fc01-40c2-9753-147011429b89",
        "cursor": {
          "ref": "9a52df5b-9ee7-4f5a-b490-feaf541c06b9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a366580e-a4f9-46ec-9e21-98410929f89c"
        },
        "item": {
          "id": "79f57c06-fc01-40c2-9753-147011429b89",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4c74dd5f-5035-462f-9871-4d552483ec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac89a5f-e407-40d2-be45-fbf5fd4c542f",
        "cursor": {
          "ref": "e7d66027-e220-4627-90ae-4fc4dde24169",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1187aa5f-ab81-4c41-9281-d051d8169f53"
        },
        "item": {
          "id": "7ac89a5f-e407-40d2-be45-fbf5fd4c542f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "49ca15ca-aa8f-43e4-b3fd-dec85036d0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b418b5-ac3b-458f-a076-524631d4881f",
        "cursor": {
          "ref": "83b945d2-4582-4cef-af19-6997ed75ea6e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "46fb185b-e48a-4c6a-8b4f-2a32ffbf13b8"
        },
        "item": {
          "id": "c8b418b5-ac3b-458f-a076-524631d4881f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c3d262fe-4b04-47f6-b5b7-0d25a85e6396",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0217322-073d-4eea-9dbf-7d1b19d0d618",
        "cursor": {
          "ref": "49023203-766d-4fc8-9c4f-36b402303feb",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a64b9a6-1a80-4eff-bd36-bcecefb9cdc0"
        },
        "item": {
          "id": "d0217322-073d-4eea-9dbf-7d1b19d0d618",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7820149-bae2-4c2b-912e-6764795d0808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade40bb3-008a-4f80-ad9c-13a21f4339d2",
        "cursor": {
          "ref": "52bba4af-b890-40fb-bb8e-12b6a40f430b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b1cd07e3-6801-49d1-b193-2ba25928c257"
        },
        "item": {
          "id": "ade40bb3-008a-4f80-ad9c-13a21f4339d2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "27aa2685-6395-43e4-a6a2-25053f778228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12129607-57a0-40f9-8eac-1549663d43e8",
        "cursor": {
          "ref": "f6b2308b-578d-4d1c-aa66-43c89a797fbe",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e03c0c2b-9c9a-462a-9252-d28deb8007c2"
        },
        "item": {
          "id": "12129607-57a0-40f9-8eac-1549663d43e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b6bc8261-3a48-4311-9984-56dc5727fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f03459-c1dd-447e-9b89-b3d4138208c7",
        "cursor": {
          "ref": "dba085d7-0da9-4758-b54b-e4b8ddbccea1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "480664ed-379e-44a5-bba1-2c26cc1f8193"
        },
        "item": {
          "id": "a9f03459-c1dd-447e-9b89-b3d4138208c7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aa77b398-b419-4dbc-9ffe-38e71d8b4067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e75932-4c5f-4a21-bbd2-ad74e9376bda",
        "cursor": {
          "ref": "02d67bf7-aa3a-4641-81a9-313fc289c7e3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "35cd0f75-6abe-4c97-9287-bbfc5debe8ef"
        },
        "item": {
          "id": "75e75932-4c5f-4a21-bbd2-ad74e9376bda",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64176ecf-53b6-4986-be91-a4382a0fbcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a419e57f-0edb-49f2-a15f-4cccb163255d",
        "cursor": {
          "ref": "224ca3c6-fc38-44e4-840f-cc52db483f57",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b25273f1-9c30-416c-9cba-c5bc6dfb9d07"
        },
        "item": {
          "id": "a419e57f-0edb-49f2-a15f-4cccb163255d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d63dab45-029c-46d2-812e-25851b8e815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d34446-35f9-4750-8d5c-4c3cd3d11eed",
        "cursor": {
          "ref": "bc0b035b-3bf3-43ea-a85c-59b29e0219b8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7ea74a0-f0a5-4276-9ff1-4266ccf09012"
        },
        "item": {
          "id": "d1d34446-35f9-4750-8d5c-4c3cd3d11eed",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9829d89b-2a0c-403a-97a4-964b3009edd3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586045ec-145a-4e82-8e19-f7b1cc8f1b4c",
        "cursor": {
          "ref": "d2344316-e190-45c8-8544-c3d33e8ae776",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "077841d7-64f8-47c2-b2a8-0908ccff81c3"
        },
        "item": {
          "id": "586045ec-145a-4e82-8e19-f7b1cc8f1b4c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9af07395-9bf6-4f5f-baaf-f5d10f07135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d710f43-87f4-4017-a06c-63bfb6496549",
        "cursor": {
          "ref": "865b42aa-fdab-4c40-827c-0d2fd92ba75f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7a387085-7d16-4643-81d8-c7febd9bcd77"
        },
        "item": {
          "id": "5d710f43-87f4-4017-a06c-63bfb6496549",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78457eae-062c-455d-9f9d-bdbf29ef68f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cac6f4-aa83-48f5-ba52-187a2f9b27e6",
        "cursor": {
          "ref": "0a1cf9de-71a9-4290-88c6-13718922d134",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ba0822e0-d2d6-4b74-9aad-da33c390e046"
        },
        "item": {
          "id": "15cac6f4-aa83-48f5-ba52-187a2f9b27e6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a023b381-a7cd-43ab-ae23-c764031d88af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058434f8-309b-41ac-9b85-f7cd8d55f4b7",
        "cursor": {
          "ref": "e81a2852-db67-4976-8c78-8348f9457455",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b2bbea02-e15f-4dd9-8a71-bfe273e998cb"
        },
        "item": {
          "id": "058434f8-309b-41ac-9b85-f7cd8d55f4b7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5678636f-0aff-4960-aae6-98e87d0b5788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8502c1-8cc9-441b-bf96-6dea6f40e961",
        "cursor": {
          "ref": "f3d8a7d2-0351-4eec-bd45-a166935a358a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f13c2e9d-c1c7-4fe1-a589-995485b847da"
        },
        "item": {
          "id": "1c8502c1-8cc9-441b-bf96-6dea6f40e961",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4c4d7368-c9e4-460f-8b41-f4d1f971ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8a0f15-64a9-4909-9dda-fd7615af0e11",
        "cursor": {
          "ref": "d8c3c6ec-9741-4c39-b124-27b036feb852",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9c950ab6-2b59-4939-9cc5-2486cd93eb28"
        },
        "item": {
          "id": "eb8a0f15-64a9-4909-9dda-fd7615af0e11",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6cd122d-5678-40de-95da-7b42ebd6f64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f65f41-6784-4a38-a858-df836517fbb6",
        "cursor": {
          "ref": "97284393-4992-4200-b034-e5eebd13b83b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e6441b9-1039-4051-a329-a6d540181407"
        },
        "item": {
          "id": "71f65f41-6784-4a38-a858-df836517fbb6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "17444001-fde9-4df0-b5e4-8442f3d3e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214db04b-0acf-40ce-98ed-9abd17e3ac8c",
        "cursor": {
          "ref": "49ce5194-fb92-410a-83c1-1b76c447772e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8f8860a-c5bf-4615-bf0f-bad2afd7b9c0"
        },
        "item": {
          "id": "214db04b-0acf-40ce-98ed-9abd17e3ac8c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "404ab988-43ef-44ac-bb85-5dd5e60b284a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fd814c-a4be-40a6-92b2-7a5cb3075c90",
        "cursor": {
          "ref": "71b3f61d-eb82-4970-8384-2eb1d6dca2f4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "86732f8e-003e-47bd-81f8-43b670a3d1e0"
        },
        "item": {
          "id": "63fd814c-a4be-40a6-92b2-7a5cb3075c90",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eeb13567-e507-4bd7-b9d8-7f019cd93959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f09547-9ab3-423a-9175-61937afa29cb",
        "cursor": {
          "ref": "7900af11-e5e5-4808-80bb-4213c6c3a3fb",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b066b0d4-f1ec-43e3-b4a3-9785385529ee"
        },
        "item": {
          "id": "96f09547-9ab3-423a-9175-61937afa29cb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5a96b124-c1b9-4688-b06c-f302bc88bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e413872-4195-45c7-b636-c10df5be7849",
        "cursor": {
          "ref": "c063b315-9d7d-4701-906b-ca44be985698",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "86846b8a-3e7c-4544-a586-940d572ec601"
        },
        "item": {
          "id": "5e413872-4195-45c7-b636-c10df5be7849",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ceff052-fba7-4d21-a31c-403accc411de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1ced54-6ec2-4da1-ae72-9cd4e0f58749",
        "cursor": {
          "ref": "ea98d32f-e905-44cb-87b7-87c1577000d7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b2bd1f0a-d115-47b9-bc82-d5b6949dd591"
        },
        "item": {
          "id": "2f1ced54-6ec2-4da1-ae72-9cd4e0f58749",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4f6d8996-8939-48c5-9775-ee90f98ff545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddda9f95-798b-40d9-81a5-9025e2dc15cf",
        "cursor": {
          "ref": "21cc9767-4c3e-4caf-a202-760d4f7f6601",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c284c2c1-a977-4715-9d13-702be838ff67"
        },
        "item": {
          "id": "ddda9f95-798b-40d9-81a5-9025e2dc15cf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a923086f-8d21-4b0d-a118-e5741c7a8134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f1293-4e13-42b3-a69a-84830ba5cad4",
        "cursor": {
          "ref": "3d0606eb-fb13-4da2-99da-698c9764be4b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4d1467a6-7be1-4baa-af70-e6e5ec41f3dd"
        },
        "item": {
          "id": "1b2f1293-4e13-42b3-a69a-84830ba5cad4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bdd6867f-7985-43ed-9d08-ac2ae83afa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d926bb-5485-4d60-8505-e2755dda3206",
        "cursor": {
          "ref": "8b193160-6c30-453b-bca0-e2753d16ede2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5016c62-8430-47f1-8484-37fb5a94bcb5"
        },
        "item": {
          "id": "a9d926bb-5485-4d60-8505-e2755dda3206",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1744fb32-a043-49e9-b8d5-2b4ba72d8ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e64f4b8-ef15-410b-9099-c6cfd182bea1",
        "cursor": {
          "ref": "e7f48747-8ccc-4485-a8d0-7daff5208db5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5728d4ac-1b0e-414e-a63c-b4fd06f15e0c"
        },
        "item": {
          "id": "2e64f4b8-ef15-410b-9099-c6cfd182bea1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a3a96a5b-e792-4c8e-b406-a6a5cc8f2ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3492474d-2f51-4bd5-b1f4-206d5a216a84",
        "cursor": {
          "ref": "c60937e9-6bc4-415d-8f30-0dddde5220f4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b8b575fa-7299-4833-9fcb-c1b3c48f62f8"
        },
        "item": {
          "id": "3492474d-2f51-4bd5-b1f4-206d5a216a84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd8274a0-7f8e-445b-8c9f-ed779ee7780b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a8008e-063b-4113-b2fd-c0ad226dd964",
        "cursor": {
          "ref": "6ce4fdbe-233d-49a2-9e37-89facfd9648c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ade5839b-fff6-4182-8499-97a02c84286e"
        },
        "item": {
          "id": "b4a8008e-063b-4113-b2fd-c0ad226dd964",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "32456dab-76b8-48a5-b74c-b21c05bf6e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff434e-acbe-4453-ad92-bbf7bfebc833",
        "cursor": {
          "ref": "f0299935-5465-435c-80f2-ea72acbe110f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da7152cd-1139-42ca-9e83-57f9311726b6"
        },
        "item": {
          "id": "dcff434e-acbe-4453-ad92-bbf7bfebc833",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a37ba685-2691-477d-b430-f9e761ff85cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba742e3-fd42-4721-9d90-4479c2322619",
        "cursor": {
          "ref": "e6201ba1-0341-4788-bf08-7c7b0c586345",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c0fc0011-b190-45ed-a790-5f7f7edcd648"
        },
        "item": {
          "id": "4ba742e3-fd42-4721-9d90-4479c2322619",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "292380c0-594f-451c-aeac-c527e5c46b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75935e7d-7e18-46ed-bea8-693c146086b3",
        "cursor": {
          "ref": "c6c8ee6a-1ec9-4aad-a610-bbc901b278a2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d33fdde7-d517-4aff-8ef5-8b1cfdbdc01b"
        },
        "item": {
          "id": "75935e7d-7e18-46ed-bea8-693c146086b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1070e210-0813-4f72-a2bf-d809f6e5e926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ebbf35-ac4c-4fc1-9485-fdfcd93c0053",
        "cursor": {
          "ref": "d79614f1-0164-49f1-8812-1901c19b4d1f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f8c7f445-978f-436a-a23c-d2004e2bcff0"
        },
        "item": {
          "id": "46ebbf35-ac4c-4fc1-9485-fdfcd93c0053",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b59bab2c-bc32-4f3b-a6ae-093273f6fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc20725e-6237-488a-82d9-ff62096b41b1",
        "cursor": {
          "ref": "54bc96e8-0f6a-4901-b4a1-e30e2db56451",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3c2f8295-15a9-44f8-99b8-6eb3c8c886cc"
        },
        "item": {
          "id": "cc20725e-6237-488a-82d9-ff62096b41b1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e8a251dc-55f0-45e7-a728-63730c385836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce4d26d-163c-4865-8dfc-ba1e8bf18abe",
        "cursor": {
          "ref": "d366fafe-21b5-4a40-ae0b-34a3b500b15c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3dbcc0f2-2dac-41a4-adf1-97c2c40ed69b"
        },
        "item": {
          "id": "4ce4d26d-163c-4865-8dfc-ba1e8bf18abe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b2d1ec57-2e1d-4dbc-aecc-e246f7f6a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e746a73e-2704-40d0-b939-7a08245e933c",
        "cursor": {
          "ref": "792ea631-ca59-4426-98fa-6f9e6a368325",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "20d0acd0-4499-4a10-bcaa-43a7c842eb4d"
        },
        "item": {
          "id": "e746a73e-2704-40d0-b939-7a08245e933c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "89dbf92a-9c03-467a-b6f4-5aef4f02056d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c9b524-2668-4598-8ec2-3fc438bdff10",
        "cursor": {
          "ref": "45f9f639-9ae1-4ad2-81ba-63614a5f890a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c1acc4a0-40cd-4efe-909c-113675b7633d"
        },
        "item": {
          "id": "90c9b524-2668-4598-8ec2-3fc438bdff10",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b0b6a293-949e-4ba4-9c47-06122f88cda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa458934-b4ac-4559-b0ae-8bfc2b3cc670",
        "cursor": {
          "ref": "81c201c9-9fe5-4c95-a52c-a8953a1ba9fa",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "618e0280-3e66-4b02-a247-e7867886e0e5"
        },
        "item": {
          "id": "fa458934-b4ac-4559-b0ae-8bfc2b3cc670",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1dab41ae-5727-42ec-91fe-3d06601b4be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815eaa0f-f74b-421e-ac24-c705565d9603",
        "cursor": {
          "ref": "96bb5ca0-a0f5-464d-aac6-5b031e9ce972",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9c10068d-ca16-493a-82d9-ec0cabb0d56d"
        },
        "item": {
          "id": "815eaa0f-f74b-421e-ac24-c705565d9603",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c870350e-5ab5-4bb0-917a-1c9d00e79c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d5e7f2-2279-45a0-8404-6f5cbdaea053",
        "cursor": {
          "ref": "83664805-d3c3-420c-bdea-c5bbaf865f5a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "63bc370e-360e-4463-b57c-4c11a2f68790"
        },
        "item": {
          "id": "82d5e7f2-2279-45a0-8404-6f5cbdaea053",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "049f5b15-02a5-494c-8693-5434874ffea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaadf49-7a2d-467c-9440-3ec3c98e4ff9",
        "cursor": {
          "ref": "e688cdef-d12a-4f2a-a865-33e91e586417",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cdcceed0-d5f2-4f27-9a33-9c3a1f8ed564"
        },
        "item": {
          "id": "ebaadf49-7a2d-467c-9440-3ec3c98e4ff9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e0e3658c-8972-4fdd-9927-0bb56bafc124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6d50a1-d25a-48f1-b309-9b74c964db60",
        "cursor": {
          "ref": "afb992a9-1b59-411f-b52d-82370e5e9e5f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0acb9479-7cd3-4150-8b95-076d227cd150"
        },
        "item": {
          "id": "dd6d50a1-d25a-48f1-b309-9b74c964db60",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "22981f46-eb52-4217-87a9-5211fcbef3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05e18b1-6708-490e-98a0-a870f4210490",
        "cursor": {
          "ref": "f091078d-b0f0-4fc6-bc69-38cacb843f41",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c08e3c7-28a0-48e6-aa38-37d3f4ec282a"
        },
        "item": {
          "id": "c05e18b1-6708-490e-98a0-a870f4210490",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f7cf03e7-4b6b-4f2a-93a2-a13f987fadff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544c8377-b2ef-410d-bc94-ffa92ac2440c",
        "cursor": {
          "ref": "47bdea7c-3663-4ab4-baae-a9f97f77686f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eac90b15-33c4-4fcd-bbe9-a47ac3fb2d27"
        },
        "item": {
          "id": "544c8377-b2ef-410d-bc94-ffa92ac2440c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4128ad3b-13a6-4d0d-b1b3-ad6016dc5f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de62f3-69bb-4240-94f2-1fbd6c327958",
        "cursor": {
          "ref": "28513c7a-d4f7-40f6-a37a-f18e026c3f94",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "341cb893-ab46-4c54-b087-a18c78372e75"
        },
        "item": {
          "id": "02de62f3-69bb-4240-94f2-1fbd6c327958",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4cc8ef21-a422-4294-a1c0-a32051ad4c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a44070-ee2c-4971-b769-5adc5a300282",
        "cursor": {
          "ref": "ecacf9f8-cfcb-4216-91b9-a82e8cff41b1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8008e97e-a46f-427c-817d-9c1bae5774e3"
        },
        "item": {
          "id": "f9a44070-ee2c-4971-b769-5adc5a300282",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4fb0e210-670a-47e8-9b9d-2c9292b1e50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbe2f37-3b23-49e7-99a3-26daa9b827ce",
        "cursor": {
          "ref": "5beb0bac-b574-4e8b-b329-2518b1d72292",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c8519eae-0e50-4649-bd1c-77a5a80d56b7"
        },
        "item": {
          "id": "fbbe2f37-3b23-49e7-99a3-26daa9b827ce",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f7f841ee-75ef-4787-9105-a353338b74bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafc6686-a25d-4afd-8aa9-3a9537bce6e6",
        "cursor": {
          "ref": "dec956bf-964d-4224-8d33-fa240c7adb9c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a704f7e-09fd-4559-820d-dc13ebddd1dc"
        },
        "item": {
          "id": "cafc6686-a25d-4afd-8aa9-3a9537bce6e6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "60d60114-70fb-4a05-8b52-9b9c7c30c1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cffb2b-a911-4f17-90a1-fef59fd945ef",
        "cursor": {
          "ref": "cbe0bf43-7b06-4b43-a256-b7a50d88d691",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f75faa0-15a1-4692-a2e2-19b4e09bcb00"
        },
        "item": {
          "id": "45cffb2b-a911-4f17-90a1-fef59fd945ef",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7d1aec1d-be4a-46cb-862b-c3b4ac84e036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd52f12a-1145-470c-a77a-43b9cb407cbc",
        "cursor": {
          "ref": "987f18d4-1f3d-44ad-8713-ec8bfb3685cf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "73556f2f-862b-4c93-be16-16c6982c9e02"
        },
        "item": {
          "id": "dd52f12a-1145-470c-a77a-43b9cb407cbc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eae79418-3437-48ab-b47a-d4f3c66449c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568cf36-17fc-44cb-8e7b-7e8b2e65afd8",
        "cursor": {
          "ref": "998614dc-4d5f-4c58-ba86-9712d1c283b6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d02fc83b-0020-4c3d-b795-c896e1b3e862"
        },
        "item": {
          "id": "7568cf36-17fc-44cb-8e7b-7e8b2e65afd8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "60e5655b-f5e3-4a9e-be6b-e15c68292c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757393e6-d1ea-415a-84de-f7b4157f7d07",
        "cursor": {
          "ref": "e316ecdf-ea2b-4167-b842-88b27237cbc7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6415c2ef-6521-4bfb-9ddd-fd6316b627c3"
        },
        "item": {
          "id": "757393e6-d1ea-415a-84de-f7b4157f7d07",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3523cc0c-9c7c-4025-91bc-b1047e49a36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07025714-5972-4e9d-98b8-81411cca963c",
        "cursor": {
          "ref": "baf2b3ad-b8c8-4fc4-b773-e85249932016",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "60cfb695-eae0-4f67-8e6a-7172cd578056"
        },
        "item": {
          "id": "07025714-5972-4e9d-98b8-81411cca963c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b9a93fca-a3cd-4369-8e55-49c160d6fb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2763f4-0af4-4c4d-aa68-d407a542c82a",
        "cursor": {
          "ref": "50957cf7-1a8c-4ec2-84fc-410b3ff36223",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "474484d7-ae95-486d-a0b4-5765d85f5c30"
        },
        "item": {
          "id": "7f2763f4-0af4-4c4d-aa68-d407a542c82a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "126d9a73-2df6-4ae5-9bfc-c636a032b399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afadfcac-e855-472a-94d6-64e994866f30",
        "cursor": {
          "ref": "3184500a-94fc-46dc-a85c-e9f972fcc4f6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5fa1464c-1eea-4adc-b37f-8ea1423825e8"
        },
        "item": {
          "id": "afadfcac-e855-472a-94d6-64e994866f30",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8a9f8f5a-7ca1-4159-91b7-22edf94c67a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7df5ff6-c679-44d0-8827-7b1e5a61907d",
        "cursor": {
          "ref": "2134b0eb-137a-4b3b-bf39-e3ef80ded588",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7fcd5982-445c-422d-8d6c-5c1a12bb108f"
        },
        "item": {
          "id": "f7df5ff6-c679-44d0-8827-7b1e5a61907d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e12242f4-3a22-4132-ac8c-5d40684d29ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f895c9f-a69d-464a-aff0-c6aa65df67d7",
        "cursor": {
          "ref": "31057489-65d7-4371-9996-6f15431a559e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "40fc438f-cb07-4fbc-9b77-a6036005a1f5"
        },
        "item": {
          "id": "4f895c9f-a69d-464a-aff0-c6aa65df67d7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8c1dd7b1-99e4-4eb0-84aa-b29e135eeab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb9cb8f-d4c7-4559-a07c-43a0e958cab2",
        "cursor": {
          "ref": "8deda288-ea54-4508-9d68-0c36fe765154",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2556a214-c738-4f05-9b41-1df71f23157a"
        },
        "item": {
          "id": "1eb9cb8f-d4c7-4559-a07c-43a0e958cab2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "36ac4953-6597-41f4-9c52-b734c81f5450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b017906-6306-4ee6-92a8-abdea9d76440",
        "cursor": {
          "ref": "1128dd29-481c-42f0-a8fb-b30387ab3a35",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "410cc5d8-1af3-4180-b17d-e745fd2a9fa0"
        },
        "item": {
          "id": "1b017906-6306-4ee6-92a8-abdea9d76440",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a5da47cd-016d-47c6-9067-56a1f5dd9495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a718328-b145-4044-95be-037d2ad005dd",
        "cursor": {
          "ref": "b9b5c2a5-f1e2-43e5-8a17-8f5226f4972a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "33f56426-63c5-4379-9203-4a6e882ebd5f"
        },
        "item": {
          "id": "8a718328-b145-4044-95be-037d2ad005dd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "61a5306b-fcee-4312-a70e-0f01ebdc8b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8175ba-a46d-487f-a404-044b21bd6ae1",
        "cursor": {
          "ref": "0aaebe03-1148-4352-b364-dfed08d8e5a6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "68c2b382-02da-4f6a-878a-c62ca2fcfbfd"
        },
        "item": {
          "id": "cc8175ba-a46d-487f-a404-044b21bd6ae1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc4c032d-61d7-4eb0-9fc4-56bef2fc0234",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10407b06-1384-48dc-b6db-98b1432b9d27",
        "cursor": {
          "ref": "2524550b-435d-4142-a86c-a6f7e15c7415",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1f138b45-d104-446e-9636-11e56af1cc06"
        },
        "item": {
          "id": "10407b06-1384-48dc-b6db-98b1432b9d27",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "13535e53-686e-40ac-97cc-9b86ebcc4626",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765cf0a8-b31f-4429-af22-81c93c732c21",
        "cursor": {
          "ref": "7ef10f22-6265-444c-bebc-a965ab5990af",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6fa4e07e-ae18-4907-8207-4ee5ac1233f5"
        },
        "item": {
          "id": "765cf0a8-b31f-4429-af22-81c93c732c21",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f376366f-8337-47f9-99ce-cbeeed50dd3c",
          "status": "Created",
          "code": 201,
          "responseTime": 238,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd630549-38d7-4b3b-b00b-42b90d7fa3f8",
        "cursor": {
          "ref": "257e7293-795a-4d88-9d7e-51b69e544947",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f5803c7e-82f7-4939-b7f8-3bf996970dea"
        },
        "item": {
          "id": "bd630549-38d7-4b3b-b00b-42b90d7fa3f8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b85d2b96-f62e-4fb0-b68f-83c54ba808b0",
          "status": "Created",
          "code": 201,
          "responseTime": 328,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "22365cfa-ab4e-4382-af38-96bed8de3938",
        "cursor": {
          "ref": "ce208fb3-2228-493d-84d9-91f2cae23bfe",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10ceebf7-a984-409f-823c-70bd53d9db28"
        },
        "item": {
          "id": "22365cfa-ab4e-4382-af38-96bed8de3938",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6d9e81c5-b908-4359-aaea-811311a54c6f",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ee9c7d-531a-4c44-91fd-ab4299c5baa3",
        "cursor": {
          "ref": "47e20b69-f893-49ca-8341-6d1a03f285e3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a6927217-4b96-4bf6-8d47-06d30bb44bf1"
        },
        "item": {
          "id": "c5ee9c7d-531a-4c44-91fd-ab4299c5baa3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a4d6da46-7b66-408c-8793-378799c893a7",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea99e48-394d-4505-9996-c8331a56270a",
        "cursor": {
          "ref": "8856a9db-3aa7-4696-b154-a4b38984b4a3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "81436e2c-507c-488c-a0dc-9c363be5daba"
        },
        "item": {
          "id": "8ea99e48-394d-4505-9996-c8331a56270a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "385b611f-e8d1-4401-bac3-c8e11c376616",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "44de5e9f-36bc-4f39-a79a-cdeb98d77154",
        "cursor": {
          "ref": "ba5e3a5a-ea31-4c30-9950-ba7ff686680b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ed4c858a-6dde-4873-b322-3da6f69978db"
        },
        "item": {
          "id": "44de5e9f-36bc-4f39-a79a-cdeb98d77154",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b55fc56f-b4eb-4104-84a8-b5f097374dcb",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6359ce-d747-4852-8447-a19806131330",
        "cursor": {
          "ref": "20cae3ca-bed3-4c06-b27f-21ab85e883fb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b241beba-f05d-4a2d-a0e3-d9b2ad256474"
        },
        "item": {
          "id": "be6359ce-d747-4852-8447-a19806131330",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "10346972-c300-4b43-a455-87e256bb897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76fb55f-4eb6-41cb-80a9-61dde248b2d2",
        "cursor": {
          "ref": "8efa1135-a546-4745-9409-ebb97e1dabc0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "43852192-51ae-4caf-b54b-d799c4ee001f"
        },
        "item": {
          "id": "b76fb55f-4eb6-41cb-80a9-61dde248b2d2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e288b873-d130-42ed-b740-360494d465cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2599db30-9737-41b8-b003-2626944a63fe",
        "cursor": {
          "ref": "b65dd526-e2ec-4779-9e47-475e6fc1e2ee",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2745356e-8bad-4804-8add-9173a894f65e"
        },
        "item": {
          "id": "2599db30-9737-41b8-b003-2626944a63fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5b11046e-24d4-4bc8-b693-02a6b5c57812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b605251d-b9e6-46d6-9427-bb3a95243c5f",
        "cursor": {
          "ref": "e9816de2-8e81-45fd-be4e-856911497254",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "935bc260-f1d9-425d-bc1d-365f0cb9901b"
        },
        "item": {
          "id": "b605251d-b9e6-46d6-9427-bb3a95243c5f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9ccd63d4-a2a5-4dc7-969f-7cdbbe066c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1161d052-22fa-4b99-8f66-ca96b470a5d2",
        "cursor": {
          "ref": "0d3e04d4-3fa4-44e8-ab51-9c0b625fddd2",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5494ae16-1af3-4625-bc85-6127c177bf92"
        },
        "item": {
          "id": "1161d052-22fa-4b99-8f66-ca96b470a5d2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ae88af6d-e298-4e96-a915-32adbef3fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb899a-76cc-4a76-9489-229859795761",
        "cursor": {
          "ref": "d7a7679c-8b60-4793-8c9c-7d8bc8ec10ba",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "74d2752f-b302-4d44-9d7a-da07e69483bd"
        },
        "item": {
          "id": "f9eb899a-76cc-4a76-9489-229859795761",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "541618e1-ba1b-4004-819b-940ffdd0d4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b283471c-82c2-4498-82a3-db18fa6bb5ea",
        "cursor": {
          "ref": "2713990d-f074-4d61-88ff-3b60d29806aa",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "47703f90-9375-43b3-89a2-8d5cdc729290"
        },
        "item": {
          "id": "b283471c-82c2-4498-82a3-db18fa6bb5ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5ab8ddb3-6fa7-4591-9a34-3d7b5f9f0e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacebfe2-7f2b-4c04-981d-eafcc2019552",
        "cursor": {
          "ref": "d37f7f22-2648-43cf-9181-10bf27a9f787",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eea1a0d0-d45f-4049-b2e8-235c716623d0"
        },
        "item": {
          "id": "dacebfe2-7f2b-4c04-981d-eafcc2019552",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d06e6413-a502-4195-acbc-98944a54ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca4cce1-8fb9-4a97-919a-da2ae1e81e1b",
        "cursor": {
          "ref": "901ca2a2-d5b3-40f5-9c3d-19dd57e01992",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "05779307-63e3-4c89-9c91-30e5aab1e50b"
        },
        "item": {
          "id": "2ca4cce1-8fb9-4a97-919a-da2ae1e81e1b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "333e512b-f837-4750-9a63-f8280e908385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c7359b-91b0-41a6-a18c-25c096630b37",
        "cursor": {
          "ref": "2d039ecb-01d3-40db-8003-66e3a701f648",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "067170e8-f771-4d60-a7a0-d2d539fc1d12"
        },
        "item": {
          "id": "43c7359b-91b0-41a6-a18c-25c096630b37",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7886a6d5-8871-4646-8646-58cb359d4c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddbb502-b6fb-4316-8445-ceb89cb82e7b",
        "cursor": {
          "ref": "0e540028-99bb-431a-9688-aa81c3572e6d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5bf7e269-57b9-4a5f-910c-41a53acec70c"
        },
        "item": {
          "id": "cddbb502-b6fb-4316-8445-ceb89cb82e7b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9b8e1812-3649-4e0d-8413-ddb25925ea3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd3a433-333c-4b20-89d5-298a697857d0",
        "cursor": {
          "ref": "400693a3-342b-4730-b581-617c9479b9a8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dd998ab9-d09b-42cf-8aaa-dfbe73ea8fe9"
        },
        "item": {
          "id": "0fd3a433-333c-4b20-89d5-298a697857d0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "489ccf53-6faf-461c-b9c3-60e2e573a2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d229b4-2610-4a5c-b889-674e741ae940",
        "cursor": {
          "ref": "0c5a1e20-3e9d-4f13-a353-917e5af6ec16",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d9f66a8b-c136-4ad1-ae40-3b9b73fe2a93"
        },
        "item": {
          "id": "c9d229b4-2610-4a5c-b889-674e741ae940",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4824894-3504-4fe9-9793-d4045506430a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dde6fcb-5f02-4e88-b904-091b349c1375",
        "cursor": {
          "ref": "6ffee478-1ff6-48e0-af50-4ea480974281",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4cd92d88-d6db-4e5b-b11c-5960c13fa74b"
        },
        "item": {
          "id": "7dde6fcb-5f02-4e88-b904-091b349c1375",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa46d486-6fad-4966-b9ab-c914a27b1c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fea5754-9b25-46cc-9e0c-9dc166f155cf",
        "cursor": {
          "ref": "c95a12a6-20f9-4c9f-a3d3-d4abd15e5155",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "560c2f0c-3a40-455d-9cc5-7788c0a33cda"
        },
        "item": {
          "id": "2fea5754-9b25-46cc-9e0c-9dc166f155cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e1e0ded-d1b6-4ad4-851c-01b265b050fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46722e1-f3b4-4db7-b96f-ed829d2ca3bd",
        "cursor": {
          "ref": "465985a9-a060-439f-b30e-48a2693d4908",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5ecd6a5a-700b-4625-9eb1-78f9b0f32b49"
        },
        "item": {
          "id": "b46722e1-f3b4-4db7-b96f-ed829d2ca3bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ebb96717-6a11-4b15-8fd9-ad9d72dd690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3af0020-3118-4e2c-8596-e1b9d9a15a7d",
        "cursor": {
          "ref": "93348d29-b185-4a3b-b581-85a372b657b1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e5782c97-72c3-4c95-ace8-1ecc7560d46c"
        },
        "item": {
          "id": "c3af0020-3118-4e2c-8596-e1b9d9a15a7d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8fac12f0-e2f2-4833-8363-0c293708bec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c13a8a-1c08-4c4f-af7a-9ff44635ebd5",
        "cursor": {
          "ref": "a7a8d933-0962-4ac6-b7b4-3d3225f6064c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "583ed97e-36bd-4e37-bf32-ed66d999535f"
        },
        "item": {
          "id": "c7c13a8a-1c08-4c4f-af7a-9ff44635ebd5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6587e66-8919-4d3a-974d-9fb6682227a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc9b9b6-5b9f-41b5-a8ca-418c70f7586b",
        "cursor": {
          "ref": "e5e33265-6cef-4b92-ba6a-429bd78a327d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "19744993-bf02-4cce-b365-3b5ea9737e83"
        },
        "item": {
          "id": "5bc9b9b6-5b9f-41b5-a8ca-418c70f7586b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e986f2d8-8fa4-4139-aad2-6d946d11e4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6ee2d9-0ad3-4a17-b7d5-55f33ffbbb77",
        "cursor": {
          "ref": "92f0086f-670c-4a2c-a159-8d9a94313fa9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e27573b-996c-4423-b0a5-8e2e385bd874"
        },
        "item": {
          "id": "cb6ee2d9-0ad3-4a17-b7d5-55f33ffbbb77",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5a53334f-4d8c-4290-a68e-57b2ef866ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa9e14e-ba9b-4c3a-a1cd-92865bb92171",
        "cursor": {
          "ref": "5bc6c793-2776-43ba-a23d-da478700deeb",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bf152420-2324-4631-b07a-1de73ce647e5"
        },
        "item": {
          "id": "0aa9e14e-ba9b-4c3a-a1cd-92865bb92171",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "79f40366-7500-485a-9b6c-1211c5ba1d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7afd40-3286-4567-9798-ea4b793f4633",
        "cursor": {
          "ref": "b01f1b02-5a8a-4cba-9e37-0b6c69f50ed9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "985beda9-679a-4ba5-8024-c482d3a23cdb"
        },
        "item": {
          "id": "7c7afd40-3286-4567-9798-ea4b793f4633",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ead78aaa-71a6-4ccb-9028-034e2ea39b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e2c40b-d9fb-492e-aab2-ddfaee610e3b",
        "cursor": {
          "ref": "e9cd4ce1-b322-45fe-96d8-459273e0ac0e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5a8f2f52-9398-425c-b978-d2c74c20db26"
        },
        "item": {
          "id": "e3e2c40b-d9fb-492e-aab2-ddfaee610e3b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fbbf01cf-a632-489c-9868-857521c70c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4be4ee9-27cb-4522-9a06-c16699b09def",
        "cursor": {
          "ref": "d68e264c-62a3-4038-a98b-a24af4b9abe1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "babaec0d-66c1-4feb-a175-6dbf32f59c1f"
        },
        "item": {
          "id": "d4be4ee9-27cb-4522-9a06-c16699b09def",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f595d4af-2659-4644-8dd0-417c17a438ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edae017-297e-4aad-8192-efa05ec764ba",
        "cursor": {
          "ref": "9cb20e92-3810-4247-8725-3815c6f8e80c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "55e295a7-7830-4699-bccd-dfef21b0e7e4"
        },
        "item": {
          "id": "0edae017-297e-4aad-8192-efa05ec764ba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "39335bf2-f7f1-4b2c-b538-1830db486a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c32d9-6879-4121-9d44-852297926d1b",
        "cursor": {
          "ref": "9f40990c-6856-4786-8f36-e6faaa2f7276",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2cd62975-d0ae-4bbf-aa06-baec5e58c9d2"
        },
        "item": {
          "id": "ed7c32d9-6879-4121-9d44-852297926d1b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bfd52868-cb7c-412f-be73-50c9164a8993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febcec43-f95f-41cf-869c-ed1ed1655d58",
        "cursor": {
          "ref": "8fe3a679-b684-4830-86db-deb5224df8ea",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ca36574d-6372-470f-9bc0-3bf18cd75b14"
        },
        "item": {
          "id": "febcec43-f95f-41cf-869c-ed1ed1655d58",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0e787e9c-623e-4521-a20b-ffa314aae8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446d8250-5bf8-4de3-9549-0d9916e8d80a",
        "cursor": {
          "ref": "c8a052da-a09a-43fb-89b3-ce9d267b8f42",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0bdf8f8f-ee44-4d66-874e-a5d27833d96f"
        },
        "item": {
          "id": "446d8250-5bf8-4de3-9549-0d9916e8d80a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "88bf5b76-91a3-411e-83ad-3bd148401a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1960339-f336-43e7-a2ee-f7b472f8d3d7",
        "cursor": {
          "ref": "ffdbe527-ca45-42d7-a168-f0b8bcfb9c42",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9b83a7a5-4f59-4161-bcab-0bf27345e18b"
        },
        "item": {
          "id": "f1960339-f336-43e7-a2ee-f7b472f8d3d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34496543-782f-4193-bb1f-f6563174638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de8e9dc-edf0-4584-91ed-a91d0af9a742",
        "cursor": {
          "ref": "2ec0a06c-ce87-4993-a4b0-16f9ef5345ca",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "757d53f9-a8a1-4ace-83b9-53ec5537159e"
        },
        "item": {
          "id": "3de8e9dc-edf0-4584-91ed-a91d0af9a742",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "380abb26-1698-4c0d-90dd-4a3ff5fbdfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e136e594-3a03-4a83-903b-5f94e0e0c9f4",
        "cursor": {
          "ref": "c04c0fbb-3522-4d84-9bdc-0a567b428dc1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "abe1d18e-cbc9-4a69-808c-5f7c23594fa1"
        },
        "item": {
          "id": "e136e594-3a03-4a83-903b-5f94e0e0c9f4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6a4343c-8cc5-4404-b38b-3933cddd48b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5fd4f7-145a-4e31-abd8-96724c1282b1",
        "cursor": {
          "ref": "e1406525-3ca0-419f-b1ea-ea34facbfaf9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a00d69dc-7e23-4e2d-a124-4b9ccd0d1d96"
        },
        "item": {
          "id": "ce5fd4f7-145a-4e31-abd8-96724c1282b1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4ebd4871-62cf-46b0-ab9e-231da64ff702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07348537-0b64-44ec-8fc3-977638dd6ef9",
        "cursor": {
          "ref": "d7fef3ef-fc02-4901-8fff-d01fcffdfaa7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ce9ff9bd-f34e-4650-bc9b-09c469f6dce7"
        },
        "item": {
          "id": "07348537-0b64-44ec-8fc3-977638dd6ef9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "196492c8-6d1d-4a17-87c4-22eba9eecd31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab658ddb-4571-44a0-874f-4513ea40093d",
        "cursor": {
          "ref": "78194674-d985-4a34-9659-2839f6507639",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d6e5ffc-e667-4599-85f8-1567038dc319"
        },
        "item": {
          "id": "ab658ddb-4571-44a0-874f-4513ea40093d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77d5b3bb-ceda-483b-b1f9-523ab668b519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0e853d-1a05-47bb-9318-e03ad8e043dd",
        "cursor": {
          "ref": "53933a41-2a68-45e9-b196-1c47c5e57d7b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5d43d02d-5eaf-40e4-abb4-df63100ec901"
        },
        "item": {
          "id": "fe0e853d-1a05-47bb-9318-e03ad8e043dd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d0ad6350-51e8-4c26-b4ed-cbbe5d66635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16934ac0-ca2f-4dbc-8725-283619c1db33",
        "cursor": {
          "ref": "cde8aae4-b1c1-4af6-959f-b65eea18393f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c40f910d-1db2-41ad-b07b-6e082f6b3dd5"
        },
        "item": {
          "id": "16934ac0-ca2f-4dbc-8725-283619c1db33",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f1c84a20-7269-4e0e-ba4a-85d03479666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7be8c9-c1a5-4e9c-9d52-a5e12ced811c",
        "cursor": {
          "ref": "066c4f6f-cbb7-48b9-9e92-f1995a20b4c8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ba9c0f44-c4c1-4197-8703-6f2a081b0b1a"
        },
        "item": {
          "id": "bf7be8c9-c1a5-4e9c-9d52-a5e12ced811c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ff1aeba2-1650-476d-a0c7-fb79618e8756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3633891-f44f-482f-949f-1f833f9c3a9e",
        "cursor": {
          "ref": "ab8fe249-e203-41b4-82f1-64943f91aff1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9625c69a-f70e-4c5c-ab34-9e9291b59bd9"
        },
        "item": {
          "id": "a3633891-f44f-482f-949f-1f833f9c3a9e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea2ea7a4-7f62-487d-b27f-5a5c1322b136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6c5c62-ee08-4ebe-80cb-c1fe8a34eaa2",
        "cursor": {
          "ref": "148067c7-6065-4c93-aeea-afe80da3fde8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a2c277b1-d53f-4706-93c7-d4e025cd6bd2"
        },
        "item": {
          "id": "ed6c5c62-ee08-4ebe-80cb-c1fe8a34eaa2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aafb6cbd-2fce-40fe-8066-9782f71bc920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246322ba-d714-4556-92ef-4c2ba88d2ec4",
        "cursor": {
          "ref": "6269ccb3-82eb-4c32-bb95-40083b8e8c3a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9fbe3473-7c3e-40e9-951e-fc9580b21b35"
        },
        "item": {
          "id": "246322ba-d714-4556-92ef-4c2ba88d2ec4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c776b7e1-7615-4eb6-ab3d-9e10901d7988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a33d460-d138-4c74-a86c-190a2aba01b4",
        "cursor": {
          "ref": "fc56e45a-450f-44d8-b6a1-bc00f51b8716",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "209f2e02-d5b9-4dc2-a9d2-1961c4fc6839"
        },
        "item": {
          "id": "0a33d460-d138-4c74-a86c-190a2aba01b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2ece2189-524f-4481-8947-421df02c845a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3734add3-d686-4666-b787-0735a3ad5b60",
        "cursor": {
          "ref": "2c152a0b-ba00-4822-a269-d9ceb6164245",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d20e27ba-a768-4839-a576-1496230079c0"
        },
        "item": {
          "id": "3734add3-d686-4666-b787-0735a3ad5b60",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6b79f064-edb8-4c7e-9431-cd6b1d245435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf2a200-ca41-4660-9b3b-c3f67b25b6f9",
        "cursor": {
          "ref": "f693522c-6c79-4f13-811b-40a9cadc84ca",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f3d82e2b-9acd-4e50-a871-6faac653eaf5"
        },
        "item": {
          "id": "8cf2a200-ca41-4660-9b3b-c3f67b25b6f9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c700e9c4-7321-435d-b59e-bc52ecc1f505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f636719c-52db-4196-8169-1c391ea2a8d1",
        "cursor": {
          "ref": "baaab951-074a-4883-b46a-2e375304a4ab",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3f9dcde2-8dcb-4d39-afb8-18ccaf0f4139"
        },
        "item": {
          "id": "f636719c-52db-4196-8169-1c391ea2a8d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cae68697-a6e5-4569-bcb7-3ab9d191080e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b93b85e-80d9-4251-9301-8a92a1e497d9",
        "cursor": {
          "ref": "8175a899-4417-4213-adc9-9fdb7696122d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b440f552-d2a3-4eee-8d01-a5f32594c5ba"
        },
        "item": {
          "id": "2b93b85e-80d9-4251-9301-8a92a1e497d9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d58a910-31bb-4062-8886-bd69b98ac7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e4b2e-9688-472e-9ae0-ed31f2b40143",
        "cursor": {
          "ref": "ce3a32f0-50f0-476a-8b3a-55b839763e14",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3f1673c2-3f7d-48f0-ac11-f7beabadc0a4"
        },
        "item": {
          "id": "ab5e4b2e-9688-472e-9ae0-ed31f2b40143",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "42aabc74-7479-48e7-a8ed-2b71ebed9e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c7b9a9-8c92-4d8e-890d-623316ed6f3b",
        "cursor": {
          "ref": "3358df9d-187c-4fd0-a904-c796c376ed85",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "adcf7927-d3d4-4e3e-ba22-8439881b407c"
        },
        "item": {
          "id": "79c7b9a9-8c92-4d8e-890d-623316ed6f3b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d950da25-31d0-45b4-a8e1-55e42041f446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814385c1-749f-4725-9c1e-e842ea8b3c47",
        "cursor": {
          "ref": "2125b891-b911-49be-8c1a-fe09ddc2a2eb",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "82473211-c897-456b-94f1-fe61abada1b4"
        },
        "item": {
          "id": "814385c1-749f-4725-9c1e-e842ea8b3c47",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bec893a0-2452-4c3b-a583-95142d864d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc85e56f-eb11-4371-85b5-33bbeb8c22cb",
        "cursor": {
          "ref": "4ed0f259-e80a-4045-812b-0002be4d532f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3bd0ee70-64aa-49d4-bcef-4c32cf191874"
        },
        "item": {
          "id": "bc85e56f-eb11-4371-85b5-33bbeb8c22cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aae8f4ab-7ab5-49e2-81ac-1f3ba79ff3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06a5c3f-760b-4dc1-9d2d-86d0c7778794",
        "cursor": {
          "ref": "e67e80f1-a795-410b-9c44-aef15c6e99d4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a4b12d46-1638-4a29-8770-d476e80a6a30"
        },
        "item": {
          "id": "f06a5c3f-760b-4dc1-9d2d-86d0c7778794",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "884c7e49-be17-4160-b63a-7f55bbd50424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609bc826-c206-4fa3-8757-5d5dd76b16a2",
        "cursor": {
          "ref": "54c0c122-771c-4dd7-a3af-548ffcd4ae12",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bb13d9b8-7fa1-4049-9a8a-05aa220b7859"
        },
        "item": {
          "id": "609bc826-c206-4fa3-8757-5d5dd76b16a2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f1f3c25-a455-4afd-8b0d-2513bceb3531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e455dab-ebb1-4aff-8420-c5f05674cc59",
        "cursor": {
          "ref": "493f5883-5bab-4e42-86f6-f3cb7d2ccdce",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ae80f12-63f0-4616-bcc4-bf5298c9dcf1"
        },
        "item": {
          "id": "4e455dab-ebb1-4aff-8420-c5f05674cc59",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "da6923b5-055b-421a-b442-ca7a66912607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11825157-b1e6-4caf-ab8a-88e9cb1a9b29",
        "cursor": {
          "ref": "e254481d-7a26-41d1-9a49-a65aefce778c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cc47e75a-6172-4ea4-b706-0799a0530528"
        },
        "item": {
          "id": "11825157-b1e6-4caf-ab8a-88e9cb1a9b29",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "219f0bea-9466-4509-86f0-2f9d4f72ead5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7a6b9c-3cac-4256-aa1b-6c9f506f40b9",
        "cursor": {
          "ref": "6396653d-f999-45b2-9395-af18a64b34da",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b5a26a26-e3e3-4875-bf43-845d1a58d148"
        },
        "item": {
          "id": "2e7a6b9c-3cac-4256-aa1b-6c9f506f40b9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5baca78-e3a0-4ed1-9780-ad60a7051786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b13805-6884-4529-8ebf-59c5a2788048",
        "cursor": {
          "ref": "a75a05ef-51f2-4349-9875-23968b35134a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "92f9ee2a-4077-4a9d-8655-fe827f7e516c"
        },
        "item": {
          "id": "d2b13805-6884-4529-8ebf-59c5a2788048",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "850575bf-95d0-47ff-931b-7a7e50c9dd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1806b069-2671-495e-8e08-f96c3ec95359",
        "cursor": {
          "ref": "54d437e3-a98d-4869-80f2-654c3154113f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b031949c-e1c6-4ec7-8286-d085325dc294"
        },
        "item": {
          "id": "1806b069-2671-495e-8e08-f96c3ec95359",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1dda7c6d-81a7-477f-b2d2-93fb9cc43ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398968c9-afe5-40fe-9de7-5e92cecb8dcc",
        "cursor": {
          "ref": "559e3c38-e64d-47e9-8291-606723254b57",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "02350237-5039-47c2-aa14-8738d56128cb"
        },
        "item": {
          "id": "398968c9-afe5-40fe-9de7-5e92cecb8dcc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14291ad0-1c19-4a61-a4e3-bc33be23048d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5b7f3a-10a6-4a5d-891a-d3ec6d6ff1ea",
        "cursor": {
          "ref": "1360e4d7-6ac9-4155-b20b-1e78a5474c66",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "99c96516-82ff-449b-995c-8ef464aebad6"
        },
        "item": {
          "id": "2c5b7f3a-10a6-4a5d-891a-d3ec6d6ff1ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "149b3866-b762-44df-91bd-0391d9ea5341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3262405a-d504-42ff-a5eb-2622f9c10284",
        "cursor": {
          "ref": "3aa7b701-81cd-4df4-b4e3-38c0a71dfb07",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6fcb39fe-59f2-4cde-84b3-d85fdc4fda49"
        },
        "item": {
          "id": "3262405a-d504-42ff-a5eb-2622f9c10284",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "428cdb52-35ea-4e61-85e3-116feb68d1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0949e7-8571-4c27-9375-640c483d51ba",
        "cursor": {
          "ref": "7d3aad2a-afa8-4f73-8038-9a3a1cf91607",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "be1a3793-2eb5-4e05-807a-1dc043d9bf50"
        },
        "item": {
          "id": "3d0949e7-8571-4c27-9375-640c483d51ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7ed47f09-fd09-49ce-9994-6429ef36c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b622fde-7fa2-4173-97a5-0443a0d8001d",
        "cursor": {
          "ref": "11fac552-e529-44bf-bd93-b910615896e4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7fbb42a6-2454-4525-950f-8b47ac884c52"
        },
        "item": {
          "id": "4b622fde-7fa2-4173-97a5-0443a0d8001d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f2cf321e-f916-40aa-8736-4f947711e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fd69ff-396c-49b3-b874-f6ad9405072c",
        "cursor": {
          "ref": "91fcbbd1-5ca5-4b1f-8579-7debddfe64ee",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1a96c9e6-a062-4747-913c-23d47f75a497"
        },
        "item": {
          "id": "54fd69ff-396c-49b3-b874-f6ad9405072c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ef6ea4af-f707-4dd9-8233-8db5caa5439a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98340fc5-df05-4205-8362-68107bb8f674",
        "cursor": {
          "ref": "215e73b0-f3ae-4269-a170-66c0202dceca",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "653273f1-5b1e-40b0-9830-08b33c21ecf6"
        },
        "item": {
          "id": "98340fc5-df05-4205-8362-68107bb8f674",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a0dbf60b-641f-4204-a10c-e84a1f078851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42fd825-e3b4-442f-bab5-692890744bea",
        "cursor": {
          "ref": "7ec42216-0037-4e68-9f69-adb04c8583cc",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d6c030ef-4f22-4d3d-98f6-0129473c2cf9"
        },
        "item": {
          "id": "f42fd825-e3b4-442f-bab5-692890744bea",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "608e73a0-5ee0-4d62-bce8-79ef65bea1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf78129-e299-4a3d-94ae-d888115f2549",
        "cursor": {
          "ref": "799f5bbf-2ad0-4429-bea2-1844921502ed",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fe1cc3f9-91dc-499c-9dd2-e22c621ef0e8"
        },
        "item": {
          "id": "9cf78129-e299-4a3d-94ae-d888115f2549",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2b23eb6d-4277-4d67-8528-138dc18d555f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd45f67a-d819-4dee-99ef-44a155b29fe0",
        "cursor": {
          "ref": "1a768042-5c4e-46dd-8247-c40e78ca5d11",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c87d7313-6ccc-42c4-a2e4-d5f82e7c37e7"
        },
        "item": {
          "id": "cd45f67a-d819-4dee-99ef-44a155b29fe0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ce0ac1ba-6e5d-42dc-8852-de7c68a4808e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb177fc-19a4-44bb-a178-fcdafdd34944",
        "cursor": {
          "ref": "936dab06-e212-4809-bc6e-6c493b149d97",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "327824af-d90f-46e9-8ed5-80d3ce8a1c92"
        },
        "item": {
          "id": "ecb177fc-19a4-44bb-a178-fcdafdd34944",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1109d1a6-c226-4d03-bdea-21207dcfa608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d61c0de-30ac-4738-9a9f-740f3216f4ce",
        "cursor": {
          "ref": "555eb434-bae1-452a-8963-114ad89b9fc2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c43d3d4c-24c3-44b2-aba7-1791b7dd7525"
        },
        "item": {
          "id": "2d61c0de-30ac-4738-9a9f-740f3216f4ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1ecf55ef-6664-4d12-9acb-d500fc9111bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223803f9-3d05-4e3d-b362-32ebd9110318",
        "cursor": {
          "ref": "84b20b0e-ca31-4e56-8d8b-a3ee491474d8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "994380c6-4ddd-4c96-aa5b-33baa478ad86"
        },
        "item": {
          "id": "223803f9-3d05-4e3d-b362-32ebd9110318",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d7c6d006-7f76-4bbb-8160-f533f668b6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cbf085-4024-4995-99cc-c9252d351733",
        "cursor": {
          "ref": "ef066341-91f5-414f-b9c7-fa14e6a0f74f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9441de88-bbae-4981-9b56-0060afd57227"
        },
        "item": {
          "id": "d1cbf085-4024-4995-99cc-c9252d351733",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "87da7242-841c-4c4f-8499-cdde9048e924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672226e2-5b1f-4903-a543-22438b5eada2",
        "cursor": {
          "ref": "bb4b34b0-9373-494f-82f5-b1998014812b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2f3b381d-3870-4877-91c7-aa70bbad48e6"
        },
        "item": {
          "id": "672226e2-5b1f-4903-a543-22438b5eada2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72f68fd1-f9f7-47e3-8030-394bf8957cb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c926a-08fb-4199-93e2-bfe364b5583c",
        "cursor": {
          "ref": "71b86ee5-2604-4821-b122-cd987c9f601e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78c762c1-89b9-45a6-9133-75ab9ee6e12f"
        },
        "item": {
          "id": "7e6c926a-08fb-4199-93e2-bfe364b5583c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7ec5e75e-5af7-4f87-8f75-1b83174d897d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b1b3a6-9c85-42c3-b621-c6fac233cc23",
        "cursor": {
          "ref": "a3d1c882-776a-4335-8fa0-4e0c92eb3610",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8ee8b534-3b90-4e4a-8de2-eb4b0cc568aa"
        },
        "item": {
          "id": "b1b1b3a6-9c85-42c3-b621-c6fac233cc23",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "00715bb8-41c1-473e-81ec-e174176f9b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d367ed-c392-4aa6-8972-9e4abc795471",
        "cursor": {
          "ref": "a686e61c-2df9-42ca-8b2a-c89a1bdee002",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3828f4bb-a20f-4583-a0c6-aa5c7c5fc436"
        },
        "item": {
          "id": "69d367ed-c392-4aa6-8972-9e4abc795471",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "28c67583-7ce0-4ab2-be81-c690fa9a24d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85acbbf5-a78d-4271-bec0-427086fcb418",
        "cursor": {
          "ref": "c3b2ec3d-f3da-44de-a298-61b8b3f7fb1e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "afc89ffe-5506-40c4-8cb0-40f212933137"
        },
        "item": {
          "id": "85acbbf5-a78d-4271-bec0-427086fcb418",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d2c3b084-54d1-49d9-8af0-c7229a624ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00828743-7c24-4ec0-a834-976daf98167f",
        "cursor": {
          "ref": "2f4786f4-4d29-4666-8b4d-37a1d5152784",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0d0dcb7e-cdff-4259-aa62-1fc445321ce6"
        },
        "item": {
          "id": "00828743-7c24-4ec0-a834-976daf98167f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9116cfdc-0dc9-4a9a-bd04-b81ccdb21b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbb0cb5-6a4c-4d9e-b9fc-446a6e2e3342",
        "cursor": {
          "ref": "459b5815-c710-46b0-a233-a7879cabc4f2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a73b1cf-0dd4-458b-9a8a-6b669e5810c7"
        },
        "item": {
          "id": "edbb0cb5-6a4c-4d9e-b9fc-446a6e2e3342",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d392ae80-1235-47b8-bfeb-3b36111738ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14442eb-d9c2-44fb-b095-bfe391432367",
        "cursor": {
          "ref": "420cca85-e94a-4f98-8610-7093bd49a00d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6b508a49-1a78-4621-8813-7ba9c4a012d1"
        },
        "item": {
          "id": "d14442eb-d9c2-44fb-b095-bfe391432367",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a6ecfa50-247d-48fa-bf8a-5d65052d58fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1636a5-75da-4aa0-9ef1-413157ca795e",
        "cursor": {
          "ref": "7b6e81be-07bd-4e28-b0bb-84e4f80c2af5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ec205de-cd61-4ce2-bec7-d36236b77f37"
        },
        "item": {
          "id": "de1636a5-75da-4aa0-9ef1-413157ca795e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba29dd81-214e-4a6f-b265-9ab3cbbbbbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e56971-17d9-4eaa-a694-465e67222909",
        "cursor": {
          "ref": "13212a1a-77e4-4e20-9002-2a92bc841dfe",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e4ee7ca0-88d9-43e5-97c4-99a105720036"
        },
        "item": {
          "id": "85e56971-17d9-4eaa-a694-465e67222909",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f5b53f2e-1b3f-4d3e-ad90-af78d4633fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0a17d7-ab7f-42a1-9f5b-d73aa58f08bb",
        "cursor": {
          "ref": "05e9673d-1096-4634-beeb-f3b9eef9d9b4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5353ec44-5f5f-4622-b5d1-a9dda04b3c2a"
        },
        "item": {
          "id": "db0a17d7-ab7f-42a1-9f5b-d73aa58f08bb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d5434f5a-1313-42cc-a492-fc0b6cbc578d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fb8a94-e03a-4acb-8cb2-cd8ea00dbeca",
        "cursor": {
          "ref": "e28b1814-4905-4132-9d50-04afdb8c5a3f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "351948f3-c4f6-42ec-b169-7d5a2ebef044"
        },
        "item": {
          "id": "86fb8a94-e03a-4acb-8cb2-cd8ea00dbeca",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e7512262-0eba-4c23-b8d6-588e5567df25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90149b1e-de4a-49a7-800e-9ec8acdf105b",
        "cursor": {
          "ref": "4536ed19-fccb-4963-b264-c2426676767e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa9394d3-29ad-4c2d-b2fd-e063ddd9c23c"
        },
        "item": {
          "id": "90149b1e-de4a-49a7-800e-9ec8acdf105b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "213e01a0-3dfd-45bf-9f8c-c5dbca275ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b118856-dca8-4f85-a5c8-5147b069fb10",
        "cursor": {
          "ref": "7969b73c-cd36-488a-b891-f12933e99f36",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "15e78574-3430-4a6e-bca3-3952ea36a7b2"
        },
        "item": {
          "id": "0b118856-dca8-4f85-a5c8-5147b069fb10",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c93d109d-87e2-48c8-90d2-cc60d042d0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f051069-7d45-460d-961e-b1e364e26b88",
        "cursor": {
          "ref": "0721ebec-9154-4cb6-989c-3658845a9e9f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e72375f0-5359-4202-bc04-cca29fa7f13d"
        },
        "item": {
          "id": "0f051069-7d45-460d-961e-b1e364e26b88",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f61a4ec8-04ad-49c4-a83b-3b32a9ab4c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9e1255-5abb-4abd-a641-f2a88f062e84",
        "cursor": {
          "ref": "3f49d4e7-2804-42fb-9657-aaabaa31bd7a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "524aca5a-d076-4634-a289-c2c639e24f94"
        },
        "item": {
          "id": "5f9e1255-5abb-4abd-a641-f2a88f062e84",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ad3fd3cd-b30e-477b-884c-7be3d6bfb37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce997483-3506-4f6b-8b3e-4ec80d041821",
        "cursor": {
          "ref": "fb4ff273-3ed9-4c3c-be5c-389180dd3768",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1e88ab04-f3b6-4257-9080-9b0df6753029"
        },
        "item": {
          "id": "ce997483-3506-4f6b-8b3e-4ec80d041821",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "020e2730-6deb-4f0a-8bf2-491a8ead469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdbc6a8-53b5-4583-8e7f-ea93377811db",
        "cursor": {
          "ref": "1aff1622-e142-4092-a842-1e167abb1a0b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bb18996c-f53c-4e90-acfc-bdc1c96394b0"
        },
        "item": {
          "id": "4cdbc6a8-53b5-4583-8e7f-ea93377811db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "897d75ab-c3f1-4d20-815b-751a2a70f414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183b7da4-ad3f-4b6e-a928-8bcd4b7efe6e",
        "cursor": {
          "ref": "d55b9124-3916-4b2c-91f5-ad4969540e97",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "64a1aff4-f1c0-47c4-8e41-70ccbef63234"
        },
        "item": {
          "id": "183b7da4-ad3f-4b6e-a928-8bcd4b7efe6e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "475894cc-ed33-43aa-828f-2c48effd1348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b5802-5e19-4fbf-98d5-fe37938a4f3b",
        "cursor": {
          "ref": "b9c9b89e-ecb4-4703-afba-c538269e78d0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b9c03a05-63e9-4d07-8935-e91d0e9d85b2"
        },
        "item": {
          "id": "686b5802-5e19-4fbf-98d5-fe37938a4f3b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9d7467a3-fe8d-4381-a0a7-6871d366c22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64675790-48e2-44af-8ded-7ac9f65c4d68",
        "cursor": {
          "ref": "79aa8850-3685-4185-bc49-a9b735bf3354",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "781c861d-fd28-4af3-9153-7e9aa1af6980"
        },
        "item": {
          "id": "64675790-48e2-44af-8ded-7ac9f65c4d68",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c179f66f-e850-4bc2-8da3-a3068e11527b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef92963d-c3df-4d04-ad72-0d49af6a916c",
        "cursor": {
          "ref": "15906906-9ac6-4072-ac74-23acd984e03a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "77a87098-43b0-4601-8a71-4401ce1223a7"
        },
        "item": {
          "id": "ef92963d-c3df-4d04-ad72-0d49af6a916c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2ad038d9-fcc1-4b7a-b1ae-8557f9bc1578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e0a5f3-9f1f-4fc1-b6dd-f5fb438f4cb6",
        "cursor": {
          "ref": "f672ff72-695d-424f-8454-c0647f673f92",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cceb071c-aa0c-4418-b582-fbcfbc111855"
        },
        "item": {
          "id": "22e0a5f3-9f1f-4fc1-b6dd-f5fb438f4cb6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b07bdfae-b754-468c-9f04-190959a66692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02365a27-6de8-4732-8b44-5b3ea5e7b4c8",
        "cursor": {
          "ref": "8a8b1439-5ffd-45a4-acaf-372f6735ddb6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5a16905f-9087-4982-8dff-623f4d378a2b"
        },
        "item": {
          "id": "02365a27-6de8-4732-8b44-5b3ea5e7b4c8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "42f17ae0-8083-4c6c-b1cf-f798c44d3e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8960067-4449-487c-8d49-28031380aa6f",
        "cursor": {
          "ref": "a1edbf69-7839-4e85-b27d-c00f100c95a2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aa727536-95d6-45a7-9bc1-fa4d10f0e018"
        },
        "item": {
          "id": "c8960067-4449-487c-8d49-28031380aa6f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7fc1331b-c5cb-424c-864d-f1e35e875fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255e7e18-a274-409c-a4cc-451159a09191",
        "cursor": {
          "ref": "c3674b68-e962-4e72-b284-c5c2a38d4e0d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3c624919-205d-4278-bb6f-57cf8627cb21"
        },
        "item": {
          "id": "255e7e18-a274-409c-a4cc-451159a09191",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8294f966-f32f-4f7c-a2b4-e3a4a1feda3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060ed9bb-dd00-470f-bf2b-89656d0547f9",
        "cursor": {
          "ref": "df0ed4ee-fada-485a-b7ba-55df9d5b7b16",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7dd21e03-5ec1-431c-8f2f-ca277c879636"
        },
        "item": {
          "id": "060ed9bb-dd00-470f-bf2b-89656d0547f9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a6889f86-6ad0-4e1b-ab88-f47fd5c09a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424c44a9-292c-4f87-a91c-c120e50af23b",
        "cursor": {
          "ref": "3fca791c-144c-4aed-9cd1-98cf114fb4de",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "11a56990-be85-45ac-ad34-0a1cc139e128"
        },
        "item": {
          "id": "424c44a9-292c-4f87-a91c-c120e50af23b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9f972291-e1d6-4235-a29d-83e4f7d69789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181e0bb9-2ce1-40b3-9f28-0c3bcd9dbb7f",
        "cursor": {
          "ref": "60768c77-6136-4976-b8fe-3a7b00e1a3eb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5443977f-a31a-4a7d-b642-4f97a1fc3747"
        },
        "item": {
          "id": "181e0bb9-2ce1-40b3-9f28-0c3bcd9dbb7f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d264b262-6cca-4470-9f95-4543489933b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a687d024-4481-4399-8f15-529fcfd2c81e",
        "cursor": {
          "ref": "207110f1-9afa-41ec-b471-394f28c2c693",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "19c31929-ca57-4c24-a4db-fa79d1dcbc19"
        },
        "item": {
          "id": "a687d024-4481-4399-8f15-529fcfd2c81e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7f19ec5d-c42a-4678-98bf-0c6c8fc85d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d7691-5832-439c-833f-e5fb615ada25",
        "cursor": {
          "ref": "176a69d6-e142-4b22-b20f-300900b4f0d4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c0591e07-0ceb-4eff-bd56-425adda7928a"
        },
        "item": {
          "id": "ed0d7691-5832-439c-833f-e5fb615ada25",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "640c47c8-031c-4ce2-ace1-75f727792d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf9e4f3-1ae2-4594-ba59-18c673964aa3",
        "cursor": {
          "ref": "b95e9ab3-5499-46e1-a966-c49f675fea9f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f66b1286-6c6d-4744-8ec2-8b76247c23d2"
        },
        "item": {
          "id": "5cf9e4f3-1ae2-4594-ba59-18c673964aa3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "01d4f605-30cb-4c63-b0ff-4da535488007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d75f37-c377-4259-a9a1-8e75edbd45c4",
        "cursor": {
          "ref": "9e529d3e-bede-4a92-94d6-199a533a2222",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a92bab48-e2d8-4318-b24f-84a4df5b90cd"
        },
        "item": {
          "id": "62d75f37-c377-4259-a9a1-8e75edbd45c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "28080913-ff23-4014-adeb-7592702c259c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e477070c-de46-4b39-b862-fbb887eb3888",
        "cursor": {
          "ref": "4786063e-bf0a-4211-acb5-95236db0f772",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "854a03d0-83ce-41f0-a680-b9dc113d7327"
        },
        "item": {
          "id": "e477070c-de46-4b39-b862-fbb887eb3888",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a2ebd413-97d7-4d48-9902-9752c2581988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fe7157-fd8e-43dd-8858-c8f0263cca66",
        "cursor": {
          "ref": "bee8e417-f400-47b0-8ca0-5d5d0c486551",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "04974de4-5dcc-4639-9e0e-09e493ea7822"
        },
        "item": {
          "id": "79fe7157-fd8e-43dd-8858-c8f0263cca66",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8724d7c4-19fb-48e8-b45a-42498e1a8446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdd549d-d2f7-46e8-9bda-45885023e7f1",
        "cursor": {
          "ref": "e55837ae-7c7a-4261-8e7d-5a1d48cd8f75",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fd88d3e9-ad63-4fb5-adfe-b69ecd87cce9"
        },
        "item": {
          "id": "bcdd549d-d2f7-46e8-9bda-45885023e7f1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e490570c-06a8-43d0-8579-d13b9b847cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb8114-150c-44f2-8337-3cdd8157ad82",
        "cursor": {
          "ref": "3dc73bb8-b5be-4eaa-9835-1eea830c76f8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a250fcdc-740e-47d4-89ba-42d323d33a4b"
        },
        "item": {
          "id": "b0bb8114-150c-44f2-8337-3cdd8157ad82",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "305f3754-4086-4d4c-8cd0-16cc43654aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0079202-b48c-42bd-af5c-3c954484d7a4",
        "cursor": {
          "ref": "026925e1-4563-461b-a6cc-899e887aaea3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ebce1727-3daf-46bd-b00f-a0abd3d5e6b2"
        },
        "item": {
          "id": "e0079202-b48c-42bd-af5c-3c954484d7a4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "94274378-3e91-4753-8709-29ce0cd6cb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecc15ea-9aae-4b34-a806-83a8830e331a",
        "cursor": {
          "ref": "80b8b82e-d321-4626-a72c-bca52942d93d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1ff7ee92-5ea3-4c0c-b096-809f397210ca"
        },
        "item": {
          "id": "9ecc15ea-9aae-4b34-a806-83a8830e331a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "883bef01-be35-4af4-905d-f10ab1e30d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccdf40c-06c0-4301-a004-3fb1de7a09cf",
        "cursor": {
          "ref": "721a2e38-6a10-4593-a465-9f4034d7336c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "79d22ddf-d9bf-4542-b598-9c67c0b9c09b"
        },
        "item": {
          "id": "8ccdf40c-06c0-4301-a004-3fb1de7a09cf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c71236e5-39e1-4586-ab46-5b9eb917fc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ec3411-a83e-4d9f-a653-976d1717454f",
        "cursor": {
          "ref": "fb3f6261-c39f-49d5-8c52-dda8909ac220",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "61b3371c-d4f1-49ca-8334-846abe80ad63"
        },
        "item": {
          "id": "78ec3411-a83e-4d9f-a653-976d1717454f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "653ae84d-99c0-449c-812e-1f34749054a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de824c31-f9a9-4de1-b44a-536734e4b931",
        "cursor": {
          "ref": "5badb7b2-1b1e-46a5-a253-e804fa100f1a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "20cf14a6-4c68-41d0-a4ea-89f5c309660b"
        },
        "item": {
          "id": "de824c31-f9a9-4de1-b44a-536734e4b931",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42f1d810-ca6a-4347-a87e-3ee34b335a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0db781-2b8c-441d-be1e-26c6571ef9e6",
        "cursor": {
          "ref": "9d242821-6818-472c-a463-a2587be65584",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "83a435ab-0f29-41c4-992b-e011a674ddf3"
        },
        "item": {
          "id": "8a0db781-2b8c-441d-be1e-26c6571ef9e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df98d52a-7bd9-45d4-923b-c13be3afd535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0defc090-9830-46df-95a1-313537797300",
        "cursor": {
          "ref": "fb1403dc-fa05-43ab-ad62-863aa4ba5613",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b89d8dce-6e01-436d-b7da-2245e7a7236e"
        },
        "item": {
          "id": "0defc090-9830-46df-95a1-313537797300",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "425f0201-5827-4173-bb4e-b3a360db81d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88dce75-a85c-4727-ad50-d77514e406fc",
        "cursor": {
          "ref": "bfb1026e-33a3-4517-bf20-f8a76f5a534b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e60eda68-cf4d-4aa6-b980-35ac5963ae48"
        },
        "item": {
          "id": "e88dce75-a85c-4727-ad50-d77514e406fc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4a5e528d-ae19-43c6-bff5-a7b6edb74679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31973f51-a4a5-4421-bb22-8a542b4c1633",
        "cursor": {
          "ref": "0dace6b0-9d89-4cee-9f08-5ad4102fa9a4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6c84af7b-44bf-46cf-90e2-9b5a0bea19eb"
        },
        "item": {
          "id": "31973f51-a4a5-4421-bb22-8a542b4c1633",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "79ae58c4-27ed-41d8-8f1c-ef3c0d1e6097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c470285-8b6a-4e9c-838d-0925573a92bd",
        "cursor": {
          "ref": "5a4f6899-b892-415c-9384-5ab0864e78f6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "793f3240-42b8-463c-af5d-d7060d3e0ea7"
        },
        "item": {
          "id": "1c470285-8b6a-4e9c-838d-0925573a92bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a0042f7a-1a98-479d-a2b6-fc41c2c62b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6268dd5-40b6-4e40-bed0-58fc305812ec",
        "cursor": {
          "ref": "9e9f1723-1738-42bb-9ead-a2b6ee29dceb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2715b864-225e-4aae-90bf-d237a4738f9f"
        },
        "item": {
          "id": "d6268dd5-40b6-4e40-bed0-58fc305812ec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e2f69bb4-41e3-4457-a3a0-9fe55cdac1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2b5690-5888-4cea-9e5f-387c78c4d783",
        "cursor": {
          "ref": "3ea13f6c-77a7-458c-8214-068346a0fdc2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "43753bed-a919-4100-bb41-fb1f7188c177"
        },
        "item": {
          "id": "2b2b5690-5888-4cea-9e5f-387c78c4d783",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b732ce09-c970-4117-a8ef-0fce641f754e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0742b2-0b7c-4e0d-90c1-c15e878ea260",
        "cursor": {
          "ref": "22a22e3e-9a05-4ab7-93b1-870c8b636a0b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "76a3f978-daa4-4371-8693-330138b66b05"
        },
        "item": {
          "id": "7e0742b2-0b7c-4e0d-90c1-c15e878ea260",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4085d7bc-84f7-481b-8191-3d838069f284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82752c6b-032c-4cff-a9d5-32151066763f",
        "cursor": {
          "ref": "256905bb-e6d9-4d1e-9944-8462a6d42c8c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18bc81e1-26e5-44e2-ab58-f4ccfba94220"
        },
        "item": {
          "id": "82752c6b-032c-4cff-a9d5-32151066763f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2647b623-0abf-4fce-ad0d-130164dd563b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa47cb02-b9a3-4371-8162-9e59b21e1483",
        "cursor": {
          "ref": "4336ad7d-0679-4641-8caa-4b9cf8d7a5b9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "99e3e1ff-7f5a-4850-8d21-591c784065d9"
        },
        "item": {
          "id": "aa47cb02-b9a3-4371-8162-9e59b21e1483",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "13f80b5d-894a-4361-b6f1-9a16191288cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e208d2bc-767f-4024-812e-bd28fb4d5ca8",
        "cursor": {
          "ref": "c7353a73-c07e-499f-9181-f518cb66fd8f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f41a7b7-19c6-41d8-b5ab-a67cce16f4a6"
        },
        "item": {
          "id": "e208d2bc-767f-4024-812e-bd28fb4d5ca8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "10c468a1-f4ea-4ddf-8ae6-3fdf5b37e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49baa19-c454-4991-8550-75cf7d081c45",
        "cursor": {
          "ref": "c51c2883-2327-475b-8625-b006534b6fd3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "72c7bad1-a5a6-4af3-8698-28ec0b695fe4"
        },
        "item": {
          "id": "d49baa19-c454-4991-8550-75cf7d081c45",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3871b256-a459-44fd-abe5-fe85e96f1a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd124c-7ce3-42e9-a049-fce905698f1a",
        "cursor": {
          "ref": "f4cc19ba-82b6-4d92-ac39-31b3d26caeb5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3678d691-f4ce-4355-a8f3-f5d0dc904105"
        },
        "item": {
          "id": "46cd124c-7ce3-42e9-a049-fce905698f1a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd3459cc-d25f-4ff9-afba-67d69e276808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2682aa9b-e34f-4d84-9d23-f4c98d197fee",
        "cursor": {
          "ref": "e7973353-3a72-4753-bafc-27b3116b116e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8e93305b-e318-40d5-ade0-a89499de8c8a"
        },
        "item": {
          "id": "2682aa9b-e34f-4d84-9d23-f4c98d197fee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7ab000ff-d731-4be3-a2a6-88c8295c68d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf70af4-86a3-48c9-b093-ac09a054f69c",
        "cursor": {
          "ref": "9f01c9b1-c62d-4ef5-a762-8a39dba3816c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a732c147-6b53-4ea7-a08b-60fe7470873c"
        },
        "item": {
          "id": "eaf70af4-86a3-48c9-b093-ac09a054f69c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "113f9aa2-4437-41da-aa45-c535ef826cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17942e6-b136-46a6-9e6a-f8d6458ce85a",
        "cursor": {
          "ref": "db8f902d-c554-4c7f-becf-e9fa0db96b26",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e6ab2168-8cef-43ff-9d52-4d9522407a99"
        },
        "item": {
          "id": "d17942e6-b136-46a6-9e6a-f8d6458ce85a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "33d354c1-17e3-4814-a0f9-7b6c17cc0ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f61f2d-0543-4175-bd4f-b2d1be6f1b49",
        "cursor": {
          "ref": "5db6c5c7-2ded-4cfe-9e21-ba7776952a31",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a06bbcdf-1fdd-49cb-876d-d868ed464362"
        },
        "item": {
          "id": "48f61f2d-0543-4175-bd4f-b2d1be6f1b49",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b9451e91-03c8-45b3-8d80-eca3b825c150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdea8de-e595-4ab2-b116-24ccd91eed50",
        "cursor": {
          "ref": "679f4922-aebd-45a3-9ae5-d95cbb180392",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "091c4468-6cfc-48e0-abd4-11ab470a6753"
        },
        "item": {
          "id": "6bdea8de-e595-4ab2-b116-24ccd91eed50",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1fb27d93-1458-4e61-8c6e-efb429359530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7689c906-3625-4e24-a374-d99ee4608c4c",
        "cursor": {
          "ref": "91ce31d8-d078-4be7-a5e2-17faa82cdd1e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d6d7af52-cf83-4e89-9d08-fab1f716b48c"
        },
        "item": {
          "id": "7689c906-3625-4e24-a374-d99ee4608c4c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "610432da-6dc8-4e59-9716-689782b84e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46e988-1a75-4640-93d2-50797e97dad1",
        "cursor": {
          "ref": "5bf3148b-7813-4f4d-93c5-ce64bba204f5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0d50358b-d802-45b4-b196-0bb0ad3c8143"
        },
        "item": {
          "id": "8f46e988-1a75-4640-93d2-50797e97dad1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f3548449-60a9-43e5-8cff-f29c31d2cd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945ea1bd-03e1-4d98-834e-d17357f7da16",
        "cursor": {
          "ref": "cd01d2bb-f0d0-482b-b79f-4484fd511b25",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "caefe0dc-9189-4bef-94ae-97d6e220dadb"
        },
        "item": {
          "id": "945ea1bd-03e1-4d98-834e-d17357f7da16",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04ff532a-fea3-4f25-9f7e-42a3f41e4179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29371aa-4a58-4c13-8dc4-a67e2f7ad355",
        "cursor": {
          "ref": "846a39de-af50-4fcf-b90a-167d82aa8327",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "04d9f38f-13a1-4343-b16f-cc3853f01552"
        },
        "item": {
          "id": "b29371aa-4a58-4c13-8dc4-a67e2f7ad355",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "422e2c95-97a2-402c-83d5-5cb145b4de24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301577a6-a5f9-4121-81a5-dc152f46c1e0",
        "cursor": {
          "ref": "3d47949f-75c4-4a47-bad0-92277e85151d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fd492dbf-b563-4abb-aafd-db07230c649a"
        },
        "item": {
          "id": "301577a6-a5f9-4121-81a5-dc152f46c1e0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e078fcd1-563b-4a56-bd15-bfcae189a353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35e6a08-ec6e-460d-9c26-f5aae2d88fd9",
        "cursor": {
          "ref": "c989c409-eea4-4732-8dfb-cab16022ba70",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "88f34cc6-f146-4be6-b5eb-b8a9e8ada057"
        },
        "item": {
          "id": "a35e6a08-ec6e-460d-9c26-f5aae2d88fd9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "56b9688a-2249-45c6-b99f-b4ce32255701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec102cb-c6ae-4dc0-a906-df6bd8b56d16",
        "cursor": {
          "ref": "42bfc30d-ebe0-4aa2-8083-d4df770e616c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "906dd091-5868-44d6-95ff-f8d8a72aec47"
        },
        "item": {
          "id": "0ec102cb-c6ae-4dc0-a906-df6bd8b56d16",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2633b202-45cc-4223-b08b-f44ed886316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d388c3f5-5870-4698-84e1-ea8b43fb76a4",
        "cursor": {
          "ref": "b9ead83e-593d-4a55-bfda-188fb704547f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b25b0439-fb4e-4243-becb-0b09fb6e3feb"
        },
        "item": {
          "id": "d388c3f5-5870-4698-84e1-ea8b43fb76a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "46c37561-8ec2-44eb-8b89-8f30d6ac2eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d508a-40f3-4431-ad37-655215afaf0f",
        "cursor": {
          "ref": "e86c1e0d-9f0a-4a9b-b7c3-482499d85aeb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ced8fa4-d0e9-4d21-bae2-6902011bade2"
        },
        "item": {
          "id": "d72d508a-40f3-4431-ad37-655215afaf0f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "673f379e-f1d7-42d4-9f05-82a049820354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f4d980-c5f8-4a69-8336-a0eb527fddfb",
        "cursor": {
          "ref": "d121d96d-de13-47ba-9574-3bce85a09565",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33fa9f5e-601f-4853-aa14-c339f53d1ad2"
        },
        "item": {
          "id": "c5f4d980-c5f8-4a69-8336-a0eb527fddfb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dd48d2d1-c1e3-476f-b551-2faebab7ee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3eb9d1-15c9-4974-940b-1dbe74d2bc38",
        "cursor": {
          "ref": "666df803-e935-403f-8417-07608cc0f02a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "297b0f9f-839c-4ef5-a376-07a5fdf566ac"
        },
        "item": {
          "id": "3c3eb9d1-15c9-4974-940b-1dbe74d2bc38",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "73414381-fc82-4500-a8d7-151b05d37fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2b5c24-eefc-4f5f-aea9-5faf1e9c4ddd",
        "cursor": {
          "ref": "bf33556d-f964-40d8-8a95-f17996788979",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "495dff08-5f74-4005-8018-e30f8aeeb0e2"
        },
        "item": {
          "id": "3f2b5c24-eefc-4f5f-aea9-5faf1e9c4ddd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "32366448-4dc4-4603-bdae-476c47016f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2186b59e-92ec-4ff5-ab5a-aecb09516377",
        "cursor": {
          "ref": "2627992d-c29e-4dfb-87df-89a9348c63dc",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0bf9af1d-8c42-4b17-ac79-1a00dbb0e5a0"
        },
        "item": {
          "id": "2186b59e-92ec-4ff5-ab5a-aecb09516377",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "351d75b5-b134-4c19-ba05-ef3600f6d1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3671c216-99b8-4344-8752-1196a3187b7d",
        "cursor": {
          "ref": "05e30ad1-bdf0-4e29-aba3-c1a3294e78d1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "67ba05a4-8e5a-498a-ab9e-a91f6946174d"
        },
        "item": {
          "id": "3671c216-99b8-4344-8752-1196a3187b7d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1c8bd5d3-7431-4eea-a3dc-ce494c09c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc556664-8e9e-494a-8509-3b387f4d38d7",
        "cursor": {
          "ref": "00066b72-db79-4e9f-bc7d-1a017ad48772",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e6e48fa7-a258-44db-b112-97e8d8c00a04"
        },
        "item": {
          "id": "cc556664-8e9e-494a-8509-3b387f4d38d7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1f5fb7fe-4aeb-41b3-a607-ce1397f4b190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e88968-c237-4fb3-b066-de035f95cd57",
        "cursor": {
          "ref": "6f7bf885-f994-45f0-9f30-e5012f6fa6ff",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "eebacc88-5e53-42db-b2fe-5e5e55bd1ef9"
        },
        "item": {
          "id": "b0e88968-c237-4fb3-b066-de035f95cd57",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e28df05b-ba39-486f-bd79-72875b174889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082fcea4-9905-4fea-84d4-8422e7b2bdf6",
        "cursor": {
          "ref": "8c4d0ff3-e669-4fcb-a996-247b982f6bc4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7f3a7d48-c963-460e-99ca-f6224c32e945"
        },
        "item": {
          "id": "082fcea4-9905-4fea-84d4-8422e7b2bdf6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6410423d-42c2-404c-8075-4b05353286e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba52e16b-3994-4fc4-8554-ef9507d9b14a",
        "cursor": {
          "ref": "e9f3fbf7-52d7-4491-b3b7-60098e64cfb2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "54307040-1cd3-455d-9e84-b87cb97418f7"
        },
        "item": {
          "id": "ba52e16b-3994-4fc4-8554-ef9507d9b14a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5842d7f6-a276-4c3b-bc2c-95c4c24cb56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bbb55b-ea58-4ff0-93ab-c135959c46f3",
        "cursor": {
          "ref": "3b854797-0350-485a-944e-2c5debea9930",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "28953cf0-b8d9-4ece-bbbc-62b79ae77f0d"
        },
        "item": {
          "id": "e9bbb55b-ea58-4ff0-93ab-c135959c46f3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "11e781b1-16e2-4b72-9c4e-c3db9b907dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af450fa4-b4b7-425a-b4c7-9c2d694a05cb",
        "cursor": {
          "ref": "4c8a8fea-c5bd-47de-8bb7-d74226bdc37e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a40ff211-bc1e-4686-adf0-65dec0824dd2"
        },
        "item": {
          "id": "af450fa4-b4b7-425a-b4c7-9c2d694a05cb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "47cac04b-65da-4e9c-9326-c3b1d1dc6d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c5851f-04b9-4d93-a013-d5e5202546e4",
        "cursor": {
          "ref": "384fe81b-f058-4677-a44c-d41dd867f3d5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "32c7d03e-53bc-4c9e-b899-f1961574fffe"
        },
        "item": {
          "id": "a3c5851f-04b9-4d93-a013-d5e5202546e4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f13bad54-ae71-4849-b70e-c8678dbb672a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96a40db-3b33-4670-8702-835c411b2ce2",
        "cursor": {
          "ref": "abe009fb-ecec-4957-9661-d95c672ac979",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f1084b4d-1a8a-4490-a6d5-4776e66943c1"
        },
        "item": {
          "id": "c96a40db-3b33-4670-8702-835c411b2ce2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98de51d2-6d56-4587-a4aa-69a324086f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aa4993-f731-4101-b052-7f76f844802c",
        "cursor": {
          "ref": "4cf1f9c4-d987-418e-a918-efb3724ea902",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "68085edd-1568-4e33-8b83-3773ecd92c51"
        },
        "item": {
          "id": "33aa4993-f731-4101-b052-7f76f844802c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cf454aff-930c-474b-8fca-67f0ca60e1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a9ec88-ce5b-43c1-bf26-1c7b6646bf31",
        "cursor": {
          "ref": "c2c915d9-f04e-4dba-9008-6d20390737d4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "59634178-4283-4823-bfd0-5c3c3b3bfde5"
        },
        "item": {
          "id": "e8a9ec88-ce5b-43c1-bf26-1c7b6646bf31",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bd231263-12b0-4434-bc56-ccd75de173e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba436696-25d7-47d0-9851-434ea8eae1a4",
        "cursor": {
          "ref": "95fde4f1-8dae-4cf5-a51f-15858b622c49",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e15a8937-5668-403e-9f10-8fcfad18dbed"
        },
        "item": {
          "id": "ba436696-25d7-47d0-9851-434ea8eae1a4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "783ea86e-7c3e-4dcd-9ce0-c439292d4e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6cd0d9-fbce-4eba-8e5d-71483e4a4956",
        "cursor": {
          "ref": "ceea1f10-aa98-47e9-ae6d-027290556dd2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "af8b6688-aa7e-4f12-83ba-e0bd39ab3ef4"
        },
        "item": {
          "id": "ed6cd0d9-fbce-4eba-8e5d-71483e4a4956",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2b3d1133-3a77-4d96-8fdb-8a5b137311ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745d37c7-3ed0-4cbc-a452-d8a378a08962",
        "cursor": {
          "ref": "5507f92b-a36b-4c75-8d3e-7d96e2c4fac1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "196d0491-331d-484b-8496-2e44ce25e9bb"
        },
        "item": {
          "id": "745d37c7-3ed0-4cbc-a452-d8a378a08962",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "094d6993-34ab-4723-8fb7-bdc0fc775f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529602f8-e9ea-40f2-87f9-613f92b74c6c",
        "cursor": {
          "ref": "b48f7816-8cee-441e-a6a2-10140fd17612",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a8a9a33d-dfd5-4af7-8bda-2e1878ce1c64"
        },
        "item": {
          "id": "529602f8-e9ea-40f2-87f9-613f92b74c6c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "abf6b624-4195-4937-9896-f3601cae2af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7d13e9-9588-442f-9587-e044a743c7de",
        "cursor": {
          "ref": "5b3f8843-43f4-493a-bcea-67676ed97f3c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ffaab283-49ba-4115-9a0b-8d9b2094e4e8"
        },
        "item": {
          "id": "2d7d13e9-9588-442f-9587-e044a743c7de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0eba8ae4-be4c-47aa-80c7-07fa033e2f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298740b6-1a75-439d-b544-cb48bea517ac",
        "cursor": {
          "ref": "4c050487-8be4-4207-a693-66dee3f455e5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "48beae83-55d6-46b5-960a-6e94b5a589ae"
        },
        "item": {
          "id": "298740b6-1a75-439d-b544-cb48bea517ac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f7e5d9a9-591a-4bd9-82e2-82627b979c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5504c0d5-c94c-4772-95e5-ec548fec4e5c",
        "cursor": {
          "ref": "6d053a71-f234-4b90-bcc6-cc13db72411e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "672fb0d3-1f38-4676-b132-32a9cb5fae6a"
        },
        "item": {
          "id": "5504c0d5-c94c-4772-95e5-ec548fec4e5c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ecc8e08b-492b-491b-8e05-142f42c4390b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d09741-cbef-4443-a7ec-2c22698d97b5",
        "cursor": {
          "ref": "835e096a-70e9-42e6-a59c-5d4163637d9a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "47035232-8d5a-4040-9fd6-3e51bafc8114"
        },
        "item": {
          "id": "75d09741-cbef-4443-a7ec-2c22698d97b5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c6d4dc7e-0ac7-4c99-8a42-b6fb13f253d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c226b4-1378-476a-821b-0e9067e23499",
        "cursor": {
          "ref": "26468a6a-2d87-4da9-964b-c08436350930",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c5d1b859-8eab-49ca-b0bf-9e3943dd0330"
        },
        "item": {
          "id": "44c226b4-1378-476a-821b-0e9067e23499",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fd0cdf23-4273-42b7-9473-63cbf4622cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de4339-992c-49d5-984e-1bc7ca338aa8",
        "cursor": {
          "ref": "ab2b2212-aea5-47f4-b67b-8df2d6e7b8cb",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1d48b6b6-6374-45a0-a66f-8927f5f8ab32"
        },
        "item": {
          "id": "15de4339-992c-49d5-984e-1bc7ca338aa8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "742b9095-def9-4b28-bf7b-ba19d01e0249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca012bbf-d0be-4445-9970-f969755f54d6",
        "cursor": {
          "ref": "19e9fa5e-d313-49f0-b944-ef2182a34c0d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "61e4e6e5-d641-4d15-94e9-9f371bf277ed"
        },
        "item": {
          "id": "ca012bbf-d0be-4445-9970-f969755f54d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0daf1685-24b6-4284-96d7-76edac29dc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086d8866-f144-4d3a-b7c8-4dbbd670b165",
        "cursor": {
          "ref": "94cfb1e0-af33-4fb0-bb2a-11008e5b111a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e9319054-bdc6-48be-92b9-eb05d4321850"
        },
        "item": {
          "id": "086d8866-f144-4d3a-b7c8-4dbbd670b165",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b8094f8c-010e-436f-be75-a9f087486a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49adaf06-5e66-42b1-804d-ccc8594954c3",
        "cursor": {
          "ref": "571ff071-db61-4c18-a053-016c8809f89f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f84bcbe3-06f0-4669-88ed-ebbfb7f1de17"
        },
        "item": {
          "id": "49adaf06-5e66-42b1-804d-ccc8594954c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "24ab20db-dabb-4f5e-b857-3029db9b7a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5788ed5-7fd9-4409-aa95-f5ab9b06ceb5",
        "cursor": {
          "ref": "7fcd78bc-aad6-460d-b271-6e70f049737b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f903b1c0-af1c-47de-b4bf-85c169888c20"
        },
        "item": {
          "id": "c5788ed5-7fd9-4409-aa95-f5ab9b06ceb5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "658e9f5a-5211-495f-949d-240014179e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb0ce3-c930-4ce6-81dd-06400fb848e3",
        "cursor": {
          "ref": "3b96104e-4ac7-49ec-98e0-faac03cc60f6",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "689dc919-7e69-4721-9bed-340b7e5fea84"
        },
        "item": {
          "id": "febb0ce3-c930-4ce6-81dd-06400fb848e3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "629778e0-ec39-4a02-b14b-9c4acef3be16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2097cf9f-83fc-46f6-b212-ab77b61f2a3c",
        "cursor": {
          "ref": "6e669843-540e-4acd-980b-677cc41d096f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e8d72a3e-3662-4793-b33b-076a5f56621f"
        },
        "item": {
          "id": "2097cf9f-83fc-46f6-b212-ab77b61f2a3c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "60bcf1c6-5656-4a96-90b4-9b422d586c5e",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b707d1-8b00-424a-8687-550c14cb9d62",
        "cursor": {
          "ref": "106b59ab-9bad-4ae6-84e3-960dd76acf34",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7a00ae46-c112-4887-87de-4b2d237b1614"
        },
        "item": {
          "id": "b1b707d1-8b00-424a-8687-550c14cb9d62",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aa48b3b2-9477-4655-8ab4-2757c30ab5c1",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "420c21a8-cea6-4c49-8e22-0bd12f395c06",
        "cursor": {
          "ref": "b068f569-e3d4-49a1-b88e-69ef76607d07",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4158de00-6b2f-4b02-946e-ef04c26309aa"
        },
        "item": {
          "id": "420c21a8-cea6-4c49-8e22-0bd12f395c06",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a733e2f-90b5-4fb0-9387-4f2052173622",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d628e0-7e7c-4d63-a765-12748111101a",
        "cursor": {
          "ref": "601e2d6a-9ed0-4700-99c4-2cef862e6afb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a26fad8f-b6a9-4760-a774-7b3de24d2132"
        },
        "item": {
          "id": "45d628e0-7e7c-4d63-a765-12748111101a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8709a5ac-f803-44f8-bfda-8e7287975753",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d628e0-7e7c-4d63-a765-12748111101a",
        "cursor": {
          "ref": "601e2d6a-9ed0-4700-99c4-2cef862e6afb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a26fad8f-b6a9-4760-a774-7b3de24d2132"
        },
        "item": {
          "id": "45d628e0-7e7c-4d63-a765-12748111101a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8709a5ac-f803-44f8-bfda-8e7287975753",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78f8609-315c-46c1-b69c-d27f8f73786a",
        "cursor": {
          "ref": "2bf9a577-5ac0-45be-b0b1-c2b61243ff66",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2b768122-605f-41ea-add8-6fb7ef7f8419"
        },
        "item": {
          "id": "e78f8609-315c-46c1-b69c-d27f8f73786a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dccbcd26-9d76-4616-a7ac-2879b0d43d46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf82b93c-7ddf-45b9-8848-85f876be3a20",
        "cursor": {
          "ref": "dfe5df6e-d57c-4bac-818c-41bacd322b46",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "37f78105-cd83-4fc0-aae3-8b80febd7d9a"
        },
        "item": {
          "id": "cf82b93c-7ddf-45b9-8848-85f876be3a20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6755ec40-d196-4f31-8d12-c373cb018aed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}