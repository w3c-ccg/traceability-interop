{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9aaa9c24-c2b0-4506-b40f-dc3e01e621ed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bdd685c0-950d-4c96-974a-73f529d59b0a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eca23e7b-9677-45d8-be40-5c78e85958b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e1089d2-58c8-4476-9766-61c71667292c"
                }
              }
            ]
          },
          {
            "id": "38df3ed3-f6b7-4042-a8e1-3b9b877b42a2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dadc8937-d021-4958-ab11-f4a03fb2636f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14782162-35a4-4e1b-9c2c-ea62f82c0ddd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cedc460e-c688-4dfc-b7fc-0eeec48b11b9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "30113b9d-bbd6-4818-9f86-025ea9df6c4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03fe93fa-1978-48e2-b8fd-b080dae0c630",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcd2f132-f349-41b8-a0d7-a6682c79300a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e57d7340-1598-404a-b496-93d3b96212c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f3e9bbb-7d91-4f59-95c0-08be3698c881",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "189887d3-b08f-49b7-82ba-5112913d5281"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "051a068e-8372-43d0-ac48-8b6b40b80db4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a89aaeaf-450e-403a-9bda-c8e08fc2cf1e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "139828a8-ed77-4a79-b241-415b4611535b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6101fe6d-79bb-4c24-9985-5fa2f742c40d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f3253a5-2c79-49b5-9334-01b2e46d0e89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3592cbde-ef7e-488f-9ff6-ed53266f5653"
            }
          }
        ]
      },
      {
        "id": "3ac06b9f-7f11-48cc-8c9a-e4b450e63784",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3e279970-d0f8-4994-b4d1-fc8ae06b3618",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38b473fa-8393-40b9-85d1-f4b17164802b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73d45cb9-b2c1-4800-a70e-8cc5c8c3504a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9229a610-db46-4a58-8968-d987111e0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3247368-6130-4f2c-af8d-91e70596c899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5f87c6-c7b3-40f2-bb36-d1dff2c82950",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46879a94-9cb2-48ba-834d-a3538be2b40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48334812-b4f0-4e64-8fea-66a24872f271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ce2ca6-e23d-4d7f-a210-737af7fd767b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819270bc-9ada-427a-b886-7eaa98b767e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d1c6bc6-90f6-45a1-8c30-362684e09ebf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e140bbe9-fd15-49b2-8d47-592a1e35441b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f722d1cb-824a-4f44-95ba-68ed878a7612",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db7c1cf-32f1-4106-8ba3-4cbe0654d31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16e1f174-00ec-439d-a8d1-381170371103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f64d2d-dc6a-4568-96f4-6d7e90618e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1585d56-ef9b-4850-b748-f5c9b3166bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02fa87f-21fd-4f62-a225-051516a53da4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624db949-e4ad-4f97-abf4-41aa5336cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab3dd3c3-ac5d-41be-aec2-31cec238e3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8a76c7-74d6-469a-8fe0-a525a31aa90b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d3dcf574-18a1-4e50-a6d6-1a2d3083a818"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e54a5d68-9b99-4b43-944c-856a81925943",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af4ff7ed-e470-46e2-a65c-0c6653f379d6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fabcd93-5880-4526-a081-9da2e3315329",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d97d143c-215c-4cee-b453-a0e83b03b410"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8b01121-fd06-4e33-b684-85539a9a86e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "47f3ebfd-3897-480a-92e7-1c008103f1a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8eca1d2a-c02a-469d-a0bc-e4ab9ae82c8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70a3eb8b-ed25-4657-a57a-5f3557a88c83"
            }
          }
        ]
      },
      {
        "id": "d504cb79-9b78-4c2c-a739-8b7326b09364",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "12d7a7c9-9ad5-4b53-9ce9-6e6d104475ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "927f0683-d77d-4116-83c1-d6c825fc029c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "68a6a0e8-64ac-4aa3-aaeb-30e80c9f84d1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fd920b-ee74-4670-ae01-9b4244ace2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55f1007-e9e6-41a4-b29b-8d766839f558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b33034-a9e7-4e08-8147-b1a60976fb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db5460c6-dc80-4110-b33f-21bb7dcc748e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8354de4b-8253-4f2e-8010-a672aa87f6e6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa32be3-af35-4d66-8f8f-7cb8eb59d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd9eddb-8f3d-4430-ba9b-99a41f6b25d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bd51c0-5b37-413f-af75-d684c86b7958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "125abdb2-42f6-4679-b5e7-530e78318191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f81e51-6d13-42a0-9c5f-b7e9fc142f4d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2527e137-b037-467f-af5a-da64a0ae4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f3f520-ebc0-4487-8c5c-ab9819a3706b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f45ba3f-5c58-4452-9ac0-9316936890c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d4ff7ec-854a-4944-aa47-1a658e5c36f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51a847a-7a53-4f1d-89e9-8acbad2b5592",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e167bb1-3e7b-4c5f-bfe0-6f5d3d26a242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3f4ee1-6ed8-4821-bb84-c073225c2713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7845effe-eb15-4084-89d2-e1df3ca06c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28009837-5fca-4192-9490-a5aa7e560322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582440b5-190d-451a-93aa-7e986f51ed9c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce678c9b-a844-445e-a9b3-b64b4eba5343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597f15e3-6156-4bad-b267-ce662c46ac06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5348ed-43f9-4fe5-8dab-94261ae00d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d9a3dc5-d38a-45e2-8f48-1f863b647813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8996bf61-a744-41cb-9d2b-1b9808105464",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f36ed0-8fd0-4131-a543-e3fcd84c5758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080cbbcd-fb1f-42d2-868f-f32ff92c560f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f0167a-791f-4115-bed8-475df455de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff07e35c-cdc5-420c-abee-988dbe542d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b5d2fc-f5c9-4cfb-aaa4-c23962aaf91e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40e413b-ca0f-4e3e-913d-7351fd1787bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32a432d-78e6-4b4c-bb6a-f03d13571829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d504e98a-076b-4fcb-886a-91780e2fc4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb0a93cb-15aa-4bd7-952f-b58663ed9469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fac7fe4-a2b3-4f80-be9b-93fe4e59e57d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ae05b2-6ef7-433a-90e9-05d2bbbbc297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d121c34c-93b5-45e1-a485-e6a3278d72a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4065375a-a75c-473a-adec-8221754b2bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7222b0f1-49d0-4568-a6e7-d8102f4defe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08afee2-085c-4f57-968e-d2dcbb462cd0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55abfeab-0968-46b4-96a7-9d8e3a1bbbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c369fc8d-3383-4c1d-a996-8ce7c2a91720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9633bfdc-b40f-475b-a4cb-e350f33db306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be3552d6-bb7e-4499-9a2f-8224794ba55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709e43f0-c172-43d7-a9fd-b2b4c7a1760c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c392b094-af11-4e8c-83f2-33d829865b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caeb54df-6132-41c5-b4ca-2a72efd7131f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e90607a-2b97-4364-91d4-8cfe1d8f95c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b971749-c364-4d93-a99c-70fbf962b8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafa08d6-8582-494e-bb9a-aa7836076738",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a14bb86-4f1e-4f73-81f9-905f8bfec296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d28ed5-d3da-49c8-b127-af67ca1a8792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6783ba5f-f911-4ebd-b600-e011776e7253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6cea8db-2d36-4c07-b91f-e2af1dea8214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac84af6e-7121-449a-8e48-a928fa53baae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7209478a-b512-4bdc-a050-fc5633b6876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba5db3e-47ac-4bfb-ac06-da45f5e74ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0969d0-abac-4fe8-8583-1a2ce7834fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "478885e3-cbf5-42c1-bb00-497f88c9dd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7e3b0a-959e-40d4-a440-b7a12be6921e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c595b3-dd1f-4048-99ed-495c04937c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3c6b52-01df-4218-af33-c4cb3894b540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20203e4f-965f-491e-80c8-92904d8ef9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "588f751a-57b0-4605-aa3b-7bc2919119dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45896ee-8090-4268-8cbe-c535c4ef776b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb76c2-af59-48a9-b049-ddcd116f8bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb75c046-c498-443c-bde7-c6540f13b818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b591357-e17a-4d89-a679-5de1b9819d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f1f234-8f91-4f0f-8537-2e92f797957b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd23440-61d3-4174-b47e-054d67c0a5cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a03c2f-2e10-4f39-970b-b98ec70c49cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad32d8d-b034-49b1-94b8-62b79de445f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fcca37-d004-4b0e-80e6-ae7fc1c1a202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f66b38ca-05c4-457d-ad97-c494e9141f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eaa950-50f2-43e0-b2fb-1203f1fd41fe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5c7e67-f18a-4d45-8f50-e701367ea0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb82381-ad89-41f9-8a55-59315c246bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82e3ee2-1cf5-4e66-b426-203613a16116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b6a1c0b-27a7-49ea-aefa-310304120450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a9ee75-96dd-4bdd-92fb-f26b74052488",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0709aa73-c23c-4568-a81c-27b1bd9f303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942eb573-9ed3-41ad-9195-933bc2dbbe40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e056e6-08da-406f-9482-111d0eea5d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c312633c-8c15-4bde-b518-3f673b178932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0f1aef-4c31-4b8b-98b6-2ee3ebb96f95",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07542012-41f2-4afd-be0e-72301b560c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9907e18-48fc-492e-bd65-18638641d0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53677f28-cddf-44b6-b754-65a2a67ac14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb86a62-ecc8-4c38-986f-dd8e35a882b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784594cf-41e5-44e4-98b7-2f0f907ef30a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf708619-8e53-4c7d-94fa-b2625cdc8730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a0386a-5db6-4e9f-bcf6-dc97eec20658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c59221-c126-47aa-83bd-c00bec35dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a20055c2-9f03-43a9-9fab-1cd1fde50182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a720deb-80b4-410a-8dea-93428fef1a4b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fe9cb2-faea-4b3c-8f04-b472e1129aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b37bc96-931f-4e1d-896e-9e12b62da954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810a807-0945-4774-9bd5-34166e79a8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3fbb2d-cb8e-4bb0-8cec-beaf1905611d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a153e3-68f7-4d11-b799-c91fa5c789f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83804823-2fe1-408f-b9eb-2472b2f1cdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8addf0b1-3137-4768-8339-2debd8591654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3da8ef-be4b-45ae-9843-9058962bc66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d83f2b-fed3-419c-a0a8-a14b27b31daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0e59f5-000f-4bdc-96ed-51d79e8da8db",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b54494f-1d6a-4708-aeae-755552ec6ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5e922d-510e-400b-aaaa-523dd2236287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520e462c-e353-4372-ac6b-68cfee643305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e77997-8ae2-4554-8592-a1acd4ae269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14c10d7-b4e7-4575-a6fe-fdb71d878a65",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9412e7f5-5839-40d6-9ac9-c7812fe3fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800798f5-f127-47e2-88e7-8049e615eaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb53b06-d0e3-426d-8396-8efc372e5937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae65e08f-c429-480c-b5d6-ee3cf7727de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c3043-a2d8-4e64-a06b-29bcc0f2c2ae",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84853b7b-77a3-4871-9bb5-e2c6b96470f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379263da-277a-4886-8b6d-bbf300073a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5d8bf8-37a0-4e09-a67e-a39b120eac04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "951c2380-32a1-4512-8c09-73854ac48bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb1e5b-6f83-434a-abe0-01adc21351db",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d1a50-368a-4f2c-a189-91e97448db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcaeb665-c886-478a-ad61-a64477c133fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2560f-3df3-4b6a-bf92-09193764ec4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "786e67d2-ca14-4517-aa06-8149eab0cfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9145e56-6c3a-4604-8c5e-dfc85e546742",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f6c1dc-7da5-4fd8-95b6-0fc60816edad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229f8e22-a0aa-4942-ba5e-a6d93a1af019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b039ff-3cb9-46c8-bfed-f4ed24234868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc61437a-7fe8-4dc6-b6a2-324d76677299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c899fc-fc8f-418a-a941-7b05c7056b90",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9665b1-4d65-4c4e-98e9-b3d3005c23c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ad1b7d-430f-470c-ab20-ab4b185f425f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1334d8c-eac2-48c1-9805-5e0dced8b5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfae335-cecc-4ca1-bb04-7e817f9cd140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ca94f-0717-4222-adef-7a9035f17a9d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3bf72c-aee0-49ed-8c78-bf7d64066ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5897bade-4c88-49b4-90ef-165efe1d7e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93b69d7-4edb-4b25-9ab2-56974fe92675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d54fae5-cf75-421d-be4f-1ef3b835ed63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa338dc-b07b-4588-a637-2c1ffbd68d98",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699faf4-61f4-4866-b353-064b9710787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9827b5cc-f3b6-4caa-a229-7225f18a6569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd81e441-18d9-45af-8489-514968c0de37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d488d8-1558-4c72-ab2c-1f403942554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99096517-73e2-4614-a889-d158e21ede53",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d74e692-d34d-4aa0-9781-e2b7dd2bf7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7281ce6a-b144-4940-a095-b70a9cbf89a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fc9767-2355-4ee0-b3d6-66cb1460817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4838481-b73e-4b7f-b0b1-56431d51e4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5915c1dd-1437-4928-9da5-996dc54e0fdf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7402b2d2-a3ff-4892-a8b3-3be5568835e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5471d197-e469-4327-b9c4-a77bba387903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948b5444-c0b2-4575-b112-d63caaa88f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5e681a-9035-4428-824e-adb3446775da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809cbb72-6788-4e30-8c26-f8b10341b5e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59050d8-4e1c-4699-8385-7df2d436dac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0843ef-1531-42db-bd00-e5fa830b6bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca646ad-f403-4363-95e3-7a60fed8c3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f31425-62aa-4bce-bf6a-43bef3b977c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2532ddf-4627-43e2-a487-fb5163b83656",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277ed82a-9a46-4489-9e0f-34a5c3dc7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61784c3-3d6c-41ab-9e63-262347bffdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788c04c6-b752-4343-8628-eca6ad52eab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba612cc1-d49a-4f80-9ced-87ca352a0b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2bb62a-9cb8-4b4f-a864-6c46812ec7fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adb04c2-d064-4de6-86eb-f34424136386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c277f59-25c0-45e9-90c6-70711eb25e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98107db5-df42-4410-9290-30708b37256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9383f39a-9c43-4333-9675-4818288ea995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0871bc-3108-463f-bb94-1d22a66dd41b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e447a3-2996-4fe5-9333-6d7e7b2e2d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f3f470-ed39-43ba-a239-be78196dbfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08b2f93-491b-4f9d-a64d-37f38961bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "81760219-f822-417a-a3ba-021a28520d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1709ade-7d04-46db-8e87-104aa8a70ce7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2d2607-8207-4c6e-b833-abf072cf18c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6ae8c2b-371c-43f3-af62-cc5138c488b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a343c87-4750-4e60-ab18-ad4be0c546e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b3dd61-bdc1-4a01-890d-282ce2199efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe34170-baaf-4b73-91b1-c04793fea15c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549181df-d927-4ada-8916-4e08dc7b8755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e337a0f-6680-4c36-9c10-87cd16c5528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e48a53-0c2d-472e-9d98-775f8783179b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50715563-43dc-4f66-94c3-ff7c54d95f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0041bcd5-df83-4ef6-88ec-2e4555f94eb3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e35d299-9873-4957-9dd9-8ee86058baf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ecbec4-4266-4837-903d-61e5ee6408a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bae9ff-d21e-4f56-a885-00139063b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "538b0815-4074-4e40-b2be-f14133c49916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c3a5b8-5d86-4ed4-ac6d-85792cb24c40",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a868dd-362a-400d-8d35-f9f2a8d9c9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba22244c-14b3-4985-a4b0-da34c503c803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c8ff22-6e08-466b-869c-d35812e67c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "822c399e-9cea-4579-9730-3f540413da9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec7c15-c08a-43fb-9d11-b70449d683b7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022bb37-b53f-4d59-9022-19a950247ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3fa651-4e43-4cc6-ad20-4ffa9954d4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b962b5-5cbf-489e-9a71-36d3b8efea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b164173a-f530-4dc1-a68a-1895c12ce543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892eda3b-0e15-40ed-8c95-817cc726b5fd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ab6367-46db-4f37-b44c-e4cd356cfca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b396030e-7080-4714-999d-7098169fad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2047bcdd-5072-46e0-bce7-e0594d8f98a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b99fc3fe-ebf5-424f-b0b1-f914b34f09c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ac66d0-cf1b-4cfb-9541-8732b68517ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004e9d88-5f0d-4722-b6ae-cbf89508adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2935512a-6d21-474f-8309-cac40e7bd0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb771e0b-5026-4e37-8ab9-861e36d3bb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "270755d9-1f70-4581-9a71-d998da0c3e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70042ea4-4ec1-4ddc-9c79-0e201b34acaf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b38b3b-fc22-4821-9ba2-3d5d47f6c7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6f535a-ccc7-409c-b94d-d8e9dd55c3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bfbd6c-5ec9-4c38-a7c6-973b5850a9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dae5b2a-a57e-4b00-a73e-a56392f67011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6d87ad-2353-44d8-9fcf-fa86edba907c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438b1157-efd6-4204-9d87-113d6113dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33072331-60cd-4f4e-ba53-a474adfb9fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2146e9-ffe1-48f9-afdd-83505127278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb002694-00a1-4478-b173-adff48ecc533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11132c5-32d4-431d-9d1f-8a57fcd8272c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc72a12-b810-474c-a298-c6fe2701b297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc61e183-2aa2-44c4-a650-88700677d071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806b664a-87e5-4270-bb99-848b12fb5431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d5f901-3b00-4023-bc76-d79751e253a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82893c6f-4226-4de3-b538-87f9c88eda11",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f9d270-7b2f-4359-a6ec-b3944e650f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a18fc30-de17-4e10-adac-dbae83aec254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29ee808-283f-43bd-90bf-3efb780b4505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51804cf3-6f0b-4715-bb78-cfe73b452e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1e90a1-d2d0-4b3b-af5b-bb7f51722947",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecf2015-f845-4fce-9c2d-216feeef43af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d6772b-aab3-4ffa-b578-ccc6bc8892c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca68b2c7-1e86-44f6-b0b0-88f6426e6388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "222250c1-4ff6-41aa-8b36-431756bccc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a86b820-170d-4e30-8374-e6bee1a6c532",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16a8e8-0c06-41f2-958d-1bc5e28fc9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cd6410-b06b-4eb8-832f-e53afbdfcf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c724c5ed-6a22-4665-af9b-48ef116e0d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f476be5-b6eb-448c-8a6d-a9575e7e10f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e791f77-43d3-4173-a46e-2d668519d1c4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4218396-29e2-4f4d-ac65-4a07d96e2681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40d4cee-3f89-45dd-b4b2-49da9fdd3dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd0942-1ca0-41a8-aa62-43efae3e85c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b091040-79e4-4fda-ba30-b04b558cb6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffbbc8a-16b2-4ffb-885a-5d0e6e244d56",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f737bf27-ba8f-4c93-9147-c65d9ce2418f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdc9da5-f4ad-4f42-a91c-4a665c6a0d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021dccea-4748-4f48-9126-8ebe77478639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb9d442-caea-46e9-85bf-728ab19bf587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09725ab5-83cb-43eb-8d75-23a1c1089613",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c9ed3-6d4b-477c-a359-8b8015d9c371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67dc589-8343-4b82-bc75-64418cefcf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2130ccd6-8324-40e6-a083-5f19a0f4ade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "346073bc-97f3-4f89-95fe-46c8532450e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ec864b-0cf9-4c1a-a33e-9237d19862da",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3eb105-a654-4979-9c11-f57bef28706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9274bb-0961-4d51-9366-6799ca723be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb1cf66-7097-4d2b-b984-55937ed0bc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ac126e-96e7-4591-818d-1bc8b0a0c8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afea472c-c3f0-4e87-bc55-b2d25db92695",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147f538b-9057-40a4-ae66-c84642f8cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa526b29-2449-4f22-b9a3-255047e0bcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f11cc73-f218-4c81-8219-ab40e6786b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ee8a98-05d1-4db7-aab3-fa48309272a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c3eedb-6f7f-4146-b4c7-809214fca3a8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1928bf0-84c9-4c40-9ffa-c8dd990a6f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69594d9-8372-4c91-b22f-f882ffa3089d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a2ee2b-71b0-4725-81b5-067063c09640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "975dfbdc-2011-473d-8e3f-fe8ea3c0b59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f402648-5f4f-427a-a7c7-00c9389643cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9590bda-5ac0-4c7f-8c97-a355f4426b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4b3a99-b2ee-4da9-b17e-d590dc3dc6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a3a23c-d322-4b51-9548-661b74011ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f140fdb-4049-4e98-9429-66a776207d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb018a5d-e394-4616-9eee-8801412bea7f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf18d72-2890-42ad-a866-4c9adf002caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51402103-a812-4cf2-9496-5e2939b2a664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3113d05-70b3-42ac-a6b4-3ad4f6719c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "15d6c9e7-8022-4f11-a051-5b766028c5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96459a0c-b318-44db-93ec-c0f3328172a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ab2cac-73cf-4b3d-8df6-cec3939c4d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62de1306-3a35-4072-bc29-df6240aed9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0d2dcf-10d6-4abe-befa-4efadab49201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f22892f-90fd-4323-b743-4a0467081bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f5edc7-3168-48ef-8329-bf3053781816",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f140f7f5-7b84-4f17-96ca-504dac58edc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582273cd-d96a-4266-ba26-ec9fbd81fc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e219c4d2-1166-484e-a718-c32581d99fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c95866-7ae9-4044-8132-4245bb64336e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0c82ed-d52a-416d-89ea-2b7071e90a9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5351d6-2945-4167-946e-32a94300e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576a8595-f941-4f73-a06c-d75d480805a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b3ba5a-fd8d-4642-80c3-8447257316e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fee14a7-2131-4dcf-8885-bbb55fefe078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e518aca3-acc9-48eb-afdd-ffd5f633dfad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89172abc-eeb3-4637-96fb-035efc99f7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9135bcea-c8b7-4cb1-bb88-a9795e2e90b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6fd55d-cb92-451d-8087-0c73440aba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eabb6b0e-ca93-4776-afd3-737d68ec07ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a10da90-0ca6-450f-8e11-1994aa611a54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d14780a-8a50-44de-9d23-0eef4646858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a0d421-ff20-41f5-8f8b-53b87e54d5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aebfd19-0f7b-4ce9-a304-bf8f726bda8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b92332d4-c983-4e33-8357-05c61ccc909c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ac4d1c-4018-42fa-a998-0b6c107a339d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9569fe67-ccc5-4c62-b609-f6a6bb3e01ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f76920-631e-46ae-9a41-c8dc56cd0584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b87434a-5bfc-40b2-b821-ba7e48db288e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b2a300-b6ae-4f3d-8631-83eb5a2feaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1252fad3-35fc-4c1c-9669-7d36bd5404ab",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8743a5-1450-4ea7-9a63-3068fa2ca42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cdf2cc-9868-47e1-9660-f5bf86df81b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c2aaf0-3b52-4a1b-b178-85000e39967b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f3d77f-346c-49a6-9932-43ffa9be1b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfda3742-02ff-476e-ad54-dfa9f7adb93e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa1b5c9-4d0f-472d-8450-bb742e6733ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadde8e1-bff9-4ca9-b0a5-5087f110003a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4a0216-b0f2-4f64-89ad-5d467be78a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69463d4a-6d5b-4103-a8fd-db8009650db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74f8280-b733-44d2-9554-41caff60ff12",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2982a1a4-03f0-4d1c-a814-d2f5f0df7723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e3444f-7fce-46c7-8710-9c411831aef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813cef21-b987-41ff-ac1b-a3f733101576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "283438ca-ce8e-4b3f-9acc-d62e419faec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901d20c1-3dd7-4b3d-b6ff-241abfc84852",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f171c6e-4de1-44a7-89c5-9634b164d409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720f5f47-1a24-4b39-a8bc-9e610cc926d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddad188-ac8c-4da1-a04d-0365d3fa48bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf66924-377c-4a11-a766-a7342f77fbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd5d187-cb63-4623-b315-2535288d6605",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae7b26e-8962-419e-86bf-097290f2c098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d6f3a2-d613-49b8-af75-74b23c9b2d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48fbc57-3119-47a2-b689-2727469d4cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80058a72-87bf-410c-8d30-f89f454d4cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfcc569-4ad3-49b2-8466-e8ed1b5c68be",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffa7695-c0cd-4cf7-8d90-5d84970d5ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bb9271-d388-4630-991a-a985998dd6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d963fd43-29d6-4cc9-b5cb-c277958744c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74280a07-dcca-4f6d-8852-16669e69ec0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65e51e0-f801-41d9-98f7-5762ad93d4af",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d734728-67d0-41af-823a-1a2218bbc3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11138ae3-e1c6-4ef6-9c56-badb52ee0ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa6c89d-1414-40f9-b650-1dd996e6ff7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "748d6b75-37f8-412f-b630-e1e5c672fd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9a5e73-9146-4bd4-9261-695e8ce78c6a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3015f791-1952-479c-83ba-f6a36c3365ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2914cd-0769-4048-9fa6-a0fc3c1b0d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2bf723-1aa6-4b31-af2a-3dbfc4f0f704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbcf092-ade0-4553-83a4-0709c0c6b698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3d1205-d6b6-4ad1-a786-73b00570d07f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30fcf3a-40c9-4437-990b-e2ebfd68e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94b4443-bd70-4c02-8f11-cff6107c5cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507027b4-f687-4629-a48c-b5430fb277a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d70c44-d21d-4353-9dcf-632512c92234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe466229-33ab-4317-8c13-4c7b8101e4c5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4b6880-10ca-45b5-8134-04342a0b1130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c64198-39ea-4848-90ee-427e9baedcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f1577e-f4f2-431e-813b-03d7a58e38da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62359b8-dba2-40ed-9525-19bb8d4bce9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63f948b-e168-4f49-9da9-0a30d8ceb17b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e6a9d5-4c2b-40f8-9f3c-2e20e7a8c4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae10de8a-406c-4ed8-8e98-77e1170838bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b2cdf5-177d-42d3-82c2-76cc7c26daad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a576f8d-0559-44bd-85d9-6f2cd5d46722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306543a5-92d7-447c-93bf-6ea498327428",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94842d75-5ed9-40b2-836e-3b310b01c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7af8b54-0325-4eee-8ac2-66af0edad47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dad40e-5ca0-4fcb-af92-21d951f41aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4749fcb7-5c24-4e45-bf43-5a74543cd6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcb09ae-e438-41b1-98fb-a6f531c3928b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27a6e8-f282-4dcd-801d-7c07a7c5eebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d0fbbc-ca1b-45f3-bc8c-40bcd130c7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8ce1f1-bc79-425c-bb1c-b5d253a3705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05c18e9-5879-4574-a29f-135e09e8647f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707d7949-77ba-4aa7-8009-2684852870a8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68c8606-aa32-4cae-b433-04a489ca7a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f145da-594c-44f1-947f-1502f5a35b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5b9d93-23cc-43a2-bab9-143839055421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59244858-04e7-42f6-911d-7339ca2a8eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90156dbf-1f37-493b-80c3-35505c670446",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f847bd2-34b6-4959-af3b-1a46722855e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2af80c-31c2-4269-a88a-36046ff03ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8af3512-9093-4ba8-a3c4-9103b0b8a383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6fe7ae-8037-4e0e-bed9-3a754c2cadd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aba494f-e48d-47b4-9bea-37a479bf5bce",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d736d48-4b8b-44d5-a59c-4e3572bd5336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c29ebbb-f5dd-4137-9849-1fe463d25dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dc2af6-d261-439d-9a56-c0bf8dfdee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e29ddc3-672c-45b5-9ef5-9635640a9756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f96e50a-0cc4-497a-9a68-cce643b27dda",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dada321f-479b-4311-8c9c-d9730c143221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87993005-60b4-44c8-a2dc-96170182183a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdb2b9b-2427-4779-94db-d1e9fba21b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f14bad7f-4028-4103-8ceb-ef3c4757a594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7471b751-11f1-4638-bc98-986e7c1e1d1b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5f3e1a-2f58-4205-ae37-5df81789ed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89665fb-e429-4363-8626-5d891d03183f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b606b7-389c-495d-a9c3-3524c9199a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "400f2046-75b8-47e4-9bdf-3a5065f119ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7d02d-ad6d-454d-98f2-32b77b809e41",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db95d21a-d09a-4a16-b5af-a169e7bb958a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413fca30-18c8-4ae0-af1c-aa6d89a8e5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd816150-a4c6-488d-a2aa-4232126e6dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c9d2e1-beed-439f-9ef2-2d7dbbdda733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f4829b-297c-416c-a48b-de9815819593",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604130a-d228-47bc-b1e7-5a9781371355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a78f686-ff21-4af5-b80b-dd58a06415d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba79cf16-d011-4819-a6a7-d9c6f73e6a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d96ba5-7824-4e5f-a8fa-7c03a40a709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614204c8-6ec3-4d81-95a6-e5f06bd891a1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704ff71a-0821-424b-a6ee-6b1000dbcbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594dc084-df9d-497c-86f2-096740b5d7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8114bbd-69df-4832-8e43-93114231b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec4902f-6b38-4b72-9b74-d2faf57097df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ede40b3-9625-41ea-9d6d-8b4da2fe9f5a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d038a981-fe1d-47b7-816c-b0fe6bc9421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c898bc0-47dc-4f1a-9b44-38fef9a1432b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc52a30-6039-4480-91e8-19dab45521ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "381815eb-ec4d-4131-978f-a3d5e4eaab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fecd6fd-2702-4be1-808f-711d533ae285",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f19cf2a-9b7a-482c-a442-64fca5b88e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad3ca2a-d6b6-45ad-859a-2b607e1141f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bc42d4-ec01-4cda-944a-8ca4459f3556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15a04cf4-1020-4563-ace8-ecf396fffb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7585aca-d93e-45d9-ab3c-ac2b1cb5a28c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ae323-1602-471a-a18e-db6ba9c3e839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69f40f3-8c7d-4a7e-aaf0-cdd898a46082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcd8ced-a4df-4831-9427-9aba7e5454ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0feb4790-0da0-4492-800b-655dfbb3354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2793fe2c-2609-43b3-839d-db7b9ca2bda6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b1d49-88dc-48e3-9061-84cc4677af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fab41dc-437e-4207-8383-5753505c52a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef8d5df-0d9c-4c60-b0b6-e25ec57edea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c01c3e2b-e327-4d98-a122-0f6b668a4256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e75065-6b7c-4330-9c92-94a1fe3a38cb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fa9f18-6b96-4a94-9e75-594ef7587d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d349f5-257a-4310-9697-c38664e65483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a1718e-27b8-4744-8db7-f6c7a0291da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea86f70-6516-4fb0-b66e-e3789a1ee99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97043be-4c0c-49cc-aead-d5024191595b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e271d36-919b-4507-8a40-51a06198a38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c765e0c-0577-4d5a-a443-5a35c8acbe59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b6e0e6-95b5-46dc-af9e-f208f97a31e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "871bd4a0-7b05-4f17-8693-6bd5c544d51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628a14c9-5cd2-40f8-a0f8-90d7067fba0e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a66ca13-43e5-4810-9585-96be5d178202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eb6b26-3176-43dc-9ce1-08f85f8130be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415a4f1f-d395-48e4-bd99-0eb597003cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42bf1e86-4d6a-4cf2-991a-96ae954814b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11510609-54ee-47fd-89a0-6155f47312e2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58172f80-6ba6-4f89-85d8-5db02864dca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306ab616-9c00-4e32-b28c-70a3e8e0e6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e83071-036f-4b7d-a5d8-062279abb32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1236bcd5-a123-470b-8041-0ac697e731c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f8e646-c9c8-4562-a82a-ef20c0772c44",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ecff07-9a5b-42ce-a880-b24cad5c916f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "58d43fe5-7b5f-4368-8b0d-5689c8ce7d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b571c9d-eac9-483a-a902-52296b232769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a53ee8-2fd3-4596-a2f1-2755bae07dbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15e7e04a-9696-4d6a-89c9-8800d861cd40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f9c4fa0-d22f-47d5-bfd3-b2a27e204625",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d5d593-ac9f-4b1d-a9f6-4d30428f5963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f967c8e-c6ab-4530-8f4a-e812a2f6a5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e643641-f501-449c-85de-d8dc373938ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93c95831-747c-496f-a5dc-541ee52a49db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0664420b-e89c-4e45-ae3d-ec7a8bff35b0",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562124bd-e9dc-4639-9778-ff6627b640f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db1d09d2-2fd7-49bb-8dc2-d92c6fc31ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0436c34-8dd5-4de8-9787-f7becb7dd975",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1291c53d-b7b8-46c5-a553-2c1b4901515c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ea63120-bc73-4ccf-a99e-9031193b65b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a86fc7b4-affd-4962-850e-377a3546c16f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fafb4b37-a450-4c36-8048-1ef71d98714e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bec0ce7-907b-494c-ae11-88ea2decbba9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "766c2694-e83f-4283-9787-bf07b5a37756",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f1d28f4-dd98-48c9-9062-5cb78ed39cb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abeb3464-ff4c-4071-9c42-7c424ba589ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a999c87-2aa9-44cf-b9e1-99e23f7e4898"
                }
              }
            ]
          },
          {
            "id": "0a31f69f-4113-423d-9d20-d47fda6f140b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3569da43-7572-4e17-a31b-38a2028b5b43",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5064ac23-7091-4e54-a514-df4a2e228aa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71ac01f9-fb3a-45e0-b209-417da9849edf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "096628a2-5660-4842-a869-f2500c943a04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73e60801-d0ce-4e8b-8798-414d8d889294"
                    }
                  }
                ]
              },
              {
                "id": "6e5c1d4b-6b7d-4b30-98e3-6b25ac9a5795",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f90e795-a2c6-4ed7-9707-c9f9c26fba42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39f775dd-cffa-4375-89a7-98191d1e6c56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b0db212-50f8-4bcf-9659-c64f0a024f87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6785761-57a5-46d6-9b44-9ad2320b3519"
                    }
                  }
                ]
              },
              {
                "id": "19c2eea0-dd39-43da-99bd-4e32b13acf79",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f16f694d-26c4-4e62-a709-d9461638f402",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7aa362aa-105e-4f62-a95e-862e8ac148bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27ae4ad3-a38e-41af-a99e-dae9d49c9515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8be7c5ae-9915-4f19-811b-9c797da03526"
                    }
                  }
                ]
              },
              {
                "id": "5f6e1c68-34b3-4483-be73-2c1eb03fb47a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "700931a7-573d-425b-ab68-887c2f094986",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6c6b28e-3354-43c4-a39d-f8cf5d534a33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a63371cb-dc13-43e4-916f-4d274cd59509",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8b4b8f39-ba08-47df-8b1f-acfb20f4d4dc"
                    }
                  }
                ]
              },
              {
                "id": "56fb12f8-3897-4a55-8432-adf3f211fad9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c305fbd8-f897-4b66-ae26-c070f61a5498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6db1153-3479-4f5d-908a-8c2a43929360"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d7583cc-9e8b-47d0-ad7e-2d567b3a91a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e16672dc-76d2-45e1-8a86-2bd7071ccbd0"
                    }
                  }
                ]
              },
              {
                "id": "f79ef0b3-65ca-4ae7-8d9c-97eadce2f38b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d47a431-49f8-4f95-bc99-c1dcab948420",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62d8af2d-01d3-4f56-bafa-a64727ad6b40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "decbc9f5-d6c4-4ec1-a781-7acfc48f0016",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ccb12e7-f030-4138-8a1d-76c331d1230a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88cffd45-da10-47ef-9df2-bff5f78f453c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22a7f56b-6b73-4522-b626-400da154737a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9218491-8fa0-4937-a529-1878d0148ace",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "441b14ea-7d92-46e7-9827-b246d5023a51"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19a3960b-163c-4e4f-82c2-6ac528632ac0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "81d6e5f1-4aab-4bde-a05a-6f35c13fe4a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a0ba3a4-bb45-4d97-b1e7-2078e955ab75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8de4f3ea-706a-433c-894f-d225da542123"
            }
          }
        ]
      },
      {
        "id": "2b3ea4d2-6f48-4396-92f5-9c482b70d6d1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "04a7d077-8f61-4149-bfb5-c83a46643c08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9669a87f-95f9-4be5-aaa5-b5490efce08a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "937fbbc7-22c0-445d-9aa6-f0ce535e37ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f38389-ec48-4610-a91e-e24da41f94e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee62405-4eb4-4e0a-a919-cbc7619b9171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399e1237-709f-459c-8e90-76212170c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e427f66d-12fb-4c21-9d52-a339c3a032d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c2d9bb-18ab-4eda-a391-60c2166be5fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed10ac3-90b2-42ae-b22f-c4d57c862c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e582a93-c209-46df-ade4-ad847b1ace65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335f20c3-ba22-4d77-8f3f-5b8003f80a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f62af07f-1bf3-49fb-a90d-1b192a49d0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0432bb-e62f-45aa-824b-bdecab901244",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaf9f96-863e-4475-abe7-9fee9c7d5465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd936379-5cf5-4a12-8e52-360af69be23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8e3362-89e0-4df1-a724-0722b7a6a8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1e2532-f657-48ea-abf1-b96a35ab8d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca40184-6796-4e77-9547-0bbafe0ed50b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8fe3c6-7ef1-4e94-a2e7-aa93c70a25c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a074f4-19f0-45a5-8496-fd0a60da088d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e0a39-884f-4075-85cd-3b4e72abec4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdc3759-f063-444f-99d6-81d90d29f312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9953c777-6fa0-4e0b-b088-ef95ad0fb18f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aea62c7-4f6f-4c41-ae3d-a7e7d6e3f0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1c866e-ef53-4253-bb07-b4effea2cc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a20127d-5472-40f7-8f9d-3ac66f6def09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5c7527-4c0f-4e8b-923a-3c352ff3b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460ab794-07e4-4437-ba68-1d04b73ae1d0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67693617-acfd-41ef-80a4-c9fb8cb8c5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d059542-7108-4998-8075-a23c02a380ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7400687-0f26-4606-817b-c45f3871d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b32c6e-44c3-472d-a0a1-33c0ab0103fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69d5394-7e8d-47b1-9812-606e9d4048ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0a0f58-441e-4b60-ba40-58ccdaac18dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1e6242-e5f6-4977-af3a-52e25ee36d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0874b33-3b20-4e4f-8f5b-319d4eb1d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b37cf9e-5b2d-446a-b787-e09453ef0880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44465e1f-e71f-476b-9de9-9600c92f87fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f3257f-5ff7-409a-b40f-a91f748056e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c65bf3-2f12-492b-96ff-4896401b75da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1186e2-072a-4de8-a73b-3d1a7c3e1850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3d2e1f-4d10-4276-8e0a-549669eba905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c58360a-ae07-488e-8b82-8637af3b4424",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25a2f6f-46c7-4b4d-9fd4-6ff4e3d5540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31329ef-9a0c-4343-966e-e905bf15a393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2b0cf1-500c-47c2-90ab-5306dc5dc70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "076dcae8-5990-4e10-a03b-1a7a80c174fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53f2e5b-be69-4ff1-848c-6c4eb7aaba68",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15551af9-f5d1-4e82-9717-db5e96dd296d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42788fe-0d5f-45b1-97ed-8527051b0547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b509a9-af4d-4014-9039-b5efa43cb949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c165336a-a969-4bad-affb-ed4746075d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994c959c-e2e8-4a0f-84f6-0d61693d52db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1a916d-6417-4043-9937-9828b492e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858b9075-b510-4ae1-b5e1-044028487c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd79cf-9f4a-4e2f-970d-39d0b96c9ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6a4d61-163f-4192-952e-8643602822be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05da4ce8-33d1-4a6d-8e92-c06209e29a1b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef07b80-7e5d-4097-b94e-c1aee4de807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104df60a-4e96-4f97-8271-dbd8e951625f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cd7406-b2f6-4e00-8938-45b748a47975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "028495de-8ebd-420b-9607-af257cd6b95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd70276-7ad6-4221-894d-bf6be6bfd799",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d79a7b-7d8d-4240-b862-6e92743e3e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737e668b-6bf7-49a7-85b0-be0e228e76dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171724aa-2594-4785-b2a9-9a01fa68b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ff8ce5-f2ed-48be-8ea8-1721f158cc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db28751a-88bd-45dd-aac6-cbca9231662e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75bda39-ffaa-4122-9f05-de8e95858383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc588cd-21a1-4331-89b3-1d86d5ee5198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634cc2e6-4403-4e3c-aa59-d98dc3e15575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6ad30b-a7ab-417c-af9a-c99be012a059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96992f67-e569-47d1-bbd8-20707f36576e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e0e610-9816-4729-9066-6c6ad4c52611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf08e57d-9e0b-4fb3-a604-6cc37eeecc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd76af06-d66d-4c60-8173-bc732f6ce2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fb84eb-63ca-4cb2-9bda-972bae0ade19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b3e3c1-5e72-4225-b147-9a0f492de172",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224fdd65-ad70-4ee0-a5b0-782b4a2d7f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792aef96-e90c-484a-bfd9-cf96142f2499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcc0404-bff7-4e20-91ca-ce1356ae39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dc4b36-9a19-43fe-8125-e5df10c87bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d48839-c74a-451b-aff1-a9e20439384f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6564eaf8-f378-4edb-875a-d47d8a3468f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e540caf-575c-4b74-8750-182eac2e61e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df751528-6de5-40d4-bddd-5f867a11d688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18d68be-d84f-41d6-ba3a-0c091801b3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b6acf0-7420-4637-8aec-3d0e5c3a99af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb3045-3847-4446-a62e-792314c8857f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7486a2-86c5-4e72-9b8c-41488a998455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b10be75-0a68-4486-8f26-96f157fe5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e762818e-8a14-44c0-acab-37eda14a43f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5125f8fe-94e9-40f5-aa5a-55a87962354f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b97a3f-5b76-4844-834a-27c00d680b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a31e0b8-b7d3-4513-a363-768398575d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c71e2b-2413-453c-bff1-5e58a4ba40c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3157fdf-be06-4b28-94b3-d05863fd7d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bb90a4-13b9-4b2b-b28a-186e97fb2345",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600f01a7-a263-4c05-8048-d4494957715b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79e2c89-58c9-42a4-9d57-10ad67818918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea33e01-ca46-42e2-be69-a8e42fb76b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "253261c7-a042-40d1-bd5c-007c6eb79a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d23ae73-87da-4cf9-8434-2a2e6ec4df4d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe4c066-8671-4dcf-b7cb-b93f29e7256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184af1cb-87b9-407b-981f-ce469411aa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df00103-7d8f-4527-a30b-0709f4d54f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9af38a-8bf9-48a0-9b69-3cff04b26b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b6dabd-3a49-4b23-94d3-a69e8218a19b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8269ff75-db72-4d97-a117-d8b3dbfee6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6249b8f7-46e2-4c06-9c01-4aadbbffddb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b346482-ca22-4906-a83a-fc246881c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da161fee-2762-4994-a329-8f29886beca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969e11a7-d6e3-40b2-af81-ca4e27d29cbf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fe06ca-0c4b-495e-ae5f-ad212d990334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb6dd4b-1f3a-44ab-b993-ea8b7e2b3dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c5c22f-0c96-4d57-b1e2-752abede1bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb9888f-b905-48ad-b194-55b148ac6db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d02a84-11c1-4386-be47-d0acfb2784c2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d63b8bd-c01f-47f9-86a5-5dd288df2c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db9c1f6-dcb3-4241-af56-a27f748f7ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a02b693-3fdf-45c9-9a56-5d3c00dedcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ae59d8-7145-4eba-89e0-febdb589814d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a86384-619c-4073-86b2-d8ec081d135a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758d71c6-3f4e-4a77-a791-e3ff70372965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc40a6f-e7a3-445e-a3ce-ae5411894174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f760e3a-adcf-4b0d-b5d1-0a8c49906697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45a06cb-bd90-4553-a2dc-b72c1ad17bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ef469-6e34-48df-9ecf-22d7f0b5dbf3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cbff90-cd9c-4b3c-a68d-cbca240f5148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5007ecb9-e278-43c0-add2-3ddd7ebf3c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ff079b-80c9-4daf-b288-c526a54e482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4c138e-6c9c-4b3a-a35b-4a34733a3886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef6bbed-c94c-45e3-a5bf-1ce505c9853a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5af2144-8923-4260-b665-360f76391c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce15a1b6-4258-41da-805b-c8ff7bfd12df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e71a26-c316-4dec-b38f-51d4640ca932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a9c248-d7b9-47d8-b928-c5062023b5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a453004-aeb1-42f5-8d1e-1faa3a27db2c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81ff638-5544-4b34-98a5-3702b8015518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c26cd4-3aaa-4422-8dac-2a88b960b338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96a0b05-e57a-4eb6-9ac9-6ee08106622e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd94ba4e-e8b4-42f4-aefd-b3b91cbd2463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bfdac6-d2d8-4c58-bcb5-62c4fffbe049",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f2317b-5b79-435a-86fd-397389757ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e81d99-0e8e-42ca-9b99-bdceeaed447f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36465b9-1a4b-4b30-bb96-5be6424f24f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ef63dd-c831-4d3a-acfa-5027fbd48848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813268e0-ffe0-4f5b-9366-b01bee4758bc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e13514-bfb6-45a3-ac7f-03981624a53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff36a203-6f9c-4964-9134-ea143f60a1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebbb69b-600b-4d53-9bc0-2fcdc60911b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "531447d7-6ffe-401f-a708-51cd75fbd76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e77cd0e-f293-4e92-bb33-2444d741b307",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218ae374-702b-457e-90e8-885ca93336e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f64cc3c-c20a-46ec-87f2-d34dfa421baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7116c5d4-6fa2-4214-af7e-0b71af6f74c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07aac0ab-b104-4ce8-9e52-d592dde4f74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c85c03-1137-4d62-a404-5f1b747ce369",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44152805-4f45-463a-9765-97096c95625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cfbc83-666f-4297-a3d5-af2d7433f100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b56074-ee07-4b1d-bc8d-bfdd1b1d5872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d53fddb-185f-42f8-8bc4-b0956665194a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e73a7f0-fae9-4dc2-97fb-20ea0d904693",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dd45643-5b53-49ef-b563-ea100115b3a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1d3fcb-c5b9-4506-9a62-77f1d261cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca071d09-f53b-4130-8e44-30a7914455fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459b065c-9d03-4755-bd3e-6e1a930998de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2bbbb4c-ba6e-4a66-8bd6-3899c70d4786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa411f58-0eae-4b39-afdf-b0a0487f24e4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30419451-c67a-442f-a7c7-ae3289c6c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b93e00d2-0476-4499-9360-f9c3ddac71fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fbec27-848f-4bfc-acbc-4996e9e9255f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93948e30-92ed-43d3-9b47-d7bb27868b4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "881055c4-9dc2-49f6-98f5-b7ba0cedeff5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "430cef36-a1a6-4556-906a-8d71188a9457"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eac7c08-4d1d-45b8-aef1-e11fda01e058",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6704aad0-c3ec-4a1d-85f3-675d2ee08e81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4787fe3c-10f6-4af1-bd39-6c3491f9f9c8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95cd33bc-c584-4eda-9053-43eeea2c1f86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b920145e-46c9-4f55-a782-3f6ae389c244",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48b3200d-4deb-44f9-b2e8-583ff3df2236"
            }
          }
        ]
      },
      {
        "id": "6c985f52-5d69-42fd-9165-8e8dc44c8708",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "41b47234-4e1b-4a26-84fb-46e533b9ec77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e31142f0-37f9-43ec-8e9a-fe50427f2723",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb99c891-a37d-4068-9bdc-c7ccb618e24d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0103a316-f1e6-4126-b05d-f44759560c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ba1c40-f250-41ad-8151-6c1a2a62a806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e469a6b6-1f9f-45fc-9652-b39fc113a7fd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48ca1d8-b1f2-43f6-8e62-768160d90769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a51b6d-cb3f-4a88-b97b-4f225e6f101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8665a1-cbd4-4c69-b903-c9aa9bc9f270",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1ccfe5-3ae4-4ae9-8541-abfa1464f099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa8a599-505c-409c-8d4a-5eae10cfa605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862f7b78-bd0b-447c-8726-78a9223c4a50",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68e055a-e73a-4bf9-b145-244ab8685918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8634168-d5d7-44f5-b676-bcb10bd55950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68b7e6d-0d40-424c-8e73-8ffbc4851c03",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7988190b-5f53-4729-b300-228083135730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6a035e-d880-4cb6-91b3-2a04a8d16be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d686a46e-09a6-4d83-8e81-964f534ec4df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b903b-ee47-4630-8441-0bb58df6390f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1f3f63-47ca-43f0-940d-790e08144b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5a33a2-9138-4ee7-abed-b4f9b987872c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f12ec0c-2148-4dc1-94a1-757a9eb791e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd0ebb6-9a06-4df8-ade1-d01213480896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af2fa23-7c11-49a8-9c8a-85ff2c648b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d71eaa-cb9a-47c0-8fee-f88584b03f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad4f78e-ad33-49e6-aac8-1347480b9ce2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed917636-ab7b-4ce5-8371-942cdee7179e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e6c800-7043-43f0-8298-3fd14193465d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e5838f-9d3e-47db-9c93-98de79a2b5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9be1aa-4a27-4e7c-9b00-3e421019bdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622dcf4c-74b5-421e-9311-0ebba79848b9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e863426-92a2-4515-8628-c7f08e3e6c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4b209c-6018-40d1-98c3-a56ece8385ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bde0567-8490-4599-8561-fe497967b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c538bf84-0dbf-40c9-adcf-d0507e658fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dbd2bc-3806-4ee2-9ea9-16344c3a0834",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fbf237-08c3-4732-a37b-2ae4779c0514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d3f4a4-9c07-4f1c-bfd5-bed0bc569ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cf9d85-dc5f-488c-93b7-997a3bcbfa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2382564-3adc-4ced-b871-b9083b79b39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00bc020-371e-4ed0-a833-1c5be705125c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc30460-811a-4b2e-8bcb-383e98392ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58760276-f89e-46a9-a490-02af97d1a8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bc6ddc-62e1-4f23-92c4-651879b13c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61820e80-1538-417d-b615-7d073dbf960e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eb9cd7-68f4-4d29-a60c-b32b7753058a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33b0efb-a633-42e6-9c89-7ea63cfe7c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435a79ed-643d-445e-a672-baada9a88f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0354efa9-6f20-4a85-b756-ee782260de91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d732fd73-5933-4075-8013-847adf268ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3063a28-f236-4568-8bfb-b24cd1747c7e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d584d47c-209b-49d4-81e2-49461beb9072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7769801a-1396-4f1a-84bf-278f9ba02e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302baebe-c756-4c2c-b92d-c0c197226e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a0e0d0-ac5a-4517-a62f-8d2652ae0a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7187ce8-9f81-4985-ad06-ddefd9325f07",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19625487-04c7-4cb3-8053-3a870c110c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b003a786-998c-443d-8a5c-30132d60ac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a733c748-8fdc-41e1-93cd-12ecea1c86ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180bda01-2dc8-4465-89b7-749b876060d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e973d84-c4ce-46dc-9bea-0e785c29b40a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d97768-9b91-4a8e-a18d-458eeda659ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9e43b7-a8f6-4d32-b72a-7f9c06c8a84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a80f11-8b3e-4983-a2c8-5f59cc0ec26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b71fb3f-8b8f-46ed-96eb-a1f606e49871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529fdacb-d82b-46d1-b059-a93f7d754b0b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e56b1f3-4a97-4a3c-8b3f-d090b06b8dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa183986-0923-4965-b7a8-7863c27f2966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea5bf57-f446-4d3b-b623-191cfa71f0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823a9618-382a-4588-ad3f-4e0d25b9990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b626dde-59cd-4b32-a1e2-fa4e2fc770ff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9128254a-43f8-45a3-918d-0b016f2058e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07af5cbe-68da-4671-b262-441e8e1b4a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b75107-adc7-4e84-87da-8e5dc9bda65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b765e8-d5f0-4ec9-9d02-864b7d3f32b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006144f1-a0e4-4b71-93d6-0da91a6fd4e7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67843bd-50ae-4083-b677-857bf26c0f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7112a9a-054f-4881-a860-b2ea5fce03a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd34c37-5d6d-4a13-b5c5-8ef9057be3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4217a664-6263-4a53-9286-783de941ed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988c908b-6755-4ee8-bfd3-7d74c800f2cb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f6e426-fb13-408b-86bd-b383a10e1de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312a3574-df65-496d-9715-0152064e84fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5278dd78-d95b-4b34-ac36-8dfd98017211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750afccc-aa8a-4e61-ab5b-e13d52bc1a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3bed82-de71-45fd-a3d1-5707f4f96cb5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4aeeb7-f471-4483-83b0-e7728fe46c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cc7658-aa9c-4c2a-bcf1-6eaa382f259f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96bbab6-80b1-4693-beb4-2b82ced7618a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f1e8d9-077e-4b41-b7bb-cfc4dd0dfc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15e3a4e-dce9-4a25-92e6-3ced1ea938b4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da0e2c3-5669-4beb-80ba-004cace38f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ee9f9a-b819-42d0-ba42-5a3d85ba9bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1df543-3657-436e-acbd-cccb63a58120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679ebafb-5f96-41e4-91cf-34a4cc77ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ea044e-a8de-4f57-82c0-65aba6cba59f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30d8049-0146-4adf-b646-8e4d8a8a0399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea17409a-158d-4e94-96e0-b9119736bac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9efaa3e-63ad-47c9-b371-7b3c5294c504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd10efa-1c4f-4e19-b98a-8288043c0729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80f8ce1-f09c-4f03-9eab-72454b40ea12",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b246c8-7321-43a8-9af1-fcda7bea1d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dd330f-56a9-4081-96ac-516be8598b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f85701-cd8d-4b67-b9f5-69fa6ec7e533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdabeab-6877-4f87-bc27-bb2060535d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d2b635-877c-44db-8708-0ca6a49c2245",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbffb34-22a6-44ad-94f8-2f859738f669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d0009c-7ad1-4746-8d00-787c26239dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c937ac69-a365-4f5d-973f-3ea65622bb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c67e440-c3bb-459d-9b37-4d791600f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273772e1-0d54-4d42-9ab0-4112433af4b2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1237819-94c2-45e3-9c29-830e916ca44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807484a0-d585-443d-9d7d-ab5a11461aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0382ec9d-9987-4249-bf2b-c8de50d5c2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ba5936-6d49-47f6-8c14-496f87741ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2836cd5a-eff2-431b-974e-13aed615537c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76b11ce-bc3c-48d6-94d8-433ec2f3202b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41dc62fd-5b20-470d-8de7-12cbd766fd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b496a2a-a5f7-4667-8d42-b863280faa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4db2ce2-e128-4fe2-b6c2-7ebade05eaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c415a0-c037-45b9-a870-9673debf1062",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899fbf49-08d7-45eb-9f82-fb1615e8d367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea281891-07c8-4ff0-a423-d62821bd4aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e9c111-8e78-42c4-80bd-ebb6bb2bfce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24f95c4-115b-4417-82df-b5e03b2166ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6190f4f3-2802-4636-ad56-df90e1a7b379",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e05c302-d50c-4e80-a9b9-09909e39db5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c031bf8-5eda-485c-800c-cb0697e68dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb54d1c2-5ad4-4c4c-86b0-734cf2fad359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251cab04-dc13-409e-9cb0-34a45e76e621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289ffd27-f2a6-48b3-942b-7144044cd096",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae7672a-c30c-40f5-ba0b-e50ba2a3486a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2135a62-05f0-4f0a-996b-806ad3936010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb165a1-1bb4-49d1-b257-b53ce287725f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613921ba-f2ae-4ca3-9e00-72d953f34907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40af30cf-617d-4eff-b735-1dde0805f8c3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79014f0-9cd5-4b19-84cc-674a6cfb3136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689e7e77-892a-48f1-b1d4-0ac71542ae89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf7fec6-bc63-42bb-8dfc-593a219bccb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72138ccd-7057-45d6-a9d4-3e31b8b89ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eee750-2463-47d7-8827-1ff083ad3cfe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb92011-3bc1-498b-8c49-1380ad5b10bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82012605-f54a-4522-9900-00253b2f942f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1d73a5-cfa4-420e-b372-3e97718d4492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a1385f-f733-4617-b914-9ad798665cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38845612-38a9-4d52-aa50-1a898ebc1067",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acda48f1-dc69-4376-9ed2-e8f69bfdb36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1e3af2-3019-48eb-91b3-aa70141f3cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4eea54-94d9-4d5a-ae97-af6929ba2b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a1d9c9-9825-4e9c-bf19-7b18363ea85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a632bafa-6acb-476a-ab64-b4d9e0eb5015",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc6a056-b68d-421d-8c4f-2d71ab758eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58024465-8dcd-4489-908f-8e3c5a17cc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9290a5-f051-4141-87e6-4319e4ae6ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b608c6c9-d418-4484-9a2a-f551b824da33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44905f61-6ecd-40d9-add8-87dd4af44a72",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b5d18-8e53-4426-ac29-dffcb5b79445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63f8685-549c-4329-8848-ba8cab5539fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b7fa9e-96c7-4f10-8d98-22e9476f69ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9b3b60-4f99-4ef9-9ac4-291a418971c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a51c0e-33fe-4561-bf96-43abb0cecf15",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b26e81-1c34-400b-a432-28ac83bfd180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907a6ce4-43c7-40d4-a91e-50ec37faf84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c80841-76d2-4639-8868-b8520a6c1b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c98206-5077-4710-952f-9d0af28f8f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34c180-8110-482e-9227-bba7bcb6bc68",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576e69c3-7086-4aa0-9793-ff6a8d3fb2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c85a67-837e-4dfc-9aac-343afa332894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ad00be-a12b-437f-98b5-c31e8f3b602e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dfcecf-5fe6-4491-a7fe-5900a722ec82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fee607-523c-4e01-a4af-fd687541d528",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34814b5b-7368-435e-9d7a-9aadec88c6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83736f27-3ff2-4fd4-b97f-628750a9c582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5806559-1ddd-4860-b444-a44a2fad28f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935f302b-a885-442e-9974-a3fd4440729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fca7831-853e-49ab-a337-93bbb3f69db9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93b02f4-5a91-4e67-8310-605c16ab0b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c29d3d-9058-4da6-bf2d-324477050ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94620c-4644-4826-a4d1-5e888e4af739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9396f1d-dc4a-4ea9-8888-26ceb72f1dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f53a053-7c04-4e46-b293-4d37479a9ee6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5110ae-55d5-4fd9-8754-de9f2fb8ddc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677d66b7-e629-4896-ba19-d25f834bdda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd669f0-88e3-40ba-8148-00fd9edbb998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54868c0b-91f4-4ab3-9a55-f4dc76ea8568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9fa65c-e342-446e-8a96-2335c9d6f62b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7128fa29-2919-4c93-8420-f1fd8110473d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecb730a-acee-4cf2-90a1-416824b683df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d9e71b-fbc2-4a4c-b49b-8e1fdc41a14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4efe44e-f694-4443-809e-5f759e59599b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e47aaf9-e5a7-48d4-87d4-6e960575795b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfe8620-b655-4c2a-8216-862dbced4379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ceaae5-0f11-4231-b521-6c885128cfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f40f87-8efa-4f89-873f-0c8b8d5d7e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c355d352-f88a-4532-88cc-41853c8a17cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c189baa2-663e-42cd-a093-64994e25a7a5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c29c7e-20bc-4612-9143-cba66e6c704a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26b8c78-3895-44b9-9e24-94a21b9f528b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c9b54c-0ca3-4f29-8a1d-6c815d9051ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff63f329-bc9b-4f47-8eb0-769e9f5b030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17acf5e-2c1f-48d2-b88b-391a165e2a49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b073b55d-5a0a-4066-b30c-fed05b6d308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51b03ec-b1c7-41d7-9426-6f3653afbfb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b339cf-804d-4b97-b4e3-734dec57a605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c83e381-dc19-4dbc-9d04-e838a7f3d299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db115fc-6231-4001-934a-0f646210255f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386b79bd-08ff-435b-8f7d-f3aa893b5b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fb9f6c-4bc1-4262-b8eb-ebcdeead8f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb47a7cd-be74-487a-b01a-f5eb08bc5a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b330fb5c-344f-49cc-9c33-4d9964a3c3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324dfc3a-fce3-405b-9767-b1b49079d4db",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39227bb7-10b7-41a7-9849-26634ca0c82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c0975e-0c83-4e93-a76d-2a2a76a404a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1abf6a3-f392-4989-9e9d-64f9f51a96ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11755494-a383-4997-a2de-3d0e69ac09d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f66458-6e07-4b3d-bc88-d258eee52b93",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9293cf2-08fc-4998-bf44-26f2e4f937ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb60f45f-85dc-4946-ad5e-0c58790310d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2531935-2bb2-45eb-85c3-5fcd77d207b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83e18c9-5afe-40d2-b9a8-45b3d0ec6047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae581698-0322-4dad-8feb-a7f80d72e18d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8582032-d59d-479c-862a-26143394d756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e89f40a-29be-485a-8240-42dfcafcf0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b79b3a1-85bd-4b99-bde2-68e84db9c416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60f2361-7043-4651-8698-fb0e285aa14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e38fda-b276-4aa7-b3fb-affdf77d5fcc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd6e811-fc16-49ce-a400-17cb21b7b606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c501e43-fced-40a8-8c87-daceccae49e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2eda97-ed9c-4cf7-9b49-244f8b908020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50950d1-50d3-4df8-8620-cf3bc75fe9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562e3e3d-3db0-499e-a536-6e10bd70f4d1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c612f7e9-01f8-4cf5-adc8-cdeecc72e443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bd1636-9d37-49f5-b974-afc58ad88270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af1f0f5-06aa-4d1c-8fd2-98fed89a06c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3f155b-73b9-48f2-ba06-dd5b561b9bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6609b00e-8687-449a-93d2-e5983a43a993",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c03c5e-55d5-435e-b5ec-233f65c313fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7f532b-2643-42b7-9c0f-ceaaf6bed58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b282c723-6f10-48a1-86d5-30f6ea969f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd93349a-01e4-4cb8-8dce-5e781b67ef34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b1ee1b-80b1-45b3-90ea-c1c4d794b63e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144cff09-8ef3-4bb6-9037-36d5282440a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315e3103-53b4-4b4e-94c2-3b30da3ba7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e178221e-2e3b-403e-94aa-524c99f32bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eeca5ec-5063-4fcd-a8f9-60539b289a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d82a287-ac84-43c4-ab9d-da73f633e7be",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe9e158-7bf1-4884-860f-598d72f2d9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b80fa91-5df7-4b5c-9f7d-86c363318135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80dde7a-e664-4d50-bd07-dbf9658fa615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacd16fd-61b2-41be-a02c-346e2a0dec81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088e2e9c-6ea1-4ef4-83c1-6664efc627ea",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eddffe-1e19-4f94-ab73-5c90a414a70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f818ead-669b-46a1-9af4-3111532bd0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b7f5d1-87ae-41a9-8cd5-30daea593126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13ed5d5-bc0a-41c2-8852-6b53634a1cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c70ddf-d877-42f9-80f8-f4575eef783d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21d05de-a35a-4001-939c-05fdd8f78544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5266afc7-8797-4f6d-b4d1-e4e041991084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57240f25-4ce4-4a62-9908-24b2895c70ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c463481-4bd9-4dc7-bdf2-89924def30f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1bce29-3c49-4e4f-8826-6204380573c3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9e5ea2-1b5c-4c1b-b50f-dea9fd9b36c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1ffd14-d340-49a5-b529-1b2170c97301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3900ad-8d62-46eb-8e9e-d16eeccba53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e50c1c7-7101-4ef6-8d5f-c5f6157f71d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9480f5e9-b984-4708-8829-c524c3badac8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028dc706-d937-44a4-b525-08acbdcf3c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f72a21-9345-493d-8ad3-ceeb254d04ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c2be8d-3c17-4b3c-984e-ee3c82ae4649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f7ebf7-5f3f-489a-bba3-a4c543bbb6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c4313a-8432-40e5-8b7f-28adfbc71ba7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bb846a-6c4d-41ae-8e10-104843e2c313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75614369-ba03-4063-997d-0637e642cc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdb78e9-374c-4b8e-adcf-3d1466607e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8545b258-4e02-43e1-8750-e22894f62c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e918cd79-48ca-427a-b565-f0384a657a37",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a6d29f-e02c-49be-ba57-0c0d191401c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c8b698-2792-4e7e-868b-1d6e73b34c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9b60fb-d166-4a93-b9ef-56dbe670f33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1445a059-4cf8-49a5-9234-a8ee91052f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5f984d-fdab-4e46-93f2-e91b7e9be2f1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f40622-7bcf-4d3b-af6f-34c16af13099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62640f3-0cdb-42e7-bcf2-d8f64b0315cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c9be04-ca91-4237-a547-2a8b8bc04951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb2036b-8d0c-438d-94f9-6c777bfa4648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953b1f0-cea9-4f87-8a34-2ceb0b6ccbbf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66572f58-bf81-48f3-a2bf-b642af0502f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6147e721-1b50-42be-9625-1af0a7c238cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10b4dbf-64e1-4bfe-a954-b097478ac455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbac178-0bbe-4888-b533-fc653ad256a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e48916a-c923-48d2-a855-5dff67c172c4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6fdf57-b05a-4721-afa2-98630a4a1911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8ca347-db5c-49f5-9803-dba8b6ad9163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe1aef4-4797-4382-94a7-948c333b275f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d3d3f6-5c02-4974-aadb-f8757c976e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68ddc69-816f-45e2-b709-69cc61b9d96e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcee025-3047-42c9-882d-b756776018f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e095319-be1b-4421-a517-695018785da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfeefdd-6106-4990-a4e6-6096d40fb0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91a08c9-9236-41bc-83d4-5581ad5399b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77790f93-2dd6-4d7d-9f2b-1c4c0db360bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c786d9-8958-4672-88f5-0ea37f985012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bece37-527c-4d68-926b-473f3dd11e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa8cc2c-34c1-480d-930d-f4e080825523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3a100c-a6d6-480c-8551-53d0aab3cecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3262a1-c894-43cf-bdba-6a0df8e02200",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f79cd16-6f68-4b0a-89c5-5e29ca4e4eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bcd66a-eb67-46fe-b757-2d9a28083d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5675ad-1a7a-4cd0-94af-7282524c573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fec89c-7603-4b32-a380-909ed4b22c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68589f93-db19-4578-abf4-5935132bc33d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c53a2f-d44d-45b3-96bc-d600be06005e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea724857-f64b-4e2a-a633-00e5393e3c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267d0f83-fa03-447c-bbf7-e513f9ba3855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525e0a2b-8fea-4f1d-8d6d-58a1427a26c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73005166-17ae-4948-bb91-5b206da23330",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5331ab2b-8a63-4ec8-94e8-8bcda2d6047b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28559825-0195-4711-b617-9687908b568b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c26acc-c6e4-4790-82c4-c07191b74dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9ac69a-b431-48e7-b76e-c25dbd84994c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef6487c-6181-49c3-a9fe-b07bed0522f6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244f2f4d-4ed2-4d95-95b2-fb6cf8f66254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c745c6-2733-48c9-a228-a32a704f6329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6126f2-3178-4361-8b56-6c2ea3e83672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1721eefa-ef40-4e54-8c68-9c3b011f919c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8296d24-9361-43c0-84ae-001020a96444",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b75aa54-6b0c-4c03-957a-13d610035128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c23248-feed-460b-b0a4-a7871482255a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc7017e-d8e0-40e0-98e5-6849f8c177c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cbeba0-1709-44ce-a6a7-ec7e52135978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e37608-533a-46b7-9f58-4a61863582ef",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99823ac8-a3ff-42e9-97ef-ee7c975ea115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52717df7-6b62-407e-843e-290ac282216c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e529bcb-9689-4b3d-9e40-cc008364b115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d189c954-9aa8-4199-931b-6500dacc8508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06942d6-c45a-44ea-a503-3c3c6843b7a6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d0a03-155d-4f7c-ac78-62adc290bdba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00707330-44ea-4411-87ef-60c473544aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051ae02d-3ebc-4add-8768-2bb2227a2726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415e4dea-8735-499d-a474-67ac3ce52b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e60a671-1763-4ac6-b0e8-9b6c994b3616",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f470ceb-2617-4491-8fe0-dd3bd7928ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f60684-7002-48f8-9c9d-4f3c39d46e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0450fd-7fbc-47f1-b6f2-0c5fd408b501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a40c548-ed4a-4d58-ae20-45d68a3c0f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712c2c0d-482a-4059-897e-8db05da0e1c6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d546fad-9a9e-4376-be74-5dc6898f0a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd831986-8016-4742-bbf4-784d28af8ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68e4e7a-d5f5-48fe-994d-74b71783caf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ca06f0-b674-415c-becd-5b2eb5d1c54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0ea560-7150-4bf9-af16-cad8bd8c3aca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f91b46-b4e9-47c7-9f04-0da50f32f51e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf7d480-0564-41fb-9905-8c14db315b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2eae65-4c4f-46b2-991b-ab6b3d5936be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafbab75-dbcb-4657-ba6b-f1a1e958d7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d851d242-66d5-49d1-985f-34e8c3220cf7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611bf7de-9180-4f0b-8961-c13b31e35481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70157f9d-ec7c-4e9d-ba0e-653766cba661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b16e601-4b3f-4f9e-9d2d-0f538487cdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad57b94-fe8a-4287-96ee-44ef14809a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d876150c-f5ce-422f-af71-16016045f908",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68d9469-5a8d-479a-929c-66aaedee241e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbef9c3f-f499-4a91-9e51-503b2b2fe155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea2c98d-b5b7-4242-8a33-0ec2e5352562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05718c04-2611-4ee0-847d-641214a117c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7c301d-30ac-4f78-8800-c5013d677594",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824ebae3-d087-4711-903b-ae01368d62a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d73db08-24a6-4458-85b7-1b2f64b14ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd159a83-b46e-4dce-b419-4737fca5c339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a55cab-e201-4b32-a7f6-698a4e151dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8f564f-9ae0-4247-8b25-a537c3e15706",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1955d4c9-6e84-41ac-b273-d39c0246b191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987272b2-9f31-4786-9bac-71c210dde3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d6d404-e5b7-417c-a000-e043f1edb59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e78659-7680-4626-8bbb-4c02be76e630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d943d7-500f-4e03-bd67-67c4e8c17ed3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95192386-0219-4fd1-8047-9664994bc627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3774c52-ec31-496b-b601-cbb5fe80d55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24abe2e-2ed4-411f-ade0-c4e4f3a8380f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c56e120-668f-43d9-918f-073586042b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b42303-904d-4dc5-b022-cd24c2a5556a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5ef0e4-e289-4e1a-95bc-026e284c4f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e22060-ee6c-4222-846a-5120a1c11d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de14fd6c-a0f6-4aaa-a4a0-63eb0ccbf483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e64e973-528d-4037-b443-aba0729c7f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a371a18-beaf-4d9c-abe7-6518beaccb39",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238cedea-359a-43b9-ab82-9be583ae2cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4d3cf9-d275-4f66-80d3-77308bee6363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75087122-18bd-480f-afc6-918f02722685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca6c013-96fe-49ce-8961-9c8b28e96193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87fb978-cae7-4c58-a9c6-c048ada1b5ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f80c23-73a6-4477-b8b6-39d744118034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2616bee7-c287-4123-a038-a85d3dd79422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6480c2e0-544f-49fa-93e1-8484f67a537c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8b177b-6e14-428a-9c67-72ea13ee0495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2580cbd7-ac0d-409c-8fee-f450e543650b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f6e58c-3cbf-45b5-9072-fa5313971c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6e0483-8888-4ba1-ad36-cf5eafee3773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80904b07-2273-4b57-8488-413237e64434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d25be8-6fc9-4cd0-a246-b1ade1f98975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03d271b-b965-4702-80e1-f237103de72e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d74e4-fc8b-4e72-87ec-6cb0579645bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c120612d-cf61-436c-ab33-b914f321d522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8089028-8c14-4463-93e9-42b68b1b0983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad15261d-9a4f-441f-824e-c38af868023a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04f518c-6142-441e-960c-259be536e0c3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e57a90-253b-48ee-bbf9-451373ce8bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e86f47-f214-49a4-b5bf-e112383fe5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e090dd-042d-4d14-a874-bcf2241a12a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2de606e-bc90-4047-b662-270ea4158cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b183087-824b-4fa5-8ac9-5d4f5ec1c74d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef1d9a6-9edd-4b15-853e-cdcfd8903f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e517d19-d375-4d2e-8f10-05f2d24c2cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d0b6b-a974-4c26-8cb9-825208d0a770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee023e95-3964-4fcf-9f5d-fc3765c89a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea235099-7fe9-4cfe-957b-330d65748148",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf43ac2-ef31-4a8a-b0d6-31609966dbf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599ca16d-35b9-49e9-93cc-ccf3b60e977f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce84e656-3504-4a68-83a4-d60096907670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2cf870-151c-4c64-b2f9-e7663faa91bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca4348c-fea1-4ae9-b807-ec7bd4c1a283",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5877f4-703a-4418-b602-7badab55a10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299e58f7-912f-4d75-af73-b2adf4e0390c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a74cdc-5290-44c9-8c30-758954da5a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c48682f-9b94-4d00-8299-3bcc489f8064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b434f62-d9c7-4a4f-b53b-fdea67e947d0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56e4c22-cca0-4521-a43f-78d31ab3ea5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212365c6-2025-4b47-bb6a-d87df17f2f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070005c6-d61a-4f1d-9aef-5050595f67d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ebc78d-400b-4c0f-b93c-2969c0329f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d19c0f-5d5c-4569-b944-ce07cf719676",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f265ced0-61e1-44c7-9873-c78013fa37ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a81f99-1642-425b-9110-fefc2391ae5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc48311b-0d6b-450c-9a78-e2ad08217d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393a07ca-d6d2-46bb-8307-4e384cb1a11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9470aee7-76c5-4eca-9398-6aa2d809c5ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4f80f3-6bf3-4882-b0d1-ce028b7dc40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8596ce1-e6b8-4c3a-ab0d-751beeb49597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ebf2aa-4860-4354-8b9b-1dacdaba5b34",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3415dec3-0587-470c-afdb-6a601c422daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a196be04-3345-4eb1-a33e-a9a48405dba4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d635a055-eb06-4083-9834-83c4fedbb67c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a91e97-20a3-455f-8cca-84ac885f7f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c69231-a3e2-4be7-b8f3-eda3f1288e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe67e7c-cf8f-470e-8583-165764cfbf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe97d26-6c51-4405-8179-3c72e74565b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc06513-74d4-4c74-8564-457d611b0a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d077cd43-e6fa-4dde-b2c9-3db6f56dddfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b31c778-34d7-44eb-9b34-90bc40b48289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087060df-11d6-4a10-84ce-70e18dd36710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf2da47-3ff3-4aaa-b23c-3ae751308e13",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6231201-48aa-49b1-b1fe-8c7af4584737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106dfad1-b28b-4e69-aeb4-f0f77986ef68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5b2608-04bb-4e0c-a99b-b84a3612ecd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4459e867-3947-482b-af6d-755aa124287e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad6c4da-bcc0-45a9-a0ba-ce33427d40e1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973b2148-c22c-42e8-8b98-14ffdbe6ebcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64dfb68b-0a0e-4895-9971-3a674b0d3269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb6162b-daae-453f-ac37-c40cc6ce52c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ee4c02-d356-4ace-8a81-a745a87a6b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e5a6ec-2d06-41b8-bf9e-6dd88794befc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321d2dac-5525-499a-8373-24b6aae214fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4094b5ec-24c8-485c-873e-5f456938fe10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505b0f21-a96c-4215-8053-30821a1800a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be1721a-9f0c-404c-8df2-4f9e9485239b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c9ce0-81e9-41e6-bc67-f8e2be4cb1df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d55031-bbf9-4994-8024-5b64e797a657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534fe56c-4a40-4ade-b127-8fbe048fd353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdd031f-3bcd-4181-9146-1138d51217be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644d3a4a-d52d-4480-b538-5b03a3ab9515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a612336e-60ac-43b7-bbb4-12009e2a0d05",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd56322-4eac-4a8f-b23a-9052cc32eb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd65b9eb-540f-4b80-9857-4721180e7e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10985b1f-8b4e-4839-8685-b3c271b38ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa5d9ef-05d6-4da2-ae74-352c537c8877"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b883da99-ef68-4f74-9d6f-fe09de14ea03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06d9f13e-38ec-4bbe-a600-106940296f6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8357574e-a699-4e93-b27b-a304f41b74f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cd7f50a-cd38-44c8-ba31-1dc91227855e"
                    }
                  }
                ]
              },
              {
                "id": "1cce6e9c-dc8a-478c-9e6c-59a3174c2d37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3c8ae66-efd6-45fc-8036-13f1db2007bb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2df7b66-ba92-4ab4-954a-a3f41888af60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4fad7e73-234f-4b78-a745-8456be3dbb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c565a6c9-fb2c-460f-96e7-9ede8f78cfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd8bf065-401e-413d-a8a6-0149ce81f9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbe07a7-44a0-477f-abbe-189a7176924e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7f7265-2702-414a-9c9f-09efc6816e91",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d7cf0679-9c84-4d12-8117-5bbd76b11884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072186de-244b-4412-a036-f2fe54905316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8bbe9f9-a51f-40d4-9a39-63baa2019ba7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b50dec30-0f86-4e37-98eb-608f758514ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c7145f1-90c5-464e-9bef-9878103b0342"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85d13d6a-7be9-4789-b90e-37ffb6caa35c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "975bf414-a343-464b-b582-2bb150c0e26f"
                    }
                  }
                ]
              },
              {
                "id": "3e36d208-630c-48f3-9e7d-8ac404d86742",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c6b6dcfb-0d1b-4e2a-ae47-bf13c5571588",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f61663-142a-4316-8099-e29b70fd657b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "309cbb5e-0296-4106-aaad-71bf704ad2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae928c85-d013-405c-b580-a86fc51a1eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba84c20b-a30b-4aba-9ac3-259c34f2c6ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f42b89f-286f-4153-8c60-68eb41326148",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe8609ca-96e2-4176-a003-590a20ce4af4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b50d753-48e9-4f94-a087-77485cb8def8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "de033bab-63a7-4958-8c34-1f71efa0e928"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e12cec2-8d76-4980-9ed7-9eb5a31758db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1639cc32-ff36-4e78-849d-6fa057d45b9a"
                    }
                  }
                ]
              },
              {
                "id": "fde59270-0ce2-4105-ada0-54700fda2a03",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "875ba161-b32a-46ce-9f25-81c37afae060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bb3d4d11-9c5d-4e93-a268-34f460a90801"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48d2e5ff-4763-48dd-b334-3a22e124616c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de6cc04-8366-4a6e-97d7-410546af2986"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d426378-54d1-4b47-91d1-f17b2df359d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e8ab4f07-4dc5-4ee0-a193-677fab1954d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0e22a1c-bc01-4587-9278-3494084432cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c0e89e1-b2cd-480f-8ba5-b6c9b91fd5dc"
            }
          }
        ]
      },
      {
        "id": "9b139c51-d5fe-4cd9-be54-acf4b35f7e80",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6e660c0f-4607-40a2-917f-64528b7df4d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d92b144d-7e5d-498d-b89c-c7044f270e6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a52dc1-3f8f-435a-9d79-a2685c0e667b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "59d2266f-98c0-4c11-800d-3d6102323b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c465709f-788f-492f-ba16-0b26bfeec8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9a58021-fc9f-411a-aead-96f7583b109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cfdb5d-1e90-4980-9664-a50bcc9d1acd",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18104bc-270b-4faa-afc1-bd05079c4ba6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "69171094-30cd-46ca-8dde-986893cb2265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb7f15d-3ab9-4282-ad7d-962e71dc4f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c105755c-d78a-4a1b-9f56-fbb0370dec6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e18fb6-0bcf-482b-961c-02afbf24fb8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c499e5c2-faad-4b7c-84eb-9d76a91c6d9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da29fca-0898-4d10-ad7b-207476a5cf56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b08a12b2-81c7-4d55-8c53-ac48900a15dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac2dcaf2-7357-4c0d-9f92-da043feaafa1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d29e8566-a0d7-49f2-b2a3-b1e9f9c10629"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0c7a22c-6554-4f7b-b4d8-7f29f73440c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af8756e7-6f85-4992-9d1d-2205d944b942"
            }
          }
        ]
      },
      {
        "id": "01c1573b-5637-4ddc-b826-383f45423b6a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "be8864d4-e444-4b0a-a3ff-58cdca8dfc60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85e8ccf6-fe88-45d0-bc61-d1a089e98bca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e0ba97e-ea71-48bd-960b-becc49a9acfe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadf9d5b-22b9-4547-8181-8e819b19fc03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd6b7df6-6a82-4593-8053-023313e50e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f93e071-fa65-4a3e-a356-bb99898dabcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c6e5d70-8efb-4ea9-87b4-24a60815f67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d8fda-dc38-4014-9cf8-2c857a96c96d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe7374d-e099-4031-8891-e2e016040572",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "457f3703-f758-4816-8696-e7cff2d38454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33e3f8a-ea9e-470b-a6e2-2f2977a922fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ebb1ff2-22c4-424a-9f48-b9025a97c292"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f23c3dc8-dd17-435e-a73f-67a3fdd3825b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f7735a5-39b6-4f90-a16b-f1a86b585f94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63fa45de-24ef-40f9-9a04-b6a378e005ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a314f6f-2ac7-44ca-a717-652bda39ab63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff7abfe8-b442-4838-bb0c-cf07e65c1670",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f3611d0-d4ad-44bb-a039-bcb5ccfedd0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcd97597-e2f8-416e-b307-8c1ea9b4f90f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c115ffc8-ad6a-4d6f-be95-77a53f3603d6"
            }
          }
        ]
      },
      {
        "id": "43f098b7-e3a5-4407-908e-1a7dd9d50c87",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3517fdb8-1082-4473-a9f3-6988432eb662",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba7215f1-8056-4c22-8750-b5e11577d6b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "629a2257-f33e-4e65-a171-58811f0890b4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51777663-4ff6-4bb9-8573-2095722521f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "221bccc2-4638-4fe2-9445-1c054f7275d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e33d1-b95b-4283-9334-f3f8daddff93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0e1959-fe29-4e55-ba12-c5e504f170d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c55ec-df79-4a13-b529-d4cd9c29f3c9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e9db50-acc9-4709-b72b-380ecd7f3525",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bec773-79f2-46e9-a909-b8e3867d3145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1078e763-1b98-40ad-a57d-6445e8e4c364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a838885a-4292-48a1-a9b0-7278b8e3b5d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "439bb81c-32e7-40e5-90f2-bd224b9933eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86fc80f3-cb97-42a1-aa73-8314f7628417"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77be556c-40e7-47d9-b694-ca88f1c32a94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5b82a0-0f72-4733-9a4d-c66dfbdeba75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6775fa1-8b31-4a41-8a2c-1c09908f2520",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da67c66b-92c0-4f95-8806-b8f8278a3713"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bece9fdf-7197-4158-aa4f-a5d18b88bd47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa6bad21-d56c-46fc-b071-1ff10fdf117f"
            }
          }
        ]
      },
      {
        "id": "3f9e95ad-29fe-47e5-8514-c9acb26e270e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8750f195-b258-47bd-8c44-9be9a5931233",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "944e9cd4-4001-4bbb-8d0e-180c2a3922e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2f75efbf-7500-4634-b6ad-1c2db7db5570",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e71c49f5-5c5a-4435-8892-cbf37ed7b9db",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fb30388-6fd2-496d-92e0-cfb1c6a60027",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.861538461538462,
      "responseMin": 3,
      "responseMax": 319,
      "responseSd": 39.404364039093956,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681259781444,
      "completed": 1681259795586
    },
    "executions": [
      {
        "id": "bdd685c0-950d-4c96-974a-73f529d59b0a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eec5effe-02fc-42ad-9a8c-e3473c695b3a",
          "httpRequestId": "b35b5cfe-6640-44cb-be46-3eabecef746d"
        },
        "item": {
          "id": "bdd685c0-950d-4c96-974a-73f529d59b0a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d523fb23-5d96-4526-854a-16b4c62aabbe",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "38df3ed3-f6b7-4042-a8e1-3b9b877b42a2",
        "cursor": {
          "ref": "aca5d216-2cd3-4f75-8ea6-91924feab6a5",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3a31661e-d1ba-4a89-b8a6-b3747e5f662f"
        },
        "item": {
          "id": "38df3ed3-f6b7-4042-a8e1-3b9b877b42a2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d78e1680-ce99-4e1a-9539-6b2a2710881a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "03fe93fa-1978-48e2-b8fd-b080dae0c630",
        "cursor": {
          "ref": "a8876ff7-1329-46c5-b91d-204fbe0dd152",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2e93dd8e-f41d-484c-b5c7-932a66366bc4"
        },
        "item": {
          "id": "03fe93fa-1978-48e2-b8fd-b080dae0c630",
          "name": "did_json"
        },
        "response": {
          "id": "9882b861-50ef-4482-971b-d123e4b5cd97",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d45cb9-b2c1-4800-a70e-8cc5c8c3504a",
        "cursor": {
          "ref": "9416a950-9c2a-4114-97c9-e4322895f20c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "761d4e1d-6efe-473a-b703-2cb18889180f"
        },
        "item": {
          "id": "73d45cb9-b2c1-4800-a70e-8cc5c8c3504a",
          "name": "did:invalid"
        },
        "response": {
          "id": "e857db7e-d554-422d-86e7-6de4fd1b2ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d45cb9-b2c1-4800-a70e-8cc5c8c3504a",
        "cursor": {
          "ref": "9416a950-9c2a-4114-97c9-e4322895f20c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "761d4e1d-6efe-473a-b703-2cb18889180f"
        },
        "item": {
          "id": "73d45cb9-b2c1-4800-a70e-8cc5c8c3504a",
          "name": "did:invalid"
        },
        "response": {
          "id": "e857db7e-d554-422d-86e7-6de4fd1b2ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5f87c6-c7b3-40f2-bb36-d1dff2c82950",
        "cursor": {
          "ref": "379e4b95-b852-4c03-86df-319c7021527d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c6a0391d-7895-48d4-80ac-6c3f04cb2c04"
        },
        "item": {
          "id": "0a5f87c6-c7b3-40f2-bb36-d1dff2c82950",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e6219d35-8ead-4b5e-a9d8-b5842b37e68e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 132,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ce2ca6-e23d-4d7f-a210-737af7fd767b",
        "cursor": {
          "ref": "dca10d2a-3464-4bfb-9742-eccb6ca355b4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f521b418-f4f7-49d6-98e9-8c5c5a528d3c"
        },
        "item": {
          "id": "f1ce2ca6-e23d-4d7f-a210-737af7fd767b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1b9632a-ee48-4c9f-af45-0ac9b123ff2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f722d1cb-824a-4f44-95ba-68ed878a7612",
        "cursor": {
          "ref": "64c16232-43a0-4dfe-b94b-c3880e6946fd",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6b0cfad0-d553-469f-a13c-b9b9502bde4c"
        },
        "item": {
          "id": "f722d1cb-824a-4f44-95ba-68ed878a7612",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "33707f54-39c8-4128-a709-16243813e0a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fa87f-21fd-4f62-a225-051516a53da4",
        "cursor": {
          "ref": "dcb5d6f1-446b-4191-bd7c-b40ac87aab91",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe853d67-b615-44db-9490-f39fd9e39573"
        },
        "item": {
          "id": "f02fa87f-21fd-4f62-a225-051516a53da4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fe5cfc25-ef9f-43ab-8e27-96c915937413",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fa87f-21fd-4f62-a225-051516a53da4",
        "cursor": {
          "ref": "dcb5d6f1-446b-4191-bd7c-b40ac87aab91",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe853d67-b615-44db-9490-f39fd9e39573"
        },
        "item": {
          "id": "f02fa87f-21fd-4f62-a225-051516a53da4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fe5cfc25-ef9f-43ab-8e27-96c915937413",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4ff7ed-e470-46e2-a65c-0c6653f379d6",
        "cursor": {
          "ref": "121a1a2f-d3c9-4c25-8c94-2d73cbcb2ffd",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "24fe0a47-8d39-4c0a-95a6-5245e12f63c2"
        },
        "item": {
          "id": "af4ff7ed-e470-46e2-a65c-0c6653f379d6",
          "name": "identifiers"
        },
        "response": {
          "id": "32b51491-48d4-41c3-92bf-e25cdc386f5e",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a6a0e8-64ac-4aa3-aaeb-30e80c9f84d1",
        "cursor": {
          "ref": "843a2c88-f5ba-4d52-931b-dd7465743f80",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "00d35bdc-279f-4a35-9733-42daf9a2cd92"
        },
        "item": {
          "id": "68a6a0e8-64ac-4aa3-aaeb-30e80c9f84d1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "601cd1ae-e3cd-4b21-856b-1328ac7235b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a6a0e8-64ac-4aa3-aaeb-30e80c9f84d1",
        "cursor": {
          "ref": "843a2c88-f5ba-4d52-931b-dd7465743f80",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "00d35bdc-279f-4a35-9733-42daf9a2cd92"
        },
        "item": {
          "id": "68a6a0e8-64ac-4aa3-aaeb-30e80c9f84d1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "601cd1ae-e3cd-4b21-856b-1328ac7235b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8354de4b-8253-4f2e-8010-a672aa87f6e6",
        "cursor": {
          "ref": "ca3d3751-1f3a-46e1-9480-9fb6e16f1e8d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f608b081-8dfc-47d0-845f-a774a4d5dce9"
        },
        "item": {
          "id": "8354de4b-8253-4f2e-8010-a672aa87f6e6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f2eccfd5-f40b-4d21-b19f-e043cd5a45ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f81e51-6d13-42a0-9c5f-b7e9fc142f4d",
        "cursor": {
          "ref": "3b689a04-8faa-4657-9f74-56922333a8dd",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a2d46de4-932b-4018-ab1c-49041cd9a190"
        },
        "item": {
          "id": "19f81e51-6d13-42a0-9c5f-b7e9fc142f4d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dafb35ca-b349-4900-b910-573afe4cf9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51a847a-7a53-4f1d-89e9-8acbad2b5592",
        "cursor": {
          "ref": "a9b7ae8e-21ca-46a1-9bc0-73f5c486daeb",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1de7fa62-fd99-4cba-9e73-3a46a85d6656"
        },
        "item": {
          "id": "d51a847a-7a53-4f1d-89e9-8acbad2b5592",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fa686616-0c69-4eb3-94a6-f653d4a2d241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582440b5-190d-451a-93aa-7e986f51ed9c",
        "cursor": {
          "ref": "3b6bd146-c47f-406a-b361-02ccf8e03f62",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cacb318d-3a87-4730-a58a-398ba0676531"
        },
        "item": {
          "id": "582440b5-190d-451a-93aa-7e986f51ed9c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8cfdd7ba-3585-4941-8598-daad7c1500bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8996bf61-a744-41cb-9d2b-1b9808105464",
        "cursor": {
          "ref": "dad68c60-98bc-4596-ac2c-464aedd01a48",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "54362970-39e1-454e-9968-6aee16552bb9"
        },
        "item": {
          "id": "8996bf61-a744-41cb-9d2b-1b9808105464",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "453f3fa7-9024-4a1c-83dc-4c2dc067cb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b5d2fc-f5c9-4cfb-aaa4-c23962aaf91e",
        "cursor": {
          "ref": "a76607cd-733a-409e-963d-3df99c4d5da2",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7e6ae652-fe4f-42e3-97ba-4493efe5be6e"
        },
        "item": {
          "id": "f5b5d2fc-f5c9-4cfb-aaa4-c23962aaf91e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d02e4d4c-e72f-4d01-af87-adaec3d24402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fac7fe4-a2b3-4f80-be9b-93fe4e59e57d",
        "cursor": {
          "ref": "09fd1c63-e737-4c4e-a7f5-8ca215a85006",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "12d632dd-2570-478c-96b2-df1fa20e6861"
        },
        "item": {
          "id": "1fac7fe4-a2b3-4f80-be9b-93fe4e59e57d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9d92d6d4-315f-40fe-b948-34a0a1897152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08afee2-085c-4f57-968e-d2dcbb462cd0",
        "cursor": {
          "ref": "aa93a5b0-111e-47f5-bb9d-74cea370f53a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8786669d-2781-4e4d-8e8c-2ba14f66cb2a"
        },
        "item": {
          "id": "d08afee2-085c-4f57-968e-d2dcbb462cd0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d6de2472-3b39-4724-8feb-bf6593e94694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709e43f0-c172-43d7-a9fd-b2b4c7a1760c",
        "cursor": {
          "ref": "889744ca-d694-4978-b5f0-f381410dc592",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ff985732-1573-44d9-b7ac-b068d4017ba1"
        },
        "item": {
          "id": "709e43f0-c172-43d7-a9fd-b2b4c7a1760c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06bd915c-1b4b-4807-9db9-a03b7c86e896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafa08d6-8582-494e-bb9a-aa7836076738",
        "cursor": {
          "ref": "c785fe7f-2ce2-4e99-910e-cfa2dc2bf617",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a660707-44e4-4cb0-95c6-e3c195bf4204"
        },
        "item": {
          "id": "fafa08d6-8582-494e-bb9a-aa7836076738",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9a6f0884-5e13-4a2d-be46-2deedb8c3556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac84af6e-7121-449a-8e48-a928fa53baae",
        "cursor": {
          "ref": "29e8147f-5b84-4b9c-9a3a-7ec2bb14c92a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3c7e5373-4f71-4bd4-8f71-7fd20586b76b"
        },
        "item": {
          "id": "ac84af6e-7121-449a-8e48-a928fa53baae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b2ae24a9-fd50-4c86-b6a5-8df81443c041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7e3b0a-959e-40d4-a440-b7a12be6921e",
        "cursor": {
          "ref": "8176ec75-9867-4465-ba14-29bbf8743ed1",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4fff0499-1cdd-480d-902d-6f042c57014b"
        },
        "item": {
          "id": "0e7e3b0a-959e-40d4-a440-b7a12be6921e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "082d3567-06ac-407f-8f95-0f6ae14c71f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45896ee-8090-4268-8cbe-c535c4ef776b",
        "cursor": {
          "ref": "58d47e03-fadc-4c46-a185-48464ce140ff",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "29ef7a08-599a-4b6c-a5c3-c42836392bfa"
        },
        "item": {
          "id": "d45896ee-8090-4268-8cbe-c535c4ef776b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c8fdf5ef-c511-460e-b5cf-804e7bf44c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd23440-61d3-4174-b47e-054d67c0a5cb",
        "cursor": {
          "ref": "c5de9c61-a688-4592-bfaa-a4767a24c629",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "149c13c1-ee94-4189-8168-73cf12083a1b"
        },
        "item": {
          "id": "0fd23440-61d3-4174-b47e-054d67c0a5cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fa8675d4-bf10-4739-8c3f-d91ece489884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eaa950-50f2-43e0-b2fb-1203f1fd41fe",
        "cursor": {
          "ref": "9191f2f6-5e9e-4e13-9dee-5f33e58f5b57",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9ffd9ed0-b786-4c3c-b317-164b02fcf4a0"
        },
        "item": {
          "id": "65eaa950-50f2-43e0-b2fb-1203f1fd41fe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "916e7d7c-16ed-4058-aae5-871fc2b71dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a9ee75-96dd-4bdd-92fb-f26b74052488",
        "cursor": {
          "ref": "a406255f-737b-453d-8c6c-e530f6a71579",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3403ac79-3f01-47fc-a98f-5ea77e636d8e"
        },
        "item": {
          "id": "e4a9ee75-96dd-4bdd-92fb-f26b74052488",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9e8e764c-c846-41b7-a158-ca63cdce0732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0f1aef-4c31-4b8b-98b6-2ee3ebb96f95",
        "cursor": {
          "ref": "24ae278c-4623-4774-9fdb-6e44337f46b3",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "742e753a-00f2-4481-bbb5-68cc3bbab60f"
        },
        "item": {
          "id": "7a0f1aef-4c31-4b8b-98b6-2ee3ebb96f95",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f40d8a71-1b58-4db2-8afe-11ca95a57764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784594cf-41e5-44e4-98b7-2f0f907ef30a",
        "cursor": {
          "ref": "c53a0c98-0ef3-4e07-ae51-51c160b6a5f7",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6571a14b-ce75-48a3-b170-1c6f048fab18"
        },
        "item": {
          "id": "784594cf-41e5-44e4-98b7-2f0f907ef30a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a15b7fb9-d252-46c2-80c0-f64890eb3de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a720deb-80b4-410a-8dea-93428fef1a4b",
        "cursor": {
          "ref": "c7b8d29d-187e-4b04-b9d0-da2c7a9772bd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fce66327-93ad-42a0-9090-6eec926da3fd"
        },
        "item": {
          "id": "1a720deb-80b4-410a-8dea-93428fef1a4b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10af98c9-b245-478f-b256-1ec32d136e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a153e3-68f7-4d11-b799-c91fa5c789f6",
        "cursor": {
          "ref": "448addda-afb4-4ae4-af07-27b63c05be0a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0bb854ce-bad0-4ab5-afe3-25069d2ffcd1"
        },
        "item": {
          "id": "f2a153e3-68f7-4d11-b799-c91fa5c789f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d9fe61a7-fb04-4ecd-b15a-4143295d125c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0e59f5-000f-4bdc-96ed-51d79e8da8db",
        "cursor": {
          "ref": "af5b2ceb-bdaa-4524-ac18-246d3c470f04",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f0a6b818-02d0-4053-abee-383f2b00b180"
        },
        "item": {
          "id": "1d0e59f5-000f-4bdc-96ed-51d79e8da8db",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9637404d-230a-4571-ab25-5a43d343c3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14c10d7-b4e7-4575-a6fe-fdb71d878a65",
        "cursor": {
          "ref": "5b8b00c5-f650-4ffa-bedd-ad4bba60bb3c",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2c4a01c7-2709-4d6a-9db7-ddb620ef0664"
        },
        "item": {
          "id": "f14c10d7-b4e7-4575-a6fe-fdb71d878a65",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c765e33b-b52a-44c0-9129-ef0c5e364752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c3043-a2d8-4e64-a06b-29bcc0f2c2ae",
        "cursor": {
          "ref": "6197fbd0-d34a-4009-9b02-26a1fb14805b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "70b6a867-3689-4ed3-813b-ba05e60407e6"
        },
        "item": {
          "id": "e48c3043-a2d8-4e64-a06b-29bcc0f2c2ae",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd30003e-1b5e-4650-a899-c347d46c24ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb1e5b-6f83-434a-abe0-01adc21351db",
        "cursor": {
          "ref": "a67294f4-78e1-4503-878a-be431c46ddc3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "29329ab2-775f-4064-bccd-edab1d9faff2"
        },
        "item": {
          "id": "c2bb1e5b-6f83-434a-abe0-01adc21351db",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f22ea4db-6765-40b4-b92c-5e29f3cd97ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9145e56-6c3a-4604-8c5e-dfc85e546742",
        "cursor": {
          "ref": "0a2bf3d6-c3e2-41ce-831d-1bd231663c8a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "53410c92-5385-41e9-a44b-2e2b55f596dd"
        },
        "item": {
          "id": "c9145e56-6c3a-4604-8c5e-dfc85e546742",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d52adbde-2a86-465c-a261-0e0391fc2bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c899fc-fc8f-418a-a941-7b05c7056b90",
        "cursor": {
          "ref": "c07fa858-30df-4ca0-bf70-825aed689f83",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f805729e-f370-47e8-b79f-16c579b63d4e"
        },
        "item": {
          "id": "e4c899fc-fc8f-418a-a941-7b05c7056b90",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e07b6d6-979b-48a2-8cd8-486ed98cffdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ca94f-0717-4222-adef-7a9035f17a9d",
        "cursor": {
          "ref": "f1f8b8ba-805f-46ba-901f-77c80e7eac0a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1b0a3eac-4714-4633-85c9-c1d79730af8e"
        },
        "item": {
          "id": "d59ca94f-0717-4222-adef-7a9035f17a9d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3b2851d1-3b39-4e9a-a56f-9ebf5805a486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa338dc-b07b-4588-a637-2c1ffbd68d98",
        "cursor": {
          "ref": "901952e0-69f4-4887-8ef8-64b3486515d9",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad9477de-2e75-4585-a7c9-1328f4f79496"
        },
        "item": {
          "id": "4aa338dc-b07b-4588-a637-2c1ffbd68d98",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7eb911b7-b085-4bff-8c63-bf1cc5cd34ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99096517-73e2-4614-a889-d158e21ede53",
        "cursor": {
          "ref": "44a44d12-20ca-4fd8-8d84-b22269c406b2",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "25abeb47-bd8c-4602-bc86-5a7de4c3185c"
        },
        "item": {
          "id": "99096517-73e2-4614-a889-d158e21ede53",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3117127-e782-46dc-ac4f-d4716be16a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5915c1dd-1437-4928-9da5-996dc54e0fdf",
        "cursor": {
          "ref": "2157fbf2-84ad-4929-a08e-8126c417100c",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fa651233-cd38-4505-9cfa-f1273ac27f1b"
        },
        "item": {
          "id": "5915c1dd-1437-4928-9da5-996dc54e0fdf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "367b9464-8b5f-498d-a1a8-0b95c6e84b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809cbb72-6788-4e30-8c26-f8b10341b5e0",
        "cursor": {
          "ref": "c727d595-ebe4-4889-8a86-07cda072a45c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ba90ef30-3af1-442e-930a-4b56f71ef11a"
        },
        "item": {
          "id": "809cbb72-6788-4e30-8c26-f8b10341b5e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6c196e5f-11d0-44fc-ab19-3979527f9bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2532ddf-4627-43e2-a487-fb5163b83656",
        "cursor": {
          "ref": "375ae549-0784-43c3-88f3-264e0b7d1c6c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "281f960d-52c9-46c0-9b4a-dcd8addda4c3"
        },
        "item": {
          "id": "e2532ddf-4627-43e2-a487-fb5163b83656",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "22e896d5-1e91-4fa6-a550-5454570bf4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2bb62a-9cb8-4b4f-a864-6c46812ec7fd",
        "cursor": {
          "ref": "49d43e1a-9298-49f9-a66e-e510e56ea1ed",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "004ff10b-8f50-4f35-ac41-f6c69f36eba5"
        },
        "item": {
          "id": "9a2bb62a-9cb8-4b4f-a864-6c46812ec7fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "24cfe73c-07b2-4410-b5b4-0b8441abadd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0871bc-3108-463f-bb94-1d22a66dd41b",
        "cursor": {
          "ref": "8e3bb775-22a6-4301-b4c0-96e98b9e3193",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "60b44ae2-cb29-423f-a83d-3b76bc00d043"
        },
        "item": {
          "id": "0c0871bc-3108-463f-bb94-1d22a66dd41b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "62f46f45-dcc4-4f67-aa24-aa03555d255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1709ade-7d04-46db-8e87-104aa8a70ce7",
        "cursor": {
          "ref": "7bb797c6-dcd4-4cb4-ab90-90e1b1b5d8ab",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a3581602-422d-4298-86ae-e0b345277b91"
        },
        "item": {
          "id": "f1709ade-7d04-46db-8e87-104aa8a70ce7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "be25bde7-b50c-4780-a3c0-f337d2769adc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 15,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe34170-baaf-4b73-91b1-c04793fea15c",
        "cursor": {
          "ref": "0a13d1b3-5e84-4c72-84b5-b1ba8a30c956",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5292a24f-1e12-4313-b648-e1b065141f9c"
        },
        "item": {
          "id": "8fe34170-baaf-4b73-91b1-c04793fea15c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "819a553e-6a6b-4575-b2a3-5064adebeaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0041bcd5-df83-4ef6-88ec-2e4555f94eb3",
        "cursor": {
          "ref": "3460b38d-d66a-4fde-9c69-ac5c86f0735f",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b5cc9910-9230-4120-acf9-ecdd76accce7"
        },
        "item": {
          "id": "0041bcd5-df83-4ef6-88ec-2e4555f94eb3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "20860cbb-bfa9-4b87-8293-403a999199ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c3a5b8-5d86-4ed4-ac6d-85792cb24c40",
        "cursor": {
          "ref": "f40d847d-50e7-4d23-9776-f937fefeb85d",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "90ddf8ea-6fdb-41ed-b896-6ae5fad499be"
        },
        "item": {
          "id": "d0c3a5b8-5d86-4ed4-ac6d-85792cb24c40",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "545f8a1c-b058-4180-83b6-9a8ac0b182a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec7c15-c08a-43fb-9d11-b70449d683b7",
        "cursor": {
          "ref": "fe04d4ca-7a42-420b-ba0b-464c05376b26",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f32c87cb-a0cb-4ce5-8597-7a2d350c8a1e"
        },
        "item": {
          "id": "baec7c15-c08a-43fb-9d11-b70449d683b7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cfbfbccd-b04a-43f5-a060-43988ba2622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892eda3b-0e15-40ed-8c95-817cc726b5fd",
        "cursor": {
          "ref": "8336475d-b711-4b7b-93a7-4c085a13ab11",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ea75bd65-7b47-40f2-bf93-40cf48274d8d"
        },
        "item": {
          "id": "892eda3b-0e15-40ed-8c95-817cc726b5fd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a65d0453-c6d8-4ebf-82dc-537b4ce212e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ac66d0-cf1b-4cfb-9541-8732b68517ba",
        "cursor": {
          "ref": "760742f4-d2ac-41ec-a45e-fba32f97deb7",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4f8f9688-5911-411b-9fc6-65f5fa0afae8"
        },
        "item": {
          "id": "04ac66d0-cf1b-4cfb-9541-8732b68517ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7059ae41-2646-41b6-9422-e9473c64c165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70042ea4-4ec1-4ddc-9c79-0e201b34acaf",
        "cursor": {
          "ref": "82f2b485-d72e-4957-9f36-c3df1fa59ed0",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7267dc9e-aefa-4f9e-aee4-833dc4d47d71"
        },
        "item": {
          "id": "70042ea4-4ec1-4ddc-9c79-0e201b34acaf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "830fa86e-11e7-4ae8-9dee-da427f52e27a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 15,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6d87ad-2353-44d8-9fcf-fa86edba907c",
        "cursor": {
          "ref": "ffddb5eb-d68e-4f31-b5c2-4be7cf7194f2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3a8b87ad-337c-43cf-af15-5b785db2b910"
        },
        "item": {
          "id": "ce6d87ad-2353-44d8-9fcf-fa86edba907c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "aa5b577f-9b14-4d93-9bb8-f63987673b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11132c5-32d4-431d-9d1f-8a57fcd8272c",
        "cursor": {
          "ref": "3e05d3c5-6f5c-4a37-9917-c5c6d5354b58",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d4c61f27-2dbc-4b1b-8bba-53c122e516e8"
        },
        "item": {
          "id": "e11132c5-32d4-431d-9d1f-8a57fcd8272c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0e58d8e8-cfa9-470f-b312-5a531547a383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82893c6f-4226-4de3-b538-87f9c88eda11",
        "cursor": {
          "ref": "8be11226-be59-4f10-acfb-98840f4ab7f0",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2416ace1-4aa3-4e85-a621-efcaf7f09b9f"
        },
        "item": {
          "id": "82893c6f-4226-4de3-b538-87f9c88eda11",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "23548af9-eb73-48b8-a347-57af7bbc9d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1e90a1-d2d0-4b3b-af5b-bb7f51722947",
        "cursor": {
          "ref": "1bab91d3-e1f5-44f0-a3ca-a767f8fe63ff",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4b94e255-bbfa-4be9-9b14-23c30b9d3eb9"
        },
        "item": {
          "id": "4a1e90a1-d2d0-4b3b-af5b-bb7f51722947",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e5f788f4-8838-4459-8402-2957f68d907f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a86b820-170d-4e30-8374-e6bee1a6c532",
        "cursor": {
          "ref": "d7b4d41f-84f1-4d16-904d-c2fbecb6f4f1",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2580335f-2959-464f-800a-a6d9ac4a4480"
        },
        "item": {
          "id": "3a86b820-170d-4e30-8374-e6bee1a6c532",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0286cbb6-62c5-48e2-9025-a17bd99eb1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e791f77-43d3-4173-a46e-2d668519d1c4",
        "cursor": {
          "ref": "60efca65-0a6c-46ec-b08f-3bfb50292c1a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8f872d44-09b5-4d52-9e7c-347a8a35176f"
        },
        "item": {
          "id": "1e791f77-43d3-4173-a46e-2d668519d1c4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "51df3382-4cdf-4524-b222-66b43010a024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffbbc8a-16b2-4ffb-885a-5d0e6e244d56",
        "cursor": {
          "ref": "d48fa34e-4fa7-4ca1-80f8-7b384c4fabaa",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cfe2fa11-1d58-455e-813a-d056daef94d0"
        },
        "item": {
          "id": "5ffbbc8a-16b2-4ffb-885a-5d0e6e244d56",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b159f69f-b2c6-470e-93e0-2826244d0cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09725ab5-83cb-43eb-8d75-23a1c1089613",
        "cursor": {
          "ref": "17c08140-0a99-4f55-9bca-da1f2b39d83c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ab4a5895-7fa6-414e-ae51-926ad5dfa020"
        },
        "item": {
          "id": "09725ab5-83cb-43eb-8d75-23a1c1089613",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "768466d9-2175-41ed-80f7-4da23989ca58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ec864b-0cf9-4c1a-a33e-9237d19862da",
        "cursor": {
          "ref": "2ed8f38b-8c3e-4019-863d-1ecc3332690d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b745b381-66c7-41e5-bdfb-188cd69c4840"
        },
        "item": {
          "id": "28ec864b-0cf9-4c1a-a33e-9237d19862da",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3666b3dc-cb06-4bbc-b643-87af4cdca5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afea472c-c3f0-4e87-bc55-b2d25db92695",
        "cursor": {
          "ref": "12a828a9-c187-45ce-bac0-712271598325",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f11ed874-25dc-4424-8060-f65284447343"
        },
        "item": {
          "id": "afea472c-c3f0-4e87-bc55-b2d25db92695",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3d5db9aa-6e4d-4e54-aeca-8414991665d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c3eedb-6f7f-4146-b4c7-809214fca3a8",
        "cursor": {
          "ref": "4d5fdb97-bc4c-4b93-9e05-33dadbf945c2",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fef8f6db-b3cf-4bb5-a152-60729dbea9b8"
        },
        "item": {
          "id": "d8c3eedb-6f7f-4146-b4c7-809214fca3a8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "35844dfc-2efb-4852-9cca-742105bc11dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f402648-5f4f-427a-a7c7-00c9389643cd",
        "cursor": {
          "ref": "fe87a548-1210-4ecb-91fc-ec408a1bdae2",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "45172d10-a768-4174-86ed-05e8400e13c1"
        },
        "item": {
          "id": "0f402648-5f4f-427a-a7c7-00c9389643cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d8245e0c-fce7-4558-829f-8865e635c75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb018a5d-e394-4616-9eee-8801412bea7f",
        "cursor": {
          "ref": "fd24c4bc-1af7-4452-89c5-19c0d0f9fb1d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e15b655e-1088-4cfd-a6fe-960de8b10ba7"
        },
        "item": {
          "id": "cb018a5d-e394-4616-9eee-8801412bea7f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd845e24-b4bb-4b2b-8977-08713bc4c700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96459a0c-b318-44db-93ec-c0f3328172a3",
        "cursor": {
          "ref": "e84d35df-fe70-45d3-a15d-7d5c02671bc4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bc3df4d4-d90e-4b0a-bcc3-8b465854dae3"
        },
        "item": {
          "id": "96459a0c-b318-44db-93ec-c0f3328172a3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aceab9ce-d1d1-4355-9bbb-e62bbce742bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f5edc7-3168-48ef-8329-bf3053781816",
        "cursor": {
          "ref": "48e71147-67ad-4c68-a812-b0bc37f097ff",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "69a6705c-9aee-4f0a-8397-52fe26a0f25d"
        },
        "item": {
          "id": "c6f5edc7-3168-48ef-8329-bf3053781816",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b185e953-ef64-45c7-ad76-cfdf53df3ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0c82ed-d52a-416d-89ea-2b7071e90a9f",
        "cursor": {
          "ref": "b2609714-d70b-46ec-9444-8a82ae33d02f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7591c5d5-9bc6-4a7a-986b-306496b604c4"
        },
        "item": {
          "id": "6b0c82ed-d52a-416d-89ea-2b7071e90a9f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "607ab2bb-c25e-4df3-9ca9-2405718691e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e518aca3-acc9-48eb-afdd-ffd5f633dfad",
        "cursor": {
          "ref": "5e87cca4-2759-4cd1-a327-cdad1dbdec2a",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1f822ad1-41b6-44d8-a973-7090f719febb"
        },
        "item": {
          "id": "e518aca3-acc9-48eb-afdd-ffd5f633dfad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a27210e-343e-49a1-9f93-969d7395b695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a10da90-0ca6-450f-8e11-1994aa611a54",
        "cursor": {
          "ref": "c4179091-7f88-4fb3-8781-1bc1f59b212a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d74f14b0-b957-409f-809c-0b51ae3d87e4"
        },
        "item": {
          "id": "2a10da90-0ca6-450f-8e11-1994aa611a54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3489c4c1-5f26-43b1-8919-ded60177ab25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ac4d1c-4018-42fa-a998-0b6c107a339d",
        "cursor": {
          "ref": "8c964677-2aac-4049-9b0a-242a94e95a0a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "88ed2ad9-adff-4d9f-b68d-f47e016d58be"
        },
        "item": {
          "id": "33ac4d1c-4018-42fa-a998-0b6c107a339d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0e34371a-57a4-4d67-99b3-ee52be2add5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1252fad3-35fc-4c1c-9669-7d36bd5404ab",
        "cursor": {
          "ref": "0de85d21-4a16-4fbc-a304-2fe42baa3f7a",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b8c04d06-1e15-4b8e-aa20-b57ff0929557"
        },
        "item": {
          "id": "1252fad3-35fc-4c1c-9669-7d36bd5404ab",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "741759e7-354d-4e95-b225-d0c7cbb911b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfda3742-02ff-476e-ad54-dfa9f7adb93e",
        "cursor": {
          "ref": "ae9426d1-9d59-4135-ace7-2df3d25e1578",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8f37f9a4-c592-402e-8a84-5b535696d11b"
        },
        "item": {
          "id": "dfda3742-02ff-476e-ad54-dfa9f7adb93e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7a14a0d7-d8c0-4d07-bab3-eeb83f672c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f8280-b733-44d2-9554-41caff60ff12",
        "cursor": {
          "ref": "f0b4b9cd-a5f3-4495-ac63-f61e38ffd0c2",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cd2b3fd5-252f-4747-a44a-b9d8e9c17909"
        },
        "item": {
          "id": "f74f8280-b733-44d2-9554-41caff60ff12",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3234f806-7437-4087-b439-7e8583255654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901d20c1-3dd7-4b3d-b6ff-241abfc84852",
        "cursor": {
          "ref": "6d4684c0-2091-4b00-80e0-6e21e131b477",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bff9c506-bc7f-4137-b7d4-df2e49dcd0f8"
        },
        "item": {
          "id": "901d20c1-3dd7-4b3d-b6ff-241abfc84852",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6622ca12-9954-4cfb-83e1-aee82082c594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd5d187-cb63-4623-b315-2535288d6605",
        "cursor": {
          "ref": "527e3e5d-84c9-46d2-9ad3-505f764ccc7c",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e264ee7d-31fe-4c60-be91-24c73e4467d8"
        },
        "item": {
          "id": "5bd5d187-cb63-4623-b315-2535288d6605",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d6d2a1ec-cdd2-4cc5-8e78-ed952bb5b202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfcc569-4ad3-49b2-8466-e8ed1b5c68be",
        "cursor": {
          "ref": "444a17c2-ea10-415f-a0e0-88980a7a48ed",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fde5e03c-45a2-4526-95bb-5ba5b5a13990"
        },
        "item": {
          "id": "fcfcc569-4ad3-49b2-8466-e8ed1b5c68be",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dad7065c-3600-4242-b12f-3e9d5f61a307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65e51e0-f801-41d9-98f7-5762ad93d4af",
        "cursor": {
          "ref": "72c0fba9-afba-4727-b6bf-6d25b498edb2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4907de19-edbd-4722-b02d-cf4670051d30"
        },
        "item": {
          "id": "c65e51e0-f801-41d9-98f7-5762ad93d4af",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f795afd0-ca2a-4bed-8a36-187062d73493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9a5e73-9146-4bd4-9261-695e8ce78c6a",
        "cursor": {
          "ref": "2760ef46-6d6e-4cc6-b047-cd8a7eedfcef",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7f5db460-4306-4fa5-8f49-0a3e611634d2"
        },
        "item": {
          "id": "fa9a5e73-9146-4bd4-9261-695e8ce78c6a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eb2bc75c-7696-4690-80b9-0bc43622cff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3d1205-d6b6-4ad1-a786-73b00570d07f",
        "cursor": {
          "ref": "c29b112c-d56e-4849-9aea-60944c8f66cd",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "24df1bc4-9b9e-4614-8e02-35dbfb902c6d"
        },
        "item": {
          "id": "de3d1205-d6b6-4ad1-a786-73b00570d07f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "10403f6f-e7ed-41f2-92ec-9266073ccd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe466229-33ab-4317-8c13-4c7b8101e4c5",
        "cursor": {
          "ref": "79e11dc9-57f7-47a8-b16d-5eba4da1e259",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1e775d97-a028-49b8-a028-b048a00a88ab"
        },
        "item": {
          "id": "fe466229-33ab-4317-8c13-4c7b8101e4c5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d351e354-49dc-497d-ab96-60ad900ace61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63f948b-e168-4f49-9da9-0a30d8ceb17b",
        "cursor": {
          "ref": "35580818-0f5c-4d3e-88d3-3695dd7c738a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "10f2ecf7-7b1f-48d3-aa40-f7452fb8d469"
        },
        "item": {
          "id": "e63f948b-e168-4f49-9da9-0a30d8ceb17b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1e03bbcf-d67f-485b-bcfa-a8bd8359b23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306543a5-92d7-447c-93bf-6ea498327428",
        "cursor": {
          "ref": "6e66ac36-27dc-47eb-b0d7-58ee444d97b8",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "698ff1c5-dd2f-471c-a2a0-ba090c731231"
        },
        "item": {
          "id": "306543a5-92d7-447c-93bf-6ea498327428",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a285ea9c-f4fe-48d1-bb3b-f031b952d8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcb09ae-e438-41b1-98fb-a6f531c3928b",
        "cursor": {
          "ref": "e1cafd35-e55a-4672-952e-b7b61fd3a14c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e80673dd-d53b-4446-aeb9-a82d51cf2430"
        },
        "item": {
          "id": "4fcb09ae-e438-41b1-98fb-a6f531c3928b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7ae3fe26-b355-41dd-9182-a6ab5392415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707d7949-77ba-4aa7-8009-2684852870a8",
        "cursor": {
          "ref": "0f2e573c-113d-4aa7-8fdd-659353d3eeec",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3c89d7db-24f2-45f3-92fb-41240fc080ba"
        },
        "item": {
          "id": "707d7949-77ba-4aa7-8009-2684852870a8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1f0bf134-f584-4e19-9116-858e45364e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90156dbf-1f37-493b-80c3-35505c670446",
        "cursor": {
          "ref": "1a5bf531-f260-41b6-a6c8-707e9a9d5b11",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ca16768e-fe0a-4817-b3c6-f55b494b02bc"
        },
        "item": {
          "id": "90156dbf-1f37-493b-80c3-35505c670446",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "35be02ed-6aea-4762-a480-c9687b48ab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aba494f-e48d-47b4-9bea-37a479bf5bce",
        "cursor": {
          "ref": "759da6e5-d138-408d-b642-f5ec84f52552",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "623fae3f-9562-4bdf-8959-5b0d8c9f7b0b"
        },
        "item": {
          "id": "2aba494f-e48d-47b4-9bea-37a479bf5bce",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8910f913-bc5c-41ac-83b3-8d87ef9d4dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f96e50a-0cc4-497a-9a68-cce643b27dda",
        "cursor": {
          "ref": "94225464-3444-4d65-94b9-9cf5a44593c4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0d84b54d-8699-40e3-ac37-7daff9ef0023"
        },
        "item": {
          "id": "2f96e50a-0cc4-497a-9a68-cce643b27dda",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7cad3d10-d1c8-487d-86b5-781dcf710be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7471b751-11f1-4638-bc98-986e7c1e1d1b",
        "cursor": {
          "ref": "028f23cf-e3b4-42f5-a9f8-922d5911221d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5317caf7-045f-43fa-bf0e-64a2c9cda5e1"
        },
        "item": {
          "id": "7471b751-11f1-4638-bc98-986e7c1e1d1b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2178ba4b-ec5e-4f71-845b-35db9a46023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7d02d-ad6d-454d-98f2-32b77b809e41",
        "cursor": {
          "ref": "fb0da885-a6fd-4ae5-80a6-6454c6f9f90a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e2592122-9098-4f63-b007-138286c0b65f"
        },
        "item": {
          "id": "02a7d02d-ad6d-454d-98f2-32b77b809e41",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "631af035-86cb-4d82-be8f-f071ab9b654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f4829b-297c-416c-a48b-de9815819593",
        "cursor": {
          "ref": "968ca2e7-911b-4529-986e-3ec6e24be63d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "45d44289-8050-4c82-902c-7c1c65e73075"
        },
        "item": {
          "id": "91f4829b-297c-416c-a48b-de9815819593",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f35cd1a1-4ddc-4384-bd59-9f3e75990c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614204c8-6ec3-4d81-95a6-e5f06bd891a1",
        "cursor": {
          "ref": "3b5f714e-105f-4207-b8e4-ac8bd8daa0c8",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "76fe9835-0cbc-4ae0-82fb-d6c6f6d5c16e"
        },
        "item": {
          "id": "614204c8-6ec3-4d81-95a6-e5f06bd891a1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "35d8d196-772b-4340-89d2-56b84626b405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ede40b3-9625-41ea-9d6d-8b4da2fe9f5a",
        "cursor": {
          "ref": "06dd8f22-081c-49b1-b4cc-6665aca43e8e",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "531ad874-168e-4e39-b8d3-fbe3c8173eae"
        },
        "item": {
          "id": "5ede40b3-9625-41ea-9d6d-8b4da2fe9f5a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "be160fe9-15e4-4a29-9c40-45a3d1f03797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fecd6fd-2702-4be1-808f-711d533ae285",
        "cursor": {
          "ref": "9bc302eb-f30f-49e8-b3e9-b56baa483807",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8f1d8c66-12bd-4745-bc5c-0209ecd48005"
        },
        "item": {
          "id": "2fecd6fd-2702-4be1-808f-711d533ae285",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8e9cf59-8eb7-48f6-8d94-2a840ee8f097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7585aca-d93e-45d9-ab3c-ac2b1cb5a28c",
        "cursor": {
          "ref": "88f8e780-0a8c-4d4e-9c7d-6edc65bb1b94",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c3c6596-2b62-4180-9140-8fad1e3822c1"
        },
        "item": {
          "id": "b7585aca-d93e-45d9-ab3c-ac2b1cb5a28c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fd781693-a0c0-4e9c-a127-93441b7678aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2793fe2c-2609-43b3-839d-db7b9ca2bda6",
        "cursor": {
          "ref": "258b84f2-d394-470d-bfdb-d812beaf81a4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c2621325-504b-43a6-881d-7aa60088f186"
        },
        "item": {
          "id": "2793fe2c-2609-43b3-839d-db7b9ca2bda6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "195f5967-f15a-4751-a6cf-2a8de38ece7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e75065-6b7c-4330-9c92-94a1fe3a38cb",
        "cursor": {
          "ref": "1a7cc5da-889b-43ce-9108-bc6d063f580e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "088553b4-b13f-4875-8735-b15737ea5d6d"
        },
        "item": {
          "id": "41e75065-6b7c-4330-9c92-94a1fe3a38cb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e971d75f-a445-4c99-a5e8-2483c1214480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97043be-4c0c-49cc-aead-d5024191595b",
        "cursor": {
          "ref": "d2e35957-7861-4505-af4b-d06bf3d2a72b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "09f41672-b2fc-49a9-9037-9954c52ded20"
        },
        "item": {
          "id": "d97043be-4c0c-49cc-aead-d5024191595b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9c0959f7-48c6-4575-ac10-70f98cc30808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628a14c9-5cd2-40f8-a0f8-90d7067fba0e",
        "cursor": {
          "ref": "7acdaaad-2f10-40f2-a2ba-5c38e5321006",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3e19d8c4-3df1-4509-89a3-cc884633c228"
        },
        "item": {
          "id": "628a14c9-5cd2-40f8-a0f8-90d7067fba0e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2d64c8b3-81c2-4c89-925d-e14e86664feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11510609-54ee-47fd-89a0-6155f47312e2",
        "cursor": {
          "ref": "1c0d67e2-b49a-4d40-9cf8-7e0e02a8638c",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb9f60ca-ede3-4478-a6fe-fe65d914d82e"
        },
        "item": {
          "id": "11510609-54ee-47fd-89a0-6155f47312e2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "64e4f5e7-ce2c-42b8-af89-0203933c5d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f8e646-c9c8-4562-a82a-ef20c0772c44",
        "cursor": {
          "ref": "46fd1d01-a213-48f1-a751-38ce6ba08010",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "50d41209-a9f1-45b6-bbb1-7fa9cda2fd90"
        },
        "item": {
          "id": "f7f8e646-c9c8-4562-a82a-ef20c0772c44",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d84fe165-324f-41ef-8039-3c35b43d8ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9c4fa0-d22f-47d5-bfd3-b2a27e204625",
        "cursor": {
          "ref": "f00e0b68-637d-4deb-9799-d51fcb7c78e2",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8875a7e-26af-4e2a-aae7-6b81be9699f3"
        },
        "item": {
          "id": "9f9c4fa0-d22f-47d5-bfd3-b2a27e204625",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "948ccc7d-3db4-4e77-9f20-048697186672",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0664420b-e89c-4e45-ae3d-ec7a8bff35b0",
        "cursor": {
          "ref": "341b9adb-f46d-4c80-8d58-4d0ce20a74c5",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ed0694d-95ed-4fcc-a7c3-979a6d65e69c"
        },
        "item": {
          "id": "0664420b-e89c-4e45-ae3d-ec7a8bff35b0",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "dc858b30-cbba-4528-8663-a5b07414a3cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 193,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3569da43-7572-4e17-a31b-38a2028b5b43",
        "cursor": {
          "ref": "b6535c1d-cb35-4798-ba22-73966d788d28",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fd6a55f4-3da2-42b4-b05e-86364097cfdc"
        },
        "item": {
          "id": "3569da43-7572-4e17-a31b-38a2028b5b43",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bf8ab7d6-a525-46a1-8489-c8c0b03f4f46",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5c1d4b-6b7d-4b30-98e3-6b25ac9a5795",
        "cursor": {
          "ref": "a7ec5ca3-535c-40d4-a077-687b7c558fdf",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "65b70f51-3cab-41e6-894c-3e6baf8f13f3"
        },
        "item": {
          "id": "6e5c1d4b-6b7d-4b30-98e3-6b25ac9a5795",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2f8ba49f-cb56-4c87-989a-2869d51966b8",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c2eea0-dd39-43da-99bd-4e32b13acf79",
        "cursor": {
          "ref": "b832da4f-1da4-4884-8578-db72e6dee194",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be2e61b0-5910-43ad-888f-b7f2969f224f"
        },
        "item": {
          "id": "19c2eea0-dd39-43da-99bd-4e32b13acf79",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "078369ff-b207-49e4-bd8b-825e5dda1320",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6e1c68-34b3-4483-be73-2c1eb03fb47a",
        "cursor": {
          "ref": "a32ca8a4-1691-46f9-8453-3869dce2ceda",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f8592e3f-27b8-41cb-9d09-6e6616c75600"
        },
        "item": {
          "id": "5f6e1c68-34b3-4483-be73-2c1eb03fb47a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2944e8ec-b8f0-4467-856a-f2e63335999a",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fb12f8-3897-4a55-8432-adf3f211fad9",
        "cursor": {
          "ref": "34208b4f-924f-4522-b897-28165fad019d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cc165570-9fd4-4cc4-9cc2-54344e6441e9"
        },
        "item": {
          "id": "56fb12f8-3897-4a55-8432-adf3f211fad9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b178bdb7-5eef-434f-a65c-8d1b3f24a5e4",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79ef0b3-65ca-4ae7-8d9c-97eadce2f38b",
        "cursor": {
          "ref": "148436b2-25ec-4c16-b054-266db361e979",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e44747ea-5416-41ec-a15d-a9c086c8f408"
        },
        "item": {
          "id": "f79ef0b3-65ca-4ae7-8d9c-97eadce2f38b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1bd5706e-7472-4b02-b34d-2d5503df9062",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937fbbc7-22c0-445d-9aa6-f0ce535e37ff",
        "cursor": {
          "ref": "cbf2a12f-f13f-4133-95f8-f9f6d5fc6067",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fcc9a959-85c9-4350-b802-8c4fdc6f9558"
        },
        "item": {
          "id": "937fbbc7-22c0-445d-9aa6-f0ce535e37ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "813a44ed-0669-4a81-9263-9fdd01e733df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937fbbc7-22c0-445d-9aa6-f0ce535e37ff",
        "cursor": {
          "ref": "cbf2a12f-f13f-4133-95f8-f9f6d5fc6067",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fcc9a959-85c9-4350-b802-8c4fdc6f9558"
        },
        "item": {
          "id": "937fbbc7-22c0-445d-9aa6-f0ce535e37ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "813a44ed-0669-4a81-9263-9fdd01e733df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c2d9bb-18ab-4eda-a391-60c2166be5fe",
        "cursor": {
          "ref": "2c1ff7a1-1659-4b70-ba32-d5681d70f172",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "27ce31e5-c8bb-4d9b-b219-00001913bb82"
        },
        "item": {
          "id": "94c2d9bb-18ab-4eda-a391-60c2166be5fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72991aac-5787-42bf-b198-1a2876b1191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0432bb-e62f-45aa-824b-bdecab901244",
        "cursor": {
          "ref": "0c55a230-99a5-4ea4-a977-d28515866c3f",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "23395b3c-0e02-4120-87b4-322c0d90bd0c"
        },
        "item": {
          "id": "3b0432bb-e62f-45aa-824b-bdecab901244",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "945e3c0d-a0f0-4be6-a53a-ea9055a3ab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca40184-6796-4e77-9547-0bbafe0ed50b",
        "cursor": {
          "ref": "359e7875-bff8-4337-b914-4582f54bd629",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "63aac249-22ee-434d-80c6-83550e132181"
        },
        "item": {
          "id": "4ca40184-6796-4e77-9547-0bbafe0ed50b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cedfd103-830f-4830-8b25-6ba723577106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9953c777-6fa0-4e0b-b088-ef95ad0fb18f",
        "cursor": {
          "ref": "c708bad5-c2e0-4275-82bd-99c7cdb59698",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2d778535-0091-4d6e-a6c8-b2a0baef70ac"
        },
        "item": {
          "id": "9953c777-6fa0-4e0b-b088-ef95ad0fb18f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44d7cace-287b-47c7-a67e-5237d05feddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460ab794-07e4-4437-ba68-1d04b73ae1d0",
        "cursor": {
          "ref": "c27640b9-f9c4-4495-8a12-73e8cd38dd29",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8417a4c7-b2e9-4ce7-a2f3-2822d8ece6d3"
        },
        "item": {
          "id": "460ab794-07e4-4437-ba68-1d04b73ae1d0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4e2f60a-46d6-4dc3-8590-6c5ecc62ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69d5394-7e8d-47b1-9812-606e9d4048ca",
        "cursor": {
          "ref": "ef54ccb9-c0be-40bc-9984-c48325b9d950",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a97c427e-aebd-49c8-b527-cf8c3dfa6f4c"
        },
        "item": {
          "id": "b69d5394-7e8d-47b1-9812-606e9d4048ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d44cba5c-fd33-4164-9b12-9940d7d0bcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44465e1f-e71f-476b-9de9-9600c92f87fd",
        "cursor": {
          "ref": "df729094-42d8-4a02-a69b-b47f11f1cdc8",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dc6b9b0f-f6ce-44b7-80b3-fd72ea739d10"
        },
        "item": {
          "id": "44465e1f-e71f-476b-9de9-9600c92f87fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "67b72a2d-0f38-4cdb-85e8-53782cdbbaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c58360a-ae07-488e-8b82-8637af3b4424",
        "cursor": {
          "ref": "f364da5c-8a70-4083-a1e2-f7e7e1f6de8e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c81522a1-0772-44cb-91ae-7de426bff53f"
        },
        "item": {
          "id": "0c58360a-ae07-488e-8b82-8637af3b4424",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54f02b42-ba1a-4661-861a-978087427a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53f2e5b-be69-4ff1-848c-6c4eb7aaba68",
        "cursor": {
          "ref": "c0f1de0b-b3d6-4808-bf3d-04e53aaf6e71",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a0d3284b-a2c0-46dc-831b-1ecab86cdd5e"
        },
        "item": {
          "id": "b53f2e5b-be69-4ff1-848c-6c4eb7aaba68",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0c7f749a-2b04-425f-b847-d261be49d420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994c959c-e2e8-4a0f-84f6-0d61693d52db",
        "cursor": {
          "ref": "415f7f86-d8c7-46a2-a59c-a5aff57a636c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d5265ffa-9407-4738-992f-b1fcb891093b"
        },
        "item": {
          "id": "994c959c-e2e8-4a0f-84f6-0d61693d52db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16458922-2528-4bfe-85b1-b9c2db2526d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05da4ce8-33d1-4a6d-8e92-c06209e29a1b",
        "cursor": {
          "ref": "2b936975-52e0-4b16-863f-3a2438af8b19",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0855d987-6c17-4e5f-9544-c9779e4d7961"
        },
        "item": {
          "id": "05da4ce8-33d1-4a6d-8e92-c06209e29a1b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c2fd381c-bd9c-4432-a286-2860c950df1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd70276-7ad6-4221-894d-bf6be6bfd799",
        "cursor": {
          "ref": "3c93b8c3-9f62-4b60-af78-4aa4c5e3f043",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4e1759c0-40e9-4e87-b1bb-dc10c92e149e"
        },
        "item": {
          "id": "7fd70276-7ad6-4221-894d-bf6be6bfd799",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "792347be-eb8d-4589-ba86-dd1aa12259a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db28751a-88bd-45dd-aac6-cbca9231662e",
        "cursor": {
          "ref": "bc4f0993-1916-4b53-85fb-9843696d835c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5bb96e04-debe-4a91-9eb9-04b753ea78d8"
        },
        "item": {
          "id": "db28751a-88bd-45dd-aac6-cbca9231662e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "17696dbc-97ef-4d78-a522-d61a329144aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96992f67-e569-47d1-bbd8-20707f36576e",
        "cursor": {
          "ref": "c6ab69a2-1d55-4efd-b7b2-ad76edb1e6cb",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c0d9e580-e079-49b8-8474-4c3010774223"
        },
        "item": {
          "id": "96992f67-e569-47d1-bbd8-20707f36576e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9ceb49f1-24bc-4a55-85c9-df6c5a2ac420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b3e3c1-5e72-4225-b147-9a0f492de172",
        "cursor": {
          "ref": "1bb903ac-b299-4353-8c34-60ba1820c1d5",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2df9f757-38b6-4fd4-9aeb-3e99c1b92065"
        },
        "item": {
          "id": "f2b3e3c1-5e72-4225-b147-9a0f492de172",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "24a820d4-31d7-423f-9932-e960add8900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d48839-c74a-451b-aff1-a9e20439384f",
        "cursor": {
          "ref": "66e99bca-e096-4b77-b134-833e75e3d7df",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c8ff1e1d-31e9-4875-b660-2d55cc5d878c"
        },
        "item": {
          "id": "10d48839-c74a-451b-aff1-a9e20439384f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3e166b96-a3a9-49aa-8895-95c0dcfbccc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b6acf0-7420-4637-8aec-3d0e5c3a99af",
        "cursor": {
          "ref": "3fef5957-f1b8-46b0-9615-5db2ce0dc189",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bd8a376a-9185-48f2-b179-38ff1cf8845d"
        },
        "item": {
          "id": "67b6acf0-7420-4637-8aec-3d0e5c3a99af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "659602e0-62c1-45e6-9f5c-d38b8ca37480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5125f8fe-94e9-40f5-aa5a-55a87962354f",
        "cursor": {
          "ref": "b36f8281-368b-41a0-929c-4559f6edd8ed",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e47785bb-efcd-4646-8dfe-4fc1dcc62ab6"
        },
        "item": {
          "id": "5125f8fe-94e9-40f5-aa5a-55a87962354f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e2839b4b-8250-4770-a0b8-e672cbc97993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bb90a4-13b9-4b2b-b28a-186e97fb2345",
        "cursor": {
          "ref": "b63284b6-189d-4a1a-901c-2ad146b10266",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e08b4e66-4f5a-4576-9aeb-c0ef400cf98b"
        },
        "item": {
          "id": "f0bb90a4-13b9-4b2b-b28a-186e97fb2345",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a948449a-cf65-43f0-9a85-513db0fe9a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d23ae73-87da-4cf9-8434-2a2e6ec4df4d",
        "cursor": {
          "ref": "73b0a0b1-e3ca-4bd6-8317-7d56be5338a0",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d3de21bd-169a-4b55-9338-5c3b966fbaa2"
        },
        "item": {
          "id": "0d23ae73-87da-4cf9-8434-2a2e6ec4df4d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7dfb7096-ca7c-4f9b-b083-06d001540fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b6dabd-3a49-4b23-94d3-a69e8218a19b",
        "cursor": {
          "ref": "258bb233-061a-47cd-98cd-91875685f7f4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9dc4316c-b2c9-48a9-bfa8-1d37ad17b338"
        },
        "item": {
          "id": "60b6dabd-3a49-4b23-94d3-a69e8218a19b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e37ff57e-526c-4c97-84c5-692c738646eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969e11a7-d6e3-40b2-af81-ca4e27d29cbf",
        "cursor": {
          "ref": "2c297ff9-356c-4737-96d6-86924daf7758",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b7042720-4f25-4328-a381-61fa355214b6"
        },
        "item": {
          "id": "969e11a7-d6e3-40b2-af81-ca4e27d29cbf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44db59a8-51ac-479a-baf6-21163bc3c1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d02a84-11c1-4386-be47-d0acfb2784c2",
        "cursor": {
          "ref": "3fffe77f-8200-43b4-b8e3-a2cbd5e5a870",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2f5241b7-b637-4aec-8c29-abd8e666e501"
        },
        "item": {
          "id": "19d02a84-11c1-4386-be47-d0acfb2784c2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b14da91-540f-48a1-b4a2-bd736a91bc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a86384-619c-4073-86b2-d8ec081d135a",
        "cursor": {
          "ref": "58fae749-f646-46d3-8f11-a9fa8c0827a0",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dc4bc8cc-235e-4f8d-ab54-864523d18825"
        },
        "item": {
          "id": "f4a86384-619c-4073-86b2-d8ec081d135a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d8629b5b-a601-46c7-9881-b26f683b1d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ef469-6e34-48df-9ecf-22d7f0b5dbf3",
        "cursor": {
          "ref": "da432482-1a51-45c1-b315-e0e0de75a455",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "64bc70df-d520-4299-9620-b353b210f2a6"
        },
        "item": {
          "id": "418ef469-6e34-48df-9ecf-22d7f0b5dbf3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9db94e8e-a21c-46e7-86a5-c0f6bae80afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef6bbed-c94c-45e3-a5bf-1ce505c9853a",
        "cursor": {
          "ref": "0185b08e-e179-4280-afbc-a8438ea82062",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a7c8e8c1-de0c-4222-ad17-972eb6f25e07"
        },
        "item": {
          "id": "bef6bbed-c94c-45e3-a5bf-1ce505c9853a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "107629fd-8cad-4ad3-8a97-5e6eb54396a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a453004-aeb1-42f5-8d1e-1faa3a27db2c",
        "cursor": {
          "ref": "3b909b59-7ee6-4338-9d10-212f927bc745",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "98625ad6-fdc8-45aa-95c4-9e47da6c0f4f"
        },
        "item": {
          "id": "8a453004-aeb1-42f5-8d1e-1faa3a27db2c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "775011fa-3706-4e43-830d-0531eab5523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bfdac6-d2d8-4c58-bcb5-62c4fffbe049",
        "cursor": {
          "ref": "28fe7015-b585-40a4-b608-defa9908688b",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cc8c2cf5-cff0-4991-8d2f-5718a8005fba"
        },
        "item": {
          "id": "a2bfdac6-d2d8-4c58-bcb5-62c4fffbe049",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ceee0555-90f9-4064-9ebe-6cb648655834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813268e0-ffe0-4f5b-9366-b01bee4758bc",
        "cursor": {
          "ref": "34ac0a7a-dd8a-4d1a-95a6-35fb2ffed4fe",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f69588a-f2e8-46aa-a56f-70e09bdf6c4b"
        },
        "item": {
          "id": "813268e0-ffe0-4f5b-9366-b01bee4758bc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "927312a0-515b-4e5d-8b6b-d052075a138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e77cd0e-f293-4e92-bb33-2444d741b307",
        "cursor": {
          "ref": "d7da9dce-ba5a-4c66-8b18-7059427dbea9",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8edbc5a5-42ec-4667-8dc1-b0d62377bdb5"
        },
        "item": {
          "id": "3e77cd0e-f293-4e92-bb33-2444d741b307",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b8706fe-efce-4070-bb62-b5f6043172d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c85c03-1137-4d62-a404-5f1b747ce369",
        "cursor": {
          "ref": "8b863ea1-3d6b-4f0b-8aed-e651a9448482",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "42b628e3-7817-4d9d-82a3-b156b50653c7"
        },
        "item": {
          "id": "51c85c03-1137-4d62-a404-5f1b747ce369",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "533cac60-e063-4c3c-8d30-61290cd938c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd45643-5b53-49ef-b563-ea100115b3a3",
        "cursor": {
          "ref": "f39ad51e-62ef-4426-afe6-381bfe8f57e1",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec9a023a-78e7-4fc0-aa3e-849771b54445"
        },
        "item": {
          "id": "7dd45643-5b53-49ef-b563-ea100115b3a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38f557f8-212e-4714-859a-2c2bedf53e12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa411f58-0eae-4b39-afdf-b0a0487f24e4",
        "cursor": {
          "ref": "0bf1d843-781b-45a8-a7fe-cee64caa63cf",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fd5bacbd-02e5-4f00-b3ad-0c62252257ee"
        },
        "item": {
          "id": "aa411f58-0eae-4b39-afdf-b0a0487f24e4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "94991881-bba6-41aa-bb4a-223a42ae512a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb99c891-a37d-4068-9bdc-c7ccb618e24d",
        "cursor": {
          "ref": "3a169683-d1cd-4bed-9bdc-7fb24b1f29f8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "56129c8f-0b85-4beb-86ea-915e98ef0701"
        },
        "item": {
          "id": "fb99c891-a37d-4068-9bdc-c7ccb618e24d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dfd52c57-e5d1-4b88-8c7f-3ad473af546c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb99c891-a37d-4068-9bdc-c7ccb618e24d",
        "cursor": {
          "ref": "3a169683-d1cd-4bed-9bdc-7fb24b1f29f8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "56129c8f-0b85-4beb-86ea-915e98ef0701"
        },
        "item": {
          "id": "fb99c891-a37d-4068-9bdc-c7ccb618e24d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dfd52c57-e5d1-4b88-8c7f-3ad473af546c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e469a6b6-1f9f-45fc-9652-b39fc113a7fd",
        "cursor": {
          "ref": "bce7a896-9b9b-44b8-895a-b89727592eea",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "022cf9dc-227d-4d5d-b80b-b09d48f2e378"
        },
        "item": {
          "id": "e469a6b6-1f9f-45fc-9652-b39fc113a7fd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2106fdb0-4761-45a0-bff4-a21f48b09f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8665a1-cbd4-4c69-b903-c9aa9bc9f270",
        "cursor": {
          "ref": "a631aef3-03a1-45d0-aea0-ea764bf2b5a3",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2aff4084-2cdf-458f-93c8-25d036c02967"
        },
        "item": {
          "id": "8d8665a1-cbd4-4c69-b903-c9aa9bc9f270",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "48d41318-7f82-42d8-9964-885701716ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f7b78-bd0b-447c-8726-78a9223c4a50",
        "cursor": {
          "ref": "2e693ae1-c9be-4bf8-8b43-fd29fdd83967",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4fd30b8c-a45e-4b9c-a990-0eb63d40eab1"
        },
        "item": {
          "id": "862f7b78-bd0b-447c-8726-78a9223c4a50",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "44f77459-d8d9-4394-a590-e648e23f7f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68b7e6d-0d40-424c-8e73-8ffbc4851c03",
        "cursor": {
          "ref": "cc104b47-4667-49fc-8573-5551b8b14880",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "37975a34-eea3-4140-924d-fe4d09de2ce9"
        },
        "item": {
          "id": "e68b7e6d-0d40-424c-8e73-8ffbc4851c03",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ef79f07d-5978-430e-9942-6a86fdbc0930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d686a46e-09a6-4d83-8e81-964f534ec4df",
        "cursor": {
          "ref": "1df2e6c5-d5ef-4702-8ba9-1834e4983045",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "804812a6-75ae-47c2-86b2-5126761e221b"
        },
        "item": {
          "id": "d686a46e-09a6-4d83-8e81-964f534ec4df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a75ee725-d8b4-4c26-9b1e-071a55ff6ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5a33a2-9138-4ee7-abed-b4f9b987872c",
        "cursor": {
          "ref": "f73252eb-5524-41ec-8ef9-c796bd7df74f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9ad9503b-ab63-496e-b6ca-5e59b77face1"
        },
        "item": {
          "id": "9b5a33a2-9138-4ee7-abed-b4f9b987872c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c11041b7-eaff-4bb6-bb02-8b689284b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad4f78e-ad33-49e6-aac8-1347480b9ce2",
        "cursor": {
          "ref": "e2942ad0-c08d-4ab8-95ac-e5e2b6256cfa",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "276b19db-6009-42ad-b323-4d0e23d6bfde"
        },
        "item": {
          "id": "4ad4f78e-ad33-49e6-aac8-1347480b9ce2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5f254e08-8c3d-4f50-a5ef-178055b6b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622dcf4c-74b5-421e-9311-0ebba79848b9",
        "cursor": {
          "ref": "f1912bcb-66e6-4fa1-bc3d-79edade7b9f4",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5682628f-a9af-43a2-b15a-0548551d66d7"
        },
        "item": {
          "id": "622dcf4c-74b5-421e-9311-0ebba79848b9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "684bfe5e-4cac-438d-a10b-0b74aa243898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dbd2bc-3806-4ee2-9ea9-16344c3a0834",
        "cursor": {
          "ref": "8eabf827-a6c6-46a1-8d57-94aa61655217",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "01269e6c-d6fa-4ff7-af9f-2d69dd0dfbc2"
        },
        "item": {
          "id": "73dbd2bc-3806-4ee2-9ea9-16344c3a0834",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "54500904-e3c9-4b63-88c7-5347e9c909ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00bc020-371e-4ed0-a833-1c5be705125c",
        "cursor": {
          "ref": "a64faffe-9123-4903-a292-09c9da34a7b8",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3e589caa-d77b-42d8-8845-816d44b1e322"
        },
        "item": {
          "id": "e00bc020-371e-4ed0-a833-1c5be705125c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "279b1120-b49a-4262-a7b8-5ec15937b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eb9cd7-68f4-4d29-a60c-b32b7753058a",
        "cursor": {
          "ref": "7493fc71-9147-4922-92a5-991ac5c05575",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "212d69e6-12fc-4063-8cd9-846092cf187a"
        },
        "item": {
          "id": "90eb9cd7-68f4-4d29-a60c-b32b7753058a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "47b6462a-79d3-40a6-8ec5-e7f5bbdbdc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3063a28-f236-4568-8bfb-b24cd1747c7e",
        "cursor": {
          "ref": "1f95781a-5358-4a11-9479-3f62ddfd800c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fb8e3a37-f4d0-4697-bc5f-9a871c0092b1"
        },
        "item": {
          "id": "c3063a28-f236-4568-8bfb-b24cd1747c7e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0559045d-6296-4911-93bf-72235504107a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7187ce8-9f81-4985-ad06-ddefd9325f07",
        "cursor": {
          "ref": "7c2bc49c-b3f0-479f-8d3c-0232893b67e6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "50dc0dc7-4877-486a-98fe-78364fbe343c"
        },
        "item": {
          "id": "b7187ce8-9f81-4985-ad06-ddefd9325f07",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6cc47ea6-7103-4e34-b17e-95feaed1a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e973d84-c4ce-46dc-9bea-0e785c29b40a",
        "cursor": {
          "ref": "da177b82-03d8-4925-9c11-c8b1ed663d42",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ea7a513-7c50-49a1-ade3-a74a44fbc9e3"
        },
        "item": {
          "id": "8e973d84-c4ce-46dc-9bea-0e785c29b40a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ab8132fd-ed99-466b-af12-8519b45c6e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529fdacb-d82b-46d1-b059-a93f7d754b0b",
        "cursor": {
          "ref": "61642ea4-16fd-4c0a-ab0f-e52ec4530844",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "744774ec-1463-4383-bc6d-187ada52a3a5"
        },
        "item": {
          "id": "529fdacb-d82b-46d1-b059-a93f7d754b0b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ef863941-1b65-455d-b1df-38bb6f33a903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b626dde-59cd-4b32-a1e2-fa4e2fc770ff",
        "cursor": {
          "ref": "0d3febdb-03e3-46b8-8f41-184b5469379c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37140a15-8b08-4b4b-8dc7-2acaca544ee9"
        },
        "item": {
          "id": "8b626dde-59cd-4b32-a1e2-fa4e2fc770ff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e98cd45-bff8-4751-a963-e9a2969cef98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006144f1-a0e4-4b71-93d6-0da91a6fd4e7",
        "cursor": {
          "ref": "e5acfda6-321f-41a5-b246-99c0beec9f0b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b3ae83d0-e1f7-4748-8e58-4d0264b60893"
        },
        "item": {
          "id": "006144f1-a0e4-4b71-93d6-0da91a6fd4e7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "59cd093b-cae2-4a0d-9b5b-afc4bc5e0c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988c908b-6755-4ee8-bfd3-7d74c800f2cb",
        "cursor": {
          "ref": "3390ac94-ebbb-4114-b308-c9c75bb378ff",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c2e49aa5-7c8b-4427-b690-28082727c7c8"
        },
        "item": {
          "id": "988c908b-6755-4ee8-bfd3-7d74c800f2cb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ff5ef01-bb6f-4044-b309-d019fbb9c847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3bed82-de71-45fd-a3d1-5707f4f96cb5",
        "cursor": {
          "ref": "e0b589a9-4a3d-47f4-939b-fc3f341cc883",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "37ff3d2f-3f1f-43b7-bb26-20adddc273c6"
        },
        "item": {
          "id": "1a3bed82-de71-45fd-a3d1-5707f4f96cb5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b28d33c9-b510-4cda-b3c8-0379a39bd8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15e3a4e-dce9-4a25-92e6-3ced1ea938b4",
        "cursor": {
          "ref": "ee6b4624-9efc-451c-8834-48400d99485a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "407c661a-84a3-4027-8a28-089fd3e56c9a"
        },
        "item": {
          "id": "c15e3a4e-dce9-4a25-92e6-3ced1ea938b4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d739b4c1-857e-41e0-a0e1-e2195c88739c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ea044e-a8de-4f57-82c0-65aba6cba59f",
        "cursor": {
          "ref": "3da1e05a-b23e-4386-bf2b-b33096fffe32",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5015e0a1-363a-43db-a573-d4a843f47ca9"
        },
        "item": {
          "id": "94ea044e-a8de-4f57-82c0-65aba6cba59f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a5cd73f7-4f44-4c97-9838-5db1f08be39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80f8ce1-f09c-4f03-9eab-72454b40ea12",
        "cursor": {
          "ref": "7a4ab5e8-3b74-440b-ab18-c6791ea2a58a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8da599ed-24d4-4430-8316-bd094cecd5e5"
        },
        "item": {
          "id": "b80f8ce1-f09c-4f03-9eab-72454b40ea12",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e29b0e3-e300-45b2-abb3-e1f3a3ae0ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d2b635-877c-44db-8708-0ca6a49c2245",
        "cursor": {
          "ref": "859640ad-2738-421d-b371-ec73f681ccd9",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0194c1b1-8ed1-4586-9332-c31660ef438d"
        },
        "item": {
          "id": "71d2b635-877c-44db-8708-0ca6a49c2245",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "076798d9-7801-42d6-a3c5-8ea1f2578250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273772e1-0d54-4d42-9ab0-4112433af4b2",
        "cursor": {
          "ref": "7ab02247-0a37-4e69-9787-fc3d198919a6",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2fc7eb4a-83e9-4a94-bb7d-7a740b16db02"
        },
        "item": {
          "id": "273772e1-0d54-4d42-9ab0-4112433af4b2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5d85aadb-04d7-4637-86dd-ffe5b5d728dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2836cd5a-eff2-431b-974e-13aed615537c",
        "cursor": {
          "ref": "da80b72d-f379-46e4-8467-f4b44a39febd",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2b1d404a-b22b-44ec-bf35-dc295789aa27"
        },
        "item": {
          "id": "2836cd5a-eff2-431b-974e-13aed615537c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f6c851de-62c6-4c1f-9064-54e4313e7849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c415a0-c037-45b9-a870-9673debf1062",
        "cursor": {
          "ref": "c1de2b6f-42c1-4ab9-9c17-86444ae7d864",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3e822c09-4d5f-42b2-a180-d7407514fb55"
        },
        "item": {
          "id": "18c415a0-c037-45b9-a870-9673debf1062",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9eeaa553-86bb-45b9-b18b-2f365ed86744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6190f4f3-2802-4636-ad56-df90e1a7b379",
        "cursor": {
          "ref": "936a86cd-e58e-4266-a4b3-5b9c380d74e3",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f5a74031-9c74-4af9-80d1-a1263783a3ed"
        },
        "item": {
          "id": "6190f4f3-2802-4636-ad56-df90e1a7b379",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4715ceef-3ed8-4461-aa93-66317a365967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289ffd27-f2a6-48b3-942b-7144044cd096",
        "cursor": {
          "ref": "daed6b38-9994-4d77-a84b-deb51d792690",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cd1212ed-53dd-49a0-a1f5-095d52a508e1"
        },
        "item": {
          "id": "289ffd27-f2a6-48b3-942b-7144044cd096",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e91ecfcf-ece9-4ffe-b223-78d76cdf7e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40af30cf-617d-4eff-b735-1dde0805f8c3",
        "cursor": {
          "ref": "dde36d0a-2966-49bf-b71a-0a5c8805bf3b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c8f1b8ed-76b2-4fc2-bf11-3e7a671700e5"
        },
        "item": {
          "id": "40af30cf-617d-4eff-b735-1dde0805f8c3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f6678bf5-9951-4560-a293-2fa49a1828b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eee750-2463-47d7-8827-1ff083ad3cfe",
        "cursor": {
          "ref": "d59e4ed6-dbf7-4f2e-a4a8-21bafe5b7d17",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "69372632-a7f1-4753-95d7-82f31ccac1c2"
        },
        "item": {
          "id": "a2eee750-2463-47d7-8827-1ff083ad3cfe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "683d6804-45bf-4069-a8bd-cf86385bf1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38845612-38a9-4d52-aa50-1a898ebc1067",
        "cursor": {
          "ref": "64cfcb2c-2b54-4709-955b-c97ca2b9efcc",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "34f7a218-4cac-4eff-bb0c-2c4ca630fd45"
        },
        "item": {
          "id": "38845612-38a9-4d52-aa50-1a898ebc1067",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fec3874e-3747-41f4-ac15-b40b6d8b4ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632bafa-6acb-476a-ab64-b4d9e0eb5015",
        "cursor": {
          "ref": "af5d51da-0bec-48b8-b5b4-27ba0bd1d4a2",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1161fdf7-9068-4804-bbfc-cb993cae0703"
        },
        "item": {
          "id": "a632bafa-6acb-476a-ab64-b4d9e0eb5015",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3cc163ee-86b5-4f50-9a84-39abd8abaac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44905f61-6ecd-40d9-add8-87dd4af44a72",
        "cursor": {
          "ref": "3450bc8e-5557-44ab-8788-95b8f27a1478",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "74875f48-db69-4b99-a27d-966510a60792"
        },
        "item": {
          "id": "44905f61-6ecd-40d9-add8-87dd4af44a72",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cd3d44c1-9738-40b7-a2e3-cf211600f7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a51c0e-33fe-4561-bf96-43abb0cecf15",
        "cursor": {
          "ref": "c63f5a04-382c-46bd-b2d1-5a9d7f3083b6",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7cc82ee1-6d7b-4df2-b73b-4c9fba957814"
        },
        "item": {
          "id": "31a51c0e-33fe-4561-bf96-43abb0cecf15",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "83bee7d8-9f44-4149-8cd1-83378f7c364d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34c180-8110-482e-9227-bba7bcb6bc68",
        "cursor": {
          "ref": "a8ce228e-62c8-45ae-9191-ce87d42335ef",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fff7f81b-0ade-41bd-be1d-b68ffd3f4c95"
        },
        "item": {
          "id": "0d34c180-8110-482e-9227-bba7bcb6bc68",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a8ebd51b-3e14-4e85-8f2b-ad285bb2645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fee607-523c-4e01-a4af-fd687541d528",
        "cursor": {
          "ref": "e7ad6fdb-c6f6-4b1d-bdea-6e325b82c240",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "59519782-23db-46e6-a870-bf83110a47b2"
        },
        "item": {
          "id": "23fee607-523c-4e01-a4af-fd687541d528",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "402f421d-6c5c-4d08-91bd-8dd7567953b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fca7831-853e-49ab-a337-93bbb3f69db9",
        "cursor": {
          "ref": "aef69f68-f911-4dd4-9e2b-a22036d0861e",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9840c4d3-2b49-4987-847c-20f7c1993cb4"
        },
        "item": {
          "id": "3fca7831-853e-49ab-a337-93bbb3f69db9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e399cf2a-c7f8-4045-957b-6177e3ae9fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f53a053-7c04-4e46-b293-4d37479a9ee6",
        "cursor": {
          "ref": "e0412922-74d8-40a5-b6ee-ed763de6fa29",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fd92b49d-d068-4242-aaa4-9ef4ef1ff9fc"
        },
        "item": {
          "id": "2f53a053-7c04-4e46-b293-4d37479a9ee6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "70572288-b418-410a-bbd1-35cdfe6be507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9fa65c-e342-446e-8a96-2335c9d6f62b",
        "cursor": {
          "ref": "91c1da94-3763-4e44-aa80-aa065965e8a2",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2ff0b30-ccee-43f6-9f46-cef53380cb97"
        },
        "item": {
          "id": "6b9fa65c-e342-446e-8a96-2335c9d6f62b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7c7e1ca6-f9a3-4fab-81f7-397e8942e062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e47aaf9-e5a7-48d4-87d4-6e960575795b",
        "cursor": {
          "ref": "4de5c6fb-6c62-43bf-a667-554c54a19299",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "532947eb-832c-4b3b-93da-1d48bc3d42ba"
        },
        "item": {
          "id": "1e47aaf9-e5a7-48d4-87d4-6e960575795b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7af701ba-678b-4c89-ae46-ff46ef90c755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c189baa2-663e-42cd-a093-64994e25a7a5",
        "cursor": {
          "ref": "02909a25-d2d6-4267-b210-7745e7a15ecb",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e9217126-74bc-49ce-a406-25ba1dafcfb0"
        },
        "item": {
          "id": "c189baa2-663e-42cd-a093-64994e25a7a5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "237b5da6-6f12-435f-96bb-ae8f49d7c906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17acf5e-2c1f-48d2-b88b-391a165e2a49",
        "cursor": {
          "ref": "7c39f83e-13ff-4b59-82e4-4a2bb41e9e5b",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "61a8709d-bcbb-456e-9546-bc5d37ae0ac7"
        },
        "item": {
          "id": "e17acf5e-2c1f-48d2-b88b-391a165e2a49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "80d3d7f0-11e8-4010-b6eb-31f6f6861791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db115fc-6231-4001-934a-0f646210255f",
        "cursor": {
          "ref": "17804130-972f-4d4f-ad7b-93d3cfd8f416",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a15879bc-70dc-4446-97c2-ba08fee4294d"
        },
        "item": {
          "id": "9db115fc-6231-4001-934a-0f646210255f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01a41f24-8a69-4f5c-9701-2b4c990ab948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324dfc3a-fce3-405b-9767-b1b49079d4db",
        "cursor": {
          "ref": "f448ca81-3673-45e0-bac2-036eaf1773d3",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff005007-e893-40c6-a3bc-6538d651ec56"
        },
        "item": {
          "id": "324dfc3a-fce3-405b-9767-b1b49079d4db",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2255f1a8-81eb-4921-8c8c-b472156b38fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f66458-6e07-4b3d-bc88-d258eee52b93",
        "cursor": {
          "ref": "07ffbd1f-c57e-4736-8d0e-cdae46ed594a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f822c263-556d-4baf-a235-560083d52870"
        },
        "item": {
          "id": "08f66458-6e07-4b3d-bc88-d258eee52b93",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "52dc16af-cbb0-4211-b5e3-b5eea14db139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae581698-0322-4dad-8feb-a7f80d72e18d",
        "cursor": {
          "ref": "73546090-ac14-487f-92a2-b9a01eaddddc",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e1b8968d-92ad-4517-aa52-043c65434684"
        },
        "item": {
          "id": "ae581698-0322-4dad-8feb-a7f80d72e18d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cb98f234-9bfa-4d91-8a0d-67e51268833c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e38fda-b276-4aa7-b3fb-affdf77d5fcc",
        "cursor": {
          "ref": "9b3e72c8-ab7a-42ac-ac23-bb191df7cfe7",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3e0340b8-bb54-47fe-9937-21bd468944c0"
        },
        "item": {
          "id": "72e38fda-b276-4aa7-b3fb-affdf77d5fcc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "216de2b6-e646-45a8-aa4c-797aa17c30df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562e3e3d-3db0-499e-a536-6e10bd70f4d1",
        "cursor": {
          "ref": "66c27c00-7b75-4b11-9d14-200a3a44e3b8",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1ab54ef4-e127-41d1-a397-2904ad899c20"
        },
        "item": {
          "id": "562e3e3d-3db0-499e-a536-6e10bd70f4d1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "237b42cc-7503-4bc2-a973-bf380c70f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6609b00e-8687-449a-93d2-e5983a43a993",
        "cursor": {
          "ref": "68b13a1d-e35f-44bf-9251-f63ae7685805",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "91a523c3-b1a4-4f17-b176-2159a5c3211b"
        },
        "item": {
          "id": "6609b00e-8687-449a-93d2-e5983a43a993",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4da327f7-db80-42a5-a543-f9940ac3fdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b1ee1b-80b1-45b3-90ea-c1c4d794b63e",
        "cursor": {
          "ref": "10a99633-be62-4e72-900d-cb4782d546d5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6658f953-9b8f-42d5-a049-92c4fa8bee5b"
        },
        "item": {
          "id": "13b1ee1b-80b1-45b3-90ea-c1c4d794b63e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6f96883a-b3de-4af6-8b78-8e1089e9f79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d82a287-ac84-43c4-ab9d-da73f633e7be",
        "cursor": {
          "ref": "16f9ed2d-afe0-44b3-9a9d-84856159f4cc",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0f85c423-6b60-498b-b8a4-b880f69c758d"
        },
        "item": {
          "id": "1d82a287-ac84-43c4-ab9d-da73f633e7be",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6428562d-eaab-4348-a5af-05d86d201b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088e2e9c-6ea1-4ef4-83c1-6664efc627ea",
        "cursor": {
          "ref": "e635f752-d54a-4e02-b5d0-bae149ce170b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46f6ca40-e46f-4bf2-8520-ff9c9812192b"
        },
        "item": {
          "id": "088e2e9c-6ea1-4ef4-83c1-6664efc627ea",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "78fdae0a-d152-4ef7-8f79-63c6b3dff5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c70ddf-d877-42f9-80f8-f4575eef783d",
        "cursor": {
          "ref": "5676bed6-161c-46b7-b72c-36189ca17f27",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7ef10821-ae9f-4d7d-a4ad-8a83d181f4be"
        },
        "item": {
          "id": "f9c70ddf-d877-42f9-80f8-f4575eef783d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b184bc1f-90d6-406f-8167-719ac456d9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1bce29-3c49-4e4f-8826-6204380573c3",
        "cursor": {
          "ref": "6845ba76-ac4e-4b50-a89a-921bcc3323d3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ddae86b-64c1-4581-b6f4-5d8bbce9b5df"
        },
        "item": {
          "id": "bb1bce29-3c49-4e4f-8826-6204380573c3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "00364c9d-6567-4342-a5cc-031cb8bb50db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9480f5e9-b984-4708-8829-c524c3badac8",
        "cursor": {
          "ref": "d22d9b30-67ef-4a63-8206-9339a6d0b052",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1d91a243-8921-436d-856f-3f6aedecbf3b"
        },
        "item": {
          "id": "9480f5e9-b984-4708-8829-c524c3badac8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d24ccc7-d473-4e19-b2fa-e18ccd4e236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c4313a-8432-40e5-8b7f-28adfbc71ba7",
        "cursor": {
          "ref": "b5483328-900b-4a22-9f78-7bb84d351a0d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc3dae65-c4fb-4b81-aa48-241b4e428de2"
        },
        "item": {
          "id": "b0c4313a-8432-40e5-8b7f-28adfbc71ba7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9300bdda-aac6-4df6-9d32-ace3f1299d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e918cd79-48ca-427a-b565-f0384a657a37",
        "cursor": {
          "ref": "74fa4a7a-39cf-4f06-960d-61c5fbeb5bf7",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "43f6a15f-b167-4a28-815c-b3956b5fa1e8"
        },
        "item": {
          "id": "e918cd79-48ca-427a-b565-f0384a657a37",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aacff0bf-4e47-4859-ae71-6a091a57ad81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5f984d-fdab-4e46-93f2-e91b7e9be2f1",
        "cursor": {
          "ref": "9538b055-3353-4e35-8b49-3bca358d9e05",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1252c18a-379d-434f-b532-1c47db7a086a"
        },
        "item": {
          "id": "ac5f984d-fdab-4e46-93f2-e91b7e9be2f1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e45c7550-b6bd-4947-942e-3c0164d23627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953b1f0-cea9-4f87-8a34-2ceb0b6ccbbf",
        "cursor": {
          "ref": "d4336493-4ce1-4f12-b755-c65011d67548",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "27a151bc-223c-4898-b999-6d472ffb7098"
        },
        "item": {
          "id": "5953b1f0-cea9-4f87-8a34-2ceb0b6ccbbf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b7f05a7c-c9e7-4150-8ece-7f21cbe8e278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e48916a-c923-48d2-a855-5dff67c172c4",
        "cursor": {
          "ref": "36fa9976-bfed-49af-bf7a-ff2d1aaaed59",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5fd286e3-706d-4c4b-af7c-333d8023850e"
        },
        "item": {
          "id": "2e48916a-c923-48d2-a855-5dff67c172c4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "50274f88-c308-42f8-a444-1acfac978647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68ddc69-816f-45e2-b709-69cc61b9d96e",
        "cursor": {
          "ref": "2ba03aa5-9449-40f3-9abb-a11b9f05fc59",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b8dc1794-b973-4302-9353-0c248c3c84ab"
        },
        "item": {
          "id": "a68ddc69-816f-45e2-b709-69cc61b9d96e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fde3252d-7072-4c71-be2e-576ac4ef27ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77790f93-2dd6-4d7d-9f2b-1c4c0db360bb",
        "cursor": {
          "ref": "6c5a70f7-d67c-458d-8117-ba74307580dc",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e996289f-66c6-47b2-8137-7138795372c9"
        },
        "item": {
          "id": "77790f93-2dd6-4d7d-9f2b-1c4c0db360bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fd2b8bb9-9ab5-43ea-931e-adc0ee1795b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3262a1-c894-43cf-bdba-6a0df8e02200",
        "cursor": {
          "ref": "2d908487-3494-4899-bc17-917d5e0a71ff",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a8fe1ef2-44c3-4b1c-b030-0015e9b8f8a2"
        },
        "item": {
          "id": "fc3262a1-c894-43cf-bdba-6a0df8e02200",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "842abef5-dda5-4824-8d97-9b84bf0b2b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68589f93-db19-4578-abf4-5935132bc33d",
        "cursor": {
          "ref": "92c42fc7-9c06-4fa5-98d3-b7bcc1aecd30",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6fcc982c-6d9e-4eac-89cc-aae3b1319747"
        },
        "item": {
          "id": "68589f93-db19-4578-abf4-5935132bc33d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a2e172a5-7476-4ba4-96e8-b6da1bfb1f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73005166-17ae-4948-bb91-5b206da23330",
        "cursor": {
          "ref": "f0681845-2926-4da0-bfad-d99b6de67bc3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "664c8f02-854d-4e7d-99ef-7f0458f69cdd"
        },
        "item": {
          "id": "73005166-17ae-4948-bb91-5b206da23330",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4cfd10d2-faff-4d45-8515-385bda9457a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef6487c-6181-49c3-a9fe-b07bed0522f6",
        "cursor": {
          "ref": "c212ddeb-282b-421f-b4d0-3f2556782de8",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4782a9dc-6721-46a2-baa1-6aa3d602603a"
        },
        "item": {
          "id": "2ef6487c-6181-49c3-a9fe-b07bed0522f6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f96cbb41-ad69-46ab-b954-1dcd26952ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8296d24-9361-43c0-84ae-001020a96444",
        "cursor": {
          "ref": "8c0d300b-b3ff-4783-9d7c-c767982293f1",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ca9d6ac7-8bb3-4aa8-ab72-e9d196897977"
        },
        "item": {
          "id": "d8296d24-9361-43c0-84ae-001020a96444",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d26e6ba7-30b5-4c61-b1c4-e30c9ecd8716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e37608-533a-46b7-9f58-4a61863582ef",
        "cursor": {
          "ref": "e5b926d7-48e5-4374-bcb4-65bc46965aae",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2fe1ff44-8ced-4b37-b936-c43583b2b55f"
        },
        "item": {
          "id": "37e37608-533a-46b7-9f58-4a61863582ef",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4fb116f2-ad1c-4877-ba9c-bdc9b6e69949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06942d6-c45a-44ea-a503-3c3c6843b7a6",
        "cursor": {
          "ref": "49c028e9-9117-49d3-a5c2-7e05dd580e0d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be05ba71-a18c-45c4-9dae-695f97925468"
        },
        "item": {
          "id": "a06942d6-c45a-44ea-a503-3c3c6843b7a6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "62442907-567a-4de4-993f-a1e868d7df5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e60a671-1763-4ac6-b0e8-9b6c994b3616",
        "cursor": {
          "ref": "f29af133-fcf2-4610-b259-4a73de2d58b1",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d6385499-787a-4c74-9d29-f1422a8816b2"
        },
        "item": {
          "id": "1e60a671-1763-4ac6-b0e8-9b6c994b3616",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "24b29362-f72c-4240-94b2-24c70d2bde7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712c2c0d-482a-4059-897e-8db05da0e1c6",
        "cursor": {
          "ref": "d4601524-f4ab-4c78-8043-e54bfd38d48e",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ddb77bc8-fa90-4de3-ac27-34a80401ebe5"
        },
        "item": {
          "id": "712c2c0d-482a-4059-897e-8db05da0e1c6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1e49759c-892c-4a53-8fd4-a04aaedf06c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0ea560-7150-4bf9-af16-cad8bd8c3aca",
        "cursor": {
          "ref": "3d8d7afe-51cc-4367-a533-69422be77700",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b6e11b26-63a3-4ac6-9b1e-c3d8bdbe33e7"
        },
        "item": {
          "id": "7d0ea560-7150-4bf9-af16-cad8bd8c3aca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9861dc98-20ad-422f-8244-d42944eec7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d851d242-66d5-49d1-985f-34e8c3220cf7",
        "cursor": {
          "ref": "ef8d720a-7b48-41d0-ad7d-0610a5785ec5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc241ea1-dcd3-4443-841d-a69802876e42"
        },
        "item": {
          "id": "d851d242-66d5-49d1-985f-34e8c3220cf7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6a7a93a0-c05d-4cfe-acd1-25146d430c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d876150c-f5ce-422f-af71-16016045f908",
        "cursor": {
          "ref": "b0c8fec6-336a-4836-aa8e-223fa3b18dc9",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a59f08d5-194c-4353-aaa5-1cea18860151"
        },
        "item": {
          "id": "d876150c-f5ce-422f-af71-16016045f908",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7c3dbebc-c044-4530-8879-32f1193f6052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7c301d-30ac-4f78-8800-c5013d677594",
        "cursor": {
          "ref": "af7cf786-18e4-4464-989c-b74b7aa7e684",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "adbd2b28-1fd9-4b96-88ed-f40676aa0622"
        },
        "item": {
          "id": "dd7c301d-30ac-4f78-8800-c5013d677594",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "542fc033-c4ff-46e8-b3d7-2e7f4b9a8fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8f564f-9ae0-4247-8b25-a537c3e15706",
        "cursor": {
          "ref": "e8fd990d-806d-45ba-bafd-90ab56548c6c",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c5a4697e-acaa-443e-b808-ffe36d420016"
        },
        "item": {
          "id": "be8f564f-9ae0-4247-8b25-a537c3e15706",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e8dd6916-4ba5-4bc7-8a28-2e21c5a1a8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d943d7-500f-4e03-bd67-67c4e8c17ed3",
        "cursor": {
          "ref": "004ffa8e-3e61-49b3-a306-37b871a58751",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "85063c25-a35d-40b1-a072-665cc515ff46"
        },
        "item": {
          "id": "89d943d7-500f-4e03-bd67-67c4e8c17ed3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5de21a8e-c0b8-49bd-af0d-216dfbd0ce40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b42303-904d-4dc5-b022-cd24c2a5556a",
        "cursor": {
          "ref": "482e862e-92ff-4961-b56c-3b6687830867",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2b4905db-02fa-4583-8b31-36e760ac8bd7"
        },
        "item": {
          "id": "13b42303-904d-4dc5-b022-cd24c2a5556a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "65386aa5-23e6-42a2-afa8-e797ab549262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a371a18-beaf-4d9c-abe7-6518beaccb39",
        "cursor": {
          "ref": "05c630fc-fe49-465b-b5f9-b0e7ed86c7a1",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20e861fd-53b5-472b-9e0d-7cacefb37eb8"
        },
        "item": {
          "id": "4a371a18-beaf-4d9c-abe7-6518beaccb39",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9a9248c8-eec7-4b41-af50-7aa326f07c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87fb978-cae7-4c58-a9c6-c048ada1b5ba",
        "cursor": {
          "ref": "86736ebe-8251-4ed5-8078-44473a91266a",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "87a8ff51-ff81-400c-a71c-78cb60be701e"
        },
        "item": {
          "id": "d87fb978-cae7-4c58-a9c6-c048ada1b5ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "707e8b52-211f-49bb-b75b-7519df55c2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2580cbd7-ac0d-409c-8fee-f450e543650b",
        "cursor": {
          "ref": "c5b6562d-36c3-47c7-b39a-3643732fc007",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0d454495-5feb-4aa3-8f30-fc9a92e009b2"
        },
        "item": {
          "id": "2580cbd7-ac0d-409c-8fee-f450e543650b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5189ca07-ae15-4b2c-a66c-db8daa953b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03d271b-b965-4702-80e1-f237103de72e",
        "cursor": {
          "ref": "a5bf0944-90c0-41d4-819b-3144ed520e0b",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4b3417f6-250e-4d4a-ae95-9612a888087a"
        },
        "item": {
          "id": "a03d271b-b965-4702-80e1-f237103de72e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c915ac66-e674-4278-a1c9-9cb970b77c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04f518c-6142-441e-960c-259be536e0c3",
        "cursor": {
          "ref": "058c2049-1423-4703-b4ec-88df9ac980f4",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e132a3a-e9fa-4ad7-a71c-72c94b49a5b9"
        },
        "item": {
          "id": "b04f518c-6142-441e-960c-259be536e0c3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f2058ce1-157b-46b9-ac6c-c7817ed01c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b183087-824b-4fa5-8ac9-5d4f5ec1c74d",
        "cursor": {
          "ref": "51d8e7d8-bc27-494a-aff2-04d14773310d",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8debdabe-907a-4963-a5e7-2e1949e91cf6"
        },
        "item": {
          "id": "1b183087-824b-4fa5-8ac9-5d4f5ec1c74d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e91e0b6a-337e-4af9-9338-8c6603b549c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea235099-7fe9-4cfe-957b-330d65748148",
        "cursor": {
          "ref": "ed85c926-f137-4c84-b0ce-952897b5def5",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8f39d4f4-84e1-4a64-a841-022f80574c81"
        },
        "item": {
          "id": "ea235099-7fe9-4cfe-957b-330d65748148",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "61957867-f3ca-4073-8ddc-39193bafb3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca4348c-fea1-4ae9-b807-ec7bd4c1a283",
        "cursor": {
          "ref": "76cd2723-a72b-4631-8fd6-66e4df408496",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3cf28ac6-0edc-4382-a5f0-f44a9b1bc83f"
        },
        "item": {
          "id": "dca4348c-fea1-4ae9-b807-ec7bd4c1a283",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "11f0f8b5-738f-4634-9ef1-f713377ebeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b434f62-d9c7-4a4f-b53b-fdea67e947d0",
        "cursor": {
          "ref": "77c813b5-8494-4343-b1a5-ee4b0ec6f4ec",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "47eb7ced-933b-409f-b07e-4c14278bfe91"
        },
        "item": {
          "id": "6b434f62-d9c7-4a4f-b53b-fdea67e947d0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a09126b1-116f-453a-8ce0-ba7006fbe626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d19c0f-5d5c-4569-b944-ce07cf719676",
        "cursor": {
          "ref": "5476000b-50bb-49ec-ad7a-b3edab546a66",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2ad33f78-7f12-4ddc-b3ea-a43c4ca75285"
        },
        "item": {
          "id": "c6d19c0f-5d5c-4569-b944-ce07cf719676",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1897353d-4d2e-4e59-9b8b-bcb60e12face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9470aee7-76c5-4eca-9398-6aa2d809c5ed",
        "cursor": {
          "ref": "b663c273-bc1b-44ae-b062-c93273e65b7c",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b29890bf-68b9-424d-a1f9-a91ac575647f"
        },
        "item": {
          "id": "9470aee7-76c5-4eca-9398-6aa2d809c5ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4304b99f-5b84-4158-a509-bd5e17386570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a196be04-3345-4eb1-a33e-a9a48405dba4",
        "cursor": {
          "ref": "3e3a77f4-2a66-4793-afd5-691979af7c05",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7905cc38-4a79-44a9-b23f-5d6e4fc1d5f2"
        },
        "item": {
          "id": "a196be04-3345-4eb1-a33e-a9a48405dba4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eacfaf8e-5062-49de-b123-a3a01a7bb12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe97d26-6c51-4405-8179-3c72e74565b5",
        "cursor": {
          "ref": "379bb392-36e6-4af5-bdfa-6adfc242cb84",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c2feb93-8e03-47a1-b15b-9c3939d8d92c"
        },
        "item": {
          "id": "abe97d26-6c51-4405-8179-3c72e74565b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f54f9baa-b7bc-4214-9624-94ca5d93786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf2da47-3ff3-4aaa-b23c-3ae751308e13",
        "cursor": {
          "ref": "1ccac245-6d6a-4850-b552-68ac594a453a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b35818e-fee3-4a5e-a3c0-b46da0b5d8a8"
        },
        "item": {
          "id": "6bf2da47-3ff3-4aaa-b23c-3ae751308e13",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6cfa088b-d9a4-4bdf-8640-57a4d1ba53c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad6c4da-bcc0-45a9-a0ba-ce33427d40e1",
        "cursor": {
          "ref": "655cdb2c-f11f-42df-ad55-aa6e9884f6f5",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f0f0f9b6-b8ec-4203-80e5-d695eff4857a"
        },
        "item": {
          "id": "dad6c4da-bcc0-45a9-a0ba-ce33427d40e1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "64975eb2-8a5c-4e58-8167-d58790269ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e5a6ec-2d06-41b8-bf9e-6dd88794befc",
        "cursor": {
          "ref": "268956aa-79ab-431a-b7eb-d0514f49a8d9",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fd2c9535-0c68-44c5-b310-680b23812f66"
        },
        "item": {
          "id": "70e5a6ec-2d06-41b8-bf9e-6dd88794befc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ed5781ed-cbb8-4cd8-bc76-fe017fc7344b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c9ce0-81e9-41e6-bc67-f8e2be4cb1df",
        "cursor": {
          "ref": "f7f6d0f7-0a5a-4c9a-80ef-61e43718a41a",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c58db80e-93fd-4ff1-8529-6d526c39303c"
        },
        "item": {
          "id": "602c9ce0-81e9-41e6-bc67-f8e2be4cb1df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3ffa1767-bcb8-4a53-9714-f20ee9414097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a612336e-60ac-43b7-bbb4-12009e2a0d05",
        "cursor": {
          "ref": "e57991c6-ef63-4943-abc2-85d1b501b334",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8234b33e-a7d5-40bf-8008-93c792b15336"
        },
        "item": {
          "id": "a612336e-60ac-43b7-bbb4-12009e2a0d05",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c6ba863c-b0b3-4db5-8e54-f386ca7c46f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c8ae66-efd6-45fc-8036-13f1db2007bb",
        "cursor": {
          "ref": "785041c2-b9f0-4b43-bb1b-926c0fe637c1",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "32bddd60-c7f1-4d20-be5d-32a70230767e"
        },
        "item": {
          "id": "b3c8ae66-efd6-45fc-8036-13f1db2007bb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7460e44a-4d94-4e28-a406-f40807f86b1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbe07a7-44a0-477f-abbe-189a7176924e",
        "cursor": {
          "ref": "8d815ef2-e6ef-41fe-bcf9-b9c71d6d2942",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a4897fb4-eb1f-4254-9132-8f7265135d54"
        },
        "item": {
          "id": "cdbe07a7-44a0-477f-abbe-189a7176924e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bad1f446-b622-45ef-9910-de9f6ba2f689",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b6dcfb-0d1b-4e2a-ae47-bf13c5571588",
        "cursor": {
          "ref": "c63fd94e-40c3-48a1-8b08-74a39e56c062",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "00120659-08f8-40b7-86a2-bf4f3a621b90"
        },
        "item": {
          "id": "c6b6dcfb-0d1b-4e2a-ae47-bf13c5571588",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2111f2e3-f45d-4648-b682-fa79d356542d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8609ca-96e2-4176-a003-590a20ce4af4",
        "cursor": {
          "ref": "a72617bc-dbf2-4ad6-92f9-01365616b4b0",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "63af6ddc-faf7-4cb0-889b-a56b4fe21c34"
        },
        "item": {
          "id": "fe8609ca-96e2-4176-a003-590a20ce4af4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "723ed88e-9380-4834-bfac-39d31ee173d7",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde59270-0ce2-4105-ada0-54700fda2a03",
        "cursor": {
          "ref": "c14ad297-9a46-4a0f-88b8-3237fd362d9c",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7a916875-8209-4f20-9b30-49447fe5325d"
        },
        "item": {
          "id": "fde59270-0ce2-4105-ada0-54700fda2a03",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e81edc40-2a3b-4955-bec7-4cbffe908d2f",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
        "cursor": {
          "ref": "90ad8150-8080-45af-a1e1-c9b86d7bee7f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb342e43-6f4d-4f53-a7de-25da8f865718"
        },
        "item": {
          "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04e71269-684d-4004-891a-1e6f112d3987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
        "cursor": {
          "ref": "90ad8150-8080-45af-a1e1-c9b86d7bee7f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb342e43-6f4d-4f53-a7de-25da8f865718"
        },
        "item": {
          "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04e71269-684d-4004-891a-1e6f112d3987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
        "cursor": {
          "ref": "90ad8150-8080-45af-a1e1-c9b86d7bee7f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb342e43-6f4d-4f53-a7de-25da8f865718"
        },
        "item": {
          "id": "33a867e2-9ddb-441d-9ae4-074fdb575fe1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04e71269-684d-4004-891a-1e6f112d3987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cfdb5d-1e90-4980-9664-a50bcc9d1acd",
        "cursor": {
          "ref": "de38faa0-be0d-4440-b11c-3f375a05c3a2",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "72b87c29-b058-4979-b080-6619f39234e0"
        },
        "item": {
          "id": "73cfdb5d-1e90-4980-9664-a50bcc9d1acd",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "57bb256e-b3bb-4692-ba99-5e4247cf4314",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0ba97e-ea71-48bd-960b-becc49a9acfe",
        "cursor": {
          "ref": "ff18cbc2-3922-4436-84d2-60ca33fd2a6d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71731744-4835-438b-a6c6-325fa0fbd7a3"
        },
        "item": {
          "id": "2e0ba97e-ea71-48bd-960b-becc49a9acfe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c66cb1a-223d-4af9-818a-c55ecf8e630e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0ba97e-ea71-48bd-960b-becc49a9acfe",
        "cursor": {
          "ref": "ff18cbc2-3922-4436-84d2-60ca33fd2a6d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71731744-4835-438b-a6c6-325fa0fbd7a3"
        },
        "item": {
          "id": "2e0ba97e-ea71-48bd-960b-becc49a9acfe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c66cb1a-223d-4af9-818a-c55ecf8e630e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d8fda-dc38-4014-9cf8-2c857a96c96d",
        "cursor": {
          "ref": "0762857e-d5da-4f81-8f5c-1ae6ae8d16c7",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "18110b0f-5371-45a4-b7c0-cb868dd2f15c"
        },
        "item": {
          "id": "6a9d8fda-dc38-4014-9cf8-2c857a96c96d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "cbcc1c10-f680-4084-899c-da716b3bde39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629a2257-f33e-4e65-a171-58811f0890b4",
        "cursor": {
          "ref": "33270670-bd54-4801-b6cb-9db37cc05cd7",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "80cb8f2a-2fc7-46e7-9025-4235ca8f174b"
        },
        "item": {
          "id": "629a2257-f33e-4e65-a171-58811f0890b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93a93368-e54a-4ecb-8c7a-9b14cb686bb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629a2257-f33e-4e65-a171-58811f0890b4",
        "cursor": {
          "ref": "33270670-bd54-4801-b6cb-9db37cc05cd7",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "80cb8f2a-2fc7-46e7-9025-4235ca8f174b"
        },
        "item": {
          "id": "629a2257-f33e-4e65-a171-58811f0890b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93a93368-e54a-4ecb-8c7a-9b14cb686bb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c55ec-df79-4a13-b529-d4cd9c29f3c9",
        "cursor": {
          "ref": "65aec0f5-2094-45c8-8c59-5aa86bf1befb",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "62e6c16c-073c-496c-8a4d-f9c44042e2b9"
        },
        "item": {
          "id": "cd2c55ec-df79-4a13-b529-d4cd9c29f3c9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "228dded1-895b-4ecf-9bb6-c3f60c8c18e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}