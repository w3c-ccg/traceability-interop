{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d8f3b26f-9eb8-4bd3-b39c-ed72d7d8bea0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70c47b93-01c8-4ba7-8b23-8df33e22de6f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7808460b-6ec1-4041-9d12-188ff7f0b890",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8503e4a8-1d96-4794-92eb-d066178c5311"
                }
              }
            ]
          },
          {
            "id": "9d655375-be44-48b6-aa14-4c97ae762fdf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac764820-c2f0-4500-a27a-4021ce7e5277",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "50f9ca8b-6ad2-4839-acce-1494cc0baeec"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d5a51324-0745-4c76-8f75-b224e6940ebb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c80191d5-f8c8-497b-8b70-bec2bf59d850",
            "name": "Positive Testing",
            "item": [
              {
                "id": "803f782e-639a-4e1a-b7a8-135ed335434d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c54165a1-d3d3-4935-bc7d-6568afade19b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df4d35ef-2c6d-4cce-b45a-618405ffabb9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa8d37d1-fa36-44fa-a70f-42486a23b812",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de592459-d163-4bbe-a06f-c00bb450598b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d4a409d-0c3b-4ac9-ba3b-77c38f240eac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c18044d-ed95-4ffe-853f-f9bfdf1ce3b1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "141ec889-12c1-43d9-a896-2d1bf0b69cde",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "571ae0b2-ef21-4006-b42d-e6c1c192097e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce443898-1dca-4149-85e2-33c86a821794",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fcab023-2ff2-464c-908c-eb0a9b2c993a"
            }
          }
        ]
      },
      {
        "id": "c336ffb7-dd1b-4d99-b78a-fd09732f82d8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3eaa519b-dda9-4f77-a00c-5f19d8b588cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a6446cb-bcec-4231-9ef2-cb1f7aad3de4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "340810cf-ba38-44ad-929f-bdf5350ce65f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cfdeaf-11d5-43a4-a198-921990a16ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3304628b-2516-40fb-9f6e-e3b7fe478fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fcfd82-0765-4ff6-8481-1f2adbdc2295",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b54caae-940a-4449-8001-4d66f4ab98db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c75ad52-98cb-4c65-a1f6-ab4030963f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92be9bbe-cc67-4a5b-a66f-2ca49fda2ff2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa87c79e-a600-491a-9cd1-96a331acb768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55942083-e863-4784-91a2-f88abb011748"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e1de397-99d5-46cf-933d-d025b71688fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54053279-7728-458a-aee3-675ac4d18597",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a381ce1-50ca-47d8-9231-77758fc73d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f18cb58-2dfa-42d3-bc7e-725eb96adc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bfdc69-583f-40ac-837e-2561770d6234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b79284-35d7-462e-b521-a48496c83f38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66870caa-16b3-4e70-ac46-49ca8de4486e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b3ab2e3-bf59-4688-a0b7-38446ff4952b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "180b6268-6f2e-4b02-9520-3e06bbf574a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "93e1c331-dce2-4ba5-b4e1-fe02951b48a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3a82890-deb0-4757-a210-ad6a5a9baadc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c7696752-ff5f-4292-ba7b-174216345149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26f28ad8-e41d-467c-8d29-2555680dcc6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcd03dbf-dca0-4e29-9eb3-5d001140c9cb"
            }
          }
        ]
      },
      {
        "id": "bfe2ebec-10a0-4e95-9d35-f27d65c92eaa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5e93559f-760c-4ba1-abe9-8e8fa67d7e54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81c5877e-a7cb-4b2b-9be4-dbf6ded1f6e7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4dbe50db-5c88-48d6-b6b1-91f2f63dd39c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b432f57-fc79-445c-96db-d39833c4aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c277b1f9-d9bd-4705-b4ed-479e3774add5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b0fe8-e8e2-4e33-96f5-2228641cab62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b7fb1a9-53b2-4bda-ae05-e8a472744c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dac978-d537-468b-99d1-50fb27bae221",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aada36-6649-4e15-9f66-afb11ac31fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49358b06-91ff-47fb-b0cf-058ca2e748b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187ec5ef-f3ea-4f6c-b63a-055ad2b4bd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e415b1f-208d-4a1d-9b6a-74ebd959bea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3568c7df-094e-467e-a6ec-37a0e3cccb71",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a719a5e-d271-4217-9374-834ce9dd174a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4979fa-e013-4629-b888-1d99f56f7125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce8a808-f163-4aea-b1c7-a18360ea525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "935c906f-8a5c-4e55-b134-bc5269efe118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea2c223-62b4-4ec7-bd59-040b91b6384e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b47bdf3-bbbf-4026-9ebf-cb38c286860b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a070d12-d073-4ae4-8615-f521d6ddb337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c818dd0-38cd-433f-9931-399a68828df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b6c30e0-d0d1-4460-a316-86bcb863a671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2873f3e8-679b-4d3e-80ab-59b37ed9b855",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31047158-9f93-4e14-8541-8b5a5898ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f64512c-5bf0-4dea-8ef8-33f70a618fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3abc320-48d0-4dd9-af6d-c3780a99b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1c631b2-bfa0-4af8-9d4d-c42b8a8e8410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e894e050-a7f7-43c5-81cf-5504780be0c3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b6224e-5460-4795-aa1f-07ccebb5d0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce953ad9-ded5-453e-9a36-e5aba0d25b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4c700d-c8b0-41aa-a956-f64fe8297c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5fabc04-7353-4724-9778-f1a4403d607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c245942d-7c1b-464d-b6f2-66c36f9c6118",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc0d64e-7833-46e8-af0e-eb247ad13116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6f76b1-9b64-41c3-9895-08f2599f9d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834869a1-55d5-4ca5-bd31-a17fe2eb5d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f468c92e-b910-4be3-9b3e-80f01254f7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68af51bd-7152-40d4-9146-0fcfc5e950e2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60b0e62-8cb6-4b85-a6df-53e9b7bcc6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8417bde-994a-4ef3-a6d1-b03694a447e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e959a6fe-c4ec-400e-aa4b-255d121c941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6067bc0d-ba7e-4eb5-8fd0-dd024654c585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c358e1-75d8-44bf-a8be-ee7e21f7e199",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c8d0ad-0828-453f-9f57-484e4aeb26e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f971e96-6d4c-4299-8306-bcb75bf8e491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511231e8-822f-468f-b9b7-4992502338e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "030b3d77-72c5-40e0-a9c1-aedae82100b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daed21b1-4356-4709-bd9e-f1f721bf9894",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7c4c7d-bfe9-4129-85bd-ec38366826a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bf303a-16b4-4d29-9621-44ad52ffd71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a42ce5f-8c86-4984-81fc-406ac84d917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4acaaa54-dbd6-4d29-9936-2cc37f810fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059728d8-90c6-4da0-9d8b-7c263940a6f3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4515ca71-beba-4066-bfa6-bba0633a0874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c94edf-9bc9-45b1-98a8-94f24ab04ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06157201-b27f-47ca-81ee-971a74cd417f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f410a1c-4af6-4317-b491-6a16e64a6d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584b4739-e4e2-4621-badb-d0238cc2b0ba",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f3bc6-2469-4116-bfd0-f096cf4e68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0182e6b4-0e72-4e2e-b174-4bb089ee3800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5aaeb-9a64-44b7-84b5-103bc4b7910b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f011775-243f-4b82-904a-92f9e8b7a275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ad5bb0-9fcc-47e1-b048-9481169cab3e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817b18e0-ffa9-48ce-89a9-3bc30f49e2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c17bfd2-36eb-4529-961f-32deda4cf238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd4c321-ab9a-41dd-9829-5d7d1a90dc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4431cc91-bbaf-4ec2-ba23-8e45393e992b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d97c0d-1806-446e-9cc3-5ec484c1ad6e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ed0514-fac0-47c3-b9cb-d7a89f54cb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02631887-e4d2-4761-af01-41d23c0fb938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db5aed2-9d07-4561-9d1e-74e47f5899dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932d340e-b67e-4e78-a784-c6823fd0c345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dfddf9-162a-4701-8a48-279fcd84f838",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94ffd1e-752b-425d-840d-c7c7f017070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fd15ed-b0ab-43ee-94ee-e9a06ca5da9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bb3a18-349a-4a4c-a9eb-6725acde9367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69fd065f-7d49-4231-83aa-66a4043e4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51780310-4bc6-4e5a-b6aa-259575537447",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82175772-08eb-4b6e-ade4-baa033d45f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ace7752-4c66-4906-afa9-a0a2a497c0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bcadc4-bafa-4823-abd8-9a65dd9fcf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d75c787-5539-42d6-97b1-60ae1c977b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50940fc-ebcb-4421-ac98-c04c5a9d9994",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889e4b7c-fea2-46f9-aa0e-9b375ec05c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6130f6d6-aa4a-40ec-b248-d84d40c9c9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327718d7-834e-4d5f-a734-0532977f9369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98abc640-e9d3-4b96-9506-e6b4d5085f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678cbf47-07b5-44fe-8575-a4e54a7f83ee",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b33c1bb-11ee-469c-830a-e84e9d0fabb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1aef3ab-d7ff-4ee2-aace-ca81046299ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33faa71-6858-4118-b2be-e3c8fc10854d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "486ea9e1-a74b-48cf-8d91-ae53f6de7573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2a78d9-5706-489f-aae4-ae00b577c5c8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfffaf9-85b9-437b-a38f-437384c0a974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e671dec3-dcc0-4a3b-8fde-d894ce956546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6d57b1-0806-4e64-b1f7-4c6ba8958478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c86be0-30b0-4b40-8175-f98db53f4262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8704a815-b349-45cb-9b9e-ddb130465f31",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4229510a-7a5b-4659-98ac-73ed02af714e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15b1592-7d26-422b-96fd-de7d4e6aedab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15426fac-cee1-4240-8381-681427b3e149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceebab80-cc14-445e-a53d-8bb0597e0b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fd9ae1-58de-4d1f-a4b1-b80add333c32",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc08a90-495b-4360-837e-6c2dc796b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa020642-e37f-4e9a-9ba1-7b1a2f111212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ef2201-d6d7-4b8d-ab17-8a314eb3055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f744c6-849f-4f2b-99d6-8c6f5d60484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca43bc9-bf2a-4e2d-955f-1a3a0c483029",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e693fc16-67af-46ca-84d6-9a69547757ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89296ba8-4d48-4ff2-bee7-ddb076ee6ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b8ca0a-d23e-4f27-a04b-9adcbad750d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd28577c-087e-446b-ad95-6443608dec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f70207-b5ec-4d5e-b412-111b01832b22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6018f96e-b42e-4674-9d67-01deb6a62b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f72144-b569-4dd1-a59f-53c7d9050b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a7695-71d0-435a-9a03-0398a1401425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6e7f0a-7202-4211-b308-a7fe1120ed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed74aed0-8025-456a-8de5-dc8d3ab2a846",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d63276e-a62f-43fa-ba84-b7d9dbc11444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56203db5-d860-4a51-b214-da043b8cfd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7f62ac-07b4-488f-9e13-bb1b9707290d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb7706d-a1e8-4398-8924-3c7d08d220e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91068657-d05e-41f7-abe9-364bc8e8f56f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcbeb2c-5b2d-4d57-ade0-ba7f38b064f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8b34ce-9208-4e31-9ed7-f903ace605cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd73096a-c52a-4531-9cf2-8a3b3b8438ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b58f4c0-1edf-49c4-a164-469e1b35753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d1cb00-9c5b-492f-8aef-a294820ea52c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d693a57e-106c-4b77-a3ca-25d77c9d8a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbceb3a5-88c8-4e14-9931-c550a0469072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b20c904-a311-45ad-8ff6-aa7e7781991b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77597b43-4e7d-40e9-b333-6e441a1618e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d65c0a-6f25-4647-87c5-2cc55e69caec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc89e7a-5ae9-463d-9659-dfcf9c5d69dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0eac36-5bb0-49a8-bbf8-ccd0f5bacbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf1e3dd-a655-4116-a2d9-dbe38398fa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ee5171-f80c-4d8b-a7ee-c5a77e98c042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab095dd-e568-4c77-a69b-370256302c04",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d08b6ff-c139-426c-9576-d3e676adb2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce189b12-5f7a-4850-bbe3-ca69f9d1ca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1e25ad-5a6f-4563-a373-6635db5c27cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e17ea9c-a46d-48ca-b19f-4443b589abb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8037d0-7ddc-4e7b-b10b-4cd8f4f9d49d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6e7f06-0d5f-41ae-b7a6-9c419194517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116d71f8-8f18-4b95-ad8c-aca781c1583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25eb97c-f125-44fb-b225-494812e97492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44935725-cc67-434b-83b1-bcef3c4b3890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b66fd6-392f-44d2-b27f-da55af52f567",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4935e6-0a2c-4083-9139-a351475d8691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbeb38f-78cf-4259-9c93-58d3a35f57de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9543b734-aa91-427f-a3fa-b3c3bb7f013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "291a5985-c972-474a-88e1-9a021ec011e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf30f65-1edd-4c07-b9e9-5bc76bed167e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96062198-aa8c-49df-a554-00f5d6be83c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0fa07f-c624-4885-987a-3e97049129ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa5fd48-cdb2-48a1-9a2e-9de58d7a888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d604db9-7f8c-41ff-ac0d-426130011626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3655936e-7b2d-4a17-b858-5412ed5767c9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf541e81-7c23-49f4-91bb-c09cffa20f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf0710e-cf93-44f1-941b-36ba4207957e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8506e8-374e-46ab-9119-d0efc07f8ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "113fecbf-c079-45ed-8be3-2aee1c6ce94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25bb829-371b-464e-b03d-dc4214986428",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449c194c-1003-4acb-a437-cb575bd17486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b04210-1acd-44a5-95cf-b945cfa502d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2916aba1-4b84-4ff9-8602-d688f6d90272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e662e68d-5d76-4329-a274-341b8f04da0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8905304-2f55-4124-8349-8758c0bf0127",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e395332-b674-4da6-8edd-1a3b03d15360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b95676-85dd-4d1b-acc8-ab117cc8fdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cde9dd-d5e6-4172-a7db-43d1946993aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99b7ef1-665b-44cf-a361-f4a54aa64aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b8370b-640f-43e3-9bcc-b48e252d5864",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1e5f46-72d9-416e-8171-57816149ce9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bfc75c-2cd8-4e61-8a44-4b8af82098a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0db17e-6077-4273-8098-3bcaf240e574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a01c0875-f2e1-4baa-a210-aa854b66014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549d145c-33b8-4122-9422-bf8ae6824142",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2b5122-3578-4237-b7aa-44bb2e89b394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "157e72bd-018d-4b15-b201-a450cb1258b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc25329-1567-4798-9e90-1b6cca0fc0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c90a2f0d-459c-403a-a6fa-db353a00159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa8e17c-d6ba-41d0-83c4-aa578b0baa99",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004a9e2d-5fd8-46ff-850c-a78666cda4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fbad69-ab46-4cd9-8808-9e0c764938b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d047f29-9434-4641-bbba-82b75ff40513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bcaa5c-9a6b-483d-9afa-18b2070d397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be96c6f7-4ce5-475e-ab61-4678e3c01eb9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26686d78-9fed-48c0-bf6d-faa4086e9026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34e8233-f6f1-4b73-a65d-919435f727ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceb2b8b-19d5-4bd0-a3f0-32708f8ecf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d14a82-6f68-4939-b60b-8133d52a11f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc23471-4bc8-41d3-b8d6-f014da55f003",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e577fe-8cd2-4bf8-ae69-f47d492ad9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0edf9cd-5c5d-48dc-b757-04588781b829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdbf957-61a2-45cf-947a-95fa4dda7a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "643d47f5-d2d4-4ebe-8d2e-17d86fd4a636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c44e29-f00e-425d-aa50-62a4de5cd1bb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be817103-0b0b-4b15-868b-84bcd2bd9973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2fa18b-0303-45ef-8f52-30d74f3de7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1464b8ff-d67e-45fc-b3e0-1e48aac09ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cb2e26-6fc5-4941-ac38-283a9a26d89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766627d8-a477-43df-a97a-1594c1f8f8c2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a7184f-a52e-4b2a-9ba5-af6b599ad497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac34457-9b47-4e80-9565-1bd4e3439a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b94435-cced-4cff-98ec-a5391bf655cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7261f4cd-41d8-4cc3-bb9b-2256bf604469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326eaa69-e58e-49e6-a28c-833acb257fda",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11049474-03b2-4ab9-af6d-111045bc7fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd058ce3-42c6-4caf-8681-48df6aa2f6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15015669-80ae-4d8f-af1f-a9be088d1b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e6de6cca-8cb7-4fb8-8d9f-a2dd38c73c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0430bc-e377-46d6-96dc-886e3c088d26",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f9b762-25b2-440b-b084-0f83938adada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f934427-5501-4bfe-b2ce-8bbef35e1343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fdb1ef-8fed-4794-a27d-703139f2407c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cbfb37-ecbe-47b3-bafa-d82438edace6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c807e7-0311-469d-af81-62e1259f2295",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa229b5-963b-42c6-9d64-f3daed71f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a7908f-63dc-4e05-bfba-9899d7708756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6f42b7-f287-4260-b80e-fdd79cdcb8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3c29a0-abea-4a0b-9030-e8cca77ca2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc35936b-d5e2-4569-a953-b7e887a1627f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9946751-b9e7-4ade-8688-73916be8d659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c21ee0-20fc-4381-9155-081317c705e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ff1c12-99b1-47b0-b825-ad74eab4a672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "408bab3f-1d99-4a4f-9307-cdeddbdb6606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496cfa49-8bd9-4d63-ac67-9f907c419a7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28dfa86-09bf-41c3-9c46-853434c97bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97d3072-f8cc-4d82-80a6-fc473635eabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404cfa83-121d-47dc-b27b-4110bc1f38ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be4b04a-5d4a-44b2-b55d-eec354ab987f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089fc252-e839-43b1-b038-1b93eb46305e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc590b-b021-435d-a158-5a69f1260545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dc4350-e0d2-4192-a353-cfab31244f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d1bb41-77d3-4307-8296-ee070b912699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f779a1be-df61-4b80-b771-3d6b9d2acd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c0e16d-f3d6-4c4d-9933-73a591dcea14",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a17234-758c-4986-bf1f-1b5c5870558d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7651b95c-3eb1-41ea-b465-9477d8adbf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fd4de3-cedf-4c57-9cc2-3c0e887ed983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27744614-ed96-4631-b61c-d9cf88b394bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a96e95c-9588-43ca-84ff-1cf26efd5d26",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfdb77d-40c1-4009-8e1d-fb49592ce9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd4b517-7db2-43c2-8d87-bacd60bc558f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c6bf7-e11f-4b50-8e91-4a1dc02a6ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a59a3ea-49bf-42d1-a378-b67e052f0675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c13c15-39a0-471d-b80e-68295c3afd9c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6207c6-e2c4-4ed7-9258-7cbe0198d399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0a9af6-6394-487d-92d8-40ef6152d3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a435af1-0d06-4e1d-86df-6b0868fb037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "243a8dff-8359-4f6c-b386-20058f6b26da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b726f21-b289-42ef-8139-4e496d60b81f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351e53e2-d9b7-4a90-8773-6a1366a6bb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c075c9ad-bd99-48f8-ae36-366c61530de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d28451-b32d-4f98-91b7-b5d22a85f586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c48f18-a7bb-4900-8fdc-de87cec16c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dee5a46-1a17-4f20-94f3-ff57256d0ef7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3135570-bd54-4540-aef5-8487e213cf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7673a664-1f2d-4bf0-aaa5-bcb3b9fee94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6de4ef-acbe-4640-9ae0-9b786edcb202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4d6527-c9ad-4cb7-a2d8-eb4c2ab7b33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ebc15-95ec-408a-9695-b36b92472107",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d421c818-b776-4341-b38d-a95b4ca02dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7205f3ac-aaf6-4bc5-bfa0-0921da1d7342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8b835f-4402-4e09-85c6-0183032277ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05926866-88b5-4805-a774-f1f0fd1b959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bd6fcd-019f-4e32-9c6a-f769eccdc398",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21f7d3f-e683-4da7-8b49-f95185166817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4b7b2f-150c-4a9d-a839-e60ab27f5bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadd3b97-5740-4e1a-bfb4-476ec82fd353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e89c36d-0002-4ea4-8752-c18c57e1b4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc9cfaa-1c41-4c57-9ad0-05badac45806",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e162889f-4488-4991-9162-ed55c0aa6fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a558fd42-fad2-4084-94fd-7cfc11ef10ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24adde1-9b25-452e-9817-713ae564a034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7146a8f9-eb18-43ea-be16-dc79cfc5571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d39cb78-4977-4d83-8f3c-5e03653c6856",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55deee15-347b-4ae3-a4d6-97029fc0c023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76680033-00e4-4ed2-b080-31d4d96ae953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d38b4e5-43a4-4f3a-9c6f-e0ae0f323a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "430a9247-068a-4617-a70a-3bbb4384e93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bc5dbc-d401-4f7d-8e98-50cb92e88e90",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09efff54-f8fd-4406-afec-95c16ea8d867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a061c4c-6c80-4669-8d5f-0dc5706ac88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bcd9ad-c159-4d17-b936-c97cdf3f14de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd70f904-d022-49f0-89fd-03be68b7460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3912d7ad-2f09-4b7d-ad52-5687a0d019fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48428cc-b348-498b-b244-06fa203b38db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbc9eec-fd2c-4996-b4ab-31ef5b7e5a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821b718-060f-4724-93a8-fe4387f9c503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea58d62-15e1-4447-9106-34d0f9c4e0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8d849-8e25-4b81-aa3e-0fd76806c1fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a63d2-2f18-4575-8370-df4f259ede14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc1e55e-f0f5-44aa-af0b-19d0282d75bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7957f955-5c3f-4c37-b2a5-19003b2512e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34d45919-189f-4d8a-8355-33b6b938e042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c559046-10ee-4a71-a601-99e201d73f12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b578878f-ad2f-4ff0-8ae7-203136f92946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d21dd3b-f461-4921-92a8-1614b8aab747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6a1046-c23e-4aeb-8116-0badfce47ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a5db3f-a9b0-4bd9-8a49-4a94f4f0ba4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d23388-99a7-438f-aee4-033e05793ccb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96277451-fa09-415f-ac30-a0e120789d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b61207-c5ca-418a-bc6f-f19b96feaabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a010b3-d84a-44f5-aa4e-cca429964889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdf1d7a-64c3-4b23-8cac-acfc31f1ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbfa92d-07ab-49a9-ac99-83579ec422a3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b174e34a-85d3-464c-87a0-28a5e6810537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5785bc9-afa9-428f-b0a2-d3d6170b7841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42e0589-7707-45d0-b9d9-99294555fdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "03c55691-77c7-4020-8e43-0473b6dfb807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef192ab-b0e8-4a03-a814-9e30c11b9bb5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0567ac65-903b-4298-ba0d-f1a920bbb4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8cad29-e8b9-40f5-a5ce-2f91ca386ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bfa4bf-2fe7-40e4-90d1-94ad57557bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a2f7db-7ac3-4bdb-842f-b08947d45d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a95e3b-41dc-4157-b818-f0b5a7fe9280",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99143755-5f8a-472d-92e1-172ab8474093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a163a0b-90c6-4069-80e3-4c84200acecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea31f02-a80f-4e94-a38c-f77190353fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c92dea-2762-45f1-8c9e-f639a1884d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95591a9e-a3f8-45a2-865f-322d63e51c04",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1f7777-203d-45c2-bcd2-c1968937ba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4c9410-db9c-4f0f-bd3b-53bd9fc417d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2ab5c5-3c1e-42b0-9363-9edfa014952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40165947-7578-4370-84ce-ceea95e1e705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c70cc5e-39db-4949-a3bf-268c38bf33ab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558a931c-a03e-4459-830d-e930e32c624b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42d6ae4-f6f5-4207-a968-1d48314764df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0f007a-3b86-4594-a1e0-ffd6000de6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11b66860-63fe-434a-a882-79e379bde18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578f9e2-95ad-4306-93be-77a7640853ec",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d5d9a0-f1ac-4225-aa7d-f527524ea46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d23742-51f6-4f45-8f29-00b4435384ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb3dd1-4952-46dd-bec9-1d3839738363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0060a6b0-27fb-4386-a458-0b1bf78d9f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab03ab8-8146-4537-88fe-f73f96613528",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3de6147-241a-4bc4-89b1-1a39b2c91a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9446dd-5af9-4591-b426-7c5416929696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd58d3df-a93d-40d5-94f9-6c69f3b9e643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9467e269-eaea-456b-8881-497dcc5dc633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f571ad6-a9cd-441a-be3b-234424c526bd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258dc742-c7ad-4fcf-9f03-21a2f931e1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2736836-0c8e-44c1-ac7a-823339f21605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73062684-18d5-42cf-bf1b-cbb26af5b578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4b2377-5340-4382-a0a3-6e09fa4de299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb71d9b-4fdf-4924-9dbf-a046483b6282",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70596e4a-ea40-4982-8b11-bc9f3b04f52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631a826e-c0c1-4e0e-b028-a6ea658217a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b5eeef-7c55-4f3c-8f95-d970339911bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc3f0f6-2282-41eb-b28a-b1fba92300be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2674774f-ecf6-498f-8800-40501348aced",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c817e16-f0e8-4d03-ae39-e18419459901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74af895-1ddc-4612-8988-f790eb1575cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0982594-0453-46dd-b694-9b34c90295a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d5f179-4671-48f0-b80d-ad729c63cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d96b03-524c-4a21-8697-6c1f0bb7bfa2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4477141e-b4cf-4ee5-8435-f9b36d3cae40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f83e970-d45f-4b2f-b8d2-7c5352688507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5fd15e-4b8f-4547-b656-381e2d083722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef940a6-a041-497a-9cfe-bf8bcc9f447c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c0ff3a-7013-4164-8a79-28bd71bddbc5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d84f0d3-d517-4b49-8ba5-91921d8a7df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2132ed72-a1fc-43b5-bacb-9df8f4815376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfecf65-cb8f-43d1-b9f6-7d51f1c266df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33e41824-f59e-4a36-a6f1-df9c0d042806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc08423f-919c-4fbf-9073-4c220f83dc75",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6642c49-7e38-4272-a532-b43f7faf2f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ac01d3-1ffc-4f3d-a22e-ca32e934eb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d5a9d3-9dba-4bd1-83b0-f9c2b3af510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f438399b-bff0-4827-ae36-72cbe6e87996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69f83fc-136c-4be4-a1e9-aaeea63fd65a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7241146-1427-484b-82b2-f10eb2b10ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f9bc6f-52db-4721-9ce3-bb384c978d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853e89c1-ba43-4782-abfc-0071fd2faff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1367c6-d6c9-48b4-9fae-ac3673e0cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60665b55-8acf-430f-9bd6-b16a581c5e4d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43abd1ae-b3bb-4bcb-9de1-f38e44f5f979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff72d04-fbc6-4941-8edf-0700d34697b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ff3cf9-adee-4382-84e6-135aa4d3830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfab058-dd5b-411e-bb49-0f5645975af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1224ea-7d97-4dea-83c9-d43e2cb2b4b6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b78648-1619-483e-9b27-9cd65ce0500a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482071f2-7932-49fe-a83c-bfa801f90272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e472d480-3322-4b36-acf3-8eed73d99b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e98cbc-29c5-4995-9401-5b4cf12caa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8171383a-e332-4fd1-91aa-b6cba7a88ced",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c07850-88c2-44c8-a91d-bd0c819f2106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8498225-2156-4777-9bc9-fcc4034328cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6d77bf-6295-4c46-b88d-fb06ec5a3572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "393c6e78-6af8-4718-890e-044de01d03fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2051ba5-202b-4a5c-ae12-d134b7c1f19c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c046387-9212-4405-a3c2-ecd8def5d35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822b1360-e0de-48ac-b824-f33927a7644d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1280832-0d93-4f08-ae0d-1d3b0bd68fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67f645f-11c6-4796-b552-dcbe15cf3904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a1f3da-4759-43ef-b032-145f2474c3ae",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802594a4-0585-47f1-b786-0dd962808126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a488486-aeb5-4abe-805c-35b6c2afee77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05617aca-7f9b-427e-921f-57c1921623f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6089ca4-8f1c-4f09-b440-27d0460f3948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d5dc37-d948-4c02-95f5-a62dcb8dad84",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fb2d19-12c4-4a75-85c0-2011980507ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb4bdce-c7ec-43cb-8e77-252bed5b2dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58824b21-2c94-48de-bd7f-b49beaad56c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb744a14-3aa5-4692-80a1-0013c00759bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18031c71-d69b-43b8-a414-ebadea6f12b2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86846d4-cd9f-497b-b55a-2f83506b1510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d26e826-aaf7-4850-9ecf-7fef217b3555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1f2155-65f5-4848-87c0-2c1e75d6bff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b815ce3c-4fc9-41da-9d1d-8e265d625c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8bae71-b815-4890-9495-513685a026f7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db60a45-55ad-4622-b927-5d73c0312b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc0c730-c0c6-4b78-9c11-7f2976ee8465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92a3520-20a5-446b-8aa3-a02136499c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c12f879-8e87-400f-ac6c-8df8968231ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2013f2d5-64cb-4b5f-9255-015f95d3204d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f81dd-873b-4c5b-ad4c-e1557b5140f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addc2736-d72b-44e4-8ad2-731ad7ffdb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ccf726-eccc-4b69-b212-7a85eb080f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0880403-5654-47a4-85b9-2690e4eb2bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873a1f2d-b32a-4707-b5b6-0fc70b105a21",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbdf8b1-606a-4626-ac7b-008ff08d9cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3525a89f-69e1-48e3-9f50-b6eef3b31f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00251dcf-ae7b-406e-b9b5-dcdaad776da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "094c4b85-e2c6-4aed-bf6b-bc67d808681a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4f7583-0832-40fb-84d5-eb655e2ec850",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc16ab33-0636-4c4e-a503-5e9505de7a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc21eaa-2ad1-46f7-9c54-7e5f2db5b768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c9750b-adf5-49db-92d0-3ed5fe0ac29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c3173e-832b-4531-b4c3-24c20b466e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5331b4a-ca05-46d9-81df-c1bfc61d673c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d259bc8-8cf0-487b-9f8f-db912c364d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e400749d-1d66-4176-966b-9ebfbec175b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f742b0b-08b0-46a0-a93c-4fb987f43400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d8ca83-42a3-407b-8a1f-e4dd96f1f67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36415061-93da-46cc-b7fa-04daff902599",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be518ccc-03e3-4bf8-a8ec-2e7fc6be088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9c72b7-9d49-45bd-aa37-21c91a38d09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f45990-3494-49bd-b97e-a1d257e50485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c63446dc-a521-4ebc-86cd-8b3ac11b4105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2f90d9-bba0-4a6d-9d79-2598b20c7bad",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f03ddcf-5340-4d5a-bd89-95f717a7b005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66988198-e3a2-4e78-a369-823c9b57e383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51c012d-3648-49e9-9b7f-481eaf133504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dbe39e-4acb-4396-a5d2-ed87580be91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578004c2-4a90-41b6-ad90-d5b39c925c9d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3b8b43-8542-40ee-be48-b066202cd883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdce78c0-e24a-44a9-b338-03496b9d8b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbeb18ac-6d4d-4cfa-808a-3c9d13e61f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "934a8568-d470-4e03-8dce-918a7bc79d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12b1f66-0aee-4ee8-8b1f-916e90c09b4a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9cf617-5c6e-44e8-9090-de390f2ee64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e34558-f82a-4ef4-be9d-9fa2af1141fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2020d7f-78b7-4ee9-ab05-69d85f8592e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8650e31-8725-42e0-ab9e-6693f5a3dafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dabbbbb-6212-4d4a-b163-9180cf4f169e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ee01b-b648-4f2c-bbf2-e1c5788ad45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30c5ca60-a562-4d61-98cd-fa15f8f2f410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964f772c-acfe-4229-9c4d-e32ed1a55b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6226792b-e4e5-45c1-8539-53a8efa56934"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bb10e06-a5c6-4c3d-b0d3-8cd4fd72d010",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5d86a15-16c3-4def-8cc3-36aa19144c77",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d75aeeb-fb53-4be8-aa34-65e225345368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8904fd5-be64-40ef-a24c-94ea7a18327e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5841817a-6d0e-431b-abaf-8e43bb53f342",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744c133a-6ff2-4623-aa24-65e0ecf74c4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebbbfbee-6ad7-4ea1-89f4-ef22a889b027",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74dbb544-5190-4bfd-93ec-758dcf1cc4a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "093fc78d-e98e-470f-b371-34c7afd3c121",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a02a504c-6210-436d-bea8-19bfd4114c3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f9b561e-65a2-497c-95a7-2183f9cee6a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67a2d3ed-173f-42b4-bc95-e3ff5beeb8b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c85ca6ca-9e33-4999-9627-c4ae28c0e161",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a521bcc-2c87-42a9-865b-941aa1c38ccc"
                }
              }
            ]
          },
          {
            "id": "c4b12a46-a377-4f37-b380-dad053f360c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49c0b73e-ffc6-4c4b-8c1a-58daa7802f80",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "53786fa4-6ec1-455c-b227-0e5d742544d2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1db62d8-4685-48fc-84f0-7311f3d206db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fe89d34a-ebee-4757-8f33-a6935221bb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a984b53a-727c-4ed4-8b8f-95a01ab04c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7032addd-6abc-43be-86f9-779142f2b985"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a54b19bd-db13-4cc4-a0f1-8f46175d62dc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf1547b1-5f85-441c-b56e-908d2cbedb98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ed37439-8cfa-401e-94e3-35e7d128c14e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e55193c-f36b-40a6-b3fa-6ee5e7f10143",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b250317-e0ba-4324-963a-9a5872aabab0"
                    }
                  }
                ]
              },
              {
                "id": "2137a2b7-92e4-4946-adc0-9e585a1e86c9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aceb36b-bfd9-4b36-93d1-068438e8b908",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "352d651b-4056-4fd4-b069-d15c43081a23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5051575-ca90-474f-8269-f7635e88dcf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf924063-c87d-421a-8734-ce912bd7cc9f"
                    }
                  }
                ]
              },
              {
                "id": "9bd2ec0d-be7a-45b9-b7c1-66215eac6e8e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "272f42db-ee0d-4b3d-9bd4-ebf57a671396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7817993-55aa-4e87-8ebf-9e4f74edc6dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f52e89f0-a598-4dca-867a-39bb1f9b436d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "168e2c47-6902-4b70-907f-6e1cbe3cdd1e"
                    }
                  }
                ]
              },
              {
                "id": "f53755a8-e970-41a6-b072-c981fb289c60",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8781eda1-e0f4-402a-a6d9-fa08e8f6eafe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f3dd8ca-633c-459f-9bbc-9930ed2b6a41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7227ca73-7261-45e0-9d07-96687d874425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "983a6dcc-93c2-4578-8761-946708ed0308"
                    }
                  }
                ]
              },
              {
                "id": "21dfff64-ff25-45b7-9e51-029ffcc67ba7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "765a6225-aeb4-4458-b920-645f1e927671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d30eb6a-8be2-402f-8301-307ce5de6967"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ef4aafd-2d53-4052-ac5b-975989326b05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "492fa940-e4dd-45d9-a99c-0ab94f955fc7"
                    }
                  }
                ]
              },
              {
                "id": "243efa8d-5d83-445c-bcc3-dc2629e1b7fa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ee7df3c-5dfe-4271-b2a9-ea439ac5236e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a26ebbf-f4b3-49a0-bb10-a3fb8cca2757"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c7bc875-cf93-45e4-872b-ace3824b239c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "524c2bb7-341b-4069-b94c-e763a437672f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e37a2ff-66be-4754-a309-8747b056ae0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1d92bc3-8b73-44a4-b67e-4e68fe04bf07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f580fc8c-4fe1-44e1-9c67-ff71495a4689",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0581593-7e4b-4891-a1f3-b19ca6dfd7e2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86412f2e-f361-45c4-80c1-2a667fd14ebd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "273a813e-4977-4510-8ffd-947fb0bf9936"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2996669e-6c7a-4763-bcfd-4dfb17f251dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df13bda4-7754-41f6-be4b-517f83f18469"
            }
          }
        ]
      },
      {
        "id": "7e4ed437-805a-4730-94d3-e0f3e5c2c573",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4dc1e3e6-8a65-4cb4-907e-9e8c40744516",
            "name": "Negative Testing",
            "item": [
              {
                "id": "223a4992-9b2f-4955-9038-6e0defd8c79b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "818897fe-e5fb-44f6-92e0-dfc0c04fab3a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd56a9b-fa69-4a20-b291-697cf98289a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8e6617-8f6d-46a5-b785-1dc9400ff9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd95d29-94d5-4d0f-852f-26148103842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f054c3e9-568b-405d-9cf8-33e544b1c782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef882ac-9c7f-4b6d-b3be-8ecd8703c2b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b37713f-94dc-4cd3-b367-7c4b438afe94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54c7637-6462-401b-8760-d66facccae8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6e595f-21f4-4fa6-b1c5-435dad1a29a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37320c67-8e9d-400c-96a1-dde285130ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdfbe24-ed04-4a22-b652-8faf3f61e394",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574bcb4-a940-4cf1-b98a-2e872c7aeae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97569dd6-4e2e-4fe6-ae39-d06f2ab894f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0639f3e6-a6ed-4cd4-89aa-cb286f7e19ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c6dc2d-5e39-41cc-967d-1f58a3008ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04431aa4-764e-4a9f-b474-b96d64750ef3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360552cd-53ad-49c1-bdcc-59f8d30bbfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a20a6d1-2a86-4c44-bf2b-fb046bf5d1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcdb041-060c-45eb-a809-39d64dd82222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e86329c-62a5-4eac-be90-f79f651a74bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb040612-6abb-4700-8623-dff6de98596f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac005400-f8c3-4b40-926f-1e1f0a1f149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d922de9b-258b-47a2-9174-111ff4f66124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b701e699-0d0e-4ca3-9a57-a822a882c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2bfc3d-61fa-4b78-a09d-e2bba4213364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1be93d3-2797-4da3-9a4a-77ef64eda4f2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b61dcb0-082f-4f29-bcd1-0468da8320aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e93acb-5cda-4c6a-960a-d9711e24b9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0473b15-7297-4216-97bb-13fcac8ec29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ffed56-7b36-4fb6-92e4-96d37c267adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d0ce26-0a7d-43ce-8e3b-d2e53c124f71",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f69286b-6f15-4ed9-ae0f-1a351aacf0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9dc5c4-8d2c-4414-b30f-644e9dfe94b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33f9c5b-f05b-4276-9f90-c14e4feac5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfe3002-2444-40ad-83f4-ec95f68c429a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275200ac-30eb-4f0f-bde1-fba626eaef4b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6cc41b-5719-4a66-bfe7-fed144dd3a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27811f99-00ee-4e67-8e97-231919c6d40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1307c-ff6b-4ad4-8ed1-b9b4bb71ecd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405ff5be-e3ba-49e6-9529-040eaca5a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb913cec-9db9-42f8-8e33-9df5275af57e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d59522-c279-4173-9a91-e2ae79634e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f260933c-98f3-4796-918a-d038d1016085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f262cee-6e92-41e0-b09f-b16944006312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5139cf8-bd1e-4119-aa1c-4f109bc65281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5975d9-ea6c-48b6-a9f4-a11b550d97ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6b56b6-d0ab-4514-990b-0e5fc6d65f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c08e45-6861-424d-a695-5888ed9484ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de56ba77-4061-4695-bace-63f6e6a8f652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe854f1-4e81-47e4-a780-38f56c0c0356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3815f7e4-e023-4e8a-ae2c-d57dc0846f9e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9679bb-c57c-445c-82d7-0fde3a8664fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f135c306-34d9-4104-9a67-92c712c8ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f287fb-2989-42c7-a13a-37ac67198458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc4e35d-c963-4c80-a706-9ecb48460218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51767a0b-5fe1-4104-a265-2b87b84d3488",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b829d0-4bce-4c45-acf5-18818579f5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1c38dd-aaca-4830-8571-3d9296b6866e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3705d3d-194f-41a4-8933-32a58c67b3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e25d550f-abfd-49e3-883b-c6f6a0d9bafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cc0b3f-4cda-4c17-b8c7-c15950c84c5d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe7e6a8-1adc-4f83-86cd-c7ce8f308dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c26953-a396-4cce-9563-053b7f4f7d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca65db6b-ce37-4266-a23b-fcb52dfd732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57fcf0f9-925e-4506-9fc6-9919931c56ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f945e0-4172-449b-80f3-161834cc0358",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e155cb-85a0-4770-b11c-0452def0c2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4aceac-9d0f-44c6-bb74-93364c65dfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23a1c70-e8f7-42e0-95a3-410bb18b1c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "76eed418-049e-41af-bcfb-6353b9814e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade1a64-c126-473f-91dd-0183d234c288",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dc5330-4091-4618-a4e8-4da308df891a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454c698e-43d2-468d-a98b-ff5536f527dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf466c8-3c44-4fcc-900a-dfa469397545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "71919eea-0497-4557-b8c1-73b3b35c7715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a738155-c420-44e2-8e5b-049fd3be298b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaaac7b-0014-4868-9a9b-c65040715127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6309a52a-87d9-4c5b-9805-b3f469aeb957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29406506-fbc2-4efb-820f-a6342486e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae90e04-f85e-43f0-a46b-f0c09d6317b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a025a9-11d7-4c82-b7aa-059c26496ef1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b707db-31c9-47ad-891a-5d30fdedd27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cc15c6-1d0b-4085-9f90-83412cf2425e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b18e28-4b7f-41e6-841f-814b38121ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a087a3d2-e21e-4cfd-ab9a-f51abfc3189e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dca7509-5abf-4a85-b9d1-f34a38c8b60b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf995e31-fa08-4ccd-8fa4-cbbbd4378153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05073e2-75c0-436a-8186-fc16afaeaa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc7976-3e12-4f9f-a725-01eed8b6bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59704a27-0c63-4a47-b5a6-d41af4d2fb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d110ea2a-c7c0-46dc-a862-71b59238ade4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2268a8a8-bcde-4fbf-a061-9b694e7dbb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8141c5c5-2040-4c03-a1d1-0deebb242bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668a8d96-d02e-4349-8e49-a232f11449ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e863e83-7f8c-4a90-82c7-c53906e69248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8636fe40-614e-485b-83b4-c5acc1d8992b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c572b7bd-ea13-4793-b51b-f2f7b3d2efc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d0f748-4bfb-437c-9495-5ff4dfb9c815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efbaf1d-c1d2-45ec-b0c0-484ce60f908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45b3264-ff8e-45be-9bbb-a8dcb1310919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f5fbbd-1461-4962-a3c7-edf40d666b31",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f635bd0f-5c86-460b-921e-f92b82987fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987917ea-282a-4e96-849a-3c3ffd5fe6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a56a373-5260-4ace-b365-d7fd1e1c31f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66d79cc-11f9-44a0-9f8f-60dc0dd55779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0145baa-f44b-4d39-b784-829a63da6f6e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545c7e21-f9f6-40ae-9c29-72bd44170f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed90d36-bc5f-4d59-9b5c-902a5a95625c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30f026f-4f06-4708-b815-431559ce8868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1914631e-6f23-4bd7-8d4a-868c3663749d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5043e7-647d-4c54-bd45-584ae23b8135",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6011fa2-1bbd-4372-b910-597c5c16874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e04f779-9247-4e9a-8bd3-bcd89fb94afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382cf62-4848-4699-87c8-ca31dd938a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fddd4f-3750-4391-88f9-13e93f359efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570749ec-3489-4bf3-a027-4964eb3da171",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71311584-fbca-42ba-a8d0-e120e01ddfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ddbfe9-7024-4cb7-914a-2021a8c02a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa9bd46-d1d8-4255-bc84-2f27587ecc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb2fb73-428a-4b0c-91df-aefb82a5ee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741d5c2-fe83-41ea-9fbd-ea579f8ee3ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa89fc8-f6fe-46ab-ab0f-116d210bbbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e99623-f9d8-4717-9dc4-1f5e7e701cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498799fc-8d62-4c8b-b373-c1762770da4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a103db24-2745-4a5b-9ed1-76ef0c0d73b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1767ed7-e086-4d06-8177-35dc9485777e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2660a0d-c16f-4496-b400-0c7518c97a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84680941-1b0a-4fe2-8bb3-830e014d912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c923e2-ff4e-43f0-bf4c-e2fa84813536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7620a8-3991-4f0f-8a08-d6f16caf045a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8831578f-1f98-463d-a305-5fef54123efa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896dba05-a3cd-45c8-9578-12d5f423ea72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4583ac15-959f-4616-be5b-dd4a5878d3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f312865-44af-49b3-9d00-bd4b43b21cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c06fa5f-f05d-481f-9b18-a6cc253f1abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b14ef8b-162a-4060-8aa9-b2726b99db6c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9e2be6-79bb-4c97-8ead-d045cb520c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf8cd0a-a3f3-438e-b6b3-d83748ba9c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37880724-75dd-426d-8740-534b1bb434db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6838ebe7-6660-40cd-845f-6802b3fabde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9396bfcf-a762-4cac-bec0-c64cca9a01f5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210125ec-d1b1-4a0a-96c3-291db7717a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57443014-461e-40fc-aad5-0561472f8b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d27d337-df9c-471a-bbd8-c99ef8848129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f10224e-66df-4229-a1e4-e2c9062ff8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3df089-f0f7-4870-b418-3c16e04d0def",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72f184c-1c4d-4c46-a336-59435f9c1a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9ab3b0-c2d6-4a8e-ace1-30df0ad24f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418a3ce0-7fe8-49d7-a6e1-ffa5bef78220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30210fcc-a62b-4b8a-836f-f3b1c0ec84bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84081e0-25d8-44c7-bffc-1ecf2810d348",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937a7318-0be9-43d0-af97-baa4c38cc6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b47bac-d1d4-4a9b-9dd0-8b5f39dd2a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7be9cd5-7fae-4f31-8577-f8d6d4368eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590fffc3-1541-46f2-8529-5ab2b75ddc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82e04f1-7328-428d-9000-8b9b14320af9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7b6cae-80ef-4e38-8100-63ec4cc00844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ce24a6-0bec-4242-a73b-aceb3b7bce64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415af985-f316-4e0c-b17f-435a7a028dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61714f1-821c-4a86-9b5c-500313614201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db942af5-a19f-4b97-b374-53470ab49e77",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a7a347-7c8d-417b-b927-2be838d71c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e64dd14-07b9-4333-8af0-f59a01c01660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8671f8-0658-4365-8e46-71ed8b45ab3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2847734e-38fb-4e27-ac1b-57c8568e22b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c091d7-3545-4db6-9bad-27f3f5e968e1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4409b85-aa37-4b61-af56-b060cc89fec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbba5c0-499e-4c5a-8891-21ae989f1dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eae1e5-3ac5-43c0-b78e-dde824ab72ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d3fe15-9400-4e93-954d-eba7412e3517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64edceaa-f976-47e7-b9c4-f5ec9ee4fbd2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db003d3-3c9b-4350-9ac3-c3c5fc255e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5dfc903-4142-4b92-8a78-7f3076e7a713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12a2c76-e537-4855-a0b6-9bd83bb363d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c76edbe-460d-4681-b673-2289264d60cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac574c-8682-4e30-996c-7c4001da3166",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b3bcb-a24c-40dd-b812-48c9314eeb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a64f67-b6fb-4c16-840f-90ede7c281fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c013cd8-5da7-4d3b-83a7-c463187aaf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73bb15a3-e10f-4a51-879d-ad6eca6004ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d33216-e459-4130-bd9f-c1b03093b387",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7b205c-757e-4d99-bef2-e3386b986693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59b5be5-940f-4ef1-a390-405dc15de7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d21cfd-4c77-49bd-9096-2d7741016562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d8620e-c0ef-47d9-836b-12267a2f9cb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfe438b7-ec84-4e81-ab9d-66e72041f652",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afd99207-6a8c-4cf2-9df9-c773a76b55b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b33c1c-4895-4637-80d0-2819aed26c16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b318dae3-e125-4974-85e6-f4e6cd42f226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09cd163-31c2-4e45-9f25-7028289308c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13fdc522-8999-45dd-ac52-a355f9c27458"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1f737f-14b4-4b75-ac27-3fabe02066a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dbd1f83-06ad-4dd7-a401-1004114fb9b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b9906f1-0fbf-4615-b6e6-fc4806e151e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70dee919-8af7-49c1-99a0-4c4675d5f284"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0960fc4a-0a01-4be8-8447-834559076995",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e90c2c2-a6a7-43eb-84e1-68d790e6418f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "410f4ae2-1708-44e9-b057-68d6513b6c31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e54912bd-8d7a-463d-aed5-26ab0a4af838"
            }
          }
        ]
      },
      {
        "id": "3058d894-b8ca-44c3-b474-71b3ebf70ef3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d15f2511-b40b-4947-a4fd-445407b03709",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67164b03-a4bb-4f53-9ce6-bcd88d03bf26",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7173395-b6bf-4ad9-aaf6-a1580d5d873f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67fd21d-01bc-4364-9d6e-fe1636f37019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae4c696-23b5-4b5e-89f7-7068d365c00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06e315-b310-4fac-af38-614db97108eb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d7f359-12eb-40f2-9211-174ff370ed5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c055698-42f7-441b-a16d-f0ba2f7314fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4b3b19-961d-4726-9b2a-0e54a1064ebd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1842d4-1762-4d21-9acc-101c85ea04cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb6de99-2654-47aa-aef4-0cff57d15bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ca61f-f1de-4ac6-8384-02df46f82d0a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c975c-5d61-41df-b614-5caecb25a6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c975f3-3d2d-4079-84bb-c51b380d37cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e27625-8396-4db5-b4c0-3cf5640b959c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424de43b-ce3f-422e-bd8f-a5ab07adfdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0348d9a5-548e-4006-83b2-9e2e9118b8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291e3fbf-69e9-4742-994c-6d5155957ddd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854a8a00-649b-4cc1-9353-c01129aaccd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ba01a9-c188-4358-86f8-51cf913194f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b933f16-4590-4c3d-a17b-f65befdba7bb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477aafb9-b189-4cf4-8fd2-f544bff4994d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8caaf083-6edc-49cc-a518-08bbfdd7abb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84ed6c8-4802-4c4f-8819-a0c1cc9e14ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f652e0df-b863-4c7b-8dd1-0f7709ac3c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24924c7-328e-48bb-8f49-9e3c57d159e8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1304804f-3e22-438d-b6cb-bbefe637fe29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f0810f-4a65-4205-a299-16e7ce9d8ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedf442f-1146-4b05-8dec-d756647db7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f84b614-6aac-4078-8290-2fb3dd5dd1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e70bd6a-799a-40d6-8608-c09065c151c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0daa1f-75ff-4a03-acda-8b8036d15ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "effe44a5-e313-4aa2-ab71-2025f30936d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b6b817-56e0-4760-aa1b-6a1d6c55e964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b950284-3ff8-4b3c-be31-8ba7f93852f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0e598d-5dd1-4a5d-bde7-96232e994035",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49ff4cf-b8b3-47db-99cc-3afbd666f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b4f20c-a357-4df2-97ff-9878533683a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f44b29-cea8-4e66-8346-d1bb5e35e337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f8d381-a8b1-419f-ace1-e287115b820f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f44b3b-001f-4c96-819c-7abe90e8b661",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a147576-21d7-4a05-bd96-a94457f85f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649cf523-2e80-4e4a-984e-7a6db4daba22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f06e2-5a78-4a10-869f-650a2b72c162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c13fe5-7470-4601-930a-6be0f53df084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3787f5-212a-46ea-8415-aff2cbb240d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381f6013-f0ce-47a1-a918-07b1c1287f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a198274a-d850-4640-a4b8-6ae335822ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d9a349-c042-4f79-b0e0-c9d798ffe2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356f0ce1-f411-48a2-bc9d-f8b5c2bac3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fa3f6b-0029-4d61-bc10-107d039c3dbf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d421eba1-ddfa-41e6-a7a9-9c1aa48326e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833c5c4e-f264-4fa7-854c-fb12038b0f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd1ff9c-83ae-4d7f-9c3b-bfa671ab2a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218348e9-6f30-4ac8-ba1a-637caf98fea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d67b10e-37ad-473e-8c10-bdd92b853c76",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55529d0-5b2c-4f35-85b3-a78a6896f484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e94b0b-5849-494c-927c-56d2963461a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c04446a-c0b6-47a3-863a-5e46834160ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ba60a4-5bfe-4eee-ba02-1db84fecb3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1933ec-b597-48c9-9db5-928d92e1387e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e044e5d-0894-4f64-a4be-4fe8c590baec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54bbf37a-c61b-48a0-9264-f9ea0bfca382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e58615-a581-4333-a4e6-b6ac37f4b8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b6d286-8ecc-4e2d-a139-ef782b13cae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d1499b-8762-47de-99fe-472e1c1e8b7f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecbf95d-7d9a-44f0-99d3-e11de30cfb41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d707ce-48ee-4cfc-8373-84e6ebc1e57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53afb99f-050b-4818-8bd4-869c65d384a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f4bece-5def-4ade-b479-9791ac383728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0505a76c-2c8d-451d-ad0f-9d08a3340543",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047ceb5c-9aca-42bf-a23a-9cffadeb1c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9739ea65-3ad0-4336-8dc5-6d27e44624a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0111c0-0c1a-4227-9a7e-905f6f35b53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8b7923-a60d-4d02-80c8-8f60e0247dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e225cc-bb61-46e1-b0fd-d8ff087d0312",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2115ff6-e053-4ad4-8154-fb6b08685817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd60d6a7-9944-4a61-96f4-0cec6b56d4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117b316d-1ca0-4fe2-811f-d8003764bd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c462cc1-4bfb-4d93-b1fd-fe310e7d7c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e57fbe6-d335-4a59-a153-43c2b7481ff1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f64dc7-0b67-410f-8fcc-04cc9e81f7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86b9977-325a-4fe1-b3e1-2564890cf3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb249bbe-d216-45ad-ad64-75608d112540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da5469-0d55-487f-aa23-049e705147d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d4ebda-f170-4449-b727-d8f3e5131e70",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574b3c35-46e1-476c-b1a4-61d914e61a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cd5b78-1485-4fab-b57c-a69d955f8815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f82c33a-7294-4731-9c1e-02922f3e3a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e02ce82-f44d-4e1d-92b4-5c387a9db5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96422d3c-e57d-4240-beaf-eb8338bc2041",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f92d230-66db-460d-87d7-5f86aa7c8b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1325e2-87e8-4dd5-8d9a-540598f5d8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4567a390-4973-4d81-8d31-fd47a953ea9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e09d7ba-b444-4e17-88d2-0a6153116175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d03b6a-914b-474b-8cb5-36b41a0327a1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea7f89d-7dba-4f47-88f9-54411caf9fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9845ecda-b0b3-4d88-9f8c-7e2550607550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182f7ce0-9d7f-48cd-b8a9-65658f64d798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd883db6-87cd-44d1-9091-29ca52cb5ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4681356-6283-4f30-9786-be2e0e6e82ac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b163b0b-5c82-4d14-b45b-1233b1fb314d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d99b9a-c98f-463e-9bf5-ef74a4bd4730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89643a02-f702-4557-98dd-dd299ada46d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6fb06b-86da-4f66-84d4-f085d1c85b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c84e3c-9564-41f9-b091-9cbfae3863bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1855e4-4760-4ebb-aec9-7266b50df62d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4754d2-4f02-4ae5-b8f3-e5c2baf5fcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cce8e7-ec41-403a-a5fe-da6534b846db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7854c2-cb4f-4543-b2f6-97049f767e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabbe7ec-4ad7-4074-8afa-c34c16a4719a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102a8141-0bef-49f8-bdf2-91483338cf8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bee96a5-7c86-40b3-bbc2-e50a2f094fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f060a1fc-5a3f-4aad-9117-5144d9284fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d5e5e4-25a7-4a27-8038-6892d108244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00df725-e5fb-4482-ae4c-e9e86d83f84c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b2ab15-ef2c-419c-997e-f529e65cf50c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f59255-81d9-499e-9669-63b9c996df56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a714c74-8663-4356-a6f5-adc0ec15f88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a90fd27-2434-4be3-a75b-f74ed59c356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8043ff3e-6cab-4ef0-a263-205d5c8b2e22",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029ee784-0fce-4d02-9c2d-990b274b36cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c1a4b0-675f-4a09-bd63-1482bf2743df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca2aa5a-fdf9-4c0f-8a6e-4293f9b30fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece60c5f-60ac-44e2-a914-e24856423f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a0876d-b442-4b62-9e60-1fbfe6988fc6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba25d92-1d1d-45bb-b9fd-34cc1d2fa97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b254ff59-a437-49bd-ba44-1bfd8d4ba553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e47d3f-318c-4bd0-8533-57461ca77334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a8d06d-b538-4b2b-b338-7e71b6336260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8454adc4-a55a-457a-8a87-81825cc77bf6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c3b460-9c40-4e0c-aeb8-148fd949d18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f07e86-782f-4880-a6f9-e77a725d83a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c70c23-eed2-458c-a235-0d125728cac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10251756-a0d1-4be2-b52f-5e702628de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148d918b-f57b-4804-ba6e-c3735e37f08d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1590de-0e1e-47c3-a3a7-e7bf632a648c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b950e4-8f84-4d84-9375-e4dc99987989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1d50c5-51b0-47a7-8ba4-67e8497228a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7b2e4d-fa67-419e-95be-9774548d57d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c807bad1-26d8-4269-8ca7-de8286b2b92c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7d2a47-5cb4-465d-a894-75ace2d57777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90b57ee-cb97-49a0-b644-18907230ad63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d2339c-e61a-49b6-9936-a41c41b7c4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb20f6ee-d18d-46b1-9bea-78700a407f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c385509e-6aee-4014-875c-fd451e1c5913",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b89b704-76f1-4862-8b0a-6638f93cd3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a37391-4162-446a-a185-7cfe4888f9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060183b-fa70-4a5a-8baa-8580b85ee44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7531e2c-62e7-43cd-aabf-0b1b9d38d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b6012-9725-45ba-9d28-a751e246adea",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c696a250-072e-4300-8edf-fdec7c26bbed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed616c5-68c0-4e63-8ef1-1efae5cfc827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4d642-e5d3-4efb-840e-3edce73e29d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5411ca95-b577-4a85-8ddd-61d7a927b365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63f5c97-29bf-4837-a847-5a4f88d5ccba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc7766d-7925-4233-b187-0503dd962a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bbaabae-31a8-492c-a81b-f084ea805f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61bf9c3-f026-4f28-8be5-c60b96222f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952ba0c3-efaa-48cd-acf9-cc4419296109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7135026-b552-42d0-bcab-56c568cb96d9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a49de99-9f1a-45ff-9553-dce972d2b189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6ed3bd-9cce-4a16-8f6e-0b77940ec1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1b5d00-5350-4fc1-86d4-9d31136f499e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242e7384-229d-4793-8313-030431cf122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd6afe4-7849-46d6-84a7-93023516972e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e947a-391f-42fe-9a8a-09b9b4c1121d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ed6651-4131-48bd-9a41-1779df7332d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e49b53-0cac-4b00-a4d8-e5641277bddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22478a26-89df-4a93-a442-b08fa711e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaeeb84-1bf4-47f3-aa0c-411871fc143c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94288115-33a4-43e7-9157-e3b4d8e6bde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93102a2-8ab8-4fc7-a7ea-20397d2327d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abd893f-e3c3-47c9-8d69-3f212baf9af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824833ba-f325-44f9-8b2a-4f0aacc320d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28764128-5eee-4849-9aed-b2bb6ebf5551",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bc6bd7-7e2e-406c-8e8a-ce71be428d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5520615e-2c9a-47d5-ad60-4a82331c3ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99d301c-25da-4080-9f89-498499e10d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb31102-7e43-4a97-9de8-c49da3d91cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d33312-2bb6-4e17-b2be-0cf2a46668c0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d549020a-adc5-4645-92ef-d8bd13d2b238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a5823f-2f16-4677-9c2f-61f06499b825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d077d65-07d7-4d39-811f-7d16fd64f452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000db839-8420-4df8-8ed9-3c626e261282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bfb25e-b1a9-42e6-8b98-021b19551543",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0c7e7-7a18-4722-81e7-1f7da7a5ea51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d36ace-83e2-45a4-b9b6-343542a313e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69376e22-f7a2-45c7-88a5-2a3b6e98c1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dc9f03-2396-42f0-8c86-303df7c34feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecf55bf-c94d-416a-89e7-b9045a578f8b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d533d4-86a1-4408-aeda-c6913cc988bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da9792e-a7a9-4784-b669-48bdb290d6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5ce305-c89c-4279-94b3-f79806007572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6702099d-48e0-4498-94ba-069188d00caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49512914-9fde-442f-b043-acb48cbd20f0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92da1d4-de17-4f39-bab6-b8d8e3a2408d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e46fd82-e62b-4273-8113-ab93867de98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c655fa-f904-4138-b675-c13525b21fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25180926-bd78-4421-adf8-bf5bd2db09f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b186ad6-1355-4d8d-9cdc-c2e2795dee01",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7b814b-c111-4c5c-b3a2-7f222f1e441d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce61fb1e-4969-4f74-8ea3-8e5fc34cc644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5dd79e-5691-4842-897b-afc99b86ade2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37e04e4-8cef-4215-9ded-8333d3bd1f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7649572e-f984-4241-8609-93e64d5a2d89",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13ea0e4-b567-4318-8ec0-a6bf6d132d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a24cd2-74d2-4987-902c-ad1a8b59c484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcb72c1-76b5-425c-9238-6c97cae71042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2aa80f3-689e-4573-8634-516641966a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911d789f-59cb-4849-bcc3-5948ddbf49e5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46718e6-0c11-470a-9b8a-f2dce213c5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020e5c67-2e97-47a2-99f1-9b71a37efd5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947510db-dce4-4676-8a0d-0583aa2cb263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf9aac1-d32a-4cab-90bb-0dfcf31d6398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c45fc3f-845c-445f-87a0-021376754802",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b420e7ca-28c2-43f6-8f45-ae4ca82cc967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c85aeca-bea4-4970-8fdc-acceb49cd6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865613f3-a882-42c4-a762-5e0f27cd0caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bff7d3-79aa-4f4c-b640-4db3574ee63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430e9b2c-e837-418e-bca8-ec3afd1d0815",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c72e0c-2bee-450d-b883-63be5c69c084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c917cc47-9b66-4600-a735-b50ee643e20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5513ad08-8ee7-46d4-ba4d-8d21ae1360c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19833097-50d8-4955-b9ff-fe487e9356e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af850df2-e0f5-4fe2-aa5a-4ce57defcec7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e6e1bf-dd1f-4a31-a9b0-cbd8b2ff28a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cd82ef-14e8-423b-8759-4ec2f3eff081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9fae36-899e-4eb6-b0a0-26785b9b735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bda7f3-1082-48bc-9d81-027c62d01ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cacc99-02b1-43fe-a156-f77e46adae6c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04831fbd-3b1d-455e-ade2-20616a224a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf5a35e-0ae6-45a3-a935-2ea049fdc96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eefbf1-d1d9-4c36-ba21-f26bad9550a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbc7284-6562-448d-b928-143e19ebff89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaa4d94-af80-4b8b-a9eb-bd4fdc42f21c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48f5b2-2721-40cb-b709-7befc3d0eb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968f1fa1-75cc-4285-a3d9-05fa83bb0645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb57defd-c1ce-4d78-b97d-02fbe2b21035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b97b94-0e1c-4183-8c1a-89057c6cad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d398127e-5db2-42f4-86e5-03bbce927d3a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02337c39-d18f-412f-a513-1d000a133fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9efe33-1e67-4269-ab77-3167b20eac49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150a8343-1d59-422c-bb04-6e8ed461a419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc6646b-7477-458d-af0a-56509e046295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3ddcbf-3be1-45b8-9fd1-f34e022b7abc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957d764d-6da8-4cc5-bbb6-b68490671cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25095646-8596-4430-a29e-668ff1283087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3777f1f0-5194-4e0e-b0b7-a4231180d0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e1d43a-8fa3-4f87-97d5-a340c7c10f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47cd94b-ad21-440d-8f0a-e4ccecbe5b2c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf96bb4-fd14-4e63-9a26-c8cbaace714e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a8d5e9-f59f-48a8-964e-00010fd6d7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14d454b-645d-4e55-813b-e7b00bc6ef8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f4d822-e405-4622-a3e8-e471ea593bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63cedca-08e7-4602-a8f9-ef6a82cefb5c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ee1e3-075a-457e-b6ed-36705a2baa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98aa624d-7a2d-4eff-8588-8bf5c7efd6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa11d81-5db0-4dce-a72b-59cbcc0e5512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100bfae0-b6fc-4cc4-abd4-939620d10ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a93f3a-a764-4422-b02a-611234e121d3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6af766-0bdd-4c53-aaed-6b9c73f0d4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e4eda0-d2ea-4487-b0db-ce97fc3b14c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46182f6-eec2-4da9-997f-622da364e885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbe2053-7e13-442e-baa4-dcc6657b9300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9edc690-b809-408d-913c-71587d38b2e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42ee89f-bf1b-44e6-a401-8229556ae28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be79a08-9240-4156-88b0-5e6df729f569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c070781-1682-4322-accd-6f180e464ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef44c64e-9d38-465e-8fad-aea9b7b41592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ef6cc0-142a-4b7f-97e6-38790f1625c5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ff236f-2a72-45f7-ad34-eb1de367a424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1629c6-0b62-4512-b1a6-f7b4009af0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aac5b6d-fb73-4adf-bcf0-ad44ba2209c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b8ba89-eb71-4e6c-afe7-94de2c4c26ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f684f65c-85c6-4f01-8ac1-711cefa5d149",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e4136d-8963-42a7-9375-b01eebbfa1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c300a-6b9d-46e6-ada1-40ad9e94158b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22fe5c5-cb53-4ae6-ab3a-bd2ee9191b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668237db-3229-4d2a-8aac-cc01d9b5be04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b0acda-7ede-42f9-a050-2bb11bd73a80",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9299fb-b223-48ed-8081-b5145ac4ca72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20754bc-1f4c-4684-b1c4-aaa7b10ce3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e2aa4d-cc83-4138-a78f-317500d03f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0000ab-bfb7-4e65-9430-a38b687c845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0c907c-5100-4390-8f89-2c66ed03b49b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8950f467-7ba9-4f3c-a8d6-2bad85b1589d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e2f41f-ce31-4592-a8d2-fa5e172deae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f04ed5-7c20-471f-9538-d45c67445350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c0bb4-4c83-44b9-b1b4-e073f6aed60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f255cc0b-cdc8-4604-a3ae-199bc6c9fcd3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974e1a3b-852b-4aa0-8af8-4afa36f31add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c9f878-2949-47c3-9aa6-9f941bb533a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f415eb-aefe-47ec-83a7-ee19d978c4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43aa02e9-9313-40be-80cc-6de2d197a3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0a6b76-4d93-4fae-9e2e-d5be906f5bf5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7498c99-b84b-4bfa-8050-d205307f45f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37697556-19de-4b0e-b5ed-ace913f1eea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf8cb78-7910-4236-99e5-20afe33af5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0261ab2-697f-4fd6-b8a3-6ae7c5c410b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f70df0-afaa-4726-8c01-532c1e186936",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5839b3-4d7c-4cec-bf11-5a7a04118b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af913f9-8b76-47e3-9efb-93ce8fe2a116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3419c9d6-05b3-4e4a-bc97-b68d12d93af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c39278-6c24-4af7-bbbc-bb5b68bfa0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f63da3-2c0d-4edb-aaff-48cbe3c11a3b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99df42e-8519-48bf-8aa2-5f99e1169a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44902d7-74a6-42bd-a5d8-9b25dd815a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86dfb7f-d092-47f7-bf20-57223717eab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb20ed8-75b3-42ae-a2d5-aa7d6111da87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490bbb79-67b6-4546-b866-50535f063263",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e07474-ffd3-49de-8fde-4e59a88a8a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1187abd-7076-4cfc-8644-51e85fbfc7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8c3cfc-ad5d-4a30-845c-e390986f311f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be7e3e3-6ad3-4c5c-b065-2a368df3a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4036690-c489-4a8a-b4ec-8f538eb63e03",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b22e32-2984-4911-8388-91987a916bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fd01f6-e9c6-4d4d-8b1b-5b5429229b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4a5ed5-509d-4026-b86e-680bd7201502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe8b891-7b29-4487-98dc-11c2b2fdc43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3599bc54-0273-4f4e-8606-7f1e4fe31885",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3310e78a-8fdc-43cf-851d-451b891531c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85c3000-6c94-4f1f-a93c-9545d97db330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbb17db-7a93-4d1a-85be-fa09d0632cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ec90b1-ff44-4805-9ccd-8af15f55a499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a6ce0f-8381-4a70-a40c-5480e53708ed",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ef1c9-72c3-4cc4-bf70-460e301accef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d02870-39dd-4920-a6b6-65dbde58ecae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b7931c-c229-4761-8823-5c50388520ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52f388c-3567-4fc6-b6b3-834b91a2b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6afa0-af8b-4534-91a3-7b03aee93ff3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58891715-f4d8-4781-bed7-6fa8c25a3e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a100ddf9-7c8a-4c37-89c5-8c385e0b3899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97120bac-cf9b-4090-a21e-5d503d59934c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88c43e4-7ac9-4aa5-a874-55006f913862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386d2dc3-e667-40e6-8c9a-7d2a0155d481",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1df7e31-3839-46e5-bcc4-f4aba259dc93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ed6b04-5f92-4674-a2df-14898033d6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a75a455-1a7c-478c-932a-4cdf6d292559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b47ecbf-a3df-4c90-ada8-a07dc9201313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d6f05-fe35-4c75-a09f-e09759d29cf6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609860b-c1ab-44a8-9f2d-85bb700c617e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f3186a-ac9b-420b-8a7a-2bf6e4dd1d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924b1ebd-9079-4435-ad62-a1c5e2eb3b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf246a5f-a52d-48af-95db-9f06d4978d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e37668e-e950-45b5-8987-77210e35a537",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4303d8b2-fd75-48ef-9aa6-2cb89465cdb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82bb02c6-7e13-468f-9ac0-4b0432a9bbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1147cc4-15ed-49f1-9ba6-cebf1aaf4b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba43c33f-ecca-403a-81fd-3b91dab316e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677c47c0-c7f6-4f64-85cb-ae5a20e0ab09",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb96b835-e3f9-4de5-8e13-fef230f71101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b7719b-acfe-41fb-9d9b-f071d07bda73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542bc9ed-7b3f-496c-9ac9-08a31f0071c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde71e44-d576-4dfb-8d2e-b8009e6df35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdc9b57-1494-4424-8b8f-12150aa49b4b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9646cab6-3971-4222-a589-f33f1dcef6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a476050e-230d-412a-8571-03593749ce10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a88ca3-e867-41a8-b46e-ef3b4887c59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79734551-e1e4-4bfb-9f61-040235ac0606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b89ff9-82ec-49d5-8fb4-2c73089b20ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dd118d-60e8-4c7e-af20-7ac8b871bde8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c34442f-7981-410f-9e5a-33c9b24137d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc8022-981b-4cd3-a561-3509f1ea319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1041eb-4061-4aeb-bd08-ac7b46707e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3455a823-67ab-4435-ab6c-8a30271c63e8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c60b91-ed92-44cc-b4c7-07ba74a238a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec228e0b-d078-4512-a861-cba1c685d9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6deaca1-9ed4-4a10-8d59-8d29a124ecda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe7aa8c-a921-4bdd-a30e-4caa8e39e815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0255df7-3b31-4b73-8fee-6a876d6a09f4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8852d7ab-d9f9-4d64-911c-7287770faa99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35b7a7a-3143-498f-a7e5-d9e6d95f6576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b821d4-8bbc-47ce-a7d2-d0bac7c5e301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e74085c-bea5-4385-bb55-664538f127c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb429147-5734-4471-bebc-023a6d401b8c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba132a8-2ea6-4e2a-98f3-8482af75f562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d42d91f-baa1-4c2d-8de7-24d2d1a357c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12d6cbc-60df-4041-9bc2-709619e0cc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e22059-5eb8-4e50-b676-5dab2f8ade30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ddb1a2-1dfa-47a4-9287-ffc5e1bf77ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c548c65-aa88-484f-9e0e-e90b7bb9c27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9bfed9-dd55-438f-ba28-7254ad97ea6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80471bd2-2bac-430a-b5ad-e1d6d08d65ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cd6d4a-d608-4295-82c2-ae0bfe038520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b51ddb-62a3-40c3-85a4-c6d5d3b34742",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebaf07a-ed05-4706-96bb-19a62f837959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a97fe69-2c76-4e64-bef8-e3706e9bc8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebac7f95-d2ff-48e7-a726-b40e9cf1b791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3346d53-df98-4bec-8544-8dc500bed750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073de548-4910-4672-97de-e22f65c5f2c1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2b143c-7275-487b-ac18-a71fcb64e44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a7a7bb-a99f-4842-888b-a055a1893b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aa52fd-e06c-4d41-8caf-36ff308a26e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7ae95c-efe7-4b01-a299-ce28ba5a5a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10694e5d-cb70-4aea-adf0-164b0fe1e491",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4bdc83-e825-46dd-8a23-d28712c10b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101c96cb-c13d-4586-a0f8-64b08ec8162a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1176365f-90dd-4009-bb63-630b675716f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68749345-45a4-48f6-aff0-58e344589b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c53ffd7-e192-4b5e-b0a4-daba9ddcefee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070aee46-fd38-4e5e-8c8b-9f501f81be6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73d202f-3f7b-4fa9-bbc9-e641f842f06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5bbe62-075d-443c-b13a-1d865625846f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a996dd2-9ce2-4960-98ee-f8841896273d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb6c82b-f4e1-4de3-adc2-50e14134d14c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31206520-32e7-4781-b930-66ad2cac8335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1d784e-b537-4bc6-8d38-dbce5d3296d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adccd29-9299-4697-b48d-0ebd5d996451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14f88dc-7cdf-490d-bb67-64e6dd127fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe17aa0-6b88-421c-bf95-ab462c0e9a40",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60d0476-e01c-4cca-8a14-316e66e0ba5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a8b5bf-2714-4996-a078-ed2f1b42e411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3158ad2-2a31-4d3c-9061-0f9ae9dfebd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b46c99-8e11-413b-96a9-7675c8cc8f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c3e259-f071-4a18-ae72-9c60d4f5f513",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96879b81-67d7-4418-a0c8-5efaf0e3adf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49cab842-5851-422f-8ec6-c74e2357f1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550b3151-1b85-4b47-8f0e-6093b4ace14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3b8ada-79f8-42d6-8dd1-51390174c5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65a2934-807a-4319-a55c-7f846701e3b3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e011a93-1c68-4a40-901a-1318df7468b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1099847f-2b04-4d47-a4c6-5e2a6a226f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af66c8-f6ec-44fd-8000-bb242d7c8fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b951b37a-2eeb-436e-a655-6f6061f4a9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b4c4f6-407e-43e7-88a8-367f70f805a8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c1b755-0a36-44db-b02f-8a1772c260f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600be6a4-64f1-4ec6-87b5-c974728414d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689003f5-943c-4f68-8913-f18141ebc81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ce877a-72ca-4f50-8632-e7a2d8c0d901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7bbeb0-ebc1-455e-8fdb-767373056201",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883e847b-7154-4920-9a38-8bdcaae18217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bdad91a-17c1-4af5-a78c-c3949783cef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc26ac9-6b36-4aa0-86e7-623581b915ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ed98b5-131a-471e-99c5-25590d79bc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a77b3e-a655-4da8-a313-4be99a48ee2e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc88550-217f-4506-886a-920c15586851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4fb1be-590c-469b-903e-1f2d38aea730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454848b9-cb19-43d0-91de-5dd5e95fde05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9a40b7-3eee-4bf4-ba95-a03e89e141d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9bc847-e493-4f40-90d5-b2420c76ae06",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9653c9db-bb6d-4b35-ba22-ffd2202f1fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da2cede-e6aa-4cac-85f3-8d1423676bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7c4118-a1f7-40bc-ab76-96103cd26595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a785d9b7-58b1-456f-8f31-217304b526fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f379628-df32-46ea-be88-2e00aee9f879",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd0cff-58dd-4df2-a006-95d8d1ff0bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f374797-ab23-4ce3-b087-3cabc8715a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e7e8a9-5338-4ff5-8a34-55f72823807d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e852448c-1112-4652-9a88-656fc4a7de09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97006118-f6ad-4ae9-8871-3b605d2592b1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1962cd64-8dfc-4d44-8154-11abf3e4befc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef428145-9ace-4310-8c60-4d83841fd958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b09412-239e-476a-85dd-353224e78359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cd3554-5964-4257-8ad3-0ccd78ea0f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6577aca2-3af8-4f29-9d75-31328156e0b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3163dc-5364-4beb-bfc3-606f3369dddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3d8407-751a-4b23-8445-826efb870746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d35cd48-44c4-4fe3-bb40-338632ddc5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b036d659-8742-4f5a-b7cb-e64b61035dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30207fa4-54c1-40a3-9c91-fd38bc96708c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15575b35-1cc8-4be8-9e6c-9021a41c57e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efdb27b6-f680-4f21-bcbd-5d0233fc2400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d3bed-7764-4c4d-83d4-d671987590a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042828ec-75f1-4225-af01-9278864ef8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a97a5b2-8cd0-4666-ab82-6b0df2128996",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ed58a7-ae81-4209-bdff-db8ddaea941d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de3f95e-4689-4f0d-9d62-795a54d3a8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0a072f-70d4-4fb6-9f04-a1be7681372d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f022014-1259-4748-98ae-f2bafc5aecba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa6d808-9978-449a-9a17-41b543b6e55e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4933a22a-d1db-4332-9df7-307dc54516e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58dcdb1-05e5-4eef-ba1e-23710071f74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c55157-39c3-47f4-ab78-ec92a4330214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59811725-f7f5-4dc6-9fa0-ddc572e3d6f8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee4ce672-91bb-432c-aad5-765eb37a9938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64ecb5c2-961d-4335-99e0-b7e7baa819c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccb582ea-2a33-448e-97e8-c2bf277b82de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61da601b-e1b5-4ad0-892e-158735f43626"
                    }
                  }
                ]
              },
              {
                "id": "64dd3a64-a287-4efc-8e8f-d3d4cc994147",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "923691e4-56c1-43cf-b922-48aeae144baf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43001a8a-952d-48b3-b17d-7ca8aef1219c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a5c5dd0a-b297-4a0a-8073-960677055d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fe9587-a071-4e00-8f06-2d5f5ddfa35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69047ac9-733a-4a47-b8db-fd93cea7e6b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdd4481a-e278-478e-9006-2e8669d1a893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e79e337d-a59b-4466-838c-07056851d4a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0927053-0314-46f9-a3ec-c79b7d5c3e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6a08204-9fac-4ce9-9ea2-dddd3f9cb017"
                    }
                  }
                ]
              },
              {
                "id": "1485a4db-f184-47b4-a6d6-384992fc9cd9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a33c98c7-b156-498a-bf1f-c0e8f69ee0d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abe72c7-c31d-420f-b02b-94b1590ecce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fcb91060-47f0-417b-8a83-80020423519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f68bba-77c8-4e42-9c05-aecaed3e9935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8be22c7-f6a4-4e08-ad7c-9bc780dd70ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "daecfea5-b761-4aa7-98ef-c8b564c51b9a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd53add8-3685-4c7b-a9bc-c4e9ae05b731",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d49ee19-45ab-406b-9a21-2a9db2884825",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cc5a9527-7881-4ae6-8f98-6509d00d8c82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23af82e5-6b40-40c5-acc6-fafadb75f718",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b2f4c87-7cd2-4135-81e9-2a5936651fc8"
                    }
                  }
                ]
              },
              {
                "id": "67a25c80-fcdb-434b-8a5f-447ed2da9a05",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10de27eb-1cda-4a64-b10c-ffcca32fd136",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6128f0f-2452-482a-a3b8-1a350edbd41f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae7087dd-d7be-443a-b02c-0812fb48539c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12615fd6-55d1-4699-8c6d-a69b6f864c43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f43bd268-7799-4105-acc1-30d20e7715e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "338b6911-1be3-44fc-a77b-e5e639be735f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef28b17d-cfb6-4af1-bb69-5e0baab0109e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77768285-224f-455f-a096-30210aed8076"
            }
          }
        ]
      },
      {
        "id": "2932c0f2-7ea2-406a-b2c0-87c72ca88d7b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "913223ad-8f5d-4106-9d19-e8253564e16b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94c13b8d-abaf-4c48-b8d4-a08aa62b03a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db70f924-ef64-4ed0-a1af-82cd6f04ec60",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24f81d0-9fb8-44ca-8351-fc04958eab3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b86659c-44b5-44b2-b7a5-102d88007ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991e7e5f-f3ab-4961-9364-31aaf00cd81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1731c48f-6985-49a3-9832-a76cf7f428e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4545b9a-7c15-4fea-b814-068529d0f165",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e7d07f9-5f38-452b-8f1e-939991e475f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b2642d-5262-4962-8ab8-cff32a084f52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6576df5-8f05-4875-ab05-727abd216c92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d8997ec-469d-4c5d-88ab-150913969014",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "824cc270-cdbd-4f0f-8c2d-f10f3e604252"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe7260bd-39ba-42cd-a808-1fb1a7bb67fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dee36fc3-1fed-423f-8e8b-230ea5b9a523"
            }
          }
        ]
      },
      {
        "id": "935f8654-8b29-4937-9c42-655e74c149f7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "041d32b2-1e9a-488e-98a1-1634b1cb0801",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59e67c58-672d-4602-a56c-6d17e06546a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5b8b9fe-cfd0-47bb-aef0-7c5875fffdf3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0343b1a-277a-4014-8283-482105448e4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f61067c8-a387-4b92-8f83-0d6a4e4cda97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f282b-ee52-4e69-856f-f8051084866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3bdcb5f-94f5-4ede-8f1a-c95d6a936d30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58ab05fe-cdf5-4d63-b968-299e24b7721d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06d0ea5c-9ea9-40a6-873a-76bc08a6b27f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4cff1a-c5cd-460e-9e82-f4da539de100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2100b7a-0b81-4877-870c-236e3881c018"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a506c85-ab10-48a9-b600-cd0cae425cf6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbf47c46-002f-4179-a568-8ab82e7c55a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f6ba103-b1fc-4625-84a6-d44e34cea4af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a493facc-bf27-4131-af6e-48465c16b7cc"
            }
          }
        ]
      },
      {
        "id": "38d9f733-c9e0-4d6d-b36d-860a51f65b2f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "79915201-5ec9-4bdc-a392-30f0e846c483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a155a852-cc9a-4d3d-8dfb-26daeb91b0ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cecb5b3-9879-4cc0-af93-a15078b649b3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8650541-8d0f-400c-8990-ae6b1336c78b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5178ba17-95e8-40a4-880b-926fe3c77f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622462ac-5939-4c2c-9e7e-a68e91f6eae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "220908a7-5efd-4eb7-893c-c3fbd02e932a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43df849e-94d2-4f07-bd1c-9996b4ba95bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a93eb45-7fca-48d5-b8cf-348643a2c4c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e98cf2d6-1dd7-465a-8628-51c77ce3e9e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c8d65ae-19b0-4d1e-93a7-ac51fff58214"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40953f69-471e-494b-b971-2e8e39bd6dc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1d6fb7b-e2a1-41d8-a6d3-d637db6c7630"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38e459b8-2768-4c60-b566-40c465657eb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68bb07b4-b005-4798-a9d8-33111d61a974"
            }
          }
        ]
      },
      {
        "id": "712fd079-a269-44cd-a4b7-02155bcbf5fd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7008f258-3466-46c6-8b7b-7b9106534f32",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8323c8e-53c7-4bb3-bd17-35f22bd29cd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1cd8dd42-40e4-40bb-9701-28a43039c284",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff2fd1a-68d4-4a5c-a5fa-545bc887e3c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "438ecfd7-1f8b-4cb7-8b99-11048cb47df2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 297.2142857142857,
      "responseMin": 10,
      "responseMax": 6946,
      "responseSd": 1047.00465885732,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718239084686,
      "completed": 1718239168026
    },
    "executions": [
      {
        "id": "70c47b93-01c8-4ba7-8b23-8df33e22de6f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4c5b0945-d538-420e-9281-490a67e1a428",
          "httpRequestId": "764b5ee0-e95a-4496-bbbf-e6a31d7cae25"
        },
        "item": {
          "id": "70c47b93-01c8-4ba7-8b23-8df33e22de6f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a240d3d9-6da9-4916-8ef3-b7a99a1f2e5f",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "9d655375-be44-48b6-aa14-4c97ae762fdf",
        "cursor": {
          "ref": "59baad1d-243a-4ef6-854a-7f2833f12b29",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "974bd99f-f0da-4ee4-8684-9da1d94107a3"
        },
        "item": {
          "id": "9d655375-be44-48b6-aa14-4c97ae762fdf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5e211fe1-468a-43fb-bcf7-d406da5f5e3e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "803f782e-639a-4e1a-b7a8-135ed335434d",
        "cursor": {
          "ref": "091fda71-8e5c-4ad3-b350-906f41f10ca1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "68f3e003-7150-44e7-afc3-eae0bf2c2dde"
        },
        "item": {
          "id": "803f782e-639a-4e1a-b7a8-135ed335434d",
          "name": "did_json"
        },
        "response": {
          "id": "1dd5ffda-7ab1-49c8-bfa5-c83764b05c93",
          "status": "OK",
          "code": 200,
          "responseTime": 501,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340810cf-ba38-44ad-929f-bdf5350ce65f",
        "cursor": {
          "ref": "6ab15d4d-b209-439d-a17f-12ca8f49d8eb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02359332-d56e-4c9f-bd2a-42741b768807"
        },
        "item": {
          "id": "340810cf-ba38-44ad-929f-bdf5350ce65f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5a8c213-a958-415b-940b-f788a8c4f332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2307,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340810cf-ba38-44ad-929f-bdf5350ce65f",
        "cursor": {
          "ref": "6ab15d4d-b209-439d-a17f-12ca8f49d8eb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02359332-d56e-4c9f-bd2a-42741b768807"
        },
        "item": {
          "id": "340810cf-ba38-44ad-929f-bdf5350ce65f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5a8c213-a958-415b-940b-f788a8c4f332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2307,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fcfd82-0765-4ff6-8481-1f2adbdc2295",
        "cursor": {
          "ref": "45569b3c-a982-41af-8c8c-5c69b27ea24d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "15f75aaf-01b9-4139-8064-fcef83ffe75d"
        },
        "item": {
          "id": "a5fcfd82-0765-4ff6-8481-1f2adbdc2295",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "151c012f-cfa0-4cb4-bc26-3b18e4bd33dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2253,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be9bbe-cc67-4a5b-a66f-2ca49fda2ff2",
        "cursor": {
          "ref": "c1e47912-513a-4e99-b9d2-b90289e62626",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3ea881a5-d40b-4e87-92a4-70f775dbf9e5"
        },
        "item": {
          "id": "92be9bbe-cc67-4a5b-a66f-2ca49fda2ff2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e7b452b9-53e6-4a8a-8d69-f66bc2807d2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1942,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54053279-7728-458a-aee3-675ac4d18597",
        "cursor": {
          "ref": "10652e6e-7e96-4ca0-a884-de72bc0aa559",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fc77e01f-30f2-4e1a-908a-81a407df4387"
        },
        "item": {
          "id": "54053279-7728-458a-aee3-675ac4d18597",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3730a57d-87b3-47ba-bdb2-fdabde6a08f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3ab2e3-bf59-4688-a0b7-38446ff4952b",
        "cursor": {
          "ref": "1b6689a5-3258-43cf-a729-86e61d1ead38",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5985c9db-ae3a-4f2d-baf7-a8031e8ca816"
        },
        "item": {
          "id": "6b3ab2e3-bf59-4688-a0b7-38446ff4952b",
          "name": "identifiers"
        },
        "response": {
          "id": "8f763cdf-89a0-415f-bfd8-f6596865877d",
          "status": "OK",
          "code": 200,
          "responseTime": 2555,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbe50db-5c88-48d6-b6b1-91f2f63dd39c",
        "cursor": {
          "ref": "f7f9401d-bd7b-4e41-8ea7-327a8c545899",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "84d39f35-4e5c-43e7-862a-3a7a3004c6c5"
        },
        "item": {
          "id": "4dbe50db-5c88-48d6-b6b1-91f2f63dd39c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a686dc1b-84a2-48bc-b795-8f479535e82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dac978-d537-468b-99d1-50fb27bae221",
        "cursor": {
          "ref": "bc2fb2af-2824-46b0-9aef-164fbb2c7a96",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "606b293e-e235-4554-8647-5df59e476d28"
        },
        "item": {
          "id": "08dac978-d537-468b-99d1-50fb27bae221",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3dc79116-e235-4552-a4ae-5561efb5210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3568c7df-094e-467e-a6ec-37a0e3cccb71",
        "cursor": {
          "ref": "a4eb82a4-493d-426b-a7bb-cb54fcb57c0b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "845b6c8a-cc2b-4614-8168-31a623cd790e"
        },
        "item": {
          "id": "3568c7df-094e-467e-a6ec-37a0e3cccb71",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "56fa0c3d-cecb-46be-b463-e45649e0ad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea2c223-62b4-4ec7-bd59-040b91b6384e",
        "cursor": {
          "ref": "890fbac7-9782-452e-8ffe-e4b5b58b0a3e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "66026900-f3da-403b-9b5d-70eed07cf744"
        },
        "item": {
          "id": "8ea2c223-62b4-4ec7-bd59-040b91b6384e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d11b6193-25b4-4b00-9b57-daa41fb4379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2873f3e8-679b-4d3e-80ab-59b37ed9b855",
        "cursor": {
          "ref": "da4b4f1c-46e4-4ec7-86fc-7671ec87b239",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3f1cfdd6-d23a-4637-a695-04287bdf47b9"
        },
        "item": {
          "id": "2873f3e8-679b-4d3e-80ab-59b37ed9b855",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "328cc698-2368-41c0-b43c-97db43536844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e894e050-a7f7-43c5-81cf-5504780be0c3",
        "cursor": {
          "ref": "0c6ec46f-d4c7-4bd1-85cb-236961252bbb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ea67b51b-9c99-45c3-b211-845b4ce60499"
        },
        "item": {
          "id": "e894e050-a7f7-43c5-81cf-5504780be0c3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "75b919bf-4a9b-4b6f-9492-d7d081d70390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c245942d-7c1b-464d-b6f2-66c36f9c6118",
        "cursor": {
          "ref": "b72102cc-c4b7-4903-8013-960128585583",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5661fd50-d832-4d25-80a0-abc0f522cf99"
        },
        "item": {
          "id": "c245942d-7c1b-464d-b6f2-66c36f9c6118",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8becfba5-74ab-49a2-b881-e4e46ef99140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68af51bd-7152-40d4-9146-0fcfc5e950e2",
        "cursor": {
          "ref": "c6363ed8-2a8b-4af5-9876-ba9884ffc0bf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "28410fb1-fd7f-4a25-b137-adcfdcf114c6"
        },
        "item": {
          "id": "68af51bd-7152-40d4-9146-0fcfc5e950e2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4013d53f-6894-44c7-9e54-c42ed1a3539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c358e1-75d8-44bf-a8be-ee7e21f7e199",
        "cursor": {
          "ref": "d473892f-2458-4e01-9b05-00e5cd8e796d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04273abd-ad8f-4d34-b168-6e72cbd41d4a"
        },
        "item": {
          "id": "d3c358e1-75d8-44bf-a8be-ee7e21f7e199",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "48ab492c-832f-4d37-a28a-66cd9e35304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daed21b1-4356-4709-bd9e-f1f721bf9894",
        "cursor": {
          "ref": "d6e1230b-1d96-4027-bac7-b6e66a636f14",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "30286878-3acd-4d27-8dd7-028acd6bdb87"
        },
        "item": {
          "id": "daed21b1-4356-4709-bd9e-f1f721bf9894",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41c8f531-22c4-485a-a84e-1995394efe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059728d8-90c6-4da0-9d8b-7c263940a6f3",
        "cursor": {
          "ref": "9fdaebe7-e5f9-4109-b2cb-f84cff5a287e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b2b69109-93ec-430b-bb0d-6fb94db4deb6"
        },
        "item": {
          "id": "059728d8-90c6-4da0-9d8b-7c263940a6f3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "370c9b56-aa33-4d50-9d1e-2ae3e3abf1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584b4739-e4e2-4621-badb-d0238cc2b0ba",
        "cursor": {
          "ref": "8b6015c0-795d-4786-9f7e-1a92274e726c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c3fe180a-1cc2-4329-807a-7588d7af2927"
        },
        "item": {
          "id": "584b4739-e4e2-4621-badb-d0238cc2b0ba",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea0b191a-edb1-4567-8f9d-bfad276a83d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ad5bb0-9fcc-47e1-b048-9481169cab3e",
        "cursor": {
          "ref": "748fcdf5-115d-47e2-a227-47a372f7eba0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c323d5c7-265b-43b6-ba27-4e8820511bc6"
        },
        "item": {
          "id": "e4ad5bb0-9fcc-47e1-b048-9481169cab3e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c4dddb06-1667-41ca-ba68-147d2d337f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d97c0d-1806-446e-9cc3-5ec484c1ad6e",
        "cursor": {
          "ref": "5cc60182-32eb-4ab0-b29c-66b6ca5eca2b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f0167042-a5e2-43c4-b64f-52a210207124"
        },
        "item": {
          "id": "59d97c0d-1806-446e-9cc3-5ec484c1ad6e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "00fa35d9-eeef-4f56-9843-e201689976c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dfddf9-162a-4701-8a48-279fcd84f838",
        "cursor": {
          "ref": "9b07aab4-b16c-4601-bd02-57de295137f1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "87348d91-36bd-41da-a530-8bb9e13d9e7c"
        },
        "item": {
          "id": "e3dfddf9-162a-4701-8a48-279fcd84f838",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "74e0d792-51a1-4fb5-9dde-872ba8cd4dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51780310-4bc6-4e5a-b6aa-259575537447",
        "cursor": {
          "ref": "6b843e81-fc5e-4e3f-8873-829647c32592",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b6ff49d0-691f-4400-b8eb-f9feaa424c5b"
        },
        "item": {
          "id": "51780310-4bc6-4e5a-b6aa-259575537447",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2fcbab6f-b62e-4b74-b0ac-27c4f4cc4bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50940fc-ebcb-4421-ac98-c04c5a9d9994",
        "cursor": {
          "ref": "f85eb5e9-4172-4d40-8374-c5921e074d3b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2c1ba133-beae-4a4e-8c7d-5b64dfbd2faf"
        },
        "item": {
          "id": "f50940fc-ebcb-4421-ac98-c04c5a9d9994",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "953077b4-02df-46de-9e29-c7547a21b001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678cbf47-07b5-44fe-8575-a4e54a7f83ee",
        "cursor": {
          "ref": "6e275c5e-d817-4b3e-9fc2-85a9d0f4b717",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "78c89f63-8e2e-4bda-8ec4-df490a5e00fa"
        },
        "item": {
          "id": "678cbf47-07b5-44fe-8575-a4e54a7f83ee",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1c61961c-03c1-4cc7-92c9-0db4122cd7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2a78d9-5706-489f-aae4-ae00b577c5c8",
        "cursor": {
          "ref": "c42431a4-a3dc-4508-9441-b527d41a8359",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd9bc9ff-1206-4df2-be6e-576dcb35db98"
        },
        "item": {
          "id": "9e2a78d9-5706-489f-aae4-ae00b577c5c8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "670c3eda-4726-4d56-a343-59fa7c2bceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8704a815-b349-45cb-9b9e-ddb130465f31",
        "cursor": {
          "ref": "644682d5-1c2a-42e4-80b6-9300eb1a3c82",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1529a7dd-7b99-4fd3-a1b7-99b61266f23a"
        },
        "item": {
          "id": "8704a815-b349-45cb-9b9e-ddb130465f31",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4a977353-360f-4859-aa1e-34857276472a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fd9ae1-58de-4d1f-a4b1-b80add333c32",
        "cursor": {
          "ref": "5417ed26-d732-40ac-9a97-2150ebd4ae1e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "68f70fd4-0cf8-48ee-a418-046a170aeb66"
        },
        "item": {
          "id": "70fd9ae1-58de-4d1f-a4b1-b80add333c32",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b068d2a0-e914-431f-8014-c436ab3ff378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca43bc9-bf2a-4e2d-955f-1a3a0c483029",
        "cursor": {
          "ref": "49dbfbdd-884e-4128-8ae6-ff8feb0eaf2b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "23492db7-1673-47c5-b9f8-dff5da076884"
        },
        "item": {
          "id": "4ca43bc9-bf2a-4e2d-955f-1a3a0c483029",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da51cf95-dbff-434a-a14d-4a59fce36814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f70207-b5ec-4d5e-b412-111b01832b22",
        "cursor": {
          "ref": "6b20a9b3-ba3c-4067-a276-3b93e0c6b14b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "667f59ca-bd7e-43e2-b8a6-a50e9abb7b9e"
        },
        "item": {
          "id": "98f70207-b5ec-4d5e-b412-111b01832b22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "98687629-5a99-4116-a95d-639f70022296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed74aed0-8025-456a-8de5-dc8d3ab2a846",
        "cursor": {
          "ref": "4f2a1bc9-f1a8-4e97-b50f-b793a63efd49",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8250c688-b00e-4ec8-8f38-91600fdbb015"
        },
        "item": {
          "id": "ed74aed0-8025-456a-8de5-dc8d3ab2a846",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "08411a54-bb7e-4ecd-ae8f-6b0ed90a5d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91068657-d05e-41f7-abe9-364bc8e8f56f",
        "cursor": {
          "ref": "217dcafb-e03c-48ef-8162-bf0aef709718",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "86587d3c-68a9-42da-9739-c14492cc5fcd"
        },
        "item": {
          "id": "91068657-d05e-41f7-abe9-364bc8e8f56f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4caa439d-6e5b-455f-91a6-ce771d05eb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d1cb00-9c5b-492f-8aef-a294820ea52c",
        "cursor": {
          "ref": "f658d5ed-2376-4b80-a2ab-518af7cafbd8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "551118fa-360e-49d0-9a3b-bf8ad070c951"
        },
        "item": {
          "id": "68d1cb00-9c5b-492f-8aef-a294820ea52c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "92863e1a-e9f8-41e2-b503-96dd45e98edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d65c0a-6f25-4647-87c5-2cc55e69caec",
        "cursor": {
          "ref": "90a1ba3b-139a-48d7-b589-e10800aa588e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "49d1b10b-be20-4be0-abcc-ddb681bc55f0"
        },
        "item": {
          "id": "78d65c0a-6f25-4647-87c5-2cc55e69caec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f2e355a-fb52-425f-a6dd-80959d152fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab095dd-e568-4c77-a69b-370256302c04",
        "cursor": {
          "ref": "3916ba57-a6b3-4ec9-9e0c-29316c668fc1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "813b12af-6f80-4f49-85e8-75a5208b5a37"
        },
        "item": {
          "id": "7ab095dd-e568-4c77-a69b-370256302c04",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aedb16a2-9da4-4349-a51b-063d46e499a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8037d0-7ddc-4e7b-b10b-4cd8f4f9d49d",
        "cursor": {
          "ref": "0b731bf8-4a02-42d9-9d24-d47956f80b14",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "13e1456c-b283-43e4-849f-9df522975e30"
        },
        "item": {
          "id": "7f8037d0-7ddc-4e7b-b10b-4cd8f4f9d49d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2f388dd-ea3d-4d14-a1b1-aff4ba3bbc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b66fd6-392f-44d2-b27f-da55af52f567",
        "cursor": {
          "ref": "380059ae-3a35-47bd-9a73-512d6ccb6f4f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "532b291d-a26c-472c-a48e-2d96189d397c"
        },
        "item": {
          "id": "12b66fd6-392f-44d2-b27f-da55af52f567",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9323c5a5-4cd3-401d-8613-42807f110473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf30f65-1edd-4c07-b9e9-5bc76bed167e",
        "cursor": {
          "ref": "977c7abe-a3b9-4188-af2c-13d10fc1b5cc",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ef79123-f1d7-4635-a7a6-267035858b56"
        },
        "item": {
          "id": "5bf30f65-1edd-4c07-b9e9-5bc76bed167e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "86ac98c7-9c2e-4f83-85cc-cba6fb55fc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3655936e-7b2d-4a17-b858-5412ed5767c9",
        "cursor": {
          "ref": "7a52b311-710f-492d-a321-d38798bea3cb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77b99573-1974-4f3e-975f-c26281c3725a"
        },
        "item": {
          "id": "3655936e-7b2d-4a17-b858-5412ed5767c9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4d1ee4c7-de20-4d0d-8a4e-bbc53627724d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25bb829-371b-464e-b03d-dc4214986428",
        "cursor": {
          "ref": "90bc4976-b26e-47f9-a4b5-696770e2e8d8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a98bae6b-82e9-4267-a0a2-342645a154bc"
        },
        "item": {
          "id": "b25bb829-371b-464e-b03d-dc4214986428",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "43fc5403-79fa-4d47-a1d3-efed4bdabb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8905304-2f55-4124-8349-8758c0bf0127",
        "cursor": {
          "ref": "8b2340c3-8170-49b7-81c3-ca6ff2a10ff5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "73986954-170e-453b-9071-6306bac9a031"
        },
        "item": {
          "id": "c8905304-2f55-4124-8349-8758c0bf0127",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3104dcca-e16b-442b-82c4-0418861cbe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b8370b-640f-43e3-9bcc-b48e252d5864",
        "cursor": {
          "ref": "04a1c9d8-406f-4925-aa37-96cf4b2fcfc5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b9dbaf04-45ae-497c-99a8-9acbfcf539a5"
        },
        "item": {
          "id": "e1b8370b-640f-43e3-9bcc-b48e252d5864",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6a1d012e-5933-46ca-8eeb-369c92f3c10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549d145c-33b8-4122-9422-bf8ae6824142",
        "cursor": {
          "ref": "a0115305-03d6-4abf-b94c-f6180dc49cb8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "334698d3-7539-4c05-aa4a-b9fc70daf40c"
        },
        "item": {
          "id": "549d145c-33b8-4122-9422-bf8ae6824142",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b429c9fb-b364-4964-943a-1e4693664600",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa8e17c-d6ba-41d0-83c4-aa578b0baa99",
        "cursor": {
          "ref": "92bb5bed-ed92-4b0a-b5ab-546e431f0f6e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ba255373-19f2-4a8b-8793-b505d2ae30ec"
        },
        "item": {
          "id": "4aa8e17c-d6ba-41d0-83c4-aa578b0baa99",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "685638f5-c716-48b4-ba11-cfe81dc3ca96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be96c6f7-4ce5-475e-ab61-4678e3c01eb9",
        "cursor": {
          "ref": "f8ec72be-6a1b-415a-9ea1-3a321635ffc8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1bd51f69-509d-4187-af4b-27372cde0cb3"
        },
        "item": {
          "id": "be96c6f7-4ce5-475e-ab61-4678e3c01eb9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1c17dddc-218d-48da-a719-b3629c9f8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc23471-4bc8-41d3-b8d6-f014da55f003",
        "cursor": {
          "ref": "982ba514-01f0-42ab-9eca-5c6ccb169d2a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be99e618-a1fe-4a4a-8d40-de5840f1b13b"
        },
        "item": {
          "id": "5cc23471-4bc8-41d3-b8d6-f014da55f003",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0932ffee-92a1-47bb-90b9-73260e7d2718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c44e29-f00e-425d-aa50-62a4de5cd1bb",
        "cursor": {
          "ref": "ff1a6d3f-df4a-4945-ba71-64564b15b4a1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "163bd28e-a920-4503-8421-c450daf84a0e"
        },
        "item": {
          "id": "e9c44e29-f00e-425d-aa50-62a4de5cd1bb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c2ad6330-f68a-4a72-944f-dff62a5ff0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766627d8-a477-43df-a97a-1594c1f8f8c2",
        "cursor": {
          "ref": "313c7b06-6028-4092-ac7a-7b6aacd3ab18",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "73b977fc-7d25-4d70-a79c-7ea11a6f742d"
        },
        "item": {
          "id": "766627d8-a477-43df-a97a-1594c1f8f8c2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f0004964-00a9-4c56-906a-3b39d9a11593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326eaa69-e58e-49e6-a28c-833acb257fda",
        "cursor": {
          "ref": "ab4b8835-d7ad-48cc-a72a-300edbf8a475",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "59a0739c-3e19-4444-adfd-2f45711e48ee"
        },
        "item": {
          "id": "326eaa69-e58e-49e6-a28c-833acb257fda",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7afb1557-0f4a-4b0a-97fe-a236d6b34dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0430bc-e377-46d6-96dc-886e3c088d26",
        "cursor": {
          "ref": "8293f9ef-670e-4d19-ae7d-60af60276d38",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "32ce45e3-294a-42f1-bc3f-a4a986c3190f"
        },
        "item": {
          "id": "4f0430bc-e377-46d6-96dc-886e3c088d26",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "27a9c1fe-3eb5-444a-bbc5-e55ec8264b58",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c807e7-0311-469d-af81-62e1259f2295",
        "cursor": {
          "ref": "5565f29a-d576-4839-8ff6-ac8b47c2bda4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "06797bbb-7ed0-423f-a7a3-28d73c564e29"
        },
        "item": {
          "id": "b1c807e7-0311-469d-af81-62e1259f2295",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "191d01da-6f1d-4269-9f7d-8f30368d0839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc35936b-d5e2-4569-a953-b7e887a1627f",
        "cursor": {
          "ref": "08b6bd58-982a-4d9c-b070-36a798c88d89",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "65252d78-004f-4545-b5fd-8186d8f8cab4"
        },
        "item": {
          "id": "cc35936b-d5e2-4569-a953-b7e887a1627f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d42f469-2d36-4b8c-a7c7-012081f9756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496cfa49-8bd9-4d63-ac67-9f907c419a7c",
        "cursor": {
          "ref": "6c6cc1f2-93d4-4154-99b3-165361fce3de",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "85260d93-b41a-46b4-bf8c-a2349c1abfa0"
        },
        "item": {
          "id": "496cfa49-8bd9-4d63-ac67-9f907c419a7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "929c0609-f5b2-4437-8bb7-d9ed3049528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089fc252-e839-43b1-b038-1b93eb46305e",
        "cursor": {
          "ref": "2ad40032-7116-41f6-b5c5-024ca86ffb68",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "02aa3ffb-d5ba-4ebb-945f-6695e9ba58d5"
        },
        "item": {
          "id": "089fc252-e839-43b1-b038-1b93eb46305e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e9cdc8b5-ad52-43c2-89fe-d4bdcde86612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c0e16d-f3d6-4c4d-9933-73a591dcea14",
        "cursor": {
          "ref": "7d4f3255-0692-4fa9-bd67-f92252527df9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f79c78b3-3634-436d-b517-2dcb18d9db34"
        },
        "item": {
          "id": "77c0e16d-f3d6-4c4d-9933-73a591dcea14",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8014cac8-820b-41e0-bfcb-9209edb7fbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a96e95c-9588-43ca-84ff-1cf26efd5d26",
        "cursor": {
          "ref": "5f023d6a-c59c-4849-900c-c412a2e01829",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5f7204c2-046d-442d-85d6-acdcc8be586d"
        },
        "item": {
          "id": "1a96e95c-9588-43ca-84ff-1cf26efd5d26",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c554544c-012e-4dcc-8b22-eba70b3ce8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c13c15-39a0-471d-b80e-68295c3afd9c",
        "cursor": {
          "ref": "84a86bab-d0ab-43d6-9dfa-aae770339732",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0bb7d5eb-be98-4935-8a8e-fd634522b020"
        },
        "item": {
          "id": "90c13c15-39a0-471d-b80e-68295c3afd9c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fffc349b-18a4-4a77-878f-3e3183f84295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b726f21-b289-42ef-8139-4e496d60b81f",
        "cursor": {
          "ref": "ded3b5c2-77de-4240-b7f6-e5fb1fadd012",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cf647e6e-989f-4bd2-9082-cd7c630cfc65"
        },
        "item": {
          "id": "0b726f21-b289-42ef-8139-4e496d60b81f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2a48ca7c-4d0a-470d-b463-e22c3be2a152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dee5a46-1a17-4f20-94f3-ff57256d0ef7",
        "cursor": {
          "ref": "86ce4c6f-942c-473d-a744-73ab93add285",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "97f9ae71-b354-47de-a587-160b9d88bab0"
        },
        "item": {
          "id": "2dee5a46-1a17-4f20-94f3-ff57256d0ef7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "814cf5bc-c383-41fe-a9d2-4ea4ae65fab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ebc15-95ec-408a-9695-b36b92472107",
        "cursor": {
          "ref": "f9b13e97-d95c-4024-adbb-4f114b8f2a24",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e3fb7ff4-3736-478e-a68f-a3a91ef6f5eb"
        },
        "item": {
          "id": "2c3ebc15-95ec-408a-9695-b36b92472107",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8390682f-dc02-4796-98f8-34338cd85b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bd6fcd-019f-4e32-9c6a-f769eccdc398",
        "cursor": {
          "ref": "c9c6afaa-c6d0-47a6-81b7-eaade70cd5ff",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5e3f78f2-0cb2-4d76-8457-d61f8146b4b3"
        },
        "item": {
          "id": "f2bd6fcd-019f-4e32-9c6a-f769eccdc398",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d6d78447-07c9-4c6d-bc0f-8ea97adfe691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc9cfaa-1c41-4c57-9ad0-05badac45806",
        "cursor": {
          "ref": "071f4e73-606f-4089-9e18-0bdedba9c958",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "976a5129-47d5-45ca-8314-e275304e7b3f"
        },
        "item": {
          "id": "0fc9cfaa-1c41-4c57-9ad0-05badac45806",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "92577d9c-4c80-428f-860f-44278c9aa69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d39cb78-4977-4d83-8f3c-5e03653c6856",
        "cursor": {
          "ref": "696bbe14-d8ea-4e68-97a7-30c178b055bf",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c85a7e3f-2ccd-4063-a4e0-ffd1132b6cec"
        },
        "item": {
          "id": "5d39cb78-4977-4d83-8f3c-5e03653c6856",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76519894-39c2-44de-98da-5eec5fca52c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bc5dbc-d401-4f7d-8e98-50cb92e88e90",
        "cursor": {
          "ref": "a3c95f79-751c-4514-9e8c-237c5f048669",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "96fd89d2-7c24-4174-b085-b58b03908daa"
        },
        "item": {
          "id": "a2bc5dbc-d401-4f7d-8e98-50cb92e88e90",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df0e28cd-2a63-4f2c-bc62-db3214160674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3912d7ad-2f09-4b7d-ad52-5687a0d019fd",
        "cursor": {
          "ref": "b7802610-2b45-4bd4-9b67-84dd142abcc1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "93a40611-dca9-4d43-9f7f-fa25ffde3767"
        },
        "item": {
          "id": "3912d7ad-2f09-4b7d-ad52-5687a0d019fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dad7b2d3-2ade-401a-a186-50e5aefbb8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8d849-8e25-4b81-aa3e-0fd76806c1fd",
        "cursor": {
          "ref": "c365ca4a-0290-43b3-9337-bb2b4e3f47c0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d2776eb5-f355-45bd-9ef0-fa322660a4d0"
        },
        "item": {
          "id": "83c8d849-8e25-4b81-aa3e-0fd76806c1fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eace2898-bd7f-4731-90f6-8641ed491995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c559046-10ee-4a71-a601-99e201d73f12",
        "cursor": {
          "ref": "9f7e4f09-ec84-41f5-9859-e273e9ec59bf",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c131d9f-0b8d-4185-a4d9-513c2b340497"
        },
        "item": {
          "id": "8c559046-10ee-4a71-a601-99e201d73f12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "143e064c-9a60-40fa-8beb-38ec83ab63bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d23388-99a7-438f-aee4-033e05793ccb",
        "cursor": {
          "ref": "c12282e4-39d7-4ba1-b411-c7adbf973a36",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9194ec90-7917-4c60-be2b-e71778de818b"
        },
        "item": {
          "id": "d0d23388-99a7-438f-aee4-033e05793ccb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5b22a09d-5c6c-48cb-8890-e3b62461b78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbfa92d-07ab-49a9-ac99-83579ec422a3",
        "cursor": {
          "ref": "f743d440-d386-490d-a82d-d655b3579ed2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "178ad3ec-f039-4fa3-a392-a4e91e2b6e2b"
        },
        "item": {
          "id": "3bbfa92d-07ab-49a9-ac99-83579ec422a3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "12642a6c-b22a-4ebf-a530-2c2ca4d74bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef192ab-b0e8-4a03-a814-9e30c11b9bb5",
        "cursor": {
          "ref": "692f27af-9a9d-47c7-81aa-7d5cef35de61",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0ea35fec-13fc-42fd-8dd3-03431d076454"
        },
        "item": {
          "id": "3ef192ab-b0e8-4a03-a814-9e30c11b9bb5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "91123eaf-4c37-4d9c-afa1-67a52988e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a95e3b-41dc-4157-b818-f0b5a7fe9280",
        "cursor": {
          "ref": "a8722963-b6a4-4bc4-a9b7-f1a40f31032b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7c52a133-be41-4cf4-83df-ea2937f91417"
        },
        "item": {
          "id": "09a95e3b-41dc-4157-b818-f0b5a7fe9280",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c523e401-9588-43df-94f2-87e29a644d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95591a9e-a3f8-45a2-865f-322d63e51c04",
        "cursor": {
          "ref": "3ca7d53d-1cad-42b6-bca1-ded125b0d26b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "228ad08c-e143-4888-9ba3-1027a8e46a43"
        },
        "item": {
          "id": "95591a9e-a3f8-45a2-865f-322d63e51c04",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "286c6bbf-8263-4631-8735-a5e84ba5f32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c70cc5e-39db-4949-a3bf-268c38bf33ab",
        "cursor": {
          "ref": "3b8e9c1c-bd5b-4a13-aa59-8671bd318521",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7414205f-983b-4b91-9b3d-f2b94bc5bc18"
        },
        "item": {
          "id": "5c70cc5e-39db-4949-a3bf-268c38bf33ab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e85828e3-6e8e-4633-9687-cde52d0bed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578f9e2-95ad-4306-93be-77a7640853ec",
        "cursor": {
          "ref": "17297c46-7ef3-4374-a524-589e750657a3",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f2df4c72-f9e2-4bea-8337-907ee181e84a"
        },
        "item": {
          "id": "2578f9e2-95ad-4306-93be-77a7640853ec",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f3614256-cc44-442b-b760-85de21f42429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab03ab8-8146-4537-88fe-f73f96613528",
        "cursor": {
          "ref": "71cd1733-3c42-4a4f-a60b-234a78001893",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "45afa152-ccc4-49ab-83ca-d19a3ce2f1f0"
        },
        "item": {
          "id": "2ab03ab8-8146-4537-88fe-f73f96613528",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "02f4887d-f425-4ddf-ab2d-5a9da7ab8699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f571ad6-a9cd-441a-be3b-234424c526bd",
        "cursor": {
          "ref": "1320b2b4-1d3f-481f-83fe-5d88e2e8faca",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "467bb314-c706-4c0f-94ac-0bbe829eed7d"
        },
        "item": {
          "id": "8f571ad6-a9cd-441a-be3b-234424c526bd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b2c527b8-4c9f-45a7-a255-89df58d18d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb71d9b-4fdf-4924-9dbf-a046483b6282",
        "cursor": {
          "ref": "6601d7a7-7ace-42d4-a48f-ec62c0cbcc25",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62cf77b0-12b2-494f-b167-abecd7fb9ee1"
        },
        "item": {
          "id": "cdb71d9b-4fdf-4924-9dbf-a046483b6282",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2c19709b-a34a-46fc-a1e0-1d1d81a573c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2674774f-ecf6-498f-8800-40501348aced",
        "cursor": {
          "ref": "740c13fc-6434-4e37-87fd-adc0d2c96249",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "86b0c09d-4c18-49fd-915a-44ac3d2e6617"
        },
        "item": {
          "id": "2674774f-ecf6-498f-8800-40501348aced",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6e6b76c7-7eb2-45d5-aee7-ec75c93098e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d96b03-524c-4a21-8697-6c1f0bb7bfa2",
        "cursor": {
          "ref": "f97d673d-b0d1-4925-9f29-1562ce7e691f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8f62bef4-d1c1-41a9-b5c6-c77acf03caa8"
        },
        "item": {
          "id": "85d96b03-524c-4a21-8697-6c1f0bb7bfa2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "98686c70-72a1-4518-8f04-0e99dad1ea31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0ff3a-7013-4164-8a79-28bd71bddbc5",
        "cursor": {
          "ref": "65a1adec-717d-4d3a-b22a-ef138bd4a93b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7d021b87-9e05-4131-b071-66d144a5bcf8"
        },
        "item": {
          "id": "94c0ff3a-7013-4164-8a79-28bd71bddbc5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ec0f194e-d486-4ec8-8715-d659815379af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc08423f-919c-4fbf-9073-4c220f83dc75",
        "cursor": {
          "ref": "3768b0de-9f43-4fd6-9034-9d8582cc6b05",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "10a952f1-3b41-45ba-a024-035330967dc9"
        },
        "item": {
          "id": "cc08423f-919c-4fbf-9073-4c220f83dc75",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fdf29753-63da-48ea-885b-18853a05a810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69f83fc-136c-4be4-a1e9-aaeea63fd65a",
        "cursor": {
          "ref": "1d4d6cc3-5306-405c-b481-fee98162f616",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "72f3563b-a555-4782-b462-42efca314f4a"
        },
        "item": {
          "id": "d69f83fc-136c-4be4-a1e9-aaeea63fd65a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c5686693-3932-44e9-b2b9-8cd925d09f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60665b55-8acf-430f-9bd6-b16a581c5e4d",
        "cursor": {
          "ref": "774a92b0-dee0-4e9a-9b7e-277bf543b20d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "241485b4-0fea-4df9-ba8d-418ecb971dc8"
        },
        "item": {
          "id": "60665b55-8acf-430f-9bd6-b16a581c5e4d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f39bd405-295f-4205-8498-aeba8d980211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1224ea-7d97-4dea-83c9-d43e2cb2b4b6",
        "cursor": {
          "ref": "e71ce7d4-a493-4f28-865c-f9f111c52759",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6cca5a74-7b45-4a1d-a646-b75c71bc977c"
        },
        "item": {
          "id": "6a1224ea-7d97-4dea-83c9-d43e2cb2b4b6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1f20a447-e172-457f-b967-114606231a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8171383a-e332-4fd1-91aa-b6cba7a88ced",
        "cursor": {
          "ref": "5e9b8926-ab3a-4a6a-8b64-192405844564",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "527ded5d-e0ed-47ec-b8a2-03caf87ff01c"
        },
        "item": {
          "id": "8171383a-e332-4fd1-91aa-b6cba7a88ced",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec153b04-02a2-47b0-a8f7-09405e1c9264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2051ba5-202b-4a5c-ae12-d134b7c1f19c",
        "cursor": {
          "ref": "590aa5c8-9e38-4cde-b495-d9a3a8594e6c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "72f6a7c0-1bca-40a6-bae1-40c4149bb731"
        },
        "item": {
          "id": "d2051ba5-202b-4a5c-ae12-d134b7c1f19c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "45e80498-1e0d-40fb-bf83-5656c9572764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a1f3da-4759-43ef-b032-145f2474c3ae",
        "cursor": {
          "ref": "40a6e320-e93e-4c7b-9b5d-47a23ce1e454",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4cff7fa6-9c3c-4549-94ae-408b79186286"
        },
        "item": {
          "id": "99a1f3da-4759-43ef-b032-145f2474c3ae",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cf8b00dc-0024-44ba-9f5c-a5d3fca4aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d5dc37-d948-4c02-95f5-a62dcb8dad84",
        "cursor": {
          "ref": "7dd2c13d-0ae1-4ed2-8d6d-66c0988d5fbd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9922420b-4f80-4aae-87e7-937571e05f50"
        },
        "item": {
          "id": "a4d5dc37-d948-4c02-95f5-a62dcb8dad84",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "68677e9e-290c-41d3-95dc-69f4184f876c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18031c71-d69b-43b8-a414-ebadea6f12b2",
        "cursor": {
          "ref": "69793416-d964-4dc2-b708-51282c06e1e5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f6c40aa7-7b50-4918-8fde-767588281f75"
        },
        "item": {
          "id": "18031c71-d69b-43b8-a414-ebadea6f12b2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a794263d-b5b8-4716-bc22-eeb2f91da1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8bae71-b815-4890-9495-513685a026f7",
        "cursor": {
          "ref": "3fad3ad6-2040-40d1-a289-de7749fa8e34",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "155829a3-8828-4523-8e5c-cde2d825303a"
        },
        "item": {
          "id": "3a8bae71-b815-4890-9495-513685a026f7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "74446969-b93d-4a9d-8e34-821d3cdbcc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2013f2d5-64cb-4b5f-9255-015f95d3204d",
        "cursor": {
          "ref": "427af168-e63c-4e27-a4ca-85c8bfaf7599",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0578f0b4-767d-45d0-b024-306e1e601013"
        },
        "item": {
          "id": "2013f2d5-64cb-4b5f-9255-015f95d3204d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f6ed18c3-4c8b-480c-862f-5b7e655d5565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873a1f2d-b32a-4707-b5b6-0fc70b105a21",
        "cursor": {
          "ref": "af3bd64d-d2c9-4452-afda-b31229c8cdcc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "71090ebf-8af5-4181-abb1-fe6d116c84e5"
        },
        "item": {
          "id": "873a1f2d-b32a-4707-b5b6-0fc70b105a21",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c1020d4c-66f0-4c50-9248-be6e5c14eb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4f7583-0832-40fb-84d5-eb655e2ec850",
        "cursor": {
          "ref": "bcde5185-7c93-431f-a5f6-5cd77263b0c1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "acbca949-1f7f-426d-ab9d-84201b4e7d04"
        },
        "item": {
          "id": "6a4f7583-0832-40fb-84d5-eb655e2ec850",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "18cbccad-0c14-4a86-9ac6-56361963e0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5331b4a-ca05-46d9-81df-c1bfc61d673c",
        "cursor": {
          "ref": "d20eef52-628a-4ece-b097-452c98b52dc9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "38c9cfdd-28ae-471a-936a-f8c63db638ed"
        },
        "item": {
          "id": "f5331b4a-ca05-46d9-81df-c1bfc61d673c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4a4bf4ad-d64a-4ec0-8ce4-8619acec2315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36415061-93da-46cc-b7fa-04daff902599",
        "cursor": {
          "ref": "28463933-0a30-491d-a0b2-51759d0ea18d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "89b599ca-3ec5-40be-8402-139c6f82616d"
        },
        "item": {
          "id": "36415061-93da-46cc-b7fa-04daff902599",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e362818a-49d7-4d30-90c9-4d3a2c5e9db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f90d9-bba0-4a6d-9d79-2598b20c7bad",
        "cursor": {
          "ref": "2be6e921-d9a8-4ce0-a42c-2cfb62c13fff",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e438a346-df14-4058-b2ce-c7403d7494f5"
        },
        "item": {
          "id": "4a2f90d9-bba0-4a6d-9d79-2598b20c7bad",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56560df5-f143-4426-8601-388a78b5752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578004c2-4a90-41b6-ad90-d5b39c925c9d",
        "cursor": {
          "ref": "f73ee0b9-3198-4abc-ada8-2ed5e05b9764",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ccd98fc5-58f0-47c8-94d3-3ac994d95d02"
        },
        "item": {
          "id": "578004c2-4a90-41b6-ad90-d5b39c925c9d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "490057ac-fdf3-40f0-ad82-7ee1a2e8e279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12b1f66-0aee-4ee8-8b1f-916e90c09b4a",
        "cursor": {
          "ref": "be77f24e-923a-4d68-88bb-1f6980e0a57e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "78e7caf2-60a1-49a3-96cf-5c6df1a7acce"
        },
        "item": {
          "id": "e12b1f66-0aee-4ee8-8b1f-916e90c09b4a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1e35010-7712-4753-8fbd-aa9262a38d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dabbbbb-6212-4d4a-b163-9180cf4f169e",
        "cursor": {
          "ref": "e8961e01-3b37-488f-b041-2ae31069f7a7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d078da1c-fffa-4158-84a2-a13f1f0d9d62"
        },
        "item": {
          "id": "3dabbbbb-6212-4d4a-b163-9180cf4f169e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "608d6267-578a-4a73-99f1-0cecc4b4a17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d86a15-16c3-4def-8cc3-36aa19144c77",
        "cursor": {
          "ref": "e1a621d5-0be1-4ab7-9da5-a541e4443b70",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c919b6f3-4d88-4d8e-8c8c-2b6e7fd6587f"
        },
        "item": {
          "id": "e5d86a15-16c3-4def-8cc3-36aa19144c77",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "25ea6f27-63bc-4166-a07a-f3297c6b0cfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53786fa4-6ec1-455c-b227-0e5d742544d2",
        "cursor": {
          "ref": "89b51d30-4ece-450b-b483-82ae29424892",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c8b99bba-977a-41d4-a14f-c8418f4cd174"
        },
        "item": {
          "id": "53786fa4-6ec1-455c-b227-0e5d742544d2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "df1e7670-dd17-46c0-8345-4061037d58ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a54b19bd-db13-4cc4-a0f1-8f46175d62dc",
        "cursor": {
          "ref": "c0972dfa-f2dc-45c1-b5e6-554c45a0b3fe",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ce5c5c96-ddce-43d3-b079-fe07cbb06230"
        },
        "item": {
          "id": "a54b19bd-db13-4cc4-a0f1-8f46175d62dc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5dc39732-4085-4f34-98f8-048cf08bb756",
          "status": "Created",
          "code": 201,
          "responseTime": 6689,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2137a2b7-92e4-4946-adc0-9e585a1e86c9",
        "cursor": {
          "ref": "f8f0dfb5-3183-4b12-9ed3-18fffacce260",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ee7d025f-188c-4236-97c7-784b6c33132a"
        },
        "item": {
          "id": "2137a2b7-92e4-4946-adc0-9e585a1e86c9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "33c33682-079a-4c3c-9acc-706db66ea72c",
          "status": "Created",
          "code": 201,
          "responseTime": 6946,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd2ec0d-be7a-45b9-b7c1-66215eac6e8e",
        "cursor": {
          "ref": "5022d2b8-0b8a-4324-ab82-052d8b0484c0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a92a5fd6-dd16-428c-a635-8db6fad10b02"
        },
        "item": {
          "id": "9bd2ec0d-be7a-45b9-b7c1-66215eac6e8e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e98e841f-3b63-4cad-8fe9-d7a4c5ca1756",
          "status": "Created",
          "code": 201,
          "responseTime": 6768,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53755a8-e970-41a6-b072-c981fb289c60",
        "cursor": {
          "ref": "f9b1ae0b-64b2-49db-95b5-d830fd3811a1",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "45bd2ce2-61d6-4110-8920-cb860517b649"
        },
        "item": {
          "id": "f53755a8-e970-41a6-b072-c981fb289c60",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd65cafa-fba9-4731-82c0-8590cfe34219",
          "status": "Created",
          "code": 201,
          "responseTime": 6193,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dfff64-ff25-45b7-9e51-029ffcc67ba7",
        "cursor": {
          "ref": "c47ed478-693c-412f-b44b-87e475a5621c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3e28f9f4-a351-42fd-95d8-d24ba6db4603"
        },
        "item": {
          "id": "21dfff64-ff25-45b7-9e51-029ffcc67ba7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1a901287-dd60-4402-82d6-3be8da9e89eb",
          "status": "Created",
          "code": 201,
          "responseTime": 6421,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-13T00:38:58Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-13T00:38:58Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "243efa8d-5d83-445c-bcc3-dc2629e1b7fa",
        "cursor": {
          "ref": "fa646c13-b55e-440c-af6f-22f428559f28",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9e167230-edcf-4592-bcd9-609b6b269aab"
        },
        "item": {
          "id": "243efa8d-5d83-445c-bcc3-dc2629e1b7fa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d2957920-3ca9-4601-a7a2-da9102f5169d",
          "status": "Created",
          "code": 201,
          "responseTime": 6347,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818897fe-e5fb-44f6-92e0-dfc0c04fab3a",
        "cursor": {
          "ref": "78c81f67-4d39-4a26-8dac-22a7f641286c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea75d2ee-5f5e-428c-a21c-c057d64aa2bc"
        },
        "item": {
          "id": "818897fe-e5fb-44f6-92e0-dfc0c04fab3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a364805-f217-487b-8e2f-74598cd2e61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef882ac-9c7f-4b6d-b3be-8ecd8703c2b1",
        "cursor": {
          "ref": "24b13170-11c4-4eeb-bbe6-f5b8f561f07b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "484f6d13-c487-4490-bbba-984cb03f09cc"
        },
        "item": {
          "id": "4ef882ac-9c7f-4b6d-b3be-8ecd8703c2b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c69ee8d1-852b-4c64-bf61-e2742a25069a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdfbe24-ed04-4a22-b652-8faf3f61e394",
        "cursor": {
          "ref": "fd71f05c-3c17-4686-ab05-d832ec0749fa",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a93bafff-b004-42e8-ae92-3403040bca79"
        },
        "item": {
          "id": "3cdfbe24-ed04-4a22-b652-8faf3f61e394",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cf52d6e-bc9e-4aaa-ae97-f1e423b1859e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04431aa4-764e-4a9f-b474-b96d64750ef3",
        "cursor": {
          "ref": "323d9fb4-ca76-4de7-9376-51f0a33dd458",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "849e7c07-cd6b-479d-89b3-5e1456ebf8b4"
        },
        "item": {
          "id": "04431aa4-764e-4a9f-b474-b96d64750ef3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0b76b316-981d-4146-8571-b0582d940dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb040612-6abb-4700-8623-dff6de98596f",
        "cursor": {
          "ref": "41715fdd-04ea-4568-99f0-1609ca2a5dbd",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "28bfbf86-190b-48dd-b23d-41895a9d7d4d"
        },
        "item": {
          "id": "eb040612-6abb-4700-8623-dff6de98596f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "81b89af9-5e0b-4301-8985-f0aa27248d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1be93d3-2797-4da3-9a4a-77ef64eda4f2",
        "cursor": {
          "ref": "e39ad535-6923-4374-923b-294ceff04ed1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5b46e967-f144-428a-bcef-0f9c6038ebdb"
        },
        "item": {
          "id": "a1be93d3-2797-4da3-9a4a-77ef64eda4f2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b68a695e-bf7d-4040-973a-317d8e9d4117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d0ce26-0a7d-43ce-8e3b-d2e53c124f71",
        "cursor": {
          "ref": "e10d78a9-2fc0-4cfc-8215-ce85f0e53664",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1cf4259e-f3f3-4095-80ae-7e1c9def42bc"
        },
        "item": {
          "id": "c6d0ce26-0a7d-43ce-8e3b-d2e53c124f71",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7c5eb7dc-dc27-4e04-b4c7-07155a113df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275200ac-30eb-4f0f-bde1-fba626eaef4b",
        "cursor": {
          "ref": "3b833e82-0071-44bc-8f8d-0fbcf52b899c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c269a701-a4d7-4083-be8d-b3286b24c5c2"
        },
        "item": {
          "id": "275200ac-30eb-4f0f-bde1-fba626eaef4b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7bef055c-13c8-44d8-8edd-3c7317c9bb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb913cec-9db9-42f8-8e33-9df5275af57e",
        "cursor": {
          "ref": "8e31b51a-ff61-4479-8a28-d6fc2df9cd62",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "034b8935-f11c-4c09-9fe6-5f4ecdecceda"
        },
        "item": {
          "id": "eb913cec-9db9-42f8-8e33-9df5275af57e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c214aeae-4128-4e70-985a-01d8bad3109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5975d9-ea6c-48b6-a9f4-a11b550d97ed",
        "cursor": {
          "ref": "840e0f14-af7a-4811-88ad-47f1568dc6ad",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "64be1725-b302-4125-98e4-d32d7bbc0e0a"
        },
        "item": {
          "id": "0d5975d9-ea6c-48b6-a9f4-a11b550d97ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4d703366-cef8-409e-9cac-f0a943d22de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3815f7e4-e023-4e8a-ae2c-d57dc0846f9e",
        "cursor": {
          "ref": "ec6bed3e-79ad-4300-a16b-56f692d77605",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "008dbf0f-184a-43e6-8a4d-2706a71e1958"
        },
        "item": {
          "id": "3815f7e4-e023-4e8a-ae2c-d57dc0846f9e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c26bf0a6-da2b-44e8-a5b4-87d522b74b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51767a0b-5fe1-4104-a265-2b87b84d3488",
        "cursor": {
          "ref": "1f433ea9-986a-4818-b739-1678cc98dcef",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7602f4ab-da1e-4376-ab3d-fb44974b236c"
        },
        "item": {
          "id": "51767a0b-5fe1-4104-a265-2b87b84d3488",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b7efbc6-0674-42a0-97de-aa3796272266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cc0b3f-4cda-4c17-b8c7-c15950c84c5d",
        "cursor": {
          "ref": "e4241fc8-8005-4b68-afac-6782407aa462",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6147627d-609d-420a-9bac-0b4e42818232"
        },
        "item": {
          "id": "54cc0b3f-4cda-4c17-b8c7-c15950c84c5d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b44a1531-4d66-4e4c-bc33-a86a57328d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f945e0-4172-449b-80f3-161834cc0358",
        "cursor": {
          "ref": "e0cf94fc-26c6-4eb2-a5b2-97424b2f5358",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d7b759ef-61eb-445b-bc03-aa3099592e83"
        },
        "item": {
          "id": "92f945e0-4172-449b-80f3-161834cc0358",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2f779b38-087f-4717-97a7-12a652afac06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade1a64-c126-473f-91dd-0183d234c288",
        "cursor": {
          "ref": "31204b3d-c35b-487f-a08e-25b71913e576",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f2a97778-cd33-4ed6-a1c2-cb4d5d68f716"
        },
        "item": {
          "id": "bade1a64-c126-473f-91dd-0183d234c288",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd7dc669-99d8-4de7-accb-0089f37e461d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a738155-c420-44e2-8e5b-049fd3be298b",
        "cursor": {
          "ref": "f7f19d31-313c-4812-b85d-55d1c632d3d1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d4c3aa64-3d98-4dc1-a43d-00f1d2b1f078"
        },
        "item": {
          "id": "6a738155-c420-44e2-8e5b-049fd3be298b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64d20036-1c42-4156-8002-6cedcc5a1cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a025a9-11d7-4c82-b7aa-059c26496ef1",
        "cursor": {
          "ref": "c99138ce-0de2-408d-b4db-beb287f9f31f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d87f7de8-4442-4856-9556-8b702dd9ad38"
        },
        "item": {
          "id": "71a025a9-11d7-4c82-b7aa-059c26496ef1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1991be76-d6bd-4eb7-9431-dcc55ea3fd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dca7509-5abf-4a85-b9d1-f34a38c8b60b",
        "cursor": {
          "ref": "75783819-f225-410d-b464-60d52f942dd5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2bbcde2e-39f3-4eb0-ac96-aaefede5a4a2"
        },
        "item": {
          "id": "7dca7509-5abf-4a85-b9d1-f34a38c8b60b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1dac75ab-578d-49a7-b20b-285ce2f33271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110ea2a-c7c0-46dc-a862-71b59238ade4",
        "cursor": {
          "ref": "d7c21c00-d056-4275-ace7-f4be58fef7ae",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4abe1288-b664-4d96-85d9-09d83dc3ab3d"
        },
        "item": {
          "id": "d110ea2a-c7c0-46dc-a862-71b59238ade4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4f0873b4-07e9-4d5a-8a4a-b1fb76ab2901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8636fe40-614e-485b-83b4-c5acc1d8992b",
        "cursor": {
          "ref": "5d21038b-7be1-4adb-8440-d15dd9deef27",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "29b1d806-64f8-4f5f-b582-899139240968"
        },
        "item": {
          "id": "8636fe40-614e-485b-83b4-c5acc1d8992b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5791dd34-6053-488f-a47e-b32d5b73630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f5fbbd-1461-4962-a3c7-edf40d666b31",
        "cursor": {
          "ref": "d24f04f2-b14a-4bad-adc9-1cfe8c569213",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2a3eaca9-9653-4b74-bd18-edf81a3a7fde"
        },
        "item": {
          "id": "39f5fbbd-1461-4962-a3c7-edf40d666b31",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cda5ce88-3be9-464e-bc63-640ec8229a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0145baa-f44b-4d39-b784-829a63da6f6e",
        "cursor": {
          "ref": "a8bbe60b-5a49-4d09-9ea9-c1f97467b791",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a711db72-ca15-4e40-bdae-a218c0e5a873"
        },
        "item": {
          "id": "a0145baa-f44b-4d39-b784-829a63da6f6e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a421f71f-7570-49cc-85c1-634ec006ac14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5043e7-647d-4c54-bd45-584ae23b8135",
        "cursor": {
          "ref": "0c3b5bee-1235-43d4-8487-6652533a8bf2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "91a3ad50-6078-4d00-80d3-faab9413697b"
        },
        "item": {
          "id": "5b5043e7-647d-4c54-bd45-584ae23b8135",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2884524-6f8d-4f94-92b0-0c0c45649ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570749ec-3489-4bf3-a027-4964eb3da171",
        "cursor": {
          "ref": "82f72642-b0de-4c89-8757-24572d99198d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d7f4ae7a-874c-4bd4-ad59-07fa4edbf3a9"
        },
        "item": {
          "id": "570749ec-3489-4bf3-a027-4964eb3da171",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8f406662-9596-48d9-b29c-7e79cad8e554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741d5c2-fe83-41ea-9fbd-ea579f8ee3ae",
        "cursor": {
          "ref": "4f80e1e1-43cf-4e15-b6c6-28c9b6636eab",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ade2068b-2447-47b3-856f-574a45fee001"
        },
        "item": {
          "id": "5741d5c2-fe83-41ea-9fbd-ea579f8ee3ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b78bd41-0029-4945-b171-e5099e65a539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1767ed7-e086-4d06-8177-35dc9485777e",
        "cursor": {
          "ref": "b7b353f4-d3cf-4c6e-9dc5-b388b3ac60fb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "54c87485-0ea3-4f90-9bac-2191d3d8c2e4"
        },
        "item": {
          "id": "e1767ed7-e086-4d06-8177-35dc9485777e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c79d4f9f-16ed-46e8-a0ab-b8ba5f82724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831578f-1f98-463d-a305-5fef54123efa",
        "cursor": {
          "ref": "6e0f27d6-a6da-4b2e-8747-feb49772efa3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1b041ce6-b787-4a8a-8b0f-39e0c4aae65d"
        },
        "item": {
          "id": "8831578f-1f98-463d-a305-5fef54123efa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6df7ea1b-5f83-491e-99c8-259aa16f9c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b14ef8b-162a-4060-8aa9-b2726b99db6c",
        "cursor": {
          "ref": "d1fbc8d2-efb2-4477-b82f-101391ea33e3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e671bf68-c7dd-47d0-b218-64a24a614b3f"
        },
        "item": {
          "id": "8b14ef8b-162a-4060-8aa9-b2726b99db6c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "24b3e705-f29d-4e3a-b49e-02d20a1d1108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9396bfcf-a762-4cac-bec0-c64cca9a01f5",
        "cursor": {
          "ref": "98a41851-016f-4d88-bf0c-b8a18b1b7903",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90e02208-8a05-416e-85ad-2987d290c069"
        },
        "item": {
          "id": "9396bfcf-a762-4cac-bec0-c64cca9a01f5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a868b8df-698c-4880-838d-a7ba3c8ffefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3df089-f0f7-4870-b418-3c16e04d0def",
        "cursor": {
          "ref": "f882ac51-a962-43ce-bc2d-af30c9da4c03",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1e9f87b8-696c-430b-a21f-ba0be4ffff54"
        },
        "item": {
          "id": "3c3df089-f0f7-4870-b418-3c16e04d0def",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "601c1595-f363-4162-9257-f7352836303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84081e0-25d8-44c7-bffc-1ecf2810d348",
        "cursor": {
          "ref": "d546a446-75e9-4d09-8563-0df48c5c3e38",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "09084988-4e88-46e8-b764-d7361b836d1e"
        },
        "item": {
          "id": "e84081e0-25d8-44c7-bffc-1ecf2810d348",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6cae4387-3d46-41df-be30-408a52598194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e04f1-7328-428d-9000-8b9b14320af9",
        "cursor": {
          "ref": "5fd190d0-c905-47b6-8195-10cad4353a3d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f237b804-9219-4498-aa48-0508ec45fce3"
        },
        "item": {
          "id": "f82e04f1-7328-428d-9000-8b9b14320af9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3c1907fb-7f62-43f8-aa0f-f7210d6d5931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db942af5-a19f-4b97-b374-53470ab49e77",
        "cursor": {
          "ref": "b302023f-1167-4055-8f1a-86978c5f88cf",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ac7fe105-93b8-4102-9780-c87a1c3bf1c0"
        },
        "item": {
          "id": "db942af5-a19f-4b97-b374-53470ab49e77",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "66cd4fb2-865d-4147-a3d5-0bee89d89630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c091d7-3545-4db6-9bad-27f3f5e968e1",
        "cursor": {
          "ref": "2f8d0650-15ab-4913-9fa0-fbecaab89268",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f421a1e-f92d-4d93-ba07-65b4bc965d58"
        },
        "item": {
          "id": "11c091d7-3545-4db6-9bad-27f3f5e968e1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8df2f1bd-05a7-4835-930f-1b06975cd225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64edceaa-f976-47e7-b9c4-f5ec9ee4fbd2",
        "cursor": {
          "ref": "bdf641f4-3d3a-45cf-835b-d499841f5515",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7935ea96-7db2-49ac-a121-3e0553a551d3"
        },
        "item": {
          "id": "64edceaa-f976-47e7-b9c4-f5ec9ee4fbd2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "be73e761-5bf6-4217-bd71-09385da4cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac574c-8682-4e30-996c-7c4001da3166",
        "cursor": {
          "ref": "5358731b-03a3-4f27-b572-df6bfa785ed6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "41ea419e-e285-4ee3-8b0a-7d6a066ffc9d"
        },
        "item": {
          "id": "afac574c-8682-4e30-996c-7c4001da3166",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7cacca7c-b19c-4cc8-8c74-a85d3834acad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d33216-e459-4130-bd9f-c1b03093b387",
        "cursor": {
          "ref": "912d4805-82a0-48a4-92b2-d4705205ef96",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "91de2ef4-cf83-49e0-94ca-dac9f02b8af3"
        },
        "item": {
          "id": "15d33216-e459-4130-bd9f-c1b03093b387",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cc6ce327-4090-4743-9f36-43b693cc0672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd99207-6a8c-4cf2-9df9-c773a76b55b1",
        "cursor": {
          "ref": "359bdc9c-c9c9-4e1f-8aff-a9578c17e9c3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67f4ee0c-da88-424c-aa6c-ae55402a6b99"
        },
        "item": {
          "id": "afd99207-6a8c-4cf2-9df9-c773a76b55b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5e3fffa5-28be-480a-a79a-8d652cded61f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7173395-b6bf-4ad9-aaf6-a1580d5d873f",
        "cursor": {
          "ref": "9da2cd1b-2286-47da-bf85-be9c1590ab57",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a66f9d29-d643-44e9-a3c8-aa3b64e165a1"
        },
        "item": {
          "id": "c7173395-b6bf-4ad9-aaf6-a1580d5d873f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0ce8643e-faa6-4821-9fe9-24b7ae06ac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06e315-b310-4fac-af38-614db97108eb",
        "cursor": {
          "ref": "83e1f588-4a38-4d43-a53a-3e7e106bdd5a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eae3ef0c-01ef-4472-b6d6-ddf19fc59a49"
        },
        "item": {
          "id": "2e06e315-b310-4fac-af38-614db97108eb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "88f507ce-59ca-4ea8-b4ba-0773cb54826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4b3b19-961d-4726-9b2a-0e54a1064ebd",
        "cursor": {
          "ref": "85dd4b6c-71cd-4e1b-bd73-f8f9bc67f2f9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f48d9b96-eebb-400e-bb8d-c60e64f80d09"
        },
        "item": {
          "id": "ba4b3b19-961d-4726-9b2a-0e54a1064ebd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a9a53445-65a5-4af5-9e41-6cd2ddef5fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ca61f-f1de-4ac6-8384-02df46f82d0a",
        "cursor": {
          "ref": "cb3e8c92-1cba-4f5d-a38e-c09b146b9644",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6eed66a2-72e2-4002-b6a7-acc12f5135a4"
        },
        "item": {
          "id": "c42ca61f-f1de-4ac6-8384-02df46f82d0a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "da7c3815-c779-461f-9e0b-f8dc247bf4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e27625-8396-4db5-b4c0-3cf5640b959c",
        "cursor": {
          "ref": "430abbe0-3a19-4db8-afa3-096a29a7defd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "452a1f88-d547-4c81-a6f4-3401215f6c4f"
        },
        "item": {
          "id": "54e27625-8396-4db5-b4c0-3cf5640b959c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "513a3673-d0da-4935-b453-8a7c1e29c422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e3fbf-69e9-4742-994c-6d5155957ddd",
        "cursor": {
          "ref": "f33b9ba6-52bc-4187-b3e3-e984290bf9ca",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d1a6c581-233b-4deb-b3a4-56e17ae3a1cc"
        },
        "item": {
          "id": "291e3fbf-69e9-4742-994c-6d5155957ddd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9bb0ee4f-ecc5-4841-b51b-2030df165203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b933f16-4590-4c3d-a17b-f65befdba7bb",
        "cursor": {
          "ref": "e2bfd403-0ef2-4110-9e3c-0235b84f7258",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9ad8282b-bbe0-4d48-8888-e4649d8515ef"
        },
        "item": {
          "id": "4b933f16-4590-4c3d-a17b-f65befdba7bb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fcd8bed1-d9b8-4302-a238-35cdf2ea1e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24924c7-328e-48bb-8f49-9e3c57d159e8",
        "cursor": {
          "ref": "a117c004-9500-49e4-aaee-877f1dddfeb4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "845bfb65-5c6c-48d6-923c-56a6bf5dd3ff"
        },
        "item": {
          "id": "d24924c7-328e-48bb-8f49-9e3c57d159e8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6fe999a-9a8b-4b6c-8826-16be8b36ce43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e70bd6a-799a-40d6-8608-c09065c151c6",
        "cursor": {
          "ref": "d0001b0f-fa33-4f49-b6d4-46a04a1448d1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bd0b343a-81aa-4b94-88cd-c9c2b8f1e806"
        },
        "item": {
          "id": "7e70bd6a-799a-40d6-8608-c09065c151c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e5dfbb8f-be8a-4299-aa3b-3f343d14ee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0e598d-5dd1-4a5d-bde7-96232e994035",
        "cursor": {
          "ref": "53d15cb0-5b70-4330-8474-cb665cdc4d7b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7d2d396c-fe06-4f0c-8666-2cf4357177a3"
        },
        "item": {
          "id": "cf0e598d-5dd1-4a5d-bde7-96232e994035",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1840e2c1-83bb-45b2-8d04-6ee548e6fae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f44b3b-001f-4c96-819c-7abe90e8b661",
        "cursor": {
          "ref": "64e3375b-745d-4438-86d4-80399ce0d9b3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ac4babc3-7719-42f9-88eb-62ba8a8edcdc"
        },
        "item": {
          "id": "27f44b3b-001f-4c96-819c-7abe90e8b661",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e2ffcf45-8e58-4467-ae31-366df8251c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3787f5-212a-46ea-8415-aff2cbb240d5",
        "cursor": {
          "ref": "6df20930-b9eb-40ce-aea2-53c142f6f033",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dc6b1a07-a018-4b4a-acef-8faf4c5292e3"
        },
        "item": {
          "id": "ec3787f5-212a-46ea-8415-aff2cbb240d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cdc378fa-d42e-4878-b7ce-4d7648fc990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fa3f6b-0029-4d61-bc10-107d039c3dbf",
        "cursor": {
          "ref": "3c5ca382-0ce9-4fb9-b06e-b342b8ee32e0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4c6c6e06-8c7e-4161-a224-c6811f5b2376"
        },
        "item": {
          "id": "50fa3f6b-0029-4d61-bc10-107d039c3dbf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "35889e96-6c1d-4516-aaeb-7692dc71f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d67b10e-37ad-473e-8c10-bdd92b853c76",
        "cursor": {
          "ref": "1ff94861-5c4d-4c3a-82a6-e71df544fc04",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8c649c59-1331-4d24-92c7-cefbf2c201b7"
        },
        "item": {
          "id": "2d67b10e-37ad-473e-8c10-bdd92b853c76",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fc08834b-a982-4f64-ba58-c1ff0d8928fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1933ec-b597-48c9-9db5-928d92e1387e",
        "cursor": {
          "ref": "d33c5352-2710-4faa-9f72-53a1abfa2753",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9bf5dc2f-06de-4d27-82aa-1c1740bca0d6"
        },
        "item": {
          "id": "5e1933ec-b597-48c9-9db5-928d92e1387e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eec7c5e5-08c8-4768-a685-864d11dd8e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d1499b-8762-47de-99fe-472e1c1e8b7f",
        "cursor": {
          "ref": "6fc12b41-6d4d-40d5-bf4b-e582b04eb847",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f5f77da1-8e90-4ee4-b2c6-08914d63698e"
        },
        "item": {
          "id": "37d1499b-8762-47de-99fe-472e1c1e8b7f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "71806571-d4aa-44d9-b544-5ff3c779be29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0505a76c-2c8d-451d-ad0f-9d08a3340543",
        "cursor": {
          "ref": "6c602341-3ebb-415c-923f-922fdc1ebd13",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "17763433-8f29-4ae4-b77c-2babf76284af"
        },
        "item": {
          "id": "0505a76c-2c8d-451d-ad0f-9d08a3340543",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e783dee-68f4-4163-912a-592b586d4b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e225cc-bb61-46e1-b0fd-d8ff087d0312",
        "cursor": {
          "ref": "b4bd8b78-2969-4acd-8856-bcc42cc150d0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a4f232cd-948f-4d9a-9589-da1936fb4b6d"
        },
        "item": {
          "id": "13e225cc-bb61-46e1-b0fd-d8ff087d0312",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "84988338-b88b-4d3c-838e-ed6b14763934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e57fbe6-d335-4a59-a153-43c2b7481ff1",
        "cursor": {
          "ref": "3aef9374-6448-45de-9182-f13e375816de",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f3ffae13-0203-4643-bc2a-17edcd2a0b90"
        },
        "item": {
          "id": "9e57fbe6-d335-4a59-a153-43c2b7481ff1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2b028d5a-2594-422c-9aa5-956096156a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4ebda-f170-4449-b727-d8f3e5131e70",
        "cursor": {
          "ref": "2b94d76e-f5dd-48ed-a86c-d20e99155085",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e965a347-b0f2-4736-8158-4e372a52d620"
        },
        "item": {
          "id": "37d4ebda-f170-4449-b727-d8f3e5131e70",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c20dd8bc-786b-47a6-82f4-250b69554193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96422d3c-e57d-4240-beaf-eb8338bc2041",
        "cursor": {
          "ref": "937baade-2ccb-4a5d-93aa-3144bbe6b64d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "966f014e-2e7a-4d66-a3c3-364c2fe7e835"
        },
        "item": {
          "id": "96422d3c-e57d-4240-beaf-eb8338bc2041",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "de665884-1911-4a27-a56b-bd088adabf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d03b6a-914b-474b-8cb5-36b41a0327a1",
        "cursor": {
          "ref": "24ff1b8f-8bdb-4429-9d7d-6bd9e8be7449",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "15ac0aef-39d3-4e01-a1dc-11a85b8b3fbe"
        },
        "item": {
          "id": "f9d03b6a-914b-474b-8cb5-36b41a0327a1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c4f09483-a253-49c8-9eea-a17aea4c16da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4681356-6283-4f30-9786-be2e0e6e82ac",
        "cursor": {
          "ref": "9b460780-fe86-4970-800f-1e5d39f444bc",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ab98a69f-7679-422a-b1dc-8f780068b683"
        },
        "item": {
          "id": "e4681356-6283-4f30-9786-be2e0e6e82ac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d38d7484-0b13-41d1-b2f5-68aa032046a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c84e3c-9564-41f9-b091-9cbfae3863bc",
        "cursor": {
          "ref": "5541afed-024c-4267-b591-7ec4f051eaf7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1c7ecc68-721c-48d7-bcc9-4cc65b7423f5"
        },
        "item": {
          "id": "a1c84e3c-9564-41f9-b091-9cbfae3863bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dcc38216-72ca-466a-8fd8-dd598906a541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabbe7ec-4ad7-4074-8afa-c34c16a4719a",
        "cursor": {
          "ref": "2afba746-4969-4c2f-9ae8-e4d291f41198",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "69e20402-cbac-45ca-9136-8e27e284e549"
        },
        "item": {
          "id": "aabbe7ec-4ad7-4074-8afa-c34c16a4719a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2e27a71c-67a9-49cc-ba5e-03efa48231b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00df725-e5fb-4482-ae4c-e9e86d83f84c",
        "cursor": {
          "ref": "d6435b02-eeb3-4a8a-9dcf-14657b353628",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7d35917d-08a9-402d-bfdb-3bd7367a6c43"
        },
        "item": {
          "id": "d00df725-e5fb-4482-ae4c-e9e86d83f84c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "22d438b5-66ef-43d8-8302-b947b26e2baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8043ff3e-6cab-4ef0-a263-205d5c8b2e22",
        "cursor": {
          "ref": "f9c218af-21cd-4395-b23d-6ebe1780cbf5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3e1195f8-c4e1-41f1-91ab-cd7ac06f2941"
        },
        "item": {
          "id": "8043ff3e-6cab-4ef0-a263-205d5c8b2e22",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "370348d2-4dd9-48d7-842f-603a3ababc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a0876d-b442-4b62-9e60-1fbfe6988fc6",
        "cursor": {
          "ref": "6726478d-252e-4fe6-b169-6a7c554de19b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8ebed625-70ce-43ca-aca7-ba77687bf2b2"
        },
        "item": {
          "id": "02a0876d-b442-4b62-9e60-1fbfe6988fc6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9d2b7f7-2d2c-46fb-8393-9f1bd197636d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8454adc4-a55a-457a-8a87-81825cc77bf6",
        "cursor": {
          "ref": "c4fbe7f8-1644-4d78-b57f-81bd64aaf55e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4025cbef-5f9c-4b43-b27d-a19ccbfc07c1"
        },
        "item": {
          "id": "8454adc4-a55a-457a-8a87-81825cc77bf6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "edb9620b-a9d1-4c40-8aaf-68d5276992ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148d918b-f57b-4804-ba6e-c3735e37f08d",
        "cursor": {
          "ref": "da4a8627-50d4-46da-8506-3bd52875458e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d1ae5c78-b601-4045-a235-766e6441db9d"
        },
        "item": {
          "id": "148d918b-f57b-4804-ba6e-c3735e37f08d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "35a35636-09e4-4944-b53d-e4d9a888713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c807bad1-26d8-4269-8ca7-de8286b2b92c",
        "cursor": {
          "ref": "1220cb65-4aec-447b-9f78-830185223936",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e3031307-bc41-4a58-8e97-7d27ec2d8e63"
        },
        "item": {
          "id": "c807bad1-26d8-4269-8ca7-de8286b2b92c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3c3257b7-6d62-4038-bf24-43fd725839e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c385509e-6aee-4014-875c-fd451e1c5913",
        "cursor": {
          "ref": "ae783bcc-b4d4-47d0-abd8-64123af026ac",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca467b86-3c3f-42fc-aaf5-de053ad8bf94"
        },
        "item": {
          "id": "c385509e-6aee-4014-875c-fd451e1c5913",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0d0f06a8-c42a-4815-bb74-0b1cf54e96a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b6012-9725-45ba-9d28-a751e246adea",
        "cursor": {
          "ref": "99b21e4e-154a-486f-8aa2-950a4b0c4508",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4ad16440-f72e-4438-b5af-2cf8abd44006"
        },
        "item": {
          "id": "f71b6012-9725-45ba-9d28-a751e246adea",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b7a69cae-fc20-4209-91da-5f12e19e3f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63f5c97-29bf-4837-a847-5a4f88d5ccba",
        "cursor": {
          "ref": "339681ed-e33c-4448-b886-13100d056840",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "13eb339d-998b-47a5-90e7-0e94a3c89c90"
        },
        "item": {
          "id": "b63f5c97-29bf-4837-a847-5a4f88d5ccba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "30e45c91-5748-41fe-a518-39f637f5ea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7135026-b552-42d0-bcab-56c568cb96d9",
        "cursor": {
          "ref": "869215be-236c-44da-9196-65dbe8c15f76",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "16e6e710-25cd-4c09-b92c-99ce8f49f657"
        },
        "item": {
          "id": "e7135026-b552-42d0-bcab-56c568cb96d9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "29427728-d87b-4507-9577-d39dfbc4fe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd6afe4-7849-46d6-84a7-93023516972e",
        "cursor": {
          "ref": "1e5f5d4c-43bd-4262-839c-ea24213f445e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "705f9d67-45a9-4c32-9c9c-1519a6fb7cc8"
        },
        "item": {
          "id": "0bd6afe4-7849-46d6-84a7-93023516972e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "157478cf-f8fe-4bea-86c5-a585c8d6ea05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaeeb84-1bf4-47f3-aa0c-411871fc143c",
        "cursor": {
          "ref": "04e54756-ff63-4099-a17d-6c7c8e2c6cbb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2fd3c56-1759-453f-a3cc-610f5f5f0fbe"
        },
        "item": {
          "id": "7aaeeb84-1bf4-47f3-aa0c-411871fc143c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "117eb9c4-6695-4859-8b09-1e546aed7879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28764128-5eee-4849-9aed-b2bb6ebf5551",
        "cursor": {
          "ref": "3677f577-0a87-4f44-ae5e-fd5890f3998a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5120dd2c-0e01-47fb-b8e9-293d2200e9d3"
        },
        "item": {
          "id": "28764128-5eee-4849-9aed-b2bb6ebf5551",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e114d43-3aaa-4892-b05a-b5ca4e52a68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d33312-2bb6-4e17-b2be-0cf2a46668c0",
        "cursor": {
          "ref": "d78388e3-630c-443e-bcf1-595553168570",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1b3d77e4-1d71-458f-8dd7-6b09d8c85c3e"
        },
        "item": {
          "id": "d2d33312-2bb6-4e17-b2be-0cf2a46668c0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1abf2127-5788-44a7-bc30-10b9edb34eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bfb25e-b1a9-42e6-8b98-021b19551543",
        "cursor": {
          "ref": "c0903f85-51d9-4f74-b0f5-e63ac8f313eb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c12a1018-8de5-433d-a42e-d38f3405fbbb"
        },
        "item": {
          "id": "e7bfb25e-b1a9-42e6-8b98-021b19551543",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "737d7121-df4f-4781-b432-938b6071ab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf55bf-c94d-416a-89e7-b9045a578f8b",
        "cursor": {
          "ref": "b1b8b99f-0b75-404a-b45e-f39fb1410d80",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8e657267-42a3-4111-8038-e99900196c75"
        },
        "item": {
          "id": "cecf55bf-c94d-416a-89e7-b9045a578f8b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c9fc3c59-a094-4c1a-a046-40fc75d8ece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49512914-9fde-442f-b043-acb48cbd20f0",
        "cursor": {
          "ref": "5cd62b8c-afe8-4535-b1a9-65d4282d9d48",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f716a9d4-3716-42bf-85cd-c5ad605aa557"
        },
        "item": {
          "id": "49512914-9fde-442f-b043-acb48cbd20f0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "91a7e690-1e29-41fd-b60f-226de606ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b186ad6-1355-4d8d-9cdc-c2e2795dee01",
        "cursor": {
          "ref": "b7d72c75-8644-4fd9-9aa6-a5e0934a5ea8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "163d10df-139f-40cf-8770-f46ddab13fed"
        },
        "item": {
          "id": "2b186ad6-1355-4d8d-9cdc-c2e2795dee01",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a356c7c7-9569-4768-968d-cfc461a67cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7649572e-f984-4241-8609-93e64d5a2d89",
        "cursor": {
          "ref": "9ca7dd20-8937-4708-ac2c-9b0a19f6d088",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "40f3d98d-a811-4b55-8803-be05f72865ea"
        },
        "item": {
          "id": "7649572e-f984-4241-8609-93e64d5a2d89",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "32afef3c-bddc-4469-8e10-c4660e9247b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911d789f-59cb-4849-bcc3-5948ddbf49e5",
        "cursor": {
          "ref": "3b82419a-e351-4eeb-96bc-6a40e5402b11",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9ad31ea-d7c0-4e92-839c-e5c6ce71cda5"
        },
        "item": {
          "id": "911d789f-59cb-4849-bcc3-5948ddbf49e5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9973f24a-c71f-47ef-abe0-a1aa640d1894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c45fc3f-845c-445f-87a0-021376754802",
        "cursor": {
          "ref": "b108a142-efee-4b42-a7e4-9027c66ed75b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fa9df83c-6a2b-4247-8495-5fc7af3c2174"
        },
        "item": {
          "id": "0c45fc3f-845c-445f-87a0-021376754802",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "548b8248-f099-44cc-89d0-91d7195f8d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430e9b2c-e837-418e-bca8-ec3afd1d0815",
        "cursor": {
          "ref": "921bd8a2-30e9-40a8-b37b-c376536ffe7b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "220c44b3-3e33-44a0-9044-960170a64f93"
        },
        "item": {
          "id": "430e9b2c-e837-418e-bca8-ec3afd1d0815",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7bf95fbf-59e2-4e05-b746-dbc191b37bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af850df2-e0f5-4fe2-aa5a-4ce57defcec7",
        "cursor": {
          "ref": "02ee2046-c9d5-4bb9-96dc-7f4917e853f2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a68f5e84-fba7-404c-a7c9-94c34b8c97e0"
        },
        "item": {
          "id": "af850df2-e0f5-4fe2-aa5a-4ce57defcec7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "81f49783-174e-4567-8db6-543da2607b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cacc99-02b1-43fe-a156-f77e46adae6c",
        "cursor": {
          "ref": "f89e8ac4-0bf4-4f23-8cc2-cab5e1e821c8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c241388a-279e-49b2-b6cd-45790ca13515"
        },
        "item": {
          "id": "60cacc99-02b1-43fe-a156-f77e46adae6c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a31dd7cb-e48f-47d2-9198-f9e55a29c12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa4d94-af80-4b8b-a9eb-bd4fdc42f21c",
        "cursor": {
          "ref": "f06cd867-e4dc-4ddd-819f-d261437b4c23",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ec1bcbf5-c27d-4e13-957f-e2f63e114d11"
        },
        "item": {
          "id": "2eaa4d94-af80-4b8b-a9eb-bd4fdc42f21c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "42cb0506-854c-428f-9083-82ce116ec142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d398127e-5db2-42f4-86e5-03bbce927d3a",
        "cursor": {
          "ref": "ba54bd7b-1130-40ee-9bb7-deaaa640e89d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bd10b8ad-4d22-4127-bf50-05a62bb4cf55"
        },
        "item": {
          "id": "d398127e-5db2-42f4-86e5-03bbce927d3a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5ffc8631-9a5c-49a9-baed-555df1b03c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3ddcbf-3be1-45b8-9fd1-f34e022b7abc",
        "cursor": {
          "ref": "fb88c265-9561-46d2-9222-17bd9939ad4d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d26dfe49-8527-4a10-9843-99df00d35d2e"
        },
        "item": {
          "id": "1f3ddcbf-3be1-45b8-9fd1-f34e022b7abc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "adb462f1-6cea-47fd-8ed8-a3777eed6974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47cd94b-ad21-440d-8f0a-e4ccecbe5b2c",
        "cursor": {
          "ref": "438dc9aa-509f-40c6-ba55-7ae738326345",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1cea863a-c4bb-4b2f-9a4e-b93e9b5fb4d1"
        },
        "item": {
          "id": "f47cd94b-ad21-440d-8f0a-e4ccecbe5b2c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f9886812-315d-46d2-80af-d1913468f8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63cedca-08e7-4602-a8f9-ef6a82cefb5c",
        "cursor": {
          "ref": "76ca5261-0f25-4bf6-b4e0-462d2a213f1f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "df69c55b-a735-4832-8a58-3aac5a447c85"
        },
        "item": {
          "id": "e63cedca-08e7-4602-a8f9-ef6a82cefb5c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d7d5b1c-4182-4b73-a1ec-ee8fc5f88ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a93f3a-a764-4422-b02a-611234e121d3",
        "cursor": {
          "ref": "99306efc-4867-462c-b028-b27a25e58ecf",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8b4e5b98-5419-4c93-9096-ed4a6bf8dc82"
        },
        "item": {
          "id": "d4a93f3a-a764-4422-b02a-611234e121d3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4445f299-ad7e-4dae-9509-2ce456e6490b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9edc690-b809-408d-913c-71587d38b2e7",
        "cursor": {
          "ref": "3bc26838-b02d-4c79-ac3a-222859595b12",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0a480a4a-a25a-411d-ad7c-4eb211f17b16"
        },
        "item": {
          "id": "d9edc690-b809-408d-913c-71587d38b2e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4b887c53-0583-4fe8-ab42-a3128cb3c853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ef6cc0-142a-4b7f-97e6-38790f1625c5",
        "cursor": {
          "ref": "311bb3c4-fcf6-4d6e-a14f-0b1d09e28e1f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fce4fb36-a012-4da2-8d1b-acd0dd0a3aca"
        },
        "item": {
          "id": "38ef6cc0-142a-4b7f-97e6-38790f1625c5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "72a888f6-58f0-4fe1-a594-a1508d3087c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f684f65c-85c6-4f01-8ac1-711cefa5d149",
        "cursor": {
          "ref": "d14cb781-c0f8-4970-9c65-1d64074b0ba4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f987cbd7-56a9-46ce-ba77-63f9b98b16e3"
        },
        "item": {
          "id": "f684f65c-85c6-4f01-8ac1-711cefa5d149",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9d312152-8977-4560-834c-75a569052d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b0acda-7ede-42f9-a050-2bb11bd73a80",
        "cursor": {
          "ref": "ae19445a-20b8-4d12-8e67-33346c98988a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e461f38a-ebd3-4b3d-a1ba-3bea75b5eef2"
        },
        "item": {
          "id": "b9b0acda-7ede-42f9-a050-2bb11bd73a80",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ef3dc2bc-fe63-4b0b-9fff-41ea156ef5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0c907c-5100-4390-8f89-2c66ed03b49b",
        "cursor": {
          "ref": "38e549f5-23b5-497a-8df8-b360fb04ec5c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c1774dcc-511f-4db6-8384-0f26241d80c0"
        },
        "item": {
          "id": "ee0c907c-5100-4390-8f89-2c66ed03b49b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f79b1f27-eeae-4c6d-b38b-0963b7203b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f255cc0b-cdc8-4604-a3ae-199bc6c9fcd3",
        "cursor": {
          "ref": "28fe7352-20a8-46c1-bcf1-b8d4fb571cb7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "273e1780-0f75-4e17-948b-c82474021a83"
        },
        "item": {
          "id": "f255cc0b-cdc8-4604-a3ae-199bc6c9fcd3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36390f9f-4d19-4e3e-92ac-de290e2cb116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0a6b76-4d93-4fae-9e2e-d5be906f5bf5",
        "cursor": {
          "ref": "ff416308-3d49-4ce6-84b9-0957a524d5c8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3b727494-f1ee-46f0-84e8-1ba17ce9a254"
        },
        "item": {
          "id": "ef0a6b76-4d93-4fae-9e2e-d5be906f5bf5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "18c064ea-8ae8-4cd7-9b0d-81ad63ac0b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f70df0-afaa-4726-8c01-532c1e186936",
        "cursor": {
          "ref": "fdbd97ad-8ca8-4cf9-aaef-41c6ba7aef22",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aea3c3c8-bb3f-49f6-bd6e-48ee0520608e"
        },
        "item": {
          "id": "f9f70df0-afaa-4726-8c01-532c1e186936",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b2ae3893-4fe7-4fae-884f-7117e405faee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f63da3-2c0d-4edb-aaff-48cbe3c11a3b",
        "cursor": {
          "ref": "e408885c-3e1f-4ab2-8429-9306b84c023c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c553bd44-fee2-43b1-86b6-2e45948370b3"
        },
        "item": {
          "id": "d1f63da3-2c0d-4edb-aaff-48cbe3c11a3b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ed10759a-aa21-4a3a-9f77-7e6420f814e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490bbb79-67b6-4546-b866-50535f063263",
        "cursor": {
          "ref": "bad0a96b-ae10-42b8-ae1f-7f27d0465737",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e9703258-559b-4eff-a546-6f032c52d948"
        },
        "item": {
          "id": "490bbb79-67b6-4546-b866-50535f063263",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c1d89807-3ee3-40ce-b7ed-e07033bbcf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4036690-c489-4a8a-b4ec-8f538eb63e03",
        "cursor": {
          "ref": "a405d49b-108e-4014-ae55-6f525604f281",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0af7d264-5a98-4352-9553-cb7c6591d608"
        },
        "item": {
          "id": "b4036690-c489-4a8a-b4ec-8f538eb63e03",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ca20971e-f5fa-43e2-ac99-87afdcd666f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3599bc54-0273-4f4e-8606-7f1e4fe31885",
        "cursor": {
          "ref": "2c6e9a4c-543b-4168-934b-de43b6a0c299",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bd6eb1cb-1de0-4338-8e29-c77925b92600"
        },
        "item": {
          "id": "3599bc54-0273-4f4e-8606-7f1e4fe31885",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bb3686d0-67dc-439a-bde0-7db94c448d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a6ce0f-8381-4a70-a40c-5480e53708ed",
        "cursor": {
          "ref": "46182b00-eaf8-459a-a97c-6769b1e6db30",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "248be2c0-cff9-4238-954c-3f91b392be50"
        },
        "item": {
          "id": "e5a6ce0f-8381-4a70-a40c-5480e53708ed",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d8d10746-ba5d-4c43-9cfe-78c9c4f4e0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6afa0-af8b-4534-91a3-7b03aee93ff3",
        "cursor": {
          "ref": "6f7d9abc-55a6-4f93-8fef-037272d71320",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8e9d949b-2d8f-45ff-a9bf-7e894bdfd80e"
        },
        "item": {
          "id": "a6e6afa0-af8b-4534-91a3-7b03aee93ff3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fb4755cf-f7d5-433a-8615-5c06a1f49b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386d2dc3-e667-40e6-8c9a-7d2a0155d481",
        "cursor": {
          "ref": "32428b72-97a0-4884-89ea-2453ff4867cb",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1ec84ed5-4df4-450d-92dc-73d3c9709ed6"
        },
        "item": {
          "id": "386d2dc3-e667-40e6-8c9a-7d2a0155d481",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4c9e529a-8dfc-45b7-88bc-3dd2587b003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d6f05-fe35-4c75-a09f-e09759d29cf6",
        "cursor": {
          "ref": "0b40d400-1242-4a59-b049-b79ee001260a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff304021-0cce-4990-b96a-05d972f0fce8"
        },
        "item": {
          "id": "851d6f05-fe35-4c75-a09f-e09759d29cf6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bde4cc8b-69ee-4109-8660-47f1b705bc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e37668e-e950-45b5-8987-77210e35a537",
        "cursor": {
          "ref": "d96bddb6-787d-4c82-83b6-434c765ce090",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47e06090-6128-4b29-8800-8e4160b486a9"
        },
        "item": {
          "id": "7e37668e-e950-45b5-8987-77210e35a537",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "acf93f0a-9c47-4e37-ad92-1edd5cec0d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677c47c0-c7f6-4f64-85cb-ae5a20e0ab09",
        "cursor": {
          "ref": "25759fe0-267f-453d-aa83-b9e8a4ca122c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2f8eaf8d-1134-4b37-9387-e649cd2fcba6"
        },
        "item": {
          "id": "677c47c0-c7f6-4f64-85cb-ae5a20e0ab09",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d8162896-fd36-49fc-a48c-894c627b9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdc9b57-1494-4424-8b8f-12150aa49b4b",
        "cursor": {
          "ref": "3d8b1ed3-1f92-4604-a84b-94c2da6c516d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f477fcc6-9258-493c-907b-b4ae2b900668"
        },
        "item": {
          "id": "0cdc9b57-1494-4424-8b8f-12150aa49b4b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f62a949a-8351-4387-a904-b23ecaacb9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b89ff9-82ec-49d5-8fb4-2c73089b20ef",
        "cursor": {
          "ref": "fc28e84a-6937-44d4-9923-20e3ae8c1c04",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fb88589e-97c8-41d6-8404-311d19492e77"
        },
        "item": {
          "id": "62b89ff9-82ec-49d5-8fb4-2c73089b20ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eb024c2a-1fc3-4ce4-9a38-ec9416d5d985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3455a823-67ab-4435-ab6c-8a30271c63e8",
        "cursor": {
          "ref": "3cab60ce-6126-41e5-8538-fa647f57f831",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "643be345-f8ec-4277-88d2-579aa3fb3c79"
        },
        "item": {
          "id": "3455a823-67ab-4435-ab6c-8a30271c63e8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "84ff1a0d-f584-4636-80ac-44c38b1740e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0255df7-3b31-4b73-8fee-6a876d6a09f4",
        "cursor": {
          "ref": "05a184a7-d111-4937-83f5-d68d58d5fd42",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aeed903e-8e96-42aa-b63e-16ea7d09f181"
        },
        "item": {
          "id": "d0255df7-3b31-4b73-8fee-6a876d6a09f4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7418f830-078e-40dc-982f-ec950a2156e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb429147-5734-4471-bebc-023a6d401b8c",
        "cursor": {
          "ref": "29f381ff-edd2-4236-9af0-b8f84903ca17",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9c169848-4e9a-4fad-b660-ef6e27625c44"
        },
        "item": {
          "id": "bb429147-5734-4471-bebc-023a6d401b8c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "63630c96-de60-40d8-b63d-926493ce55e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ddb1a2-1dfa-47a4-9287-ffc5e1bf77ae",
        "cursor": {
          "ref": "11c46533-8bba-4f7b-9ed7-4e181ac1c5a5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9bff964d-b373-4422-a530-979fb29f7e04"
        },
        "item": {
          "id": "42ddb1a2-1dfa-47a4-9287-ffc5e1bf77ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "14a0e7fe-9112-4914-8d3a-3bf0e7511820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b51ddb-62a3-40c3-85a4-c6d5d3b34742",
        "cursor": {
          "ref": "85a4df13-2279-4467-8d7a-9e18e9383c2b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "158514b9-8b86-4df1-a1e7-112ffdb8d324"
        },
        "item": {
          "id": "93b51ddb-62a3-40c3-85a4-c6d5d3b34742",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c03e1e6d-3417-4235-a2ff-2ea2ad624a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073de548-4910-4672-97de-e22f65c5f2c1",
        "cursor": {
          "ref": "59f85f8b-48c3-43da-b232-67b30101f595",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d2429aa8-fb70-4065-aa59-184d9a942078"
        },
        "item": {
          "id": "073de548-4910-4672-97de-e22f65c5f2c1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f37c63c-102f-4b16-b77f-499b8edfa055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10694e5d-cb70-4aea-adf0-164b0fe1e491",
        "cursor": {
          "ref": "2f3b544b-e044-4c9f-a2c0-330596092847",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43466fd0-c2b2-4992-b802-fb5b748ccbb6"
        },
        "item": {
          "id": "10694e5d-cb70-4aea-adf0-164b0fe1e491",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "49ff2455-377c-427e-8aef-e80b91a1ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c53ffd7-e192-4b5e-b0a4-daba9ddcefee",
        "cursor": {
          "ref": "c1e81d3b-0d91-4482-9316-2e2ecb15d2c4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a06edbaf-81d4-4911-bba6-d43e61ed713b"
        },
        "item": {
          "id": "9c53ffd7-e192-4b5e-b0a4-daba9ddcefee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be0372cb-f0a1-4bba-a9bd-c2b3051813ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb6c82b-f4e1-4de3-adc2-50e14134d14c",
        "cursor": {
          "ref": "26e7f605-d374-40c2-82fa-8be683a78f33",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7045f911-983d-4c92-81ff-ad955d084f7e"
        },
        "item": {
          "id": "bdb6c82b-f4e1-4de3-adc2-50e14134d14c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9016735c-0d6e-4ea5-96b1-f27039539324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe17aa0-6b88-421c-bf95-ab462c0e9a40",
        "cursor": {
          "ref": "84d74c6d-afb7-417d-afd4-d5956c7953d5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "85594b3c-4e20-42c4-913e-232c3a975d86"
        },
        "item": {
          "id": "cfe17aa0-6b88-421c-bf95-ab462c0e9a40",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7bce9a9a-2973-4481-ab4c-b23993d37621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c3e259-f071-4a18-ae72-9c60d4f5f513",
        "cursor": {
          "ref": "7826b545-8f09-4a5d-9583-c1870822e0f6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f52f3b66-58f6-4c40-8122-98853f066911"
        },
        "item": {
          "id": "53c3e259-f071-4a18-ae72-9c60d4f5f513",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "831a7f57-2924-476f-8ba5-ab1f0a641cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65a2934-807a-4319-a55c-7f846701e3b3",
        "cursor": {
          "ref": "745ef6da-d450-4269-860d-45c26015855c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c239aed8-0a1e-4afe-9e5f-fdd7f03783a9"
        },
        "item": {
          "id": "c65a2934-807a-4319-a55c-7f846701e3b3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a684bc52-ece9-4b17-8ecb-910c54b49580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b4c4f6-407e-43e7-88a8-367f70f805a8",
        "cursor": {
          "ref": "ca070602-3f06-4256-a53a-2d716463abf4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cf6f2949-baa5-4602-a719-8222c8ab5502"
        },
        "item": {
          "id": "82b4c4f6-407e-43e7-88a8-367f70f805a8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b0cd60a2-c689-43f2-bc0d-37db7ae3855e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7bbeb0-ebc1-455e-8fdb-767373056201",
        "cursor": {
          "ref": "f78a7929-25c8-4cbc-aa0d-23c3be72416d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "db925f1d-dc06-4be6-9063-66fcee7d9208"
        },
        "item": {
          "id": "9b7bbeb0-ebc1-455e-8fdb-767373056201",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a650ea1b-fb13-4931-a87b-31e5c47e4dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a77b3e-a655-4da8-a313-4be99a48ee2e",
        "cursor": {
          "ref": "f6ed53e5-5caa-4a32-8de5-285462443eb1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "80920a7c-fc07-4eb5-9fb6-2a44e21cd432"
        },
        "item": {
          "id": "19a77b3e-a655-4da8-a313-4be99a48ee2e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "622a3010-9c1e-44dc-88c7-37f21d364c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9bc847-e493-4f40-90d5-b2420c76ae06",
        "cursor": {
          "ref": "8d98693d-0674-4d60-a306-c2fcc7534907",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e6cc51a1-fc44-407c-b5b6-04dfe7433143"
        },
        "item": {
          "id": "7d9bc847-e493-4f40-90d5-b2420c76ae06",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70b9dc44-7c9c-4731-93ff-f51e5af131a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f379628-df32-46ea-be88-2e00aee9f879",
        "cursor": {
          "ref": "73ca506b-07be-49ed-9c53-b536a4e2f63a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "549b9da9-bdd6-477c-a9b7-ce9da4e6b10a"
        },
        "item": {
          "id": "0f379628-df32-46ea-be88-2e00aee9f879",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8ae5890a-d0c9-49ba-a3d9-4be71c833916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97006118-f6ad-4ae9-8871-3b605d2592b1",
        "cursor": {
          "ref": "e4a13acd-6220-43e7-aac5-994f55f0619d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "40327611-b49f-4a5c-99cd-a79fe788f711"
        },
        "item": {
          "id": "97006118-f6ad-4ae9-8871-3b605d2592b1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e01f0c9-cbb9-4494-ba4e-dd3b1e3dbc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6577aca2-3af8-4f29-9d75-31328156e0b8",
        "cursor": {
          "ref": "ece7c61b-face-41b8-967b-368bb7519afd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "067a5fe9-7ee5-4e04-872d-7785e490ab9b"
        },
        "item": {
          "id": "6577aca2-3af8-4f29-9d75-31328156e0b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fa78bd19-75b8-4401-8878-08825b3db4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30207fa4-54c1-40a3-9c91-fd38bc96708c",
        "cursor": {
          "ref": "6d106a5b-d8de-4d0b-bb37-e5e1ce22c7a1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "79058ad7-f5fa-4cce-a37b-1247c37bed6c"
        },
        "item": {
          "id": "30207fa4-54c1-40a3-9c91-fd38bc96708c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e8dd6750-d0d2-4bdd-8a25-36cb98780cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a97a5b2-8cd0-4666-ab82-6b0df2128996",
        "cursor": {
          "ref": "d820c18a-5f58-4a32-b7fe-fb4ee8995a8f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a044d401-68ff-4f0a-a765-bfb946c40f6c"
        },
        "item": {
          "id": "8a97a5b2-8cd0-4666-ab82-6b0df2128996",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d6b7a11d-9eb2-48ee-b1cb-015baba2e29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa6d808-9978-449a-9a17-41b543b6e55e",
        "cursor": {
          "ref": "e1f8389f-dce6-4710-864a-343a71e73b8e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "44dbf060-c543-47f1-a80a-2280c37bc331"
        },
        "item": {
          "id": "4aa6d808-9978-449a-9a17-41b543b6e55e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d418d60-82e8-4b9d-8928-ebc94348b872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923691e4-56c1-43cf-b922-48aeae144baf",
        "cursor": {
          "ref": "f5668cf4-ead6-4a04-b36b-a9ab64a47834",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "de899b34-7857-4659-af83-2440cfe4451e"
        },
        "item": {
          "id": "923691e4-56c1-43cf-b922-48aeae144baf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a02e9e13-ffe6-4e46-8045-a19a95680ab7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c98c7-b156-498a-bf1f-c0e8f69ee0d2",
        "cursor": {
          "ref": "80f27e04-94c0-45da-8408-8eba2744bb47",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "48038500-6fb2-4016-ad8c-e5a8f170490b"
        },
        "item": {
          "id": "a33c98c7-b156-498a-bf1f-c0e8f69ee0d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d2f46bbf-f732-42f7-8a47-705da2efd662",
          "status": "OK",
          "code": 200,
          "responseTime": 2004,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd53add8-3685-4c7b-a9bc-c4e9ae05b731",
        "cursor": {
          "ref": "7f4106cf-1537-4b5b-82f3-ecb882b4eb08",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fe6d4984-07be-4598-9921-8318995122f2"
        },
        "item": {
          "id": "fd53add8-3685-4c7b-a9bc-c4e9ae05b731",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8f61117c-533b-4450-9e06-e666a4842ded",
          "status": "OK",
          "code": 200,
          "responseTime": 2847,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a25c80-fcdb-434b-8a5f-447ed2da9a05",
        "cursor": {
          "ref": "8beb1705-de90-496d-89dc-f09fb235048d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4bfe7f10-f1cb-4e59-9b02-19411dd0173b"
        },
        "item": {
          "id": "67a25c80-fcdb-434b-8a5f-447ed2da9a05",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d0fd4bcb-6645-40dd-ad94-93fef9d9589d",
          "status": "OK",
          "code": 200,
          "responseTime": 2265,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70f924-ef64-4ed0-a1af-82cd6f04ec60",
        "cursor": {
          "ref": "e319939b-be72-4d6f-b399-81a3284cc00a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f2ab815c-83a3-4b14-aa66-3ebfc1a0a63a"
        },
        "item": {
          "id": "db70f924-ef64-4ed0-a1af-82cd6f04ec60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e7d74c1-8490-4eeb-8197-83b14a979e93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70f924-ef64-4ed0-a1af-82cd6f04ec60",
        "cursor": {
          "ref": "e319939b-be72-4d6f-b399-81a3284cc00a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f2ab815c-83a3-4b14-aa66-3ebfc1a0a63a"
        },
        "item": {
          "id": "db70f924-ef64-4ed0-a1af-82cd6f04ec60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e7d74c1-8490-4eeb-8197-83b14a979e93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b8b9fe-cfd0-47bb-aef0-7c5875fffdf3",
        "cursor": {
          "ref": "a0c6cb75-493a-4220-b9d0-b5556202b566",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "24780f0f-3aa6-4bf4-8594-0aa72fbdc5bf"
        },
        "item": {
          "id": "b5b8b9fe-cfd0-47bb-aef0-7c5875fffdf3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "49ab562d-0612-4d42-a9eb-644c9470d96c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cecb5b3-9879-4cc0-af93-a15078b649b3",
        "cursor": {
          "ref": "c85579d8-fecd-45ff-ba20-0efef04db672",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5d9d0a33-b90a-4c4f-be12-d42d149898c7"
        },
        "item": {
          "id": "5cecb5b3-9879-4cc0-af93-a15078b649b3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "301cab9d-0110-4282-81cc-03994fd097c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}