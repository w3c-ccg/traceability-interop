{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "42e96e78-60d9-44f2-be1d-689ee1abafd2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e625f8d5-4fcf-4b5e-80e9-244cf073fb11",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d1a8202-48e5-4a6c-9991-d07b1d3b647d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5505c371-0428-40c2-94e1-f47f112c469f"
                }
              }
            ]
          },
          {
            "id": "4fb63461-de98-48c1-b1df-ee5c98a9aa5d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "773ca3c7-36b3-4d32-bf7f-f30dfef36585",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1bcc541c-5da1-4da5-a8a5-e465f0e9965c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "66bfdd5e-3acb-48f9-9d32-4b10b3560158",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9155808-d882-4d63-80cc-da7e16885d69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ad02ae4-0314-46fb-b043-c169cf22c7e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dc46146-60df-4138-86bc-30824d9c7de3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9a15406-fe88-4c80-991f-0d9013b4d6bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cad96411-df6e-4b90-ae64-cfbe1a6bbe30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1bc6478-6f9a-4e06-afbf-15506780032a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6de7ad11-f659-4a85-b6dd-84c60a71957e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6960a8d0-b2f4-4575-9783-b90180f87a6e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed7a9eb3-941f-4d41-9de6-5cf54ed3e8d7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "51ebf6ab-1255-4624-86af-6e400ce1fb71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48a12b57-c323-48b4-bc09-ae9ad9b2637d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4ca278f-467e-45a6-988b-7d058e2da024"
            }
          }
        ]
      },
      {
        "id": "ea777af3-b178-4d72-8ffb-6dc362e0eb62",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "56794036-e10f-4fcf-ae44-aecf1a068877",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b5947d1-7e8a-405e-be02-a58eb1afc59c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2cf9db6-02c5-41c6-8270-4f0fa100424a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664853b-0821-48ea-b85f-8ae3f30d98d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9f7e6fa-e176-4488-9a2c-71722b3b4168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37e1a35-4db4-44d4-ac0f-ffabb1e704be",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6a4052-5ce1-4a6d-a059-8c2ef342408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "578d6e28-34ef-48db-b17c-d1cb3f810956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0923bd37-cd8d-4cdd-974f-28eb601fa84d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5cb5af-1507-4f4c-9694-60abfa5eedb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "995722a5-7b9b-474e-b139-367a7b2486f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c80e31a9-0301-4fad-bdb1-e7774b47ed28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73667929-d34c-454d-8e63-08311dbc2cc1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ccd22f-c47c-4bf3-a72d-19cad8327a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f65440a-0d74-4f4e-8f93-20a0561c4917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc00fc-c55d-435f-babd-28de5bfede49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd2a5a2-a8d9-4c14-b8d2-9a48c8486318"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a8cc2668-6ba1-4b4c-9255-c84fb6076254",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19fe880c-c9f0-4bee-9449-6b9ab8ce8e5e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb73c58f-da30-489b-8e37-c023af0218cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6a6690dd-d772-43d0-bdab-3820dc619bbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02eb5f65-9e17-4648-a473-64e88f7d5f6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b5056389-e99d-44c8-a9eb-ab13275acdfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e9c863f-4fa6-4b25-bd18-fef7df50a2fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a851390-4238-4b0c-803d-c131ed9b24f9"
            }
          }
        ]
      },
      {
        "id": "06d841dd-4f2c-46ef-856f-76e3f9c77a3d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1de35ac9-4d56-413d-84e2-ded7fb4aba7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcbbb1d6-b14e-44c5-ad08-5d073ceb2330",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "566e15f7-774f-4732-a986-8976e4f60173",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a8f651-dfd9-4135-94c2-c89d3b8cae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb58f8b-2ade-4678-a2b7-c2e71cf22c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad614ef3-0f58-4ff5-9c04-72b3abcbde8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30dc3cc2-4ea4-4807-9a11-add2e3ad9174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484a8e84-1fe0-4dc3-ba36-b28f15391be9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070c668d-6b39-4971-b900-69d94f41b18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e3e414-7188-4269-b9fe-5a0d4077e6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19378f0c-0e6e-4a7a-8968-040d49a7684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "552ca7d4-218a-44b4-88ac-daa8aa291495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad3a984-72b1-46ec-85f5-a4c18f719897",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e1d9b1-9428-406e-aa50-ae07dd7320ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbe44d0-2327-4d80-aff6-3b9895bf0c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1118822e-7d11-4540-9390-81916c23b053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41799ddd-5ac5-4394-91af-72e3d3a121b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbcd459-8f5b-46be-9083-b675c8f2d237",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eb6ada-e713-454d-816b-bb523c753fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656a086a-33a4-49ee-a4d6-d01a9576fe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c9892c-b149-4957-81ca-15acae325cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee7e5337-cbc2-45cf-9924-7d7353b04711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab802df2-e4b2-4b3e-b5bc-51e7583cb9fb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12256dc7-a1e8-46ea-9ea3-2cb38c545e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e846c5-1cda-4a79-81b7-6a05d7270097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26b7bb6-0b53-4c85-9779-27f1f391ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c84dc068-7959-422a-b15c-ee0458dd5442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e02aa17-34d4-453c-b472-e2bd1cb10130",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75268954-db51-4338-af91-f291cf090548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d1233f-ac73-4b61-9a8e-6abb600887a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d032bf5-260d-4afd-a4e8-2ea2d619c6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8ac119-ac19-444b-ab46-f82eb0934078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f1235-5d3b-4968-9652-0e52601ab0b9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee0cf1e-40ae-4a62-a7e8-a8a65a10dfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c06a6d6-ecc4-4787-9f79-4b822ad2f6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e376ddb0-a7c4-444a-b0b8-ceac3b94d5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60833dc6-d265-4caf-a94d-6658ea4dff75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3874e72-cc54-49e6-ac43-4fba88da75e1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d07972f-a9e7-4c4a-a582-1b955e8f6b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b812203a-eb7c-420a-bf72-aaaf4ce98d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda2521-6cd0-4c2b-a951-9354024ed95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f73d2a64-a456-481c-93f3-8f3998f651d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57940757-1449-43f6-947c-532d35b9b4cc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68de8afd-0922-40e1-b8a7-6923b1d7ed1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e624e7-4ee2-493a-a573-f2ffda136b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fafef64-654c-4c15-a8dc-b166843349dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "985576f1-c38d-4bc7-a6dc-49063ae8a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c621e92-d5ed-4ef9-8d52-b6987f68c46b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b02369-63f2-4817-8d99-4fcfdda06830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae34465-c1b1-4961-9ee7-fff7d53a9bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9e6489-9a90-4401-8693-0d58b9efde5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac96ae66-4359-43eb-b7b2-e19b33ec4088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e1aa73-fdf3-4970-a83d-b9b2dc5701da",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ee6072-2741-47bd-b447-078c0930df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff5c01f-d313-43a9-986c-1b57e3688215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f08ee2-388a-4625-ad00-baf582366279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e8f66eb-489b-4908-92ef-ce9a5f86ec39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9395cb74-fa87-4e69-98b5-ed9934cd93da",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5102ba8f-4f40-430b-96cb-849e514859d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ddea47-1845-4d94-92c9-c8ab72ba04fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fbd156-3c4c-45d0-b78f-49b78d4a5b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0279805-228d-45ab-9c4a-e14d4c21fc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22119a5-06e9-4816-b184-1a7d3e1b704c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7637e8b5-ac64-43a6-9d67-8321cf9c8d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1415489d-1dcc-4757-814d-71880a692e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef16800-dee9-4875-9faf-0337271509cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72b83d23-2912-486a-b659-e5e14d252975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ce7a9b-98e9-4aeb-a09b-56a0ff91eb59",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cee1e6-89ea-455f-b076-586be8c44d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98418b26-6d88-4ee9-accf-bf14e34c2101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d1cd0f-33cc-419e-aa7b-3caee59861da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "090898f6-d8be-4b66-9165-cdaedf4a5b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628c0c4a-9634-421b-b5ba-5afbacdadf60",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a30066-2672-4155-b420-f05534bc2280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b63e8e6-84ea-4128-a95f-624ad499381a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398f8f50-d7d0-4eb2-8904-466ea99cc3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "688f54e0-8d71-4a15-8fe9-b041237a8d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe42117b-0b00-4004-ba6a-9f540ca7e07d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8e9e3f-0085-4884-bf7d-3b7225455ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c969547d-0136-4108-bc04-97d1bf6f9fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237b5888-0b96-4ced-843f-002caa374bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0429cb6-18c1-44da-a8cf-0911870c50e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e4f2a5-bbbb-4f2a-bdf8-fc13c58f1b07",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6dfd01-2579-4465-a623-ac77bd822dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7424ae3a-eba6-4b97-b20f-b7279944d5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6efad7d-f6a5-47b2-8046-514c50f21aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9639764-6e57-4c63-92aa-f66eaa27fe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9837b160-0adc-434f-bda6-aed0972ab448",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d28cb6c-1754-48d3-825c-9142de4cf11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdb0d36-b7e7-451f-bf0a-808eea27754d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6185a3f6-115c-46ad-b5e5-077312d8bef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "996a39fa-3fc6-4fc7-a3ae-eb4396503371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fe016e-158f-4a50-b2d1-69c2385253ef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b41c68-5cef-489a-aa0b-f87164a3e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb33cff9-8017-413e-b006-69ef674d130a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b2d42f-b9ae-4a10-a94a-82e9722b5d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89be7f3f-1558-4e53-81c5-5099a7772867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5b002f-10ab-4897-8a08-acc0695460e9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df8236b-1b3f-4bf9-918a-769485814639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25fa826-1a97-4a15-b240-3ecd505ecebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78345393-4992-4bbc-b604-8cb3f84fff40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4390b9d3-75db-43ac-a036-10b0b052ed8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f949f0b-1bcc-42b2-bce7-ceba0125ba34",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d2f43-569d-46c4-9314-fc803ef22e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e63db5-e073-41a4-8643-36eaf9c81718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08f4a07-86e2-4226-9054-95f9e9ddd70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fecb25f-648c-4bb8-9581-5ee4ca60144f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec163490-dc3c-482d-a9d5-50393624acc9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a1fc27-8acd-4d0a-a999-f995cb515188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679c6d8a-904d-4aa0-b1e8-9b5b937912d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c317c7a2-b319-455f-8863-1936c0f3927f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cd9e28-5463-4837-b708-f756f08505af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c800c8a-a996-4da5-8f95-3e17189971a9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63486769-0218-45b7-9def-14886ac173ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83030bc2-541e-4134-a8c6-2db167faf6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eb80a9-cc2d-42b2-b1ba-09be3abc1fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e21f3a6a-2b77-4d53-8ac7-697533c895e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc9f8c4-4883-43a8-8fdf-ab639728f216",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f32ccb-dca5-4333-8c92-ffe5d96ab443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcc3b15-993e-40f2-accd-b169259078ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4099b3-1e3c-49e7-8382-796404d65dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8077f7-7994-4cde-9959-30bfea5c2a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963021df-3be3-4ccc-b3d5-12ae96dd3c89",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431aee15-a6e1-4bb5-b920-3ec4a00941ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86bf8ef-594d-4773-acc2-ef39483fce16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc98d054-06f3-469e-a291-da99c6375983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2afaa3-e873-40a5-9644-1ad42088dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d3b51-aa7e-489c-a414-9e7983354023",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d82c98-92cf-4613-8dbc-8e92af4470b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b576fd7-cf28-4711-82eb-26b135fcd9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b26da3-c0cd-41bd-a241-25a20429dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0824b1-e7c8-4451-8348-16c9b43fc290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc7e089-dc21-4828-a035-f3c09c83e391",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2177583-c97e-414a-bf86-eabbcf1d389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f359cffd-c497-4dd8-9069-654809f8f3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d96f1a9-b7fe-4884-9380-868c4bfcdcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de05e06-fb16-4ff4-b2ea-1cddd77237b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e43692-5e08-406a-a6bc-efcb4874a147",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd05380-6cc6-44c2-89e6-4bddb9d32a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067c1c9b-0d03-48fc-a83e-11f5fbe27045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a2663f-9862-4468-88ea-ae7aeedfeaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4f784b-c727-4f95-91b8-08b4c2d7546a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf687dc9-27e9-4b6d-95b4-a2fcd8c5a6c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6e9325-586a-4c7d-ad31-32a14d9ab64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e25e85c-67da-434b-ba99-bd3d162decdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcf968a-9b39-4244-8722-8623ab5d514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61da33c5-d565-4c1a-b125-c881ed6af025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9eed15-499a-4932-a6ed-3d4be6636cae",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65efb175-f8e0-4785-8417-9fb9e57e0396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2c5b5c-8192-4bd0-99fb-1546868fed41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d96953-0fbb-4dfe-a333-218fb952f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f039aaf-4fae-42d8-aa0e-571495669287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0cd8f1-3b4c-496f-9e42-fbf24426b118",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82fc81b-e44b-497a-9502-e7d74d530f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d00188-f66e-4ed8-9a0d-515e744a5367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e57b4f-7bff-469b-ad4e-ab0641813d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df480dfe-2754-4828-bbec-58be4ee1eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276cc3d2-290e-4a5d-841f-7586ad6d4dee",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0738ea51-ae91-45a3-97c5-593db13e289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d971d66-e249-4e3d-9398-7151fdcbd7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80e5376-4eab-4c06-99d8-c219b5bc7e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70aa0672-4764-47c7-8c51-0dd967e0bb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2057c5a-afb0-4330-945b-759506701a60",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1af74f-3118-4270-99c4-571ad5d3f145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de14337-51df-461c-8c35-97c5747a9f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf5b02c-6ea0-48e7-8d4a-aa3fa8a3b932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa86b2fd-4cb5-43a0-8757-a8ff2ba2114c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f4ce93-4aef-40d0-b4a1-07b20553dd46",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b800b11-bc24-4372-8b85-038eaceaddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda3d3a3-0a61-4d58-b3e5-8b8cfa197f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5e6706-cb91-468b-b5a1-94ef967079fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc45f8d-c0e7-4c69-8b98-31e83456b404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157e8fd-9141-45d3-bf71-c0064b402551",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844d95f6-b846-441b-a75d-cf5039cc326a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5dd173-5d72-4cdb-800e-23b2536bc7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63b12f7-93f8-4c7e-b694-249acdc5cc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2dc964-4761-4825-9ec5-a8fc7960835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e432732-63bd-4cfb-ae52-35ab58cafc17",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e6d5b1-2ba1-4ce8-bd25-bcc26eff7508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d724582-9f45-4272-ad37-219ff892c873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b29046a-0260-44c2-9ef1-7c3c31bf9c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "478a606c-1743-40ff-8e00-e8c72ab462dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ef8abf-e366-413c-b9c8-9717b5ed193d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb763303-09f1-4fb3-bbe8-f83c901f3850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f013949-1025-4b2d-acba-be0478a99c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b7cb7-0005-4f85-afed-e5bb8e456bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5df496-47d5-4ee0-aa17-38082acef41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4322557e-e914-4e32-a3b9-60f8d35add8e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c472a8a-6bb8-4709-8583-cb82eaf4b336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e375995a-22bc-45fd-a7e4-3a4aae1c764e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70657af7-b4ee-4d7d-8059-fe731a26f4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7319559-3714-4dd0-9ef2-2616b53a51d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446441f5-87e4-428c-984d-1920b8236a63",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e399faf7-9071-4f76-91b5-8692308a6832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6a4cab-d32a-4fb9-9eee-8f3efe87eae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4e5dd9-6e23-4c77-9770-4a8299b5389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5586fc7-8d55-45aa-8c3d-4104bb453560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1e4725-1e10-4681-8a2f-5670d0eda94f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e815fc-ac8b-47c0-ae89-5fb3bc262dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3cedf6-4c21-484a-9746-cb08549d9ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f91be9-51c2-4789-9d1b-9d8b5a194074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6035a2bc-258f-4acf-a11d-bb8106aaaf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111989be-3e74-4ffd-915e-ce94ee165ab5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9da505-1b16-40b0-b3fb-276897b60554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cc19a5-069a-4401-87d6-f64942f4e153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db084244-e4c2-46b1-aa5e-7b89a2ebd76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7e6e88-c52c-465a-ac56-78b89ef3631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaa5359-32d0-4afa-9b3a-5377a93ebfd1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c719b3fe-9e71-404a-8db6-5fe89816a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39cca7e-9b67-446a-99be-1c8ff2fc5195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa72351f-cd9e-40eb-9893-6fb3c47c9c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b50f99-c093-43d6-b17e-c55da2205c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039cf463-ef0b-4a0a-ac67-243aad306c59",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdc5d18-e21a-432a-99d5-f8ade309fe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4329dcf9-e401-4fe9-9eb4-1020b9e204e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a70e29-55c5-4686-9b2d-4367c7e6eb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec90ed62-a667-4236-b4c9-3f40b660afae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b77d6d-65f7-4e64-a9a4-f3b5a2df10a5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d277591-6541-4900-abad-73e98f793084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55a9b4a-7aa8-42fa-972c-4d0dfbe0366a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6491aa6-3610-4bde-9646-39d2f6543e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba80041e-27bf-4837-9dd5-70ee67e848ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69f96eb-3e02-44c1-a3d7-3ed89d88dc89",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634b6608-3a1f-4877-85bf-57b8ec665907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a55921f-ea87-4b5e-8f0e-51b11e437a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370e0f7c-725f-4870-b640-ee7e54f8b06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8358be38-10e6-4db7-bd5e-99d21de7588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94360618-6a61-4289-a2b1-e5e091456e8b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae515cc-fe1c-40d8-93e9-3dd05c6d6de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6756784f-2018-45f7-8a3b-aa1a79fe02d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94a71ee-3a4c-4e84-b841-e9c6dab9b8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfebb2ac-9d0d-4f69-8bbf-50d047d800db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24c7293-ab41-4fac-a3f3-21ec3f050c1e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf574193-59f1-4c3a-88f1-2c8cf177d67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8523a3d5-850a-4b6f-a2d3-e65ebe5aa005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd2ff13-910e-40ba-859d-9a1454eb35e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c733e59-ec49-40c0-a921-973682194eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfc79c6-c8bc-46e6-8025-9b78b12ff7cc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a747e11-1cac-4c5c-9eeb-044a26661e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75906e64-d52c-4154-9996-13d25c67b348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfb1d20-14d0-47b4-ab83-2e122b391173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2ac33e-1392-43d2-8c28-5d55772aa060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e61ae33-b51f-4bf0-ac6c-e0c1f123cfc8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb7c3c4-37eb-4698-9ec1-04bb8dbfd514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5466ae7-1a5a-4800-b240-e0698caa70f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d092ba38-7381-463a-a00f-c0a6f6639211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ec42db-1519-4c3e-8c5c-b0239ba1e198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc181db-a837-4a75-95dc-6d0e7f50e0d3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ebc23f-fd64-4e65-a397-1a9d7a26382b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4732c3a8-deb0-44ef-9a82-f2e9b621111d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f0989-a3b9-44a7-b323-533df7dd037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faf4410b-5ddb-405b-aa60-3d4e22c43180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae04cc6-e640-4737-b2f7-5d97abfeb9d3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71afac51-98ff-4684-8e04-b68e0428e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d934a60-858a-424b-b726-62639c3e0752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1867d72f-f0a1-4225-bfb2-164dc08a178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05dcb2b-ad99-4fe3-b57a-6c16a52cad96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9389d70a-9b24-440d-8105-f4f2c63105cc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4166913-b38d-41e7-a866-81e8ff944ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a072de-2666-48e2-9aff-5e5c8b8d5939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ff3cb4-d161-4231-83b2-a63cc8037ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c00521-9006-4c12-b62a-4c9da7a9c06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e61c89-1e79-4f7f-a7a1-881ca18083b0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f60e047-9c1d-4457-8f62-402ffda841ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73619b4e-2034-4688-9be6-1e9ee666724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efe0913-686e-416e-aebb-2b0b43f8c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c0269a-16c5-480b-a83d-2b2c3cbcbba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84acb479-bee3-4127-98b3-5eb90a7b879b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7f1890-323b-49a9-8095-9040b0a3ab2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f111d72-a798-4064-aee6-a0ace95d8b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0662fe8-0e8b-4d00-8adb-f0820dfca4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0182d36d-3023-490d-8846-3e90fa7b7210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a59bcea-c23f-41fc-a7ff-a830749063fe",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13a3f2d-acb0-4d2e-bc32-3cb55cca9f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367379a5-da6e-4a56-9525-283c4f757c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1315c5-f3aa-4283-bc74-d228f0f90b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34a7e1b-5bae-4e07-9941-5e9f47f689a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5b02e8-7a7d-421d-b319-c277650a8ead",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb064e03-d00a-4ab0-b7b6-1da67535b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6ae205-5d0b-455c-a274-336494905081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c896bd58-36cb-4471-a28c-0f1fa990b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fccdccf0-fb8f-42a9-85d6-b04c2ad5c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7648710f-dac5-48a9-b13c-30eaa4e3e845",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8bbecd-37df-4715-8f66-db14856c8853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961148ed-1064-437d-8ced-34213dde48d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e19bcf-624d-4bc8-aa44-0d8e654442a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b59b107f-c3c5-44c9-a636-1db85e7888c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a645578-0135-44be-b042-0ece5991f30c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945ba3b8-66c0-46c5-a907-9eb0cf800767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa1a640-f920-46f0-928c-09c1baf57ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31da18c6-f4d8-43bf-9b00-5e52a2733d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d56e0-9ddb-4143-beac-9e984ae1e8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181bb5e7-a0ac-4102-84cc-a72eeabffeeb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b4c08-8a69-40b2-b747-4e8e002e9620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfba061-4462-4072-a3e4-4a1bbc7ffc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaedd3e-e460-4ab4-b43e-fb376172c46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6605548b-56b9-49c3-a0a7-dd911853058b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3da8115-8c35-4229-87c0-57663ddc4447",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8451fa4-89bd-4b9f-bad4-2af160e1bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3e0eea-bf71-4a1a-9816-a71b16b7227a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a27996-f40b-4c25-ac82-d30d58b0e032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf05c31-7774-42f8-9cb1-b4b889709d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7366995-d96f-499f-b6a0-70eaef21c512",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854f0265-f5a1-4c7e-a7f5-c3cea8a32d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24cb591-607e-4f09-83d1-b646f9221b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67af7dea-4bfc-45c9-a2bc-21b587c3e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c11a00-5a5a-4047-beb8-a28a0696f82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6887d5c8-8d0e-40e2-bdc3-708a2edf938f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5df487-9977-48aa-b56c-6afa3dcf4c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de5107b-e9ee-4d40-9fa3-a1688b5b1523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9f2a9f-eb2f-406e-98ef-24cc376c16ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f430ff5f-647f-4616-8e57-1ecfc1a5a0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3278048d-70cd-4e8f-8345-c39fce52acd6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd03e8c6-1a9f-4ca3-848d-309872ddfc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b0893d-df37-4b4a-ab16-3f745f51cc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e94f46-d534-47d9-a127-8d934deefcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a865fe6-2f10-42d0-ad30-9c918453dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa00e40-ea5c-4219-9e16-f1f9cab31ce9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460eee5a-e65a-4553-9dab-c199e1ee68cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dccea9a-ea9a-4a48-b6c2-548a498b2a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc083a57-d794-4bdb-aff4-db5d52601ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf719fac-bf69-4a21-8613-0b5bdb0cebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cfaa80-9d47-42a1-bf90-59336e3c75ea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641463f7-3053-4d44-9932-b0fdc59eec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28d7126-c3b6-4f86-ac6d-8d5e770a28b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5164590-5c03-40c3-a3d0-d6f8015cde8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a471d75-93eb-451c-b4ef-f73c3db8df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d20f730-4c90-48f1-8e57-b7bb9b42acdb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0554d21-acb2-44c5-963a-f0a63d055815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5357b7bf-f71d-4504-b3b3-6b88b8a2d85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c0faf6-5a82-40c1-8247-6b6c75e8147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d79a115-6f0b-4d47-800e-9dbf68a5dfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9866edb5-02fd-47f8-8760-12d8d752735b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1456d1-fada-4a29-937b-a35469c57ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f15bef-22b1-49ec-8f95-6dc2a833526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbaf92b-86a7-4dc1-9b49-f6949766aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9055d6eb-e008-4400-af04-d7ce19f66203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174a44e6-2a53-458f-aace-a259f4fc9aff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605573da-b0b4-43c3-84f5-2bd48acd280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751eb226-fd73-435f-bdbf-9b43969e9329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431aba92-eb64-413c-aa94-26ed24b942b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "67fa973b-8501-42ef-88dc-b385091c7393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e83f03-60d7-438a-b9c8-79c1993e3cc7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9550c1a2-f191-4eee-8ff6-77bc25cc8a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c4c20b-87c7-462d-bca4-7f2009d6fce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b83d82-659b-4b31-920d-717832e944f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ca198-0b94-4f4e-9c28-ea6bc19b3d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0471c115-c220-485c-8d02-a7ebb25d69b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ef466-714f-4658-87d0-8d0f767248ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b740215a-f137-4dd5-99da-3f039806856c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b0ad81-c3a3-4678-81f8-823931e9fc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a5c00b-aabb-49f6-87bb-fe2af31005b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ed92dc-95c0-4c63-8e9a-a2da9e5eab14",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bb513c-72d2-4768-aa6c-c04f2d127916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60c7977-5110-4cd5-ab29-018e6207562c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc16c2-44ed-43fb-835b-34d569c961b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3a1918-41d9-4313-a0fa-452287337c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3af189-f1e6-416f-ab6c-612c256dddca",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a449a00c-4e96-4e49-a710-7198da4b6a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c11252-d2b2-4156-aa95-d70ca48f35e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31091ce-7751-43af-968b-c2214be10525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a22252-3f64-4083-b6f1-a358b5ccb764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e7c907-7942-4a95-81a8-b9c9d5bcd868",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08a9eb6-6627-4576-9c66-78a6398777ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eacad61-8174-4028-b501-2365262e1d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320409d0-5af1-49f7-8e13-dd340196db44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea0091a-936e-49a1-843e-e9f8ae10413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af215aa6-a86e-465a-844f-9df581f2bf23",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc23a246-2228-477f-9f18-a71a4973ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f128bf3-9717-4267-b9fa-eaed94aab6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c62b695-43aa-4b50-a7a3-f0bc4c9fe446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eba96ff-5ab4-429d-86c2-5c70080c5263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba5a25e-226c-41bb-ba65-7926d6326c0c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54468ada-21da-42bb-a7a0-5c302c479dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecb9929-762e-46b2-bc75-1b39b13daea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c0a1b-25e2-4a23-9f82-dddbdfb21242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcb6ba0-f3e2-4e2e-82df-629c28231824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d07c7a-4b23-4d45-9952-423cd18149b9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93e7f7c-9b81-49e6-be83-2a764f082d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75621413-c1a7-4afc-880c-91660b2e50c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a3f043-d0a8-4f68-a311-e97c0d163f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5885a453-136c-4be4-aa72-b200a9b45e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9775c133-e9bc-4c20-a10e-0925a9b33436",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b13e2f-ce06-4d9b-bd87-90205fbd7a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0da1197-2e26-4a0b-a9af-321aaf87da21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82f2625-dc7a-496f-b122-6956f92d6716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6977269f-3659-49d9-a79b-761ad901098a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedb20ae-2e79-4e2c-876f-9552f16fbdf8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5412fa-df4e-408a-bdc4-a424abe98134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9b9138-cbb0-4a68-8507-fda06f829d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b333eb0-507f-489d-8dbb-107c01188fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b19dbe-fda9-47ec-9981-a361e4fbe14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38adb6d4-0058-47de-8e60-4ce58a6295ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2746a0-e6cc-45ec-9eec-315deb2374a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559a15e8-a24e-42aa-a6a8-3a52e0232353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162b2694-7d75-4857-b976-cb48cbc3d5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdf88e1-3f3b-4dde-b606-1d6fd4852e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93afb8f-5329-423c-9517-53791a836d81",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c140239-5388-474a-bb2c-b35c01002dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179fb544-5f88-4939-a8c1-aa5e763a0c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b6a82-5307-4b79-ae9b-330b6dbe5ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa529037-f0ba-4c03-8420-2e4394bfc1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eb39cf-c8a1-441a-be63-2af9fdfddef9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd55acb-4a33-40fa-8896-5c20ed86392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597e0865-bba1-4b8e-9160-b55d7f58af7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd556e8-e743-4675-9061-73e4d5af8790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8349b28-ca6e-4bff-8564-669e0c08bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62827747-d2fb-458c-a769-a1ef08852833",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502b1e45-4c31-4e4f-bc2b-33675693422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb0f7dc-5cf8-4d92-814c-e1439198097d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66002799-ffeb-4d4a-9e5e-a90d19c7ecfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed97acf-3f6e-4507-8ce3-754af03fb0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac9b5ae-a76c-4a50-8ea2-f7a10b242682",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d7887-aeff-4fab-a803-7dc694861bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defbe0ad-ef74-4e7f-a5d2-515a14f639f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34724ac4-b870-4e62-b55f-73dbf8875b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83e47ee-b766-4eaf-b96a-2b890f588039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e71c4f-f88c-4fcd-b05e-69c847760c4a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4299052a-a0d2-4a96-991b-4a04a5257932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b70585-b545-4c02-8069-73704e4f5b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d987651-7d87-4491-98a0-1b3b416382dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d670d86-d83e-45ea-b490-39f5fc3d88ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6433dd-e337-4d05-b63f-a7e2229919ac",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecec1b2-d323-4665-83b8-24fa79bdcd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc99ec1-9c3d-447f-a181-440ab8acac15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3be85e-f500-46ad-a650-d51174ad788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44efdf6e-8c04-41bc-bbe8-42eafc171be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c7e056-a41b-44fd-bfd9-23bf65d6fe87",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c242b3-8b11-440c-9062-69472a4f76a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf450622-4f91-4f6d-a0c1-26e26b723fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d1a0bd-9a83-4078-9fd9-a6bb94b372e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cf9893-df1a-406b-8dcb-5ce2a3e9792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2da482-3cab-4880-a790-00ad73b55e09",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eae949c-3592-43b7-ad28-9f3651542345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a0d314-e38e-40c1-a2d1-f5746bc980ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26505cb-bfa5-429f-92d1-9e02be102333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f845de85-f788-46e0-82bd-afa3f9edcc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c754313f-6c4b-4f73-9d55-b054f28bf4ba",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9ca3e9-7317-4de2-9fec-e7fc5d7a9223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3951b1d8-49af-48d0-81d8-80a949faecdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5157510e-d05e-4719-b4d9-f7f15308b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23c573a3-2588-431c-93f7-10cc1fece9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fb1a04-fa79-42d9-b5f6-7659c995d484",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a6d233-61ea-4d66-96f8-e9cc6a1530ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a78f6cc-3c5c-4284-ae72-af84252b9dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df055055-2e04-4520-a874-ce0bedac14c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c914b1cb-f1a5-4bb6-9eb0-540b27d26802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc524633-31bb-43e8-8342-945221facd92",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ff7ccd-6def-4779-ada6-b828b04e4e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca429bb-25ec-4e3f-bbb8-521d138d021a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcb7796-8914-4692-87c7-b8fde23d928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6251fd4c-ad4d-451e-8faa-3a46aed83d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1321218-8f1a-4efe-89e6-cb40ded4406c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c429ffe-b44e-4e76-9905-1e06c434e584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59680ba9-5314-41f9-a235-e557d6380569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c96849-33db-4c1e-897d-558b899d706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "18ad4d77-1227-4009-aa76-ff96d4ddb3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409d9b0f-0ec2-4b9c-8e5e-2eb1000fc364",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9987b69e-6e3d-48ed-b580-21d88c871234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1527a91e-7c92-4e92-8047-29c4066815ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c864c9-03ad-48a0-b818-a94d5a762ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c92b21-2d26-484a-a880-f859177b651b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c8c7cbb-be5f-49e6-b234-c7c84e32dd33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e6342ef-48c3-4233-b549-c5767218407e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccb4e40-70ee-4e0e-bfe6-13abadadeba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eacf5e31-4c9b-45a7-8a23-a4d6ea6c997e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fa0339-047f-4a98-a17e-ba3d7cd70683",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb1dd2bc-0cb2-4efb-9f8c-f79728c4e267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a573b9a8-b820-4263-86fb-93ec12834abd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffcfb52c-4ce6-4961-bd9a-2eca8df6da82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45d280f6-1d39-4f9c-8f67-f075a0b56212",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53b62e9a-7676-4a04-85ff-9ef02b3f9676"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60610b47-6aef-4176-b76a-7a8d5e2b7aa2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "692a2c6a-c7ad-4a41-9433-83a4acf4cbdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7542e27-98ac-4ebf-ad4d-6b62035912ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfdbaaec-2f14-47b9-b352-3cb26088d810"
                }
              }
            ]
          },
          {
            "id": "5f6db5b1-e33a-4df0-bffb-6b8ea7f95f4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb063e21-92f6-42cc-9085-fe480f878a73",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25767495-5140-45d8-a7a5-bedb6bcaa88f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15189e02-33d2-40bb-a82f-e423233b0f5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5feb350-6d6e-49d5-afee-38383ac853d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43bfaf59-b7fb-4e3c-9eae-f563a453101a"
                    }
                  }
                ]
              },
              {
                "id": "e74fe8e9-c883-4e2a-8b30-ddd6a81cf778",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30b681e-384a-43f1-b640-388d88a283f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "712c6b10-659f-468f-90c1-60055a2eb852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ad357d2-7a7d-4979-8769-26121771022b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6be81347-ec3f-4579-a005-5192c56d37d7"
                    }
                  }
                ]
              },
              {
                "id": "082d0a83-ed8c-446a-8fa4-73922bb3c13e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53f33af9-0adc-4920-acae-0aa57ae67390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0017137d-a88e-496d-bfd0-1fb18836558f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a72af3-c6b8-4a38-9c92-3cd25ca91ae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61b69ce6-0b6c-4390-a04f-bb26154d8fa4"
                    }
                  }
                ]
              },
              {
                "id": "f20df35d-20db-479c-b760-a68b2c1af4ca",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c48cfbb-5d20-4762-82b6-275289d895bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca1d9abd-4908-49b5-bfa4-b6b39943d3e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bc0ee12-77fd-4856-901b-8620afdcc48e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ea95788f-257e-4f07-a997-5d0a742e3567"
                    }
                  }
                ]
              },
              {
                "id": "26e74644-ddb1-42f7-9890-5febc8d0ec69",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd511149-d656-465d-ba80-117bb7e43eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c9832ff-de18-4d55-a4ff-0480a8482d89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "658c1475-8b0a-475e-8a7d-a5f457ab204a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a81570d0-c96d-4ce2-91ec-69ed709d26c2"
                    }
                  }
                ]
              },
              {
                "id": "099cf6f6-b16f-467b-92e1-ac59fd11626e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2cb25bf-86ef-4cbc-b298-081c5e5d02e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fc79df2-5ca1-4cab-8202-acd70b46cbcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f0e787c-f033-4a18-b938-44546c5d6a3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66637223-5689-47db-955a-304e9890043a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7232401e-973a-4daf-875b-1761360adae0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f33909d-cf46-4f70-b52f-cdf2e4eeccb4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a95aae2b-56fa-4a42-bda6-d9277c740c35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6ff4207-57d7-47a0-aef9-4074e25fb652"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f03224b8-6211-48d4-829f-cdeda7d27648",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "29b74da7-3779-4ddc-93c5-a9781eef609b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fcf9bc4-cc82-45f6-8b21-b8b9ce3cb008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a22486b-924d-4562-adad-d2b9f8aa1245"
            }
          }
        ]
      },
      {
        "id": "aa4b3b5c-24ce-40ae-bf07-786848b09922",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6b5e0663-6854-41be-a228-52ad85ed9f75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "deef823d-15b1-436e-bcaa-8721f94bcb9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a690e98c-2510-4b23-b0dd-27765b8f4814",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa93721-e404-4aab-a389-d4f5a9c2fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86e8726-5534-4792-9081-3fa0c78727c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643ecde2-3636-4e12-b6e0-86f796a555a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0893beb-d094-4795-b458-5914ed38da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4054ed66-006d-4fcc-b160-8cb543c3784f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2a0da4-5a6e-4d7f-aafb-251fbe971c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9513a68c-86d4-4bf0-8d2a-3058eb3419f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b348e99e-9637-4806-b7c5-f351f521d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e870700c-608f-460b-9161-a38b378f2de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20de1aa9-3ec7-4ecf-8549-68846c4249d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403d25b4-e1fd-463f-8a47-0ac4395f463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eebb10-9995-4865-b2e1-88c97041f588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964f5c9e-a79b-4a86-8473-37b523c963c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00f35ea-78c9-4a51-8245-890a7babae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed5f96e-85ba-4c70-9ff6-716517e50601",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee27bbe2-696a-47ce-8806-f17228780496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bccde79-1d77-4f63-8eed-87569695580a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf16e81-6361-4723-864e-521f59e27f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "716d1e5a-1258-42ad-83af-c1036598140a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d489bb44-c72f-445b-a8d3-b8f17a314dda",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355e1ef9-68bf-47c7-86e9-53ca2e12501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df5b870-e837-4799-8e7c-2c4287ab697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f9e412-be32-4291-88b6-b992537066fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84768efb-89a9-45dd-be33-c676eadb61b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a02ed7-96dc-4a4a-acb7-75c2ed50c770",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86307248-ed8f-410a-af7f-9ce160103d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c6ad66-67f9-4014-af07-b87a075b05eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b30f23-e1fa-43ec-bea0-63b032857bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88558cb9-e423-4f82-ad86-e3cfaac28a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec9b0b3-a113-4f73-b3e5-040959d8b4f4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cf72a6-a605-4b20-a9de-2b922fed1fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715cb9b2-f487-484a-83ad-852b06057832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40a7c52-41c1-465c-b8cc-b2b171a50f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ded4b04-d7c5-4672-8a7c-07af6585d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7ff087-20bd-48c2-a687-604b664a1bd5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb49bd21-e9ca-43ed-be61-4ed7ed0c89be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e35199b-0109-4816-b242-3d3c33df29ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4240f99e-b9df-4c69-89ff-0f9d119e7259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6891a6-3272-4b68-8879-a8c4b3d553c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14e50ce-3886-460d-8618-775f2081dfc4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2030072-4aa5-4642-bf19-14a8e2d49caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53427502-2065-4e18-981f-462bd9d31bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1c728e-6175-4240-b7f4-23a8f186888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d5f6d1-3a11-42d1-9d48-34c9f2d1af2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25d2c82-e1db-4b9a-b23b-ff028b062e6a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6220259c-0145-4463-8e44-89e8b45df501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c0083e-e563-4efd-b015-8c16979ca2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0a16cd-ff5a-4fdb-99bb-4f1c67d1f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a689523a-e470-4526-87cc-72bcbe3fc3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549ba362-88da-4141-9a64-d90be35f61e1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96273e86-faa8-431d-8c0d-777a333e95ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314b7e8c-5163-4025-89c1-3adc53a60eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd101af-772d-4574-b521-28d5b680fa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "946faf33-a517-440f-adbc-2197b5c70c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c88c9dc-3725-49e3-ad03-8aa32d3bb5b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef252da-0ff3-4d87-abd8-51aff3e9f227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceebcca1-6453-4069-980b-3123b369f44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343ecad1-b8c1-4579-9c41-7c877c91f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bebabf-a48e-4ed1-a47a-ae46b09f230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99456d-f418-4b5f-bed0-d5ab673dea30",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb36d8d-04f4-4782-b682-cec461d89a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2273b852-4835-4c31-a4a5-df25631d4795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d63242-1de6-471c-b314-aa9e2cdd36aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78aeb6d-d223-46e1-9dcb-8053c14feb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80569679-3a88-434a-91aa-70582fe2fdaa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539a328-42ae-4312-b338-1e7a28e08adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70a580c-90ee-4ef9-a985-3ffdff4c9183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118e436c-9d64-4647-89c8-f97406fef68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "71dbce8e-bd57-4862-be7f-294136cbafd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc95c0a3-695c-4be0-ab47-655802959906",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9184fd7e-f0ef-43e3-a45e-b38bbcbf96c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14fc716-3d4a-44c2-84d9-3381e07ccc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491347df-157c-467f-9391-942164baddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64c6e51-441f-4159-97b0-e266415baa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56b7c2a-5316-49be-8dba-21a01b7bc7f1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410ee1fe-e983-4cca-8743-c4bc72c1cb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c107ca1-7a85-4d35-9600-ffb1df49fb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3ac6b4-12f3-44f3-917c-f46b25cb6c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4073d0e7-7d95-4463-9ea7-8fdceed1e1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57fc8df-7297-4d6e-aa1f-698d8b407f06",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ffb671-24df-46ad-b682-71fbd61aad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282d02bd-4650-40d1-926b-20d5b8d8265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a168366-89a9-4542-9f7e-2d93e7f040d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "867fce84-14cc-4908-a487-3c2a46e61add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746ced7-dc31-4460-84e3-c0d6e055314d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0690a79-66e6-4f10-bb06-c424683213ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fcd33c-2af5-440b-b505-a3b44b64951c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084fd735-9b00-43ef-ac19-b6c87ffafc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b68fffe-b8b7-45b3-bb9b-f57db2b5065e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf94c94-acfb-420d-9451-9b7daefa96b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aa8c17-d2b0-4131-800b-4b72fb4fbd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925d3f40-8098-4f86-be6a-438ed1926ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec7a14e-255a-427c-906f-f5c2c1b39df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60000e42-edf7-43f5-bdb9-e3d52643680f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f276f3-df9e-419c-b47a-e343d718321c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1513d13b-ff78-44ac-9993-79a8d7f1a068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6359cc2-16a7-4183-97cf-f824685643ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2441e63-9e87-4166-8ec9-b5fff776ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d4acd7-a9ed-4d3b-b35e-9e09cad55148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7868e62-8171-419a-b147-e2977d28510d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d573f05-37c6-4fba-af58-2c1f0babf993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f06697-a911-4666-b7cf-4064bee0c99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97f09d-69ac-4a8f-8e34-4e923408ee42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5670ea25-70a2-4d93-b2b8-f1f58f05c90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850f1bff-5ee2-4723-95a8-668268cfb655",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b8959c-8042-4f67-88f7-751a3730017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6d29e0-8aa5-444e-a307-0a93c3ac0adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a9d0fa-06d5-4eaf-9c38-2d663d49187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db431c4-c9c5-4ca4-8d49-8677af89a5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dea0bf-395b-44eb-9534-ea2ca65e0739",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a17df6-fcf3-4e25-9da4-ef2c04200123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017ace44-80da-4d3c-b95d-8cbb367710bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865ed127-49c1-46d6-bf43-9857cf591859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2219029d-c11e-49f7-8771-1415b27e6908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db24799-c6dd-4d45-aba8-a95fdbcbcc5f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8357ecca-3dfd-4034-ae43-e0caddc99d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6a3426-8513-4e9a-82f4-d31bbffcf15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c340686-014d-408d-8271-011f50a74bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e452f2c-7ff8-4a7a-9a5c-a2fd8fc5d1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd0e613-04aa-444d-91a7-fc1e09267609",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f10c0fc-225a-4a22-bef4-83a03bdcdb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332b731f-95d9-47e1-9f2e-e3ef7c6846cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915eba0e-fc5c-4773-9b3b-242d6c6db7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5851d086-739f-49f6-aa1e-7f6dcb5a9160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c8787e-1ce8-48fa-b1d5-900939c78ea2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee64b9f-8aaf-42fa-9978-24b18dd78562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e819e16-625c-4922-8882-302cab3a592a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57e6f7b-feb1-4813-a79f-4909925f1e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab71327-9076-4047-ae24-f684cc817020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef70fd7e-00c4-4d41-ace4-909b223d2ee6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c799cd-d1e0-4dbc-9e41-ae2357c31285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4993a113-d170-413e-863a-b7ba87e8ed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e8fd34-8b5f-448a-88c0-d8501e356163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6092ff5c-025b-436f-a4f5-a0835569c6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e84b6e-8682-44b3-a6d9-98b22267f72f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdd3c2f-f4f2-42db-a172-aac2b4d0454e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff427be-2b17-47cd-872f-68b2ea85cf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24624028-8bb3-41bb-a53a-1ea2654dda7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6d3b4c-7be9-4ec5-8e27-6e1172084d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8fd72d-c5d2-424b-9ce8-7ecb9582399a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fdd478-3fbc-4cbe-9134-63e888e925e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80d5ee6-502b-422a-a999-1e903b18937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2137e7-4946-44f2-892a-1ae229fe52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04492ceb-3577-4642-96ee-04d56fa88854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a215a73e-3ff2-438a-99f1-0d5d3c20b1e2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23155fd9-3482-44a8-95c7-ba247aa3032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7709ed-5b17-49ce-9051-038fcf8b224a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f878485-2e2b-40fc-94ce-aec57ca88fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132b9a3f-c5be-4b2f-b9a4-3803b8fb8912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0100cf-86dd-411b-abcc-0371117e4b9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c1b61d-434d-4989-9ffd-d2a825ddb649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8660390-7bbf-416c-9c45-823f6032bbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e612e9-1665-4bb9-849a-a4215509bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbab4758-b4e2-4a02-b9db-96311e975947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb7d403-cb09-4de2-ae59-1a699b0aa7ea",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4647fa6-07ef-44aa-a032-217f63c5a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771e97b9-ba66-4270-8a1a-258334e4faaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7c2e7a-b248-43ee-88f0-49d2f9f18c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053532e7-6b72-4ad4-afcf-462b1aa635e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb39d402-b6f0-49e6-9a14-c0786de46f77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e339916d-8485-4f00-96ba-71aba5d8b4ef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23eff67e-c96f-48c1-bb7c-d60492f7bd27",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46b0dab1-d0e2-4dcd-a230-43b8bc558ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff90f1e-2f2e-4e6a-95e7-fe216eda3509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64f57b6c-c7df-4ac4-87b2-0cbafba1c2d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21150e8e-7921-438c-bf0d-e6f9b6645b8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb7c6989-28bc-4795-adf6-ffc6a815199f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8505989b-f1a5-4510-a178-a3a40dae024b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c010a1-4962-4336-8a1a-819d6fc2d279"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2db7d705-6d99-4d5a-8012-b6de54c2a484",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2fa6728-f18b-43f4-a0d6-c7c258b0a4e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f66278a-fa5b-442a-b154-ee472de51812",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49ceb9b0-af46-46e1-80b1-b2a3f5275141"
            }
          }
        ]
      },
      {
        "id": "34fc4735-0855-44d0-a503-0889727d0a29",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c88d7352-2a13-4229-bb84-48a3480350e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cccb6fe-413d-470c-8631-6482a2416e32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "945e537d-1637-4d7c-a7e0-46d9cc21df17",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a75e56-88f8-434c-afa9-aa78b6404cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bf6bea-b2f5-4122-a7e6-960dc4a5fe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642df21c-0a40-48f5-b3d0-c95c42bb3621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a955bcb4-2a42-4c08-b382-aa727491ecd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4465f13-44b5-402f-9ddb-3afa5f9ae488",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302328d6-ddd1-4204-a367-6517ae15d661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7be2eb-9b78-4090-b560-bcc9aa6d5c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea12a8b-a783-4219-9bf3-54aef20c7f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c35266-2d91-4b2b-a2ef-612426e0def9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cc88c5-64da-4485-bec1-6bff22676025",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6f44b1-0a3e-4b13-af25-40d231a3fe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848eb299-335d-4af2-ada1-af522ad64780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b7b6ca-9da3-4075-98d9-2d4d9ab5637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d22696-1ca0-457a-bb7e-abf4a46b2470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af74745-48f7-48f7-969f-daa24016210c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5b71d0-8829-47cd-ab8e-028b5ddd7075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214555ce-9b58-4c9d-a7d6-9248c8814d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abc31ea-e47e-4833-a92d-6d06db8b98b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08731d33-2443-4ca3-b374-46f311d2ce60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5a4abf-26e0-40d8-b165-298ced57b339",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d18d4ef-11ce-4fb8-9cd3-07a10483b400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cb57f9-477f-4134-98bb-5477c10c7312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca716dfb-462c-4e49-835f-75afb539dc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df8645a-14b6-4c3d-bba9-91f5164808d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baab1c1-38d6-4a0b-96f6-b240494a2744",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2da2713-c27b-4bfa-ae37-dd5b27ab1ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103c848e-6f97-490d-a1a6-21336686f25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d1f09a-910d-4ff0-9ef9-a6830fec54ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a487f402-7342-4f14-91e4-ac0ecfc2aa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419a61d0-13e5-4aee-a4a9-e67625300e7a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337d3f0f-118f-4cb6-ad35-970b77e0d0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbce5787-20dc-413a-bfca-da160f00294e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e1042d-eabd-4b0b-a8fa-c7537ed3641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "969c9be5-17db-476d-b6e8-f60c427ac541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc12c92-e17d-4cb1-be77-09dd4130497f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeb290a-a515-4d47-baf7-2ac261acd44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a34b66-a44b-4144-a092-c01d38ff58f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6003a5-211b-4188-aac5-2a5dcccde551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b703183-61c0-492a-8fd5-a1a9a81effc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca53fc23-3d44-4021-af71-14eedca1a50c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a183c9-112f-4501-82ee-aeda1dbd82a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c08bfc-18af-4f13-9903-1512b57ed002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f3fef2-eda9-4f55-ba66-b45ef20b4cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "612ebbef-8f01-40cd-b342-dc2a463b5c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d48524-13a3-4794-8f76-56a3a15603cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f142303c-1c7b-4067-8552-a2580dd75ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bf1035-a33f-49c5-b432-40311680a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2cf48d-9989-40cd-af63-c239dc3922c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "832a75ed-cf4d-443c-82b2-6e8473104938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef162b4a-c08f-4041-8252-660360342b19",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9999ae-ecc8-4a32-9dd6-0ee57e5be037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a781e527-37a9-490c-9396-2efb0d503ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5037965-1cd2-4604-9370-415fe029598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d40d61ea-9dc6-44c0-ac8f-4ddd33a7bda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15168cac-0e68-4b7e-9a81-a570f2fe45c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f7529-f3c8-4f54-af5a-07052b9ae96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c633c06c-8f27-4848-9b31-2df4cbf46848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fd981a-6c2f-4e0e-bef1-b955133f6536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ce3a4f-5d98-4b1f-98d5-94cd51dd06fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03bf7a9-e4c1-4b78-b609-4bde2059bd68",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c941231-40f6-4871-9c75-c988edf768a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4b040d-9af8-4dbf-b47f-baa624a88d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d666ce35-71d0-4519-b9c3-0b8e35fa5759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b54a22a-dd9e-4d25-b1ff-43978e2c007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdff3ec2-9b33-4196-827c-f5da7ca381b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af926566-0458-4e97-a348-99f98e126234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477fa8ab-7b95-4eca-b169-fe305790715b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2756dba-3415-447e-bd24-3b7c375787c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f19316-3b1d-46e4-944a-d06afd9899a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382bdcd5-81a2-43a1-9775-585f25d92a0b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68961701-f51d-4142-97bd-56e8718b04ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2a38dc-f355-4d2e-a5fe-829b83fafb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffba25ac-a18f-4d9b-bbe7-3671d3eeeed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "546d276b-c6c4-475c-8559-b5a629be55eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c2f5db-4add-47b7-b30b-fb92fc5e0886",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7bda65-60c5-490a-9786-d7928ea5835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6636eb1-e1c5-49b4-9434-908b3a17f712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ed4c08-5aeb-4843-8fca-e4a5542ad775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef15c285-2e80-4796-a9a3-79556463c778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c918d952-3182-4d3c-90fa-6fc80a967b5f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9408f7-311d-498d-9bd9-ff24d1526c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff2e945-c40d-4cf9-9a20-7f3f24dac72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec855d34-24bc-4eb9-a1b4-b0f46fd43fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf174ee0-64d3-4b1a-a513-78cd0ed85be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea0bb01-5c45-41a0-ace0-3118d636b253",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a8fe7-6521-4a4e-8da8-d9e138b7ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69354ea-e6ed-439e-85c0-3b78d2e44520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdef514-cf75-4acf-8598-c9eb2c0573a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dad4eb-c7b1-48ca-87c4-cfb9b98139b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c23bf5-99e9-4bfb-803b-c85b3635f83d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0622ca6-6882-4762-bb1d-68178546f577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ed79ff-c3f3-4255-942d-2eb74c1b4114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca3c77-c2d6-4dd1-9f27-ec739b452e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c5f58d-48fd-466a-88d3-379ea803539d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be529b0a-848d-41ab-9050-534d0dd7db67",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd694189-6c29-43aa-8c4d-ca2e7cbf6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bb9777-2fb2-468d-be30-e29a823037da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc603093-93e1-44d4-afa4-7de0bf830777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "920b8f8d-d2b8-486b-aae6-8328260f142a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae605fc1-684c-4575-97f9-5d37a8a480df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1b317c-6b39-4f12-8df4-89ceb6973c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d1e19d-5865-4ab2-9638-57cc2f318f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144bf69a-7b3f-4468-a6c7-6506de960133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1900f1c1-c42d-4a99-a58a-1ef49ae75bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275b1fe6-92d8-42d2-a172-93bf9e3824c2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa563be1-43bf-42e9-8ed7-4e7e7bd6e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3296fc2-9bfe-4adb-804b-1979e056b626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60927685-d83c-43a9-93a6-75b19a3b48a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf2018d-02be-487e-96bd-0a28dc7b4daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c948fbe-bdd9-4940-a618-c7cc06c07cb3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74379c4b-1a7a-405e-afd2-015d3dcf7ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17070b71-d6a9-4fbf-94a9-364bf4666b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f482c49d-ef99-4a61-8ae7-eb8387801570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05416c7-a329-4028-92af-591ab8e3e543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08ad59f-fd36-4ea4-9da2-39bf8b8c6712",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9765e7-3f7d-4972-bc09-c945d9c1511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cbe7d7-02d0-4228-b98f-4973765bccb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d851f2-caf7-4efe-9832-ce70905cb6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea0736f-eb69-40f3-b159-3c8b44862595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b732b94b-190f-4213-998e-c5f4c516d1be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0818929a-2180-4f48-95d4-c9845c44a560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a80476-d476-4775-a06b-6feaa1e1b124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d08d052-eb55-4f45-8e60-6a31ed9eb17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae42284-0be5-4054-be62-e3e01bac9aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0c9d20-5b39-42fd-b806-3df6a1397d9f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bfd300-edb0-4dd5-96f6-719affa6ba8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1f756a-bb67-4a4a-b4ab-ca683630803b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c504c-39b6-4462-83f0-fa02c8ecaaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70e3595-bfaf-4e57-9550-efed51a1678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14189bb-d847-4e0e-8de6-20b8ab138879",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9615f0b5-cbc5-495e-89df-5bb9031fdbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a979255-bfa1-45f6-ae0e-9b73cf41f3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0b27c-802b-4548-96cc-1d25eef1518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9696a15c-3a70-45a3-8677-8424dfaddf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ad5847-8a41-4690-9ecb-42ce7c1b8809",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b38e6f-fce4-43d7-b005-14e7380fd97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d6bbfa-9b58-497d-9134-9ea09def708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae01105a-34f1-4eef-b192-2390e17ee92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acd188f1-b76a-483a-a3a3-44e7236ffc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc02ffc2-7fb3-44df-95ed-dd54b3e57300",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07767542-d897-43b6-b37b-e83d4c1fa9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e848c928-6cc6-4fb9-b8e4-3d3d43b91f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e781bbfa-3814-46f2-a144-12d603af93f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69c661e-86a9-4f50-8ecb-078de5d7d3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ab2eda-fc0a-40e5-b529-a10dce260eac",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9d6aa1-0bf6-4c5d-9554-e0718312a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4656b8-1c8f-477b-ad15-e93adaa1d73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56448f89-b87b-4a69-8a46-2a62619920c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe38c63-575d-4aa8-bf8c-a8eece24dd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffd868f-1b96-44dd-9465-f36f1a901166",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ae579c-1684-46db-8814-09f0b9e33fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254de7bb-cdc4-480d-9b82-2092dd6d7830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c307cd1e-dd10-44bd-a924-9b0310ee0c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fac61d2-489c-4dc0-a641-f385cde063da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8c88ea-64a4-4d14-ab0a-4a74126d841e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d2f10d-6803-424a-b2be-2ad096e01294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac4e7bc-9c4f-4837-8869-29e64ecf7d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae3e305-85f9-4a70-9575-4e1365ef11d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8e20eb-7098-4c36-87ea-10761797ac72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2bfb2d-870a-4c41-be20-02e286eda36a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf7ab6c-c36f-42c5-93e9-fb34f369c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f39fd5e-9994-4678-99aa-6f1ba2ede3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a23076f-c185-44d0-8e1f-52fbbc93a605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d815bd29-e51a-43a5-8324-ec971df2f87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202c186f-88f5-40f7-9abc-c73eb77f6f2f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa97bb37-bc6d-4f2f-b446-105233bfe4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213cb00d-3f34-4a5e-9e4a-2c72d4451562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c982759b-f18a-4b19-a78d-b7ba4ad1151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4360437-e883-484d-b470-2fae1b174887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6acc6b-8b81-4abc-8816-3e0bdeaabd7e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc96803-8d06-41b5-a9db-b4d9edfbbb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd5a3e7-b154-4cb2-accb-82b0c81d4406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffe909b-d5fc-4bb0-b8c0-2d125784cb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b3e5a5-97ca-404c-9830-df041acd17a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956e854b-dc59-46e3-9bf4-b75a1fe4c202",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1b0811-78e3-4114-b695-3aaa7ba0be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a609b6b8-9873-4753-a9b6-da2dd426fa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aa3eaf-e742-413c-9617-a2198aef067c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2a934b-0429-40c9-aac1-eee6baeb6ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75167e48-3706-4cec-bbc9-09dbc0525b07",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559ac5a9-533b-4694-bde9-f8218ba3d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1161cf73-c651-4acd-8a24-ad39ca3292a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd45e1d-bf9c-4c0b-bda4-5aa3ec9ccbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "340abebb-a746-48c4-b0b0-f4bb3b49c1af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "222014fd-18e9-4828-bb24-640a8a387e43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eda2c255-e472-43c1-a98d-48c82e25a457",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df7ea53-5b78-4fe3-8891-f412acc5e6e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "758cbf64-0e5b-4527-9760-128d7acefbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a94adb9-3859-4fe5-8a56-9f0f456c3b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06e7d55a-31b3-4393-b0df-75cf268ba834"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca2397f2-8587-4a84-a774-df6324ecb978",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff74fc61-2fe5-4784-80ff-56c30ac1755e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd8390a9-26c1-4164-99fd-114ba743423c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49c652c0-65b4-4a38-b782-841cce716fb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96adc8a4-d857-4df1-902c-294f113bfed3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0eded455-a9a3-4d0a-a259-bb0ff0596c3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd1a1263-c40f-4909-9f16-3c63e34d4da8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f766d1e-46fb-4459-8a4f-23e5cc8921fb"
            }
          }
        ]
      },
      {
        "id": "996ea185-be6c-4027-987e-3e47c67729df",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "45e78a73-27de-42c9-8ef6-5f9b7c2e059a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f00e30d9-2dcd-4692-bd74-296d4d6c8abe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4306b79-46fa-4d99-b940-eec06c29f5e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a71de6b-c13e-4194-a3ee-19bfb4af5d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71196922-6e9a-463c-8c15-bfa8964b7915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbb6e4a-938f-447e-8da0-e3cc9aa0d451",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25c13e7-ebdf-43c6-9def-eb7d22e66327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d895d6-fad2-46a6-8e24-19b7f672ea18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06239c19-a00d-42c7-8f21-e37684e282bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f88b1-07e0-41f6-9881-29d14af9a0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d15f5d-0788-4ea2-ba65-15209ec7bcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c15daf-01d1-442a-82f1-5a173e49ef66",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf1d05b-a041-4f1f-8124-2ffb6542fdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b4d9a3-370b-4e98-9643-c2e95624c6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec7d2ba-2e5f-46c4-a0be-1d566462eb58",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f66ebf-b123-43d4-8b1e-c61802eadfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfba9c6-2cfe-4f2e-96f8-043f01d270df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d18e1c8-1f58-4b43-8cf4-eecf23bcf83e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7149e221-e44f-4201-bee2-437afa1c7e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ed54c9-6372-434e-998e-28ead31ee631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8009bb-551c-4d26-b8da-c4784173602a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1315e8ce-741f-422b-bf80-2b05990db19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f89639-3195-42f9-940d-d75678576a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec83e38-668e-4575-8513-e5237e52291d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67bac22-993e-4999-8c06-b8bfdaf33189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd1c00-3022-45ad-90bb-79915b0d8737",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66163100-705e-4a37-92af-af0eeb8bdb3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5d1c7f-68c7-47bb-950b-ff9231d0b9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be47fdc-c4d4-4d26-bfb3-7aa8ad2f82b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdd6bf0-7bd5-4239-be78-e5e85d8b54fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d5c879-75d0-447d-9eb4-6aa1da27b347",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd83901-4e5d-409a-a96b-a20acf1247ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf76fc1-ffba-4b4b-81dd-1a98bdfeebc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a16d6ed-e920-4a9f-bf31-e9d1ee5ccf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cec13f3-5959-43f4-942d-392f2cb0c784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65083f3c-28a7-42b5-8b96-5b38e540b65a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffa7f2c-1f99-43c1-a18f-5a625fbbed51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de19c852-74f9-453d-9237-38271f24b32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e290e04d-94c2-4993-b2fe-3fba7599ebb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c726843d-0992-4856-b668-1d1f1c306749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd26a172-254d-4f26-a608-f3f7ac74193b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b981ddc-e42f-40f3-9cf6-6218989415c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8afb9a-02b3-48a9-b4ad-0cc98a2928d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e161ed-4537-4c7e-8036-373dc4edbf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7769cd-6c4c-4a2d-bad3-1d4563752149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947152c9-daef-43a2-84e9-b116a431595f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf33c069-18ba-4ab1-a106-552de281a2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411e277b-6d13-4501-968d-976c8ea1f6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfb533f-3915-4ae4-a007-dafcd0a78614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86ff91a-3391-4e83-9e84-dadb79622e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1738868-2fec-4978-8f8e-a67259b8f7c6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50d5bf6-8a54-4de1-a1cb-017a0eafea82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac11f04e-7adf-4bf8-b61d-c61afa307701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dc541b-d80b-462a-9b5e-551c3a070303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654673f7-fe4e-47a4-a642-e2ac75e71fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b68b4f-3be1-4005-ba4f-b5c4fc4909ee",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f17116-84d9-435e-88e2-cda609d17dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b47e8aa-f349-4c37-9065-d69688d756a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b72efd-f37e-4ee8-b8fd-29a808b29562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bb6640-08ae-4c40-b769-9e1d9e4848de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555a8497-45d5-4318-9611-a11ec04c95f6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac21ea6-e6ac-47da-9546-07a0a9320c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b8180f-7311-43a1-aa88-340c1cf17984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6ab5d8-9835-49d6-9971-df2ae9d04bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce41d782-4307-408a-add1-cf4aa9382050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84af5f4d-0e20-47e7-af91-557252976372",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17daf443-2dad-4cee-9389-8412e69602a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ea2e2f-b444-4275-8979-615152d8883e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443b29a3-9fd0-4108-a2f2-c125254495d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac41a88-5d81-4f33-8b52-483ad4c62cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9399a04-a8c6-48fe-8f81-0ce4b594ff2e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6357e07-551b-4c99-94c2-4e2e5357fa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dd59ee-a3a8-48c0-be8f-47f92593180d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9897c78-5f6e-48ae-94ac-b8bb24bbf15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c37b90-adb4-4e9b-a119-8bd5f74edc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344c078a-a0d1-4e40-8623-09b9fb71311b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3529e1-0616-4c7e-b5a6-76e6fe3d3e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1013e789-6716-4bad-b95a-7381c3f5dca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81332f82-9ab3-469b-b0a0-c980be6a5f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c122beeb-42e9-411e-8c39-93b2e798e24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182a8b8f-dc92-4ae7-b6f9-c24bd3301d41",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7b0e62-4717-412f-b9ad-4cc43adf1e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89a21cc-a26d-4be8-b6e1-4ea367add4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f1c1b3-9b11-4457-8e6c-39569ccd7e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fac031-03a9-4695-be6a-9a6b1780437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b809ca33-3835-4ec3-aca8-eab4485b6e3e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e7ec56-a6aa-46c2-943d-189c75dd29d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35b8968-2310-49a9-9093-fb02f242b3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde6b418-5744-4053-ad15-d56967dcd020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a625a0d0-5ad0-42e9-821b-9f96c655256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05568a65-5af7-4318-ad9b-9d8896f56348",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fc53ec-67f7-4f9e-9052-1ce6206523c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c351524-3ee9-49e4-b4ea-3fcaf093b70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140026b3-aa4a-4026-8f04-6af834ec766c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce68f9a-408f-4fe3-b0dd-c56649ae155c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b192b0-0cdd-40e3-81a0-fd937f525596",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edff5315-6ec0-4a13-9e13-eb73662e9163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6c0fa5-ade4-4747-9ddd-1185f8123a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3a8325-1b6f-4d2b-bf17-8a97791aa3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d06ebf-2c54-4bfb-afb1-be75b0de7241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b786ea-9d7d-4f69-ae32-3c9bd79f53f1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66f80d7-5f96-4dd2-96f9-61584b91f0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9c64e8-11a7-4daf-93fe-095874820c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8285e4bb-84c6-448f-82a5-3bc6afa86b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf920ae0-8b68-44ae-be71-394b850508ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895dbf9f-1567-484a-a76d-a877a2194d51",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a93f43d-ec71-4b6f-bbef-0bad83718738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b43c541-cc64-4023-bc57-6d7e12d12e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e467095-c3c2-4e58-9bef-bb9223d22bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fd6403-f80e-40cf-b1c7-048daae47ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500671bb-3ca5-47e8-8257-eac964aa3a71",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d5f6e6-51cf-4937-83e3-a5cf70590c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6694c7a0-8e7e-4135-a3b4-1c6cde35fd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7d231d-361a-4ba8-8f50-e06c0cbdd31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082c078d-3418-47ed-9ad7-4b2a02e03dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a37cda-1af0-43de-aa56-7b4f0f5b01cb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68514d5-488f-4f89-9e0b-f63574598fc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16206b1-ac8b-4d8c-bd74-739126edb9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faafc0d-6e35-41cc-90e3-0bf2d6c7224b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29624fc4-2c97-406b-808e-11053072a727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d52307-dd03-43e0-b280-4a4ce246deef",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1904bd-0fde-4d10-b14c-68fa050f472c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7e6e5d-2c9d-4c2f-af20-d45d5bc7c10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e97759-045b-47e4-84db-f5ae07cd74df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1448ef37-6cd6-498e-b4a6-76333faab59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f471d1a-a91c-4b29-aa62-63cb74374ac1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bdf107-c6b1-4b48-ba4f-5fc785bcf205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d375a28-40ea-4d14-adfd-202d9b1fb23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90ad69e-ae74-4aa8-9bda-866567f7b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee5d007-127f-47ee-87ef-469bc9304c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5dfda6-762d-4f15-a719-6f84ae003b19",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461f1ac1-e47d-4ed8-a256-6e1b409c89ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f00c589-81e0-4149-a752-fe13d965f481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb4fe9c-473b-424a-b182-ca8615ab55a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030fef30-aab3-490d-ad92-51d98e2a7aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a9c540-0488-47a8-ba8a-f525a3931bff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952ef61c-ed51-4a62-bc25-0e37d2ef4f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38c8949-f791-4336-afc8-9a18645cdf89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf295145-5a9c-4227-ba5e-ba2edaa26df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46153db-b85c-413b-876d-082884544886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0b1f4e-77b4-4ece-9ae0-a6d236f41193",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4311730-cd91-48f6-97e7-1c226210d3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2897247b-b8d4-4e2c-b1de-8a64aab02e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffafbc93-305a-402b-b416-42bcbdd3fca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4319f14-c15d-42e8-b4fc-1c78f207b21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d15c1a-d5bd-4a77-95bd-5e9ede1ca2b9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914d0d64-6bdb-4407-bb09-379cfe15b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f686f10b-59a0-4248-8b5b-0da845c96d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc73711-963b-4032-927a-4a50e63ac840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45def154-e03c-45fb-9ea7-d478ac5d512c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbddd818-937a-44f2-9f11-a69a2cb00840",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabb60de-451e-41c8-91de-fbb51033df8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c84d494-1542-4a46-8ecb-762668b8ebfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc32342-d3a0-4ae4-ba11-20eb0cf4d1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f02b50a-7766-4164-80ec-86cc158b2ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3d97ee-ee79-4f65-b085-fad18fdc2daf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a937b7-e288-40cf-8697-7c4bb8d6aa58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d306010-c525-4574-87b0-0fc83a887efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db37749-9f67-4aee-9ffd-c51c2bd86200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8cca93-a71f-4157-ad07-3dafecb16a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524cef71-823e-4b69-9f56-a35fd1c3b958",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a186f2f-ec46-4ef7-937d-71bb764912f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4f1dce-fe06-4894-bd65-7db9406d3330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5055b192-de33-4646-a1ac-db207f79da6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21cfeab-323e-46ac-933b-c8e190be3911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a8368b-b8ed-45a9-8dbd-9ce08fe42415",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8050fe08-1916-4a7b-9dd5-2974f58ad4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad13d37c-1d30-4f40-8c5d-a216054f12a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000635ea-2802-49eb-aae2-06fdee7244a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c16e53e-d482-4d4f-accd-2565a4fdde1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d383958-e7fb-4615-9565-da2fbb6b9738",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f4ced2-166a-4b30-a7e9-25666aac256c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533c53e6-2fcf-4161-bf2a-085bc9794c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bbbbc6-76d8-4da8-9923-d491e43c5de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee72fc8-e8ba-4ac6-89c1-959046ef4cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ffecb2-79c7-463f-9e0f-8fc4bc449c54",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc6d989-3f48-4c20-befb-b09aab66a1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf59adea-915b-4b61-a400-972fb93ccd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a8d056-6825-47b0-bcd3-c76d130264ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425fab22-7589-48ef-84f4-1adbdf601c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1410fa89-40a6-467c-b130-b3dbe4cf036c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe00cbf9-8481-49db-b958-872be419fceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad1aa2f-27ff-48b1-aaa8-3bf2da2eb22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2acbec-113e-4f1f-9419-cc8c43b0f86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb04ff2-41f4-4ed9-a410-7792ea39be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee35eb5e-fe21-4dd4-bbc7-822357ef802f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3df1be-c16d-4b3d-bdb0-1ea6c9bb332e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccade8c-1c86-4d45-a4ce-2e943a64d093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f578d4-6e14-42bf-b1ee-7febd0ab9e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc2cd5c-8653-4780-a07e-f7eafa99dc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de429f2b-62a0-4529-ac19-830b8aa5e2cc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530de181-be6b-4103-9392-1f947933ae1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7985fa-0d0d-4dc0-abb6-bc4a6e5498b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c96fab3-5fbe-441e-887d-7d04a967dfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01d020b-0833-4456-9a04-60a3d3766b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6416c925-96d6-4e3e-8e25-9b0dbe540798",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f812db-9e11-41fe-b725-de7c922417b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7207a279-4cb6-4b1e-874c-12b1eb6e72fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaa1f79-08af-47b9-b905-dd7d55e1c04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e70c1d5-f8b3-4f60-8b2f-2e695de86a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e941e1-a72b-4c17-ae3c-d228f7582371",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df39f61-9961-4ab5-b15f-fa69a0cf10ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39aeebc0-85b4-4a08-9333-96d2460be974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bbf8eb-a795-4185-b580-6d1d23cdb7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d70266c-8772-45a0-bc3b-dee352e8c1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda46713-7c42-4b25-a40a-ca20516230aa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efdeaeb-0684-4248-9f12-f8221da9dab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bd2e69-e9ea-42a8-8c38-f76744d1c123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8bea49-3563-4497-8efd-ded2bb476320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad773ca0-d88d-449a-b69f-f19e7fa56a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0c25db-dc26-4df4-adff-be65fe53caa3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8430e-331a-4e73-a463-8033a7c496b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73502849-7eb7-4dc0-90c5-27f12b3fdc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7bbd15-66f0-47b9-a027-2e81ba26c27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339dc5f4-460d-4465-aea0-c6b961d44f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ca974b-437e-47d4-a65c-d84f78cc5401",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af1cc83-dfc7-473c-aa7d-763039c37d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953ff44c-1b4d-42f8-9a59-fa7a1a264cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bdc35b-62ac-4608-8028-e7cb9d84aae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a23fce-1fe1-4316-a172-fe9ea99d226b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771f80f6-ebdc-4139-92d7-a47afc164834",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cebbf7c-6d26-4ea0-8a3f-7faf1db54222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb8a3f0-3846-4f34-8b5a-038e16d9b027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd1d3cf-b215-4bef-a8af-8be6639d4f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213a2170-1908-4761-901c-c2b7216814ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3155297-2c89-4931-a252-efca37555acd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f687eef-a32d-4cc2-8f6b-f23deccdd063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5231dd-bac4-4c08-a5cf-aa974f6a76b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b5ab33-88d3-40a8-84fa-81dfd60a46ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4d4252-6ddc-44e6-acad-6ac1c722890f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895ea71-59f1-4916-88a3-689223be85e8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c480aff5-7173-42cb-b29e-2687849d6310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3976cc4a-4ffc-45b9-b904-cb5c5a563332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b4a406-4c70-4962-ad54-4ff476fbf34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a20f972-8a8d-45f2-bd4a-83c8aabd06fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95aef092-919d-4780-bfa7-b7eb7b8f7f56",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b2a338-837e-4ba7-b903-ef5d317975cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a30bb8-78e5-43fc-95f6-53c45edb00ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ff5b4a-5895-4ed4-9185-9bd7af026821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb9d2fc-c3ee-40e0-add3-903be8924922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80e2a40-c926-499b-bc90-66d2c43d7fae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcd16e2-beab-4be4-9557-7e08cc375c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e01017-f0fb-4963-b8a4-8409c288f5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856841f2-ecf2-4566-b812-d71ad9c386ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca26442a-a79a-4ce3-9295-7590bf7980af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa5b10c-2ecf-4be5-83e3-f54153a838a8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099f17bc-e2f7-484a-bbb1-1b9c0a61f7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8482bc3-9b20-4c7c-8bfa-89463aec6fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dc1c89-aacb-4ce3-a586-3bad4012389d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9f1ad5-8bac-4ff0-a4c8-f6079c90dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e76e85-ee3c-483e-aac6-c0200a549a82",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce102a1c-fac1-4fb6-8295-75617446744c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fe4721-b4b1-4732-bde3-cc2ea5476cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1591f998-44fd-439d-84bf-778d326ce1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b36017-4b4b-4316-918c-d0d84ca2e852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13208406-45b9-417b-ad6a-5ea921be3e7d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df68998b-9357-4156-ad39-bc40ff98cb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e22f2e5-dcef-4be8-8321-7b3f453f5349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882f8757-2f14-47f1-a868-7f345b39530c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f46c520-8b27-473a-9887-385bff6c6550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edce84f-289c-4147-b674-974c6402ed59",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2598f30b-3ae8-4d21-948a-b0b3c193afbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3589fe-d61a-40bc-8529-a61fe8ac2866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46856a3c-2775-4c69-a6b4-443de5509b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f732cf6-1bf7-43a2-a048-f6b4b62db04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1fff6a-0ed7-4464-a0f6-c9ed98b9d827",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873c0e5b-0a09-4f8b-b8e8-000bc37498d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd95cd6-8fa6-432b-b6ce-1c7ef3f2da48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccf51cb-b230-4f07-b785-b984f12b0152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94de3c04-0245-48d1-bdee-e1160e109909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec4f6f5-6c0f-448a-a873-6d617c63d22c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6096008d-cb8f-4124-b15a-7a50b3eef966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9993a22e-7fe1-4dcd-89a8-34b72d4a5345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6844618e-8cdc-4c84-ac03-10112db3b8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe25372-0b91-4ba6-8dcf-a88a36010b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7cb314-a3a9-4f30-acc0-69c2dabfaa45",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44eaa3cb-482c-4b85-a7e2-1d8dc33b3524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86dc78a-e8f9-4960-8d7c-62c7fe537cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a30c9-ea8c-40f7-bad4-e32ba37bb52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7564a5b7-684c-4c67-b55f-9a894f3a7b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4245d9db-07f6-4642-b5a3-718be0270e31",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e4dca6-b25f-49bc-b8a8-77af54f6604c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200dfd4b-d52e-4e60-ada9-3d218305db96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b9e4a-9040-4d5b-b748-36d1da9ee268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034dfad6-b41e-4255-bd03-430f2a08089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d524bc-b72a-4e2e-b793-e163080c1666",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33525169-1d51-42f2-8bea-8fc47d5b0d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53b5261-4786-4061-bda6-6847c471158f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79356aaf-b1b2-437d-8a67-dc955687e260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ea99c6-027c-4cf8-a773-77b9f312893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e6e8b-1713-4e72-90a5-5763c4b63b60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0025e95-b4fc-44d8-b786-58db0bb5e485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4dcbbf-e113-4685-b806-dab41e62d087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf21092-3940-427f-aa6e-213293e9d499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ec8f7d-f63c-4f91-964c-cb510c0a581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eab354-1604-4f07-865b-6b718ef66377",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfcd72a-6541-41e1-bfa6-b26a375dc6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fcdfee-e32a-4c00-9e15-90ccdfee901a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65abeeb-603f-4319-a33a-242982f13edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f879aa21-2795-44b5-bccf-ee306a33ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d477690e-e87a-4ce5-8460-1261d3357281",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fcb9e3-58e2-4d88-a680-444281ec4e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1247ab9e-8b61-4e5f-9da8-af331bb379cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b532207-faa0-405f-9e68-91aeda11adc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f80f10-d2b2-4ab3-a7aa-678343dca0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2641236-542d-42d0-bcad-6acb957f24a2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5dde82-966d-42a9-b8f8-bd1853d67ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ca7b69-d5de-40e4-8ac8-ae7577608493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7188e310-89f4-4960-8d2e-269f51813de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165e1ec7-9c2c-47a1-a82f-714c1867b2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f3c8d4-54a8-4484-80b1-c8850a7c45ec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8250fc80-e7f4-4275-abca-af80a58806ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b211b216-e8c2-4347-9be1-3f36153fa1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880f8c02-e376-4a1e-9002-4ebae1df7c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c75e7a-f9e9-459c-808e-dffd6732b0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506ec5f-6e5d-436a-aadd-8a599344e7d7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfeb010-5cc8-4523-8c87-500d939bc119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d7c151-c566-408f-ae52-d361490cd87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b710a-c5c7-4ff8-b4d8-93a5c25048d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4d599c-9589-487d-b266-f73ae7c63dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070c2192-4421-40ae-b781-b99dfb270883",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893d58fc-59a5-4b33-8fee-66ec6946bda1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0336068-a781-4db3-944c-6e8e7c3e78d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55f38de-bdad-44cf-9b98-bc9b0ba043de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148eb02a-274d-444c-ae2e-f69cefa20695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6398ee70-6ab0-4bf9-9f63-cb8e4f90d057",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecca229-217e-4185-933f-ad8cc22a0889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ceba1f0-8886-4b48-997d-d7c8179a38b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae33e234-c532-4543-bf60-b4d541a954a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92101f08-f230-4ef0-817b-62f7bc5b1b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caa84b3-b7d9-4bd4-97ee-43abdc605abe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561a743e-0d9a-4b04-9b13-affed8158835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485a2658-ec1e-4965-8568-d237480f566d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a4811f-6665-4472-a215-f4a7d61c21a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7802a5c0-3d6c-4947-9f61-8292d8892d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169695fc-3a6d-48cc-ba84-a062c867e8a1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e491e1e7-9fe3-4cc1-a5ed-4b5f0477f46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36db3a74-2425-4fe7-a1b7-0f48cd0c4c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4265d-a373-4c1b-a5d0-92e84ba27a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde4f11b-cb81-4e7f-a34b-4d44c5b4ba3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef96bb4-8b55-47b5-ae69-09beda8a24da",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48be0d2e-02c7-4de2-b98a-7b66fc826b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84387be-9ffb-42e3-aae7-23d365319921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c6d77f-4700-42e9-92b3-13db93e81b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4eee77c-875c-4271-87c1-897c33941889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b70203-eeda-40ca-8f91-12efa4ed898b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63fb21-2a44-441c-9d58-ca07b45581f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a107708a-5279-4815-8466-4623b1e4558b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4a5d1c-a340-4d7e-b408-0d228256b949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b810af-9e4a-4d6e-97b7-69bc265c4656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c5edc-7d6c-4f68-aa0f-9e71d3575245",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd35ff1-75aa-4daa-a2ff-abf5cb5e97ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb356e1d-5d5c-43a4-b4a7-2465d2ac806d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8007a4-333a-47fb-9b71-fddd7b1d4241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e67873-20ca-4bf1-bc68-9cd49a748b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ffb3fc-f3cd-42f5-b9cd-9ce6ffd21ecf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51732592-d471-4b60-9250-a6d826f12be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74b6798-c31d-4c4f-916c-8efdd624250c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503c45c3-6498-4880-818f-adff4382bad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f990377-444f-410f-8b1f-085083fdc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76a9ef-1f21-4950-be76-00bc5d2acf08",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec1c1a4-b402-4b8a-80a1-ea9b321acba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc562be-7521-4c69-a166-b9bf75ee78ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73461a5-663c-4294-a0a2-e398ff5c5123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a430d66-60aa-4b42-b3c7-a395f7635af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72fe1ea-7d60-494d-aebe-ed1390ad6977",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e70a9-5723-4651-81c1-5f6fce923695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51a90a2-5129-49d2-924b-ba1bff583034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b0db6e-19c7-4988-b82d-fa62467581bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce8270c-5a30-470f-95f1-98248a446ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501c9a4d-267e-416f-9159-2d7c1a064589",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973ec379-deae-4fb5-8a02-b95dcb82f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46775bcd-bb23-4807-9d60-c6d2ee28395e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8021046-b9d4-4771-8731-50b8240cb555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555dc270-ac1b-4d20-9649-506fd78d4253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eafdc1-2293-4c3d-b903-330f9b1bd7fd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a998c9-6f12-45d6-8212-bf39d02d9093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289bf3ad-034d-479b-a785-82f913a840a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96045e9-82e2-48fa-9e3a-3ba2f643f95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b971fd9-f461-42a5-a489-6816bf1c76d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa96632-ac3e-411a-9dfc-5e7fcfd567b2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52639ff-5cc6-4029-be7c-0b6e7a5a93dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2226f1d7-4881-4b11-9ea3-a022acd1cae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7dcac7-dacb-4a6d-8171-45bbf99a1b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91150cd-dc66-4fe5-8d30-719cbce0d053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4a5be5-69e7-4124-bdef-3c6de4feb451",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a6920b-fc0d-4b10-b3df-1008b84d28f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7203454d-c28d-4136-bf91-e481eef6f5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb79690-9b69-479b-9903-07a918e78875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc40584-811b-4d71-a958-a863632985a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e96889-fd37-4859-a45e-0f59e649b084",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c4ce67-b8c6-4a3a-b1dc-f792d5674ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fd4a8f-125f-4df4-a643-9d09d13d9883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0335984f-084b-4f74-9ee3-beb31160215d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b42572-7970-4c83-bbb9-ab1d9996a373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3073bcbd-0e14-45ce-aef1-838337ab5d0c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ffdfa-f642-4c8d-a501-275e953141db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2740c74f-d582-4388-a09d-ba3f757e290c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e9b90-5147-47ba-8174-99e512d761f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aca72e5-2594-4c83-85e7-a337dbb76566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb1d909-bc9d-47b7-a4e1-a2ba6dfd11ed",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ee2a9f-3161-4ebe-9d02-998d3714fb07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfca7f8-376c-45cf-b7eb-7d10e57c06fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97bf833-5cf7-4f03-9e4e-e6a60b6f09c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6568092b-dce8-48a1-b9f4-6e76c12eada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b47d250-f4cf-4074-8afe-03bd4b52ef93",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554528f-1cae-44f5-8ad8-db1f35a32882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf628010-52df-4681-b22e-65e756e4d661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec0d52e-748f-45a9-b217-720a6402eac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e393f9-37de-4881-8b32-b95f1584d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9d4b78-2a9b-4bf1-a707-a72658341783",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54d51d-9672-4b7e-8515-32f3f97a7535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997a287e-a187-4777-a21f-83fd1a8fa0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce61767-afec-4a67-8447-bff060d37849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cbb05d-3900-4ea4-b724-57336126452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd96df77-11d6-4ce0-8e22-fe6aa40c7870",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a29d997-6100-4cc8-8ba0-b0f1e9d1924a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08985835-6402-4d1c-bc66-cf1336cfc403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f5be45-3250-4719-ab04-bfcc4dd91637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bfc2b7-b19d-4509-bd5f-af57c6cd3ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c9dede-5cb2-40ea-8083-debcf7488054",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bec121-3e42-411d-adcb-e19e072c9ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a54f34-53b0-4970-98cd-7c9cebd3719d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56134c20-4539-49f7-b9c1-78345d5fc683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb1138e-0867-403e-afa4-ad54a08ac09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821f8daf-e757-4a7e-9d77-abd0f649a5be",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17045b1b-69e0-4bfd-8b3e-0e4a29a6439b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd9b137-acdd-4280-b1c8-da9fd02d533c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f9a5a0-ed84-4b9b-af78-2299e8798879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10110fa-8172-419f-9af3-fc626b8f86cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a83c40a-5d48-4807-b835-4acdf1428eeb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5890a9f2-8758-4656-9352-95eb25de6410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca5ae63-0202-41aa-b25f-3d158580f131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5a9987-d6f2-410f-a16c-247a2b1e445b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87035a60-ab83-4776-a1be-cacd156ab83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709f7b05-f5c4-4b57-a62e-fd7a4348fa50",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31be55f-5bbf-4900-96fb-aab187161dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce46a38-7070-4cab-8493-9b00b55a17d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249e22d7-c703-4408-bb3c-4bbf08df1c3e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8fd9dc-0939-4ccf-a41c-f2bd6e4fc046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9f36b3-4f65-47f1-b8ae-9c8e8a5bf0c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3c5e9c-15e1-45b1-baf8-09d6d4a6b73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768e8dc1-21c2-43af-a9f1-84d4c59d9cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b05b07-9cf6-4e78-93fd-a223eb32e670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05cb636-fb00-4eaa-a23e-c6c3ced4ee9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41df5a13-9955-48da-b9f3-f23b82aabc35",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45787b-69d4-4dd2-8897-6b190b4fe857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0b3e4c-4d85-4657-af85-242dfe7dc936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a014051-b54b-4cfc-aa49-c5d8133369eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81109403-8c14-4e37-ad67-5fb27a848773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b8056d-4b2a-463c-8650-b4e17153f117",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16649d1-d708-4c0c-8cd9-50f765ed59ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3aa804-2e04-4fa3-8cc5-c347169b5598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2f507c-3be2-4121-ac81-3ab2210d5cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88cfc37-7b08-4bc5-9c3c-e038e0da2ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7e69f3-51a0-4eb9-b572-089f8cff92b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ffeb2c-a53e-4eb6-a5cd-6e4d75b45f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6fb8139-1c61-44f9-b49d-44a68cc91bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0165c3-2b3a-4025-a52e-0e39236c3bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3425605e-eb2f-4413-99b9-330c296b093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eda4f2-fac2-4cf2-8cf0-162325c3ff5b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debfde9a-59f8-4712-8cc7-890e99126a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcb38f0-c645-44f1-addb-bbdac4e35d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bbe774-dba4-436a-9ae1-d0316de5030e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f09fa99-da2f-49d3-996c-316088d151d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9a69e9-9e96-4cb8-b7dc-ca6a66218f31",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b5c848-a7e0-475c-9f58-0c08f1c474cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b00477f8-225b-4428-850b-949c9d9428f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf32ed3-7591-40ac-b051-4173d296fa61",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da03bac-2d52-4fa3-8814-358c9ed3b542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e64dfd-3a85-4969-b42b-b03373a1aa0d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e95bd5b-ea20-41ad-820e-29f5b408345f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53dd6e3f-fb3b-41c3-a837-324aea627392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395d54f0-17f7-42ac-a9b4-a40903b41c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3aa356-c8bf-4b75-92a9-0c3e52c78f96"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b875ef47-5a08-44ac-ac92-7325056e8e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5203b4be-4ded-4142-ad4e-6771b2b2d441"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ab9ae55-e8aa-48da-a198-6206e675b4c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dccc716-a2ed-4082-b42a-8e0cb1c5d722"
                    }
                  }
                ]
              },
              {
                "id": "44302d57-67ae-47c4-86d6-8c54e866088a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9491a8c-4442-4e46-aaf3-66730c715b8a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685fed69-77a3-4cac-a846-f7fd286a710f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a6a916d1-94e3-415e-91dc-d8c3d80ac771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfdacba-62c0-4e81-be03-03e1be4169c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b3e9a72-bb1e-4508-a6aa-622c20314d4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ff5ba81-b4e1-4b0a-b5fd-c36c88f90162",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6015525-a459-4c92-8820-f5e8b51d0595"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b87dd8-ec7e-4a7f-81eb-e74687a06498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca258381-7045-42d7-83f5-954df32c85ff"
                    }
                  }
                ]
              },
              {
                "id": "102d12d1-ce27-43a6-9cb5-98308eb8facf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "50735d97-0ac0-4e0f-9516-fea058f4d3d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab0a987-1784-4a5a-93c7-0384c5d072ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "381338c1-ab57-4766-a821-76bcd36a0b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3573f2-7ae2-4604-803b-0b01c774acc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f2dd85-8081-423b-aaa2-b0ada7560630"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b52c85e-9081-4953-9bdf-1d2afd0dd13d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bf094e0-af37-49de-9339-939430ffe1ec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8447eab-5274-4a6a-99bf-b9fd785a2e3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a51544fe-9387-40f2-ba50-a8b42419ca2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c55375c8-f96a-4792-b045-2ab8ff93a4ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a1d87fe-beba-435e-93fa-ee5624514d14"
                    }
                  }
                ]
              },
              {
                "id": "49f6abf3-37e2-471b-b5af-12f350c31c88",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c44b4fca-eb33-4c9b-8ae1-0240094c9836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0c77a18c-5eef-4f52-9784-0411b1839b6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "161839ef-16e8-4d20-a896-4e49165988bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df945311-62a2-42c2-984a-1040d5752404"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e57398bb-2295-46f4-a6bb-66f52bb0cbbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b0608eb-6e70-4eef-bbae-3d46a151cb8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "668ff4b2-99a9-4856-8dd2-1591756a89a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63352ef2-bdcb-4640-b1ed-386a64478e6f"
            }
          }
        ]
      },
      {
        "id": "91656f5a-8822-429f-84ba-9a89c54c1eaa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "92332d30-2caf-4740-915c-bd877fa26ae3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bea4d2bc-1fac-4346-8319-4d2f80614c9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e13b17e1-f611-4f3a-b1b9-29d110e75092",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d1df4b-3761-4d92-b35b-20300477007c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4eb8a62c-902d-47ab-bc9a-f32f29ceb67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4830838-c6ac-42d9-83bb-002ccba4c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b96333d3-705f-47e4-95f8-e30487729a8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "556e66b9-3b2c-4980-a3f3-e543c22fab5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61323c4e-9406-4915-98b5-45a84a4d1196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8a236f6-3c29-4534-a4b3-754dfd6d71a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "176b2cf7-c934-41b8-b1da-319cfdbec41e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eda4e2a6-a56d-4f9a-8c48-e7b89bef376b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1e1e051e-7550-4ecd-a909-a52ae185fc6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe14dbae-529a-4e79-afd7-6115220437da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad810ef0-6a38-4882-bbe2-9b6e324556d9"
            }
          }
        ]
      },
      {
        "id": "f663d03d-d72c-4194-afa8-7374587d7e47",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "48ef8920-8215-4ce4-905b-f47c2b07a763",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5df9e734-8e02-4618-96d5-9e645549224e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a631418b-bed7-4d22-92bc-37e842b0f377",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ca6cb7-3484-410d-8580-ed6ec0bef162",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae85a8b1-c320-45ed-b6be-d498de1f11f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fc3740-2951-4506-9c71-b6783bf3e955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e7803a6-18b7-4423-a950-f944b596e218"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6932ab2-1e46-4c36-b345-f8bda8e81495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c7f8a23-f571-4dce-b9da-5978ca1c3736"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bbe6e13-3799-4ce0-9248-494efa8ec13e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c70a52b5-0abe-4f33-b10e-4653490a9bc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88ab31c1-4cc7-4dab-bee0-0247d72b5d30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "961a25f4-72a3-4e4c-a2ed-02ca32330e5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002a92af-e893-4ec0-ba81-a363e0bf0e53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05f8d69b-8fb4-4a4c-a20b-9b26e82def20"
            }
          }
        ]
      },
      {
        "id": "97bae7a3-f80e-4a7d-8bd1-057e05602ecb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "19000aa7-b087-4bc6-8972-c5e52274fda5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4ce35c5-3318-4132-a3c9-2e128863478c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "361f52bc-d53e-44b3-8814-f2e78e469f3e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938dad78-3de5-4f59-820b-90ddfec6508a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2785a1c-00a3-47f8-a17e-5bbc301744fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c3c084-16f4-4a6b-b610-08d6e07e29da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3928860f-c6e7-4194-b7d9-7e9df5b78da0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fa5a864-78dd-4899-84ec-7b4a31ca3529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78863ae8-0557-41a6-b696-a2c3ab4c8b68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0102cc96-7957-4386-a38f-a09ce0d3ac40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "976c3d62-bc6e-4a0d-8948-153b8c24d985"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b602166-30d3-4318-b7c0-457aec33a224",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8bd3e5f5-3f28-484a-be00-7b4e5be6a6ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c2a9311-9d66-4087-b1d4-d9f88b8272d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b23cdcc4-5084-4e4c-88cb-28dee528a4ce"
            }
          }
        ]
      },
      {
        "id": "3899a41b-696d-4bbc-89ff-42cf2b8fb056",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b0967d4-7f50-4368-b8fc-a262efa054e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f41e7009-52c8-4ac9-9973-e82bcdc8d62f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bffce554-8565-4f52-8063-db61be67d6d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e3e6be9-2cad-481e-9c8f-855f286e2d85",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e020df69-5172-498c-acda-3d55bec4f6b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 219.90140845070417,
      "responseMin": 10,
      "responseMax": 7699,
      "responseSd": 749.1671602130453,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691282144341,
      "completed": 1691282218842
    },
    "executions": [
      {
        "id": "e625f8d5-4fcf-4b5e-80e9-244cf073fb11",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5b28e8b4-d836-4b6a-893e-71cc82d86066",
          "httpRequestId": "4c651e4d-70f8-45e0-a7a3-8459baad4a0e"
        },
        "item": {
          "id": "e625f8d5-4fcf-4b5e-80e9-244cf073fb11",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aa5fe100-6a58-4cac-a264-5dd77632b23a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "4fb63461-de98-48c1-b1df-ee5c98a9aa5d",
        "cursor": {
          "ref": "ff446725-e477-4b26-9a8f-b15b891c62d9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "175e4d77-4693-43bf-beeb-e7a617af16e7"
        },
        "item": {
          "id": "4fb63461-de98-48c1-b1df-ee5c98a9aa5d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76d31c2b-0610-4291-944d-28c38a340da2",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9ad02ae4-0314-46fb-b043-c169cf22c7e3",
        "cursor": {
          "ref": "d2ef8d04-cddc-4b0f-9cb1-b95dd3820d16",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "32a0d430-49ca-4fb0-8f65-67758953c2d6"
        },
        "item": {
          "id": "9ad02ae4-0314-46fb-b043-c169cf22c7e3",
          "name": "did_json"
        },
        "response": {
          "id": "eb458dac-5f6e-4e33-88d8-4fad31da1396",
          "status": "OK",
          "code": 200,
          "responseTime": 338,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cf9db6-02c5-41c6-8270-4f0fa100424a",
        "cursor": {
          "ref": "24e9958e-975d-4126-acfa-8d17d595d06f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81528575-965f-4813-971e-bb443a49a7bf"
        },
        "item": {
          "id": "f2cf9db6-02c5-41c6-8270-4f0fa100424a",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc72f2a4-5176-494d-b6fa-9d60f6540c76",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1081,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cf9db6-02c5-41c6-8270-4f0fa100424a",
        "cursor": {
          "ref": "24e9958e-975d-4126-acfa-8d17d595d06f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81528575-965f-4813-971e-bb443a49a7bf"
        },
        "item": {
          "id": "f2cf9db6-02c5-41c6-8270-4f0fa100424a",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc72f2a4-5176-494d-b6fa-9d60f6540c76",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1081,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37e1a35-4db4-44d4-ac0f-ffabb1e704be",
        "cursor": {
          "ref": "1434dbad-9859-4da7-ae07-413a28f4f080",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "260eea92-5f58-430c-8f23-03c7e1c045d1"
        },
        "item": {
          "id": "e37e1a35-4db4-44d4-ac0f-ffabb1e704be",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "046c7d8e-831e-4d93-bcee-3d737a6ce3b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0923bd37-cd8d-4cdd-974f-28eb601fa84d",
        "cursor": {
          "ref": "3bea8366-623d-4d55-8889-7a0bb317678e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b379d531-f02d-4577-8a89-399f16d123b8"
        },
        "item": {
          "id": "0923bd37-cd8d-4cdd-974f-28eb601fa84d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "55de92cc-73ed-4343-b0f6-12f3ba1fb712",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73667929-d34c-454d-8e63-08311dbc2cc1",
        "cursor": {
          "ref": "b2b3e809-189c-4fb5-b77b-271b685b9406",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1a89d0e3-05ca-4317-95db-ffb65d7ddd2e"
        },
        "item": {
          "id": "73667929-d34c-454d-8e63-08311dbc2cc1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "562cabfb-bd8f-4eee-b761-e3381dbf80ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fe880c-c9f0-4bee-9449-6b9ab8ce8e5e",
        "cursor": {
          "ref": "53f25f20-2149-4512-951a-2a51d2a0b0bd",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fc2d9834-5260-49d3-aba7-3a8831f18ae1"
        },
        "item": {
          "id": "19fe880c-c9f0-4bee-9449-6b9ab8ce8e5e",
          "name": "identifiers"
        },
        "response": {
          "id": "503d9470-501f-443d-a140-d09a0c2dc574",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566e15f7-774f-4732-a986-8976e4f60173",
        "cursor": {
          "ref": "306146f1-af8d-455a-9a61-55629b9ef2a1",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6caed3b6-209a-4952-9302-ce06a4296394"
        },
        "item": {
          "id": "566e15f7-774f-4732-a986-8976e4f60173",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f53b4c4f-e9e5-4a24-8cc8-725c38eb4aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484a8e84-1fe0-4dc3-ba36-b28f15391be9",
        "cursor": {
          "ref": "9360cd43-0dbe-40fa-a90d-7320d133f872",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "be2f7dcf-ff17-4586-a51f-08bcf6496a06"
        },
        "item": {
          "id": "484a8e84-1fe0-4dc3-ba36-b28f15391be9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a4269509-ad8f-4ca6-868f-7a140ed4afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad3a984-72b1-46ec-85f5-a4c18f719897",
        "cursor": {
          "ref": "2d587f8c-9c48-4d04-8310-61652531b731",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c3411b8-8cf6-449a-a615-c2525db9153d"
        },
        "item": {
          "id": "9ad3a984-72b1-46ec-85f5-a4c18f719897",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "55221338-b3e2-4689-a0a7-0921347d2673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbcd459-8f5b-46be-9083-b675c8f2d237",
        "cursor": {
          "ref": "bf431610-1e2f-49b0-aed3-26b3f1c0e798",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4ee48250-8a67-49e0-b568-18916fe4538f"
        },
        "item": {
          "id": "7fbcd459-8f5b-46be-9083-b675c8f2d237",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "27f3729e-a632-4c1b-a3d9-f9625469d59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab802df2-e4b2-4b3e-b5bc-51e7583cb9fb",
        "cursor": {
          "ref": "21d6d1a0-fc67-45c8-a5e8-a5b88696a73e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e29f0c28-e59f-4a26-8d6a-f9095b9b7357"
        },
        "item": {
          "id": "ab802df2-e4b2-4b3e-b5bc-51e7583cb9fb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ea18fb81-519c-4dd6-9652-114ffaac6587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e02aa17-34d4-453c-b472-e2bd1cb10130",
        "cursor": {
          "ref": "efb1fa27-3a66-487d-9721-d1faf9aff0f4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "28726820-d98d-48a4-a83e-99ebc8b6c5b5"
        },
        "item": {
          "id": "7e02aa17-34d4-453c-b472-e2bd1cb10130",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d4550638-3162-4ca7-9e35-e74320c805dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f1235-5d3b-4968-9652-0e52601ab0b9",
        "cursor": {
          "ref": "ead35df8-49dd-4e38-87a1-a9a46ec637f4",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "858663ef-a3c4-4889-b01e-ee570f595ee2"
        },
        "item": {
          "id": "da1f1235-5d3b-4968-9652-0e52601ab0b9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5091631e-8b9f-494a-bbf2-3877b7d81970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3874e72-cc54-49e6-ac43-4fba88da75e1",
        "cursor": {
          "ref": "6003aa39-ec80-4c7e-864f-bdc1fff4e028",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a596dfc2-6b37-48ce-8e1f-2cd4bbcca832"
        },
        "item": {
          "id": "f3874e72-cc54-49e6-ac43-4fba88da75e1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "91df7c2d-08f0-4708-8b70-f1fdd1ceab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57940757-1449-43f6-947c-532d35b9b4cc",
        "cursor": {
          "ref": "14259504-31a3-4523-baef-a272bffef40b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a7808594-dc1a-4e83-b065-9dbd6aceb700"
        },
        "item": {
          "id": "57940757-1449-43f6-947c-532d35b9b4cc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "72ef6be1-24da-4114-a80f-4b80bcefe1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c621e92-d5ed-4ef9-8d52-b6987f68c46b",
        "cursor": {
          "ref": "0d5dd2c3-556a-45d4-8913-d0e870b9a8ab",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "825aa837-d9d2-4bec-b786-34367088f827"
        },
        "item": {
          "id": "8c621e92-d5ed-4ef9-8d52-b6987f68c46b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1acc5c9e-768b-4848-9b00-b6106b3f8a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e1aa73-fdf3-4970-a83d-b9b2dc5701da",
        "cursor": {
          "ref": "f151c2f2-d6b0-495a-9984-c19676b5cd95",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2d9d3dfa-5c3d-4013-8a6a-6505e78834ec"
        },
        "item": {
          "id": "62e1aa73-fdf3-4970-a83d-b9b2dc5701da",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fc2da868-dd91-4ce0-8926-ff259f7fa8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9395cb74-fa87-4e69-98b5-ed9934cd93da",
        "cursor": {
          "ref": "01c53019-57f5-4750-9a9e-7c642df940dc",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ee1ff58-8b69-430b-aee9-9894791dd1a1"
        },
        "item": {
          "id": "9395cb74-fa87-4e69-98b5-ed9934cd93da",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8bec8c9d-2681-4a6d-9a31-04a553933dae",
          "status": "Created",
          "code": 201,
          "responseTime": 875,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "d22119a5-06e9-4816-b184-1a7d3e1b704c",
        "cursor": {
          "ref": "6f919e7c-5bb3-40ce-b06c-2bf6917b95ff",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8b57cfe7-0ae9-48f7-80b7-7c2c5e00320a"
        },
        "item": {
          "id": "d22119a5-06e9-4816-b184-1a7d3e1b704c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b70380c4-d6ea-425f-acd0-90770f4dad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ce7a9b-98e9-4aeb-a09b-56a0ff91eb59",
        "cursor": {
          "ref": "3599ed85-a7fd-4946-a004-9de8b4f17b80",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "20c7041e-4036-4055-9374-a46c02e27301"
        },
        "item": {
          "id": "80ce7a9b-98e9-4aeb-a09b-56a0ff91eb59",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4457db5c-d796-4aa1-b02f-bee17225fc88",
          "status": "Created",
          "code": 201,
          "responseTime": 7699,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "628c0c4a-9634-421b-b5ba-5afbacdadf60",
        "cursor": {
          "ref": "5a2cd2e3-915f-458b-b158-f24ba244f035",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dfe76308-6edc-42ca-a52d-3b7ff3a27655"
        },
        "item": {
          "id": "628c0c4a-9634-421b-b5ba-5afbacdadf60",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c0951cd4-6328-4f8e-9067-49838af3ff92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe42117b-0b00-4004-ba6a-9f540ca7e07d",
        "cursor": {
          "ref": "634175f5-2bf4-44ac-87d6-c2964bc358fd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "44da5209-15d5-48a1-99d6-11dbec2ee180"
        },
        "item": {
          "id": "fe42117b-0b00-4004-ba6a-9f540ca7e07d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7fb86b59-12e5-431e-9f32-f978cfaf5fd8",
          "status": "Created",
          "code": 201,
          "responseTime": 3335,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "35e4f2a5-bbbb-4f2a-bdf8-fc13c58f1b07",
        "cursor": {
          "ref": "9633c49b-3234-40d3-9dbb-6074a4c34788",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b84a6e59-f608-498f-8f97-74d71dae42ee"
        },
        "item": {
          "id": "35e4f2a5-bbbb-4f2a-bdf8-fc13c58f1b07",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "97599199-eef7-4198-be9d-c7a3b2c8ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9837b160-0adc-434f-bda6-aed0972ab448",
        "cursor": {
          "ref": "4c759467-b053-4a74-929b-736ec07c8c13",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9a22d4ae-47aa-46f0-adfb-22414a77017c"
        },
        "item": {
          "id": "9837b160-0adc-434f-bda6-aed0972ab448",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d65dd386-a9ab-4e51-a80f-b3dbb95e5952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fe016e-158f-4a50-b2d1-69c2385253ef",
        "cursor": {
          "ref": "a0bf07e0-ec64-453b-b6fa-e409c4e82443",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "942296a9-af13-450b-8a60-1fe92a636da9"
        },
        "item": {
          "id": "d3fe016e-158f-4a50-b2d1-69c2385253ef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a9e89f15-0bde-4da3-adbc-3b1fff6526dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5b002f-10ab-4897-8a08-acc0695460e9",
        "cursor": {
          "ref": "01ba9326-92c7-4de6-b116-e9107bfac1a0",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07b96b80-6635-4e6e-8085-1cb3ce871a82"
        },
        "item": {
          "id": "2d5b002f-10ab-4897-8a08-acc0695460e9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bc6cbdb7-6187-4b58-b1ca-ff3c14f5fe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f949f0b-1bcc-42b2-bce7-ceba0125ba34",
        "cursor": {
          "ref": "ba6cc688-075a-4d50-8a65-b024bb026894",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5c7a373c-fe16-41cf-961b-f8dc4de7617c"
        },
        "item": {
          "id": "3f949f0b-1bcc-42b2-bce7-ceba0125ba34",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1dcdeebc-d4e4-4f1b-9fd7-479fb9930c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec163490-dc3c-482d-a9d5-50393624acc9",
        "cursor": {
          "ref": "1d8511d0-27b9-45ee-ab98-d1b85c2a4a50",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "502f2c19-9099-4f7f-b5de-e1df1832a592"
        },
        "item": {
          "id": "ec163490-dc3c-482d-a9d5-50393624acc9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d713b3b8-a04b-4ecc-8978-b5128a774f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c800c8a-a996-4da5-8f95-3e17189971a9",
        "cursor": {
          "ref": "eb3b982f-56ba-4019-ba74-3a403534fdeb",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a23ecb2e-11a3-4d37-bf4c-de2add825f40"
        },
        "item": {
          "id": "6c800c8a-a996-4da5-8f95-3e17189971a9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "024ec642-5043-4481-bd17-0ba5d18f6d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc9f8c4-4883-43a8-8fdf-ab639728f216",
        "cursor": {
          "ref": "6bbbc190-8969-409b-8b6e-860dce37b8d3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7d29a229-c11a-4843-856b-958f140d1e84"
        },
        "item": {
          "id": "8bc9f8c4-4883-43a8-8fdf-ab639728f216",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7338bbb0-a226-4993-a7e8-93056262483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963021df-3be3-4ccc-b3d5-12ae96dd3c89",
        "cursor": {
          "ref": "cf0366e9-27bf-405d-b072-dd3d42da2ebf",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5f9c41cf-5330-4aa2-a8d0-ea7624563224"
        },
        "item": {
          "id": "963021df-3be3-4ccc-b3d5-12ae96dd3c89",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "387c41e6-d332-45c9-9569-792e0e9c2287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d3b51-aa7e-489c-a414-9e7983354023",
        "cursor": {
          "ref": "3baec0da-c5a5-40ab-91f5-46c3ffa6b7ee",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9c84065e-29f4-4ca4-8c03-a972e76bc656"
        },
        "item": {
          "id": "619d3b51-aa7e-489c-a414-9e7983354023",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aba299f0-dc50-4cb4-8048-8b6bf3c699f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc7e089-dc21-4828-a035-f3c09c83e391",
        "cursor": {
          "ref": "f535de01-f176-485b-903a-8507aa7cf9f1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4299e84c-1bab-4166-b9d1-f5dbf6f5d95a"
        },
        "item": {
          "id": "bdc7e089-dc21-4828-a035-f3c09c83e391",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "76d9e1f3-76ce-4a18-a727-fee8b438ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e43692-5e08-406a-a6bc-efcb4874a147",
        "cursor": {
          "ref": "1322e46d-5c41-4fce-b7b5-4b00e7bafd0a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b7aacc78-6fdc-4c5b-902f-94bb04757a76"
        },
        "item": {
          "id": "19e43692-5e08-406a-a6bc-efcb4874a147",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7903a97b-3775-400e-9b38-dcb6b6656c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf687dc9-27e9-4b6d-95b4-a2fcd8c5a6c1",
        "cursor": {
          "ref": "fe1815ff-bac8-4e6d-8429-b230779325f9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "82bd0258-39cc-499e-ab50-a1a0d63266a6"
        },
        "item": {
          "id": "cf687dc9-27e9-4b6d-95b4-a2fcd8c5a6c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2ed4a4e-8052-4d92-84bb-ac0828dd1930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9eed15-499a-4932-a6ed-3d4be6636cae",
        "cursor": {
          "ref": "348f9fad-03b5-474e-86de-9b29127c3092",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7d565d9a-de7e-47b5-afe4-e0de65a35d7d"
        },
        "item": {
          "id": "bd9eed15-499a-4932-a6ed-3d4be6636cae",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "96cd83ad-cc88-43a7-8398-75e1bb5ab808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0cd8f1-3b4c-496f-9e42-fbf24426b118",
        "cursor": {
          "ref": "ed5a2a92-5072-495e-ab52-e957677735d6",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8b39d829-7ca6-4687-a4db-ee3563f0baf0"
        },
        "item": {
          "id": "2d0cd8f1-3b4c-496f-9e42-fbf24426b118",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f9519bdc-9e63-477f-ad71-e7a76844fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276cc3d2-290e-4a5d-841f-7586ad6d4dee",
        "cursor": {
          "ref": "36a9e018-bf18-4f84-a897-3b67b2d6fa6a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6d839a29-37ad-45dd-9d2f-788566ca8af0"
        },
        "item": {
          "id": "276cc3d2-290e-4a5d-841f-7586ad6d4dee",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "31287f36-2b07-4f09-b2cb-0b56cc1700d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2057c5a-afb0-4330-945b-759506701a60",
        "cursor": {
          "ref": "43452be9-9cf4-4b3c-80f9-e6ac6b36e413",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "62d9f5f3-03aa-47ec-8996-e4c8c3a4b0f5"
        },
        "item": {
          "id": "e2057c5a-afb0-4330-945b-759506701a60",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8c5661ec-9100-44af-b27f-1fd71b8a817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f4ce93-4aef-40d0-b4a1-07b20553dd46",
        "cursor": {
          "ref": "c2fc1257-7e48-4350-8e47-0fc7463937db",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "01b852f9-f55b-4cf5-9e6b-bb77bcb0e8b3"
        },
        "item": {
          "id": "33f4ce93-4aef-40d0-b4a1-07b20553dd46",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "324e2377-3a42-48c6-a222-eb190e822332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157e8fd-9141-45d3-bf71-c0064b402551",
        "cursor": {
          "ref": "f30f8238-5c07-4959-9621-9a9582f02350",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f695ae42-aa5e-47d7-b739-96de05bca7f6"
        },
        "item": {
          "id": "3157e8fd-9141-45d3-bf71-c0064b402551",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4ff0c0f9-4855-4d8a-854a-aa8ad1dc56c5",
          "status": "Created",
          "code": 201,
          "responseTime": 2876,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "9e432732-63bd-4cfb-ae52-35ab58cafc17",
        "cursor": {
          "ref": "8dd7d4db-e20e-4704-b23d-7a827efbde4e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "21289c9f-c7b7-4f99-8dcf-7157c5e1c2fa"
        },
        "item": {
          "id": "9e432732-63bd-4cfb-ae52-35ab58cafc17",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "22bad16e-a635-4ccd-91c2-9c648c9a3809",
          "status": "Created",
          "code": 201,
          "responseTime": 2716,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "b0ef8abf-e366-413c-b9c8-9717b5ed193d",
        "cursor": {
          "ref": "8c445a3a-e649-4542-81f5-02f4a4dee987",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "be973109-6e1d-41e4-8021-4fd417d82de0"
        },
        "item": {
          "id": "b0ef8abf-e366-413c-b9c8-9717b5ed193d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7fa7d965-0bd9-4dd1-8dd8-2ee9c942f824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4322557e-e914-4e32-a3b9-60f8d35add8e",
        "cursor": {
          "ref": "abb3bd9f-9426-4e7a-9bd1-8bb9fdabb69a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5e3fe5ff-42b6-49c6-9d28-d26494fe9ee8"
        },
        "item": {
          "id": "4322557e-e914-4e32-a3b9-60f8d35add8e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f36f5f8c-9bb5-4008-bf1a-1dbb4b46e64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446441f5-87e4-428c-984d-1920b8236a63",
        "cursor": {
          "ref": "8b413324-9e5a-4f98-b181-a72c122f6c3f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "95d7e594-b455-420b-8cd0-5ef5d4addcab"
        },
        "item": {
          "id": "446441f5-87e4-428c-984d-1920b8236a63",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6a88dd66-b7d8-4ff6-9656-5aca467ab445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1e4725-1e10-4681-8a2f-5670d0eda94f",
        "cursor": {
          "ref": "8c59f34d-26fd-44a2-8390-0dbb042ec08c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "346d71d5-6584-425f-a92a-30244e181dcf"
        },
        "item": {
          "id": "9e1e4725-1e10-4681-8a2f-5670d0eda94f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2438059d-0747-4191-8ff2-ee3b15193883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111989be-3e74-4ffd-915e-ce94ee165ab5",
        "cursor": {
          "ref": "ca8cce8c-7300-4e40-8c1e-ef0cf7dfeac2",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a9b45caf-59ee-4182-8495-1ac41e7def9a"
        },
        "item": {
          "id": "111989be-3e74-4ffd-915e-ce94ee165ab5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "51ba3521-ed94-40e4-a1f3-c93fb4834667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaa5359-32d0-4afa-9b3a-5377a93ebfd1",
        "cursor": {
          "ref": "03534ba2-bd17-4f17-aaef-da34b5a6d4bd",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9833b854-697e-4bdb-913d-604da061a575"
        },
        "item": {
          "id": "3aaa5359-32d0-4afa-9b3a-5377a93ebfd1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d9c5ff1e-bb99-4c78-9cdb-4a9b14af0bc3",
          "status": "Created",
          "code": 201,
          "responseTime": 2952,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "039cf463-ef0b-4a0a-ac67-243aad306c59",
        "cursor": {
          "ref": "cfef68b6-48ec-4770-a3a7-3741da6b767a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e594d43d-8234-425b-91c9-c29a32454efe"
        },
        "item": {
          "id": "039cf463-ef0b-4a0a-ac67-243aad306c59",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fc1e217d-2c4b-4a7b-9729-e7bfb8340830",
          "status": "Created",
          "code": 201,
          "responseTime": 2828,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "49b77d6d-65f7-4e64-a9a4-f3b5a2df10a5",
        "cursor": {
          "ref": "71c268c8-792e-461d-912c-93313b979fc1",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3f454d88-fdb7-44ef-8c30-cb81b74294d1"
        },
        "item": {
          "id": "49b77d6d-65f7-4e64-a9a4-f3b5a2df10a5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "14d29132-1a83-4920-993b-02cf1dba8eb7",
          "status": "Created",
          "code": 201,
          "responseTime": 2530,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "e69f96eb-3e02-44c1-a3d7-3ed89d88dc89",
        "cursor": {
          "ref": "1bd3431b-9bef-454a-84da-4e3d2665d778",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "22a25249-641f-429f-9b85-0ef0a6cdb54a"
        },
        "item": {
          "id": "e69f96eb-3e02-44c1-a3d7-3ed89d88dc89",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "65d83579-2637-4b2c-b519-85c2388cfbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94360618-6a61-4289-a2b1-e5e091456e8b",
        "cursor": {
          "ref": "0ba5b529-2bd2-41bf-b913-f2c990113e42",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3084139e-4f7c-4da3-bfa4-da9251359436"
        },
        "item": {
          "id": "94360618-6a61-4289-a2b1-e5e091456e8b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ec22a6a1-34c1-42f0-b982-b4860e3ae41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24c7293-ab41-4fac-a3f3-21ec3f050c1e",
        "cursor": {
          "ref": "f30727b7-1d37-4afd-bb43-cfdc7a1a4ad5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "801f9539-c72e-46c0-8258-88760e58c664"
        },
        "item": {
          "id": "b24c7293-ab41-4fac-a3f3-21ec3f050c1e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1007b1f1-0714-4f2d-a1e8-ab13f9737141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfc79c6-c8bc-46e6-8025-9b78b12ff7cc",
        "cursor": {
          "ref": "afb5253b-a6e6-4685-bcd8-f3ee0ebd4927",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "973bc9d1-aec7-4496-919f-de302e85648b"
        },
        "item": {
          "id": "ebfc79c6-c8bc-46e6-8025-9b78b12ff7cc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fab1c172-7c80-41d4-a79a-b581670da12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e61ae33-b51f-4bf0-ac6c-e0c1f123cfc8",
        "cursor": {
          "ref": "8bbce104-0529-45f1-92f4-36513cbb21c9",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bd4abd9c-d861-44ea-bae5-1c0e849d5e67"
        },
        "item": {
          "id": "9e61ae33-b51f-4bf0-ac6c-e0c1f123cfc8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a937a241-cad1-4094-a5c3-997950a8eabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc181db-a837-4a75-95dc-6d0e7f50e0d3",
        "cursor": {
          "ref": "98efd028-6693-4420-b401-3d3bdd0d0a9d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1153fe0d-2207-4eaf-a2ba-8c82f7f27676"
        },
        "item": {
          "id": "1bc181db-a837-4a75-95dc-6d0e7f50e0d3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ee325121-ba35-43ed-acbe-cd76c93c58a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae04cc6-e640-4737-b2f7-5d97abfeb9d3",
        "cursor": {
          "ref": "15edcb33-ef5c-41f1-bd66-bcfe514b3840",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1fca8c89-0320-4a31-b059-9b0d264b4861"
        },
        "item": {
          "id": "cae04cc6-e640-4737-b2f7-5d97abfeb9d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7ad07c2c-8fe6-4af7-925f-1d0ab21b3812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9389d70a-9b24-440d-8105-f4f2c63105cc",
        "cursor": {
          "ref": "888fcd57-c06d-4b70-9988-bcfc1abfa016",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eac683b7-4d80-494e-92b5-b84edd8259e2"
        },
        "item": {
          "id": "9389d70a-9b24-440d-8105-f4f2c63105cc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c68b6ab3-c2cf-4433-8f0f-f820119913e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e61c89-1e79-4f7f-a7a1-881ca18083b0",
        "cursor": {
          "ref": "abbb12d7-7657-4f76-a0f9-cc75dbd43635",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "25f3744f-b103-4a70-b902-84595928b02e"
        },
        "item": {
          "id": "f9e61c89-1e79-4f7f-a7a1-881ca18083b0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9668f8af-ffed-48c4-8ca5-dc12f5de3df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84acb479-bee3-4127-98b3-5eb90a7b879b",
        "cursor": {
          "ref": "f3f8fb47-8449-4ceb-ab84-940f0e7cdf47",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b015ff4-2a9b-4ddb-a56b-d36c496c865a"
        },
        "item": {
          "id": "84acb479-bee3-4127-98b3-5eb90a7b879b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f6fc7afb-63a1-4c9c-b401-bab54570dcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a59bcea-c23f-41fc-a7ff-a830749063fe",
        "cursor": {
          "ref": "a173a54d-87f9-4ee6-9fd7-8d402bdded88",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "878d959d-5c97-486a-aa53-f633b41796c8"
        },
        "item": {
          "id": "7a59bcea-c23f-41fc-a7ff-a830749063fe",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c94c450c-97ea-4c2a-917c-5c52114445d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5b02e8-7a7d-421d-b319-c277650a8ead",
        "cursor": {
          "ref": "d4bb7570-f60e-4a16-bb4c-81df026a7384",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0bc4c45a-fdf9-4c19-87b0-b45aff43144d"
        },
        "item": {
          "id": "bf5b02e8-7a7d-421d-b319-c277650a8ead",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3e29432a-1ad1-46b3-be1e-6154b65ac30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7648710f-dac5-48a9-b13c-30eaa4e3e845",
        "cursor": {
          "ref": "e2f8833e-28c7-4b20-bb38-bd57e7a5ab8c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dbb956f0-3b74-4241-b4a3-56ab29c93db1"
        },
        "item": {
          "id": "7648710f-dac5-48a9-b13c-30eaa4e3e845",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fe8e0354-60ae-4ccc-be83-404c33fc59a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a645578-0135-44be-b042-0ece5991f30c",
        "cursor": {
          "ref": "416abab3-bb37-49f0-9fec-2bae77834a46",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bc8c22db-b401-4de4-bd39-337483c74263"
        },
        "item": {
          "id": "8a645578-0135-44be-b042-0ece5991f30c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "64be7580-ea23-44fc-bed4-4759c07d39ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181bb5e7-a0ac-4102-84cc-a72eeabffeeb",
        "cursor": {
          "ref": "f7dfce43-66af-4957-a39a-00f17bd10dc5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bb17d77a-3ef9-42cf-94be-e98b0e7b9e64"
        },
        "item": {
          "id": "181bb5e7-a0ac-4102-84cc-a72eeabffeeb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "624568a5-3bca-42fa-98f1-5167ec259518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3da8115-8c35-4229-87c0-57663ddc4447",
        "cursor": {
          "ref": "3b59b932-b6c1-4899-9d90-7c16fa4fa393",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "02563c60-38f5-4c0e-91d6-83c33a616be4"
        },
        "item": {
          "id": "f3da8115-8c35-4229-87c0-57663ddc4447",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "91b0449b-a46a-4579-925e-864790133f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7366995-d96f-499f-b6a0-70eaef21c512",
        "cursor": {
          "ref": "b065a348-52c7-4cc4-b0dc-f1b6331b857a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3aea06bf-3af3-4fa3-a09b-441b113b88c4"
        },
        "item": {
          "id": "b7366995-d96f-499f-b6a0-70eaef21c512",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "24c55ba1-cf77-47c1-8044-59cc7c295ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6887d5c8-8d0e-40e2-bdc3-708a2edf938f",
        "cursor": {
          "ref": "3b7e134b-1904-473d-ad0f-b27ef05ba932",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ad46044d-babd-4d2a-bdd1-41e08d16a4df"
        },
        "item": {
          "id": "6887d5c8-8d0e-40e2-bdc3-708a2edf938f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b7973d76-92b6-401c-bf17-5488303f549a",
          "status": "Created",
          "code": 201,
          "responseTime": 2297,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "3278048d-70cd-4e8f-8345-c39fce52acd6",
        "cursor": {
          "ref": "3fcbc045-8094-4211-aecf-d0c45e40d4ce",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac821a72-ae6d-42e4-b065-710a75910644"
        },
        "item": {
          "id": "3278048d-70cd-4e8f-8345-c39fce52acd6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e654dafe-57fe-4226-8954-b6ae560973dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa00e40-ea5c-4219-9e16-f1f9cab31ce9",
        "cursor": {
          "ref": "198e92a1-3a32-4cdf-8e61-0e12ad930fea",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "23a41400-8c96-4aaa-8350-17746323d584"
        },
        "item": {
          "id": "1fa00e40-ea5c-4219-9e16-f1f9cab31ce9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a610c383-2998-47c8-8a48-0e85e9b4eeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cfaa80-9d47-42a1-bf90-59336e3c75ea",
        "cursor": {
          "ref": "10e7a8d4-ff66-4e96-a9cf-396c2147820b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f87b115a-f405-4c6f-9604-ca1e10c6e000"
        },
        "item": {
          "id": "06cfaa80-9d47-42a1-bf90-59336e3c75ea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1babf7f7-59d8-4da9-a7e1-e5db697122da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d20f730-4c90-48f1-8e57-b7bb9b42acdb",
        "cursor": {
          "ref": "7a6d88bf-8977-4af8-a3f1-7b89f267f304",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ec89bc55-3efb-4ffb-85af-f99f254d1c94"
        },
        "item": {
          "id": "4d20f730-4c90-48f1-8e57-b7bb9b42acdb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4950bf7a-f461-417a-86e8-ce406010d8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9866edb5-02fd-47f8-8760-12d8d752735b",
        "cursor": {
          "ref": "efce512e-4b7d-4cda-8713-8b334dda41e1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "94c2c74e-7a80-4df7-8f34-2ceec9e9d0ba"
        },
        "item": {
          "id": "9866edb5-02fd-47f8-8760-12d8d752735b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ca6747ba-18b7-461e-893a-30ef4925c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174a44e6-2a53-458f-aace-a259f4fc9aff",
        "cursor": {
          "ref": "98880a33-b9cd-4e62-9dab-a327bc51df40",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "41f6da7e-674d-48a6-85c4-00fe509a2d23"
        },
        "item": {
          "id": "174a44e6-2a53-458f-aace-a259f4fc9aff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ff5c7672-1623-4acc-a0fc-7af9d85c3b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e83f03-60d7-438a-b9c8-79c1993e3cc7",
        "cursor": {
          "ref": "23435917-a260-4e56-8384-5cb4009bc955",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "352dbb3f-0be4-4202-8f1f-bb98bd8ad3c3"
        },
        "item": {
          "id": "94e83f03-60d7-438a-b9c8-79c1993e3cc7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "82aca2f2-806f-486b-b2a7-98933dd9dac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0471c115-c220-485c-8d02-a7ebb25d69b7",
        "cursor": {
          "ref": "c90a6ad0-ddcb-4b5e-9e59-5fbbbeb423ea",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "03785cef-f12a-44c5-acbb-f0822ad6729a"
        },
        "item": {
          "id": "0471c115-c220-485c-8d02-a7ebb25d69b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "66cb19bd-cfad-4cbe-a511-493c0b156b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ed92dc-95c0-4c63-8e9a-a2da9e5eab14",
        "cursor": {
          "ref": "b041dd3c-b24c-484b-8388-e596787c076a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a2e2b2f-fa6e-4610-a32b-316288af22cc"
        },
        "item": {
          "id": "06ed92dc-95c0-4c63-8e9a-a2da9e5eab14",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1fb1fc58-fb54-4cf6-aa21-8746427dbb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3af189-f1e6-416f-ab6c-612c256dddca",
        "cursor": {
          "ref": "917f1852-1aab-432e-a0e9-1fc6abf094e4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "35b53b11-24da-4b9a-9822-5269185c95ea"
        },
        "item": {
          "id": "dd3af189-f1e6-416f-ab6c-612c256dddca",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e702a4c9-daae-449b-82d3-d0d925396e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e7c907-7942-4a95-81a8-b9c9d5bcd868",
        "cursor": {
          "ref": "084196db-9719-4907-b891-5a3bd7204e18",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7a178485-2526-49c2-bb4a-f6a03d0e4715"
        },
        "item": {
          "id": "e0e7c907-7942-4a95-81a8-b9c9d5bcd868",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a14ee934-21c7-4c3d-8bfc-ab6bba79dd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af215aa6-a86e-465a-844f-9df581f2bf23",
        "cursor": {
          "ref": "e258e593-aa18-456a-9e7d-1f74a35f23a1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "80568e9b-2e71-490c-a606-b30f99756ac0"
        },
        "item": {
          "id": "af215aa6-a86e-465a-844f-9df581f2bf23",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "df45de94-b8ff-4e5b-8e36-e305ed9e05bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba5a25e-226c-41bb-ba65-7926d6326c0c",
        "cursor": {
          "ref": "3972a933-3db1-4599-8309-bd5d07c24f1c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c5a27627-9dd6-454d-b83f-3869c1864e37"
        },
        "item": {
          "id": "8ba5a25e-226c-41bb-ba65-7926d6326c0c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f49f0283-9689-492f-bb5d-7b436b914e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d07c7a-4b23-4d45-9952-423cd18149b9",
        "cursor": {
          "ref": "89104179-caad-4850-b5c7-3a62ba4d3413",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ad8c0ba6-e408-4111-822c-5d4d52d71fda"
        },
        "item": {
          "id": "f2d07c7a-4b23-4d45-9952-423cd18149b9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "964796d2-5d32-4768-9295-cf3c1edd6082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9775c133-e9bc-4c20-a10e-0925a9b33436",
        "cursor": {
          "ref": "efb0502c-2690-471e-8727-84ef3cebfc72",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4dcbd1c7-de77-45a5-a846-100f7cb2527e"
        },
        "item": {
          "id": "9775c133-e9bc-4c20-a10e-0925a9b33436",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d0552279-81ad-44a4-9c59-8ccf0b81b370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedb20ae-2e79-4e2c-876f-9552f16fbdf8",
        "cursor": {
          "ref": "a04a63b0-314c-46f5-a047-35f6a0b25743",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d22c55ec-d8f1-487e-8f7f-ea1bb1bee426"
        },
        "item": {
          "id": "bedb20ae-2e79-4e2c-876f-9552f16fbdf8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a6b1d3a0-06fd-465c-9555-e6ad901157c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38adb6d4-0058-47de-8e60-4ce58a6295ba",
        "cursor": {
          "ref": "6420a26e-fe6e-4b1a-b48f-e21e9d30c8eb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a84597d9-575c-4e54-bf0e-205161e62c8d"
        },
        "item": {
          "id": "38adb6d4-0058-47de-8e60-4ce58a6295ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fe780e81-fe8e-4ba7-8dd7-fcfe4917da1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93afb8f-5329-423c-9517-53791a836d81",
        "cursor": {
          "ref": "74a09a00-36bf-47cb-8d4e-6c7ec2f8061f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "65abd93b-17ed-4fe2-b544-938c8f6bc5e8"
        },
        "item": {
          "id": "a93afb8f-5329-423c-9517-53791a836d81",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c4123279-5fed-4dc9-bff9-2096af899884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eb39cf-c8a1-441a-be63-2af9fdfddef9",
        "cursor": {
          "ref": "6752b628-20c0-4243-8e2b-da3ca3310d67",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1fbd7d17-6dd3-4b78-b78c-fd9596c06b7b"
        },
        "item": {
          "id": "49eb39cf-c8a1-441a-be63-2af9fdfddef9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b00ed8ad-bde1-42d7-8151-de60968dc9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62827747-d2fb-458c-a769-a1ef08852833",
        "cursor": {
          "ref": "ae92f32c-b691-4aaa-b57c-e47b394121c4",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "91a0ecc7-db2b-4ac9-8704-4ca0ac19a644"
        },
        "item": {
          "id": "62827747-d2fb-458c-a769-a1ef08852833",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "81b97e21-5147-4be6-aa56-19bcee3066e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac9b5ae-a76c-4a50-8ea2-f7a10b242682",
        "cursor": {
          "ref": "7fad5fa7-d7ac-4eed-b66f-641cd5de585f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9dfdc58-0e25-4e88-879a-d5ad8e0f95b0"
        },
        "item": {
          "id": "6ac9b5ae-a76c-4a50-8ea2-f7a10b242682",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b8639a88-3a32-48c6-9b0f-c44867dcce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e71c4f-f88c-4fcd-b05e-69c847760c4a",
        "cursor": {
          "ref": "11c31f3f-41dd-4323-9050-9920bb9a1468",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b19db356-ba06-4f0a-b2b5-27a4630b9c68"
        },
        "item": {
          "id": "e0e71c4f-f88c-4fcd-b05e-69c847760c4a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d4a9e2fb-bfd4-4116-a2da-5ee0516d9829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6433dd-e337-4d05-b63f-a7e2229919ac",
        "cursor": {
          "ref": "c8bfe75a-a82a-453c-a2d3-340226d1513b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ff53ff7-3ff9-4773-8291-4e78e0d7bc47"
        },
        "item": {
          "id": "8a6433dd-e337-4d05-b63f-a7e2229919ac",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7ef3bb5a-58bf-41fa-9ec5-d0979a6e931c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c7e056-a41b-44fd-bfd9-23bf65d6fe87",
        "cursor": {
          "ref": "f512aa61-062d-4935-b68f-e3267edc2141",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d1d14500-8b2e-4319-bf6c-56d8ab517e86"
        },
        "item": {
          "id": "45c7e056-a41b-44fd-bfd9-23bf65d6fe87",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "838c628b-eb35-421c-9921-8a6a58c72f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2da482-3cab-4880-a790-00ad73b55e09",
        "cursor": {
          "ref": "dcac7706-2186-4193-a45a-781d9f4e26b3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "68e809d5-8e57-499b-b825-6f35c3298bf3"
        },
        "item": {
          "id": "6d2da482-3cab-4880-a790-00ad73b55e09",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "126ee8e2-e9c4-4f62-a75b-4e437e73901f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c754313f-6c4b-4f73-9d55-b054f28bf4ba",
        "cursor": {
          "ref": "48647a40-3d30-403a-b8ff-a88286a4c43e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e88c1ebc-02bb-494f-a6ac-d484def832ab"
        },
        "item": {
          "id": "c754313f-6c4b-4f73-9d55-b054f28bf4ba",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d634ff2b-e0f3-4125-8dd8-bb4b7b3daa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fb1a04-fa79-42d9-b5f6-7659c995d484",
        "cursor": {
          "ref": "fecaf0b8-73dd-4bee-8041-212cfe8e7c40",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d7793f6d-d35e-4694-afd1-35b22de78629"
        },
        "item": {
          "id": "61fb1a04-fa79-42d9-b5f6-7659c995d484",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1568124a-f8c2-46ea-a921-a582d5f652cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc524633-31bb-43e8-8342-945221facd92",
        "cursor": {
          "ref": "d7a306e3-8159-4ed3-8c15-c5d8237ec78d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c4335359-5a92-4ab8-9bb2-ed823e9dc0cc"
        },
        "item": {
          "id": "fc524633-31bb-43e8-8342-945221facd92",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5af31e28-f82b-4d8a-b9a9-135d9aa8983f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1321218-8f1a-4efe-89e6-cb40ded4406c",
        "cursor": {
          "ref": "dad9755b-8da0-4d53-bd36-9b935c550781",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "24a0ba06-c1c0-4c56-982a-1a527c75c35c"
        },
        "item": {
          "id": "d1321218-8f1a-4efe-89e6-cb40ded4406c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c2cacec9-f62d-40dc-a856-f92b39275d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d9b0f-0ec2-4b9c-8e5e-2eb1000fc364",
        "cursor": {
          "ref": "670907bd-74ce-41a4-8f8f-b5dcd748dcbb",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b659a1fd-cd68-4bc8-a579-e966a6b39698"
        },
        "item": {
          "id": "409d9b0f-0ec2-4b9c-8e5e-2eb1000fc364",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a611499-2782-4393-a5c5-c51ef1626225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6342ef-48c3-4233-b549-c5767218407e",
        "cursor": {
          "ref": "b9998453-0928-4c09-9318-4ea59d3afdd3",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d15872be-fe7f-4bb2-b252-9381c26ed56c"
        },
        "item": {
          "id": "9e6342ef-48c3-4233-b549-c5767218407e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6151fcb2-e844-4a96-8d95-c02402bcdf93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb063e21-92f6-42cc-9085-fe480f878a73",
        "cursor": {
          "ref": "04f0f21c-88ce-4cc5-81be-3af4cd1df422",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4109c733-cd06-4635-a7eb-b5082db22683"
        },
        "item": {
          "id": "bb063e21-92f6-42cc-9085-fe480f878a73",
          "name": "credentials_issue"
        },
        "response": {
          "id": "48c3d51c-64bb-46d9-8ae4-17073a69ec66",
          "status": "Created",
          "code": 201,
          "responseTime": 2142,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74fe8e9-c883-4e2a-8b30-ddd6a81cf778",
        "cursor": {
          "ref": "d8000c8f-f65a-48d9-aea8-e7e5f9db3a77",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1c51d3bd-3125-4579-b2d8-b0a2a5a70d43"
        },
        "item": {
          "id": "e74fe8e9-c883-4e2a-8b30-ddd6a81cf778",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4113b801-6875-4794-a0a2-9e70f5d05577",
          "status": "Created",
          "code": 201,
          "responseTime": 2568,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "082d0a83-ed8c-446a-8fa4-73922bb3c13e",
        "cursor": {
          "ref": "7e24a0b6-6dbe-4fca-8f7c-0c26d50cc911",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1deb5e2b-0b96-476d-ba3a-6919154b74d5"
        },
        "item": {
          "id": "082d0a83-ed8c-446a-8fa4-73922bb3c13e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "96533b5f-1ea7-44ad-b5ad-fce040d21ca2",
          "status": "Created",
          "code": 201,
          "responseTime": 4301,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20df35d-20db-479c-b760-a68b2c1af4ca",
        "cursor": {
          "ref": "e5043e3f-0e89-4b55-9fa2-a7ac45994a83",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "af36bf81-0133-4652-8a38-956e859325f4"
        },
        "item": {
          "id": "f20df35d-20db-479c-b760-a68b2c1af4ca",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4b23cdc8-481c-4a6c-a37c-9fb529db5300",
          "status": "Created",
          "code": 201,
          "responseTime": 2638,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e74644-ddb1-42f7-9890-5febc8d0ec69",
        "cursor": {
          "ref": "8d5b4871-be9c-49ef-a60e-509bd6527678",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "967436c7-7d39-4ff4-9adc-94ff948a2e38"
        },
        "item": {
          "id": "26e74644-ddb1-42f7-9890-5febc8d0ec69",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3bde0c1f-7298-414b-a76c-5658269b8fe0",
          "status": "Created",
          "code": 201,
          "responseTime": 2556,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-06T00:36:37Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-06T00:36:37Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "099cf6f6-b16f-467b-92e1-ac59fd11626e",
        "cursor": {
          "ref": "5bc84df0-1774-479e-b6fe-217505f2c503",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "440800b8-9593-452b-9a01-4fded21f4e57"
        },
        "item": {
          "id": "099cf6f6-b16f-467b-92e1-ac59fd11626e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3910c29f-90ab-4848-be47-335ff5f5474c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a690e98c-2510-4b23-b0dd-27765b8f4814",
        "cursor": {
          "ref": "1f8d990f-0c41-437a-8934-37111961b6a7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b702a96b-b0a8-46b9-8294-a0b9f2b520df"
        },
        "item": {
          "id": "a690e98c-2510-4b23-b0dd-27765b8f4814",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "150f3e9a-749f-4e1a-ba9b-e34f3b8b4f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4054ed66-006d-4fcc-b160-8cb543c3784f",
        "cursor": {
          "ref": "d5ea0059-ae2e-4d52-9097-58f15ea1655c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b76811b4-06be-4f94-b5d2-21521959d32b"
        },
        "item": {
          "id": "4054ed66-006d-4fcc-b160-8cb543c3784f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9edc235d-5afa-4b07-9f84-3adac6bdd2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20de1aa9-3ec7-4ecf-8549-68846c4249d3",
        "cursor": {
          "ref": "fb9ee0b1-305b-4ba2-93a7-50737f0b0c54",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f769fba0-5246-4397-bc3c-134c6b0fcb1d"
        },
        "item": {
          "id": "20de1aa9-3ec7-4ecf-8549-68846c4249d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c73e1c66-29da-4ca4-bd4d-13177e582459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed5f96e-85ba-4c70-9ff6-716517e50601",
        "cursor": {
          "ref": "fd64c1ea-8047-4285-8735-66c8169b384b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c04519c7-ff7e-4489-b2d7-e0399e9da804"
        },
        "item": {
          "id": "7ed5f96e-85ba-4c70-9ff6-716517e50601",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "51b9243e-d4aa-4bea-81fe-d476092db77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d489bb44-c72f-445b-a8d3-b8f17a314dda",
        "cursor": {
          "ref": "c29a15b6-2a79-4d6b-bcb5-986d6b0f2abe",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5e50cb95-9bd6-4ce9-98c5-d87502660501"
        },
        "item": {
          "id": "d489bb44-c72f-445b-a8d3-b8f17a314dda",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "48a2626c-5ef4-4dc5-ab08-a84df3c7b1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a02ed7-96dc-4a4a-acb7-75c2ed50c770",
        "cursor": {
          "ref": "d8e3a346-e82e-405d-accd-bafc7762091c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b364acd0-e036-4675-b9b2-3775db2d5e96"
        },
        "item": {
          "id": "57a02ed7-96dc-4a4a-acb7-75c2ed50c770",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2b9ce6bd-b855-4d91-8f1e-e38ee7023755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec9b0b3-a113-4f73-b3e5-040959d8b4f4",
        "cursor": {
          "ref": "1331a704-08a2-4ace-b24c-64f241a5035a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8ece4cc4-6194-4377-9899-03872565da8b"
        },
        "item": {
          "id": "7ec9b0b3-a113-4f73-b3e5-040959d8b4f4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "22d4343c-8f3e-4b02-aa25-d45aa6a4a2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7ff087-20bd-48c2-a687-604b664a1bd5",
        "cursor": {
          "ref": "4367a4ca-4c16-4b09-8c0f-3924919b0160",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38836ffd-cf2a-41eb-af99-18977b0ce030"
        },
        "item": {
          "id": "ad7ff087-20bd-48c2-a687-604b664a1bd5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3e47182-dc14-46c0-8dab-c7f067717ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14e50ce-3886-460d-8618-775f2081dfc4",
        "cursor": {
          "ref": "4b2d893d-779d-46f4-a1a6-351b9bc8f65b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d52d8016-54bd-4a92-ae00-f89238f5fc67"
        },
        "item": {
          "id": "d14e50ce-3886-460d-8618-775f2081dfc4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20ab2ea5-9f50-4dbc-97d1-1be5b1bd5f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25d2c82-e1db-4b9a-b23b-ff028b062e6a",
        "cursor": {
          "ref": "1c820289-ca3b-4ff8-9fa2-0a0f2c0ffd3a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ada6260a-9b36-4895-ae32-b74bab78b9b0"
        },
        "item": {
          "id": "d25d2c82-e1db-4b9a-b23b-ff028b062e6a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "689d8729-ae86-48e5-9a0f-755b77764257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549ba362-88da-4141-9a64-d90be35f61e1",
        "cursor": {
          "ref": "4b9e3654-9381-4f29-9cb3-1a4d2f14a4e3",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e16a28f-7f22-48f8-b592-6da221b6fa5b"
        },
        "item": {
          "id": "549ba362-88da-4141-9a64-d90be35f61e1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d58b3bac-a252-4527-abf4-dee461b3fe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c88c9dc-3725-49e3-ad03-8aa32d3bb5b0",
        "cursor": {
          "ref": "1dbdc965-49cd-4693-b3eb-1b0b449b1468",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0049375b-c536-41cb-bb11-3cb495b311a7"
        },
        "item": {
          "id": "9c88c9dc-3725-49e3-ad03-8aa32d3bb5b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53a87439-dcd0-44b9-96af-d17e72f771bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99456d-f418-4b5f-bed0-d5ab673dea30",
        "cursor": {
          "ref": "6590400f-c875-4f5b-90e4-3727f12935ad",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e15c5a28-42b2-454b-a50a-ec2a97d476a8"
        },
        "item": {
          "id": "0e99456d-f418-4b5f-bed0-d5ab673dea30",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "38219b39-ed68-4c3c-aa51-be9f5de637b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80569679-3a88-434a-91aa-70582fe2fdaa",
        "cursor": {
          "ref": "5659071a-951f-4a47-ac6b-8c03f6df1e39",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "13cbd131-4268-4b01-a91e-d03cd44bfefd"
        },
        "item": {
          "id": "80569679-3a88-434a-91aa-70582fe2fdaa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b5061e28-7f24-4790-a6a9-59e27913e8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc95c0a3-695c-4be0-ab47-655802959906",
        "cursor": {
          "ref": "2270adda-c9df-4673-be5b-762ec6fc7a48",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c752f666-f701-4cff-9c29-add8cdbe0802"
        },
        "item": {
          "id": "fc95c0a3-695c-4be0-ab47-655802959906",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ba81a0b8-a043-4dbe-9f63-152e28460801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56b7c2a-5316-49be-8dba-21a01b7bc7f1",
        "cursor": {
          "ref": "3fdac1a7-d124-4292-8dd9-a092449bbddd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "62689c1e-0ea3-4b72-8550-47b7cda037ca"
        },
        "item": {
          "id": "e56b7c2a-5316-49be-8dba-21a01b7bc7f1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "238f7e1b-6232-4537-885c-aa3097d9a75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57fc8df-7297-4d6e-aa1f-698d8b407f06",
        "cursor": {
          "ref": "e9401244-00e3-48b7-ab2b-57e345fa571c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "74adf499-7b6b-4c51-a8c5-2fdeb9c3f164"
        },
        "item": {
          "id": "d57fc8df-7297-4d6e-aa1f-698d8b407f06",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b20c5f13-9df0-44b8-8b75-c12537cad1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746ced7-dc31-4460-84e3-c0d6e055314d",
        "cursor": {
          "ref": "c1e5a0b9-6465-40d6-87f3-523554c57f5e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "39600fd2-82a6-48bb-bd8d-fbba82da3d5d"
        },
        "item": {
          "id": "8746ced7-dc31-4460-84e3-c0d6e055314d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "87dfd8a6-980f-4d67-8189-9e023f411f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf94c94-acfb-420d-9451-9b7daefa96b3",
        "cursor": {
          "ref": "1d06d9ac-ee0d-455b-ab26-990114e96ebe",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7909e460-a6bc-4683-acbb-c2d9fa370f86"
        },
        "item": {
          "id": "6cf94c94-acfb-420d-9451-9b7daefa96b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "129bcf91-26ad-4db9-8762-d954b5df1cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f276f3-df9e-419c-b47a-e343d718321c",
        "cursor": {
          "ref": "04704208-a729-448a-9fb8-70a68a632e49",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cfa6dcf2-27f5-4677-ade3-4831da21e1a8"
        },
        "item": {
          "id": "71f276f3-df9e-419c-b47a-e343d718321c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2fccb121-6cc6-4dd9-b44f-d4ee096c314b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7868e62-8171-419a-b147-e2977d28510d",
        "cursor": {
          "ref": "9de1fdca-c7bb-44fd-94cd-25f44832e30f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "55540090-35d5-432c-b1b8-1e3d1fea5f71"
        },
        "item": {
          "id": "d7868e62-8171-419a-b147-e2977d28510d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c00e6fc2-3819-4451-be58-6a1cb6384c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850f1bff-5ee2-4723-95a8-668268cfb655",
        "cursor": {
          "ref": "799aa665-6c18-4edd-b5b6-2be6b0a9cb15",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "be95e791-498b-4a48-88e4-7797b77e3656"
        },
        "item": {
          "id": "850f1bff-5ee2-4723-95a8-668268cfb655",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5e630899-4777-40a5-b8ba-1e539a282467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dea0bf-395b-44eb-9534-ea2ca65e0739",
        "cursor": {
          "ref": "8e98b7a3-63d2-429a-8068-07586da31a52",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7186d9d4-c84d-4125-86e6-362877eb86b4"
        },
        "item": {
          "id": "e0dea0bf-395b-44eb-9534-ea2ca65e0739",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9abb4afb-4d15-4f7b-a46c-3ef0692040eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db24799-c6dd-4d45-aba8-a95fdbcbcc5f",
        "cursor": {
          "ref": "71860f33-3384-4199-b65c-9291b06bbb30",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "53affd15-fee2-4f26-94c5-5ffa606375d1"
        },
        "item": {
          "id": "2db24799-c6dd-4d45-aba8-a95fdbcbcc5f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5240bb7f-3603-4c4d-81a7-c129d9f1d15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd0e613-04aa-444d-91a7-fc1e09267609",
        "cursor": {
          "ref": "f1999801-fab3-4650-9f98-83d1c82bdb72",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a8bab2a6-6652-4dec-baf7-2f30866cf578"
        },
        "item": {
          "id": "7dd0e613-04aa-444d-91a7-fc1e09267609",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a703ef88-3cdd-4f8f-a894-a7b0becea14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c8787e-1ce8-48fa-b1d5-900939c78ea2",
        "cursor": {
          "ref": "9ffe4468-dac5-44a5-a345-926399f8da34",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f58b56dc-31fb-48d8-b010-f73e44037de7"
        },
        "item": {
          "id": "46c8787e-1ce8-48fa-b1d5-900939c78ea2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0ee99f6-85ef-4510-b857-1d8b352564f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef70fd7e-00c4-4d41-ace4-909b223d2ee6",
        "cursor": {
          "ref": "97588a04-201b-4926-ba1c-f6081f9a5e28",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a01171c9-a5a6-4f98-8cca-4398eb09af6e"
        },
        "item": {
          "id": "ef70fd7e-00c4-4d41-ace4-909b223d2ee6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e819eeeb-7fd2-449c-ae7e-608ed82f5f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e84b6e-8682-44b3-a6d9-98b22267f72f",
        "cursor": {
          "ref": "7f67ce23-92b1-484b-bc6e-79266ea198fd",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f4b2f67c-8482-4ebb-9594-6a90ee78ac1d"
        },
        "item": {
          "id": "a4e84b6e-8682-44b3-a6d9-98b22267f72f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "856179ac-d2a4-4c66-af8e-534044d0136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8fd72d-c5d2-424b-9ce8-7ecb9582399a",
        "cursor": {
          "ref": "a8338ecb-19fc-4d67-b03a-5f2a9ab72d05",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6be96011-d9a4-4e53-a9a3-61118b37384e"
        },
        "item": {
          "id": "fd8fd72d-c5d2-424b-9ce8-7ecb9582399a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4dd54f61-c554-4b67-bd40-7ecb0929c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a215a73e-3ff2-438a-99f1-0d5d3c20b1e2",
        "cursor": {
          "ref": "96b23804-7be0-4ff9-b128-062433894dd5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "adaa5b9f-823d-4485-b503-dff299e35571"
        },
        "item": {
          "id": "a215a73e-3ff2-438a-99f1-0d5d3c20b1e2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b4da1fe-fbb9-4e85-a314-3ff0f7899abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0100cf-86dd-411b-abcc-0371117e4b9e",
        "cursor": {
          "ref": "b1c77d8a-9c40-4162-99c8-3fcab5ffccf8",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f179fc3-bcfb-4741-a8a6-c9331c5bfb78"
        },
        "item": {
          "id": "eb0100cf-86dd-411b-abcc-0371117e4b9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e50b7c0a-2e15-4b5d-a2fa-895ad2c0131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb7d403-cb09-4de2-ae59-1a699b0aa7ea",
        "cursor": {
          "ref": "13e09a7c-a531-441e-aa89-02b6a0f778ff",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dcc32154-4d32-4691-8ce6-3c56c5ab45e6"
        },
        "item": {
          "id": "4eb7d403-cb09-4de2-ae59-1a699b0aa7ea",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "61947b0d-b592-4659-8e14-a59e8ddfaf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e339916d-8485-4f00-96ba-71aba5d8b4ef",
        "cursor": {
          "ref": "616699dc-dc05-48d5-a657-d169171a6b9f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "acd32008-2208-49d6-8daf-2259d17c2fee"
        },
        "item": {
          "id": "e339916d-8485-4f00-96ba-71aba5d8b4ef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5dc14de-f79e-450b-8ff4-3492319889d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945e537d-1637-4d7c-a7e0-46d9cc21df17",
        "cursor": {
          "ref": "bd327918-1ab3-4f03-b6b4-a49921836bd4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fe01f9d6-7bef-42ae-b3dc-83d7f7083c8e"
        },
        "item": {
          "id": "945e537d-1637-4d7c-a7e0-46d9cc21df17",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "37d5546e-04ed-4d3c-ada6-1bc554844f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4465f13-44b5-402f-9ddb-3afa5f9ae488",
        "cursor": {
          "ref": "16b2b70f-211d-4791-b4e4-8a494ecb515f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e3f0c152-4c8e-4e1a-bea6-dafa7d32c211"
        },
        "item": {
          "id": "d4465f13-44b5-402f-9ddb-3afa5f9ae488",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ee1226f-93f0-4413-b80e-1e84063c8e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cc88c5-64da-4485-bec1-6bff22676025",
        "cursor": {
          "ref": "21ee2a7e-2b22-42b4-b0b1-ca7a20daa29a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a81cea69-c128-406b-95d3-7ee230a1024e"
        },
        "item": {
          "id": "f3cc88c5-64da-4485-bec1-6bff22676025",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c86e7f72-fc4d-4322-8b46-510959357ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af74745-48f7-48f7-969f-daa24016210c",
        "cursor": {
          "ref": "011cba9f-8d26-4440-be4f-e67242a926cb",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "feeedd90-b4ea-4011-a008-320228ac7b98"
        },
        "item": {
          "id": "4af74745-48f7-48f7-969f-daa24016210c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1036beaa-3ccf-4df9-8c28-9584bd03245d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5a4abf-26e0-40d8-b165-298ced57b339",
        "cursor": {
          "ref": "b738830f-9638-4a84-b758-ef4725d96584",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d50ab79e-2f8b-441f-8bb6-991476165eb2"
        },
        "item": {
          "id": "dc5a4abf-26e0-40d8-b165-298ced57b339",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "902e927a-0b0c-45d0-a685-774a7dd1fef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baab1c1-38d6-4a0b-96f6-b240494a2744",
        "cursor": {
          "ref": "00c5ec7a-053a-4b9f-827e-133ed67402e4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b97d5b4-15d9-4cc0-a1d9-a216852d2ed0"
        },
        "item": {
          "id": "9baab1c1-38d6-4a0b-96f6-b240494a2744",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f6fe21b-1b32-4df4-84c5-6ede6c1acccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419a61d0-13e5-4aee-a4a9-e67625300e7a",
        "cursor": {
          "ref": "6bb1b13e-3a86-41ce-b794-903eb489ac59",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ed7cf873-3eaa-4d3e-9bf1-4456b79642d1"
        },
        "item": {
          "id": "419a61d0-13e5-4aee-a4a9-e67625300e7a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b90d7a2f-6d6e-4d8f-96c8-ccdd4dfe48f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc12c92-e17d-4cb1-be77-09dd4130497f",
        "cursor": {
          "ref": "fb077d36-df61-4696-ae2a-fc5bf8e0ad97",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d01b49bf-9fbc-4795-90cd-5870285d75e0"
        },
        "item": {
          "id": "ffc12c92-e17d-4cb1-be77-09dd4130497f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "beeddbdc-b6b8-4c04-8c8e-a98a9d3cf5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca53fc23-3d44-4021-af71-14eedca1a50c",
        "cursor": {
          "ref": "67e27c74-3339-4708-86a6-1715cdd77e64",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9909764c-ac85-4d35-b389-aaec40bcf540"
        },
        "item": {
          "id": "ca53fc23-3d44-4021-af71-14eedca1a50c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "410eb44d-1fa4-4a59-95c2-1ec3bf91bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d48524-13a3-4794-8f76-56a3a15603cb",
        "cursor": {
          "ref": "a38442ca-6ddb-48fe-bc04-bccad57dd2de",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ced4c0c6-dd4e-4065-9d5b-d209bef01d94"
        },
        "item": {
          "id": "e8d48524-13a3-4794-8f76-56a3a15603cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ade1d6a-eee7-433d-a16c-9c2e47528b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef162b4a-c08f-4041-8252-660360342b19",
        "cursor": {
          "ref": "c6463305-588a-45dc-8bad-61b7311f4b1f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "29ee8b9f-5666-4e90-b544-b3e2fe8a34b4"
        },
        "item": {
          "id": "ef162b4a-c08f-4041-8252-660360342b19",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c53ad5ad-e81f-497c-bdf3-8cbced87a9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15168cac-0e68-4b7e-9a81-a570f2fe45c1",
        "cursor": {
          "ref": "0029a614-9653-4821-ac02-eb2f779cd0b0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ebc3fa04-92f7-4246-8158-79252c92522e"
        },
        "item": {
          "id": "15168cac-0e68-4b7e-9a81-a570f2fe45c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "475289d7-7e06-4336-b9ba-d377c174b2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03bf7a9-e4c1-4b78-b609-4bde2059bd68",
        "cursor": {
          "ref": "84a4f47f-e12b-4273-8941-e37cdab0da55",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "52b768d2-5c1c-4e94-97e4-374344e493c1"
        },
        "item": {
          "id": "f03bf7a9-e4c1-4b78-b609-4bde2059bd68",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6cad6cde-47d0-4fd9-853c-aadb677d4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdff3ec2-9b33-4196-827c-f5da7ca381b1",
        "cursor": {
          "ref": "7c9305a7-1b4d-4e0e-9f3a-ac7c40903b10",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2fadfc3-3e34-4c98-8dbd-8b55a029991b"
        },
        "item": {
          "id": "cdff3ec2-9b33-4196-827c-f5da7ca381b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a53e0a1-83a3-4436-9b4c-ba96e68a40f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382bdcd5-81a2-43a1-9775-585f25d92a0b",
        "cursor": {
          "ref": "d1cb0594-0eb5-460b-8914-e97c4f4be223",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "348e3e13-bfbb-4f4a-90ef-26a0136aa39c"
        },
        "item": {
          "id": "382bdcd5-81a2-43a1-9775-585f25d92a0b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "baa7d035-b3fa-408b-86b2-f9949b0db5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c2f5db-4add-47b7-b30b-fb92fc5e0886",
        "cursor": {
          "ref": "262756c3-07b6-42f1-a599-142e362f9369",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "17603eb8-1ddc-4e47-9feb-9e471bc3386d"
        },
        "item": {
          "id": "53c2f5db-4add-47b7-b30b-fb92fc5e0886",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fefad9dc-8c7c-4b04-8a7c-a625118b993e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c918d952-3182-4d3c-90fa-6fc80a967b5f",
        "cursor": {
          "ref": "a745d2f6-ea72-4b13-86a6-9dd0813cf9ff",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0ea4409b-b3fc-4251-aab6-332a9f1db855"
        },
        "item": {
          "id": "c918d952-3182-4d3c-90fa-6fc80a967b5f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2de01cf9-1da0-4eed-8e8a-7f63b5482133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea0bb01-5c45-41a0-ace0-3118d636b253",
        "cursor": {
          "ref": "46a5f3a6-6122-445d-aa13-2196860c46b2",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "926197cf-06c0-478d-8daa-6fdfa956426d"
        },
        "item": {
          "id": "0ea0bb01-5c45-41a0-ace0-3118d636b253",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a0cf3d5-6224-44ba-b489-a929ea2521fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c23bf5-99e9-4bfb-803b-c85b3635f83d",
        "cursor": {
          "ref": "da84fda0-2a76-4c26-898e-52862c4eff45",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0b7f2965-103e-4d01-8ca3-6a249d107f11"
        },
        "item": {
          "id": "f8c23bf5-99e9-4bfb-803b-c85b3635f83d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9e542932-0725-4ee9-84ea-5b003d739bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be529b0a-848d-41ab-9050-534d0dd7db67",
        "cursor": {
          "ref": "d260988d-8af9-4bcf-8a3d-a79af270b5a6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6e886a9d-c302-4c10-a888-d724657a2390"
        },
        "item": {
          "id": "be529b0a-848d-41ab-9050-534d0dd7db67",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "00df88f7-2e71-4409-b90d-3bdc1b3f396f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae605fc1-684c-4575-97f9-5d37a8a480df",
        "cursor": {
          "ref": "1158ee01-3c6c-44f0-806a-a9d6040043a6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8465d429-f8e0-4c0d-a9b3-9b88f9af4b26"
        },
        "item": {
          "id": "ae605fc1-684c-4575-97f9-5d37a8a480df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c6431ae-cacf-4b7f-b6bd-6af0236c8f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275b1fe6-92d8-42d2-a172-93bf9e3824c2",
        "cursor": {
          "ref": "6ec4685d-b901-4d65-8d98-2f3a748438fb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3bfa8c39-9fca-465a-b38e-177fd3fcb792"
        },
        "item": {
          "id": "275b1fe6-92d8-42d2-a172-93bf9e3824c2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c4d1bcc-12e2-40cc-9aa3-5a5816ab02f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c948fbe-bdd9-4940-a618-c7cc06c07cb3",
        "cursor": {
          "ref": "2243a532-5668-480c-af38-47e1c1e1b6f9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bedebdda-e242-47d3-a139-26226d568531"
        },
        "item": {
          "id": "1c948fbe-bdd9-4940-a618-c7cc06c07cb3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a51d1ec5-76eb-4148-b337-6fa528fe2aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08ad59f-fd36-4ea4-9da2-39bf8b8c6712",
        "cursor": {
          "ref": "457e5ffc-a8bd-4c7e-85f4-f8f91fc02f82",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2fc767ed-f040-4e07-84a9-b6dbf431b7af"
        },
        "item": {
          "id": "d08ad59f-fd36-4ea4-9da2-39bf8b8c6712",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1df39ce0-fbc6-4309-bf6a-6368ede394b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b732b94b-190f-4213-998e-c5f4c516d1be",
        "cursor": {
          "ref": "1079f316-1759-4240-b77d-983bb8d6a406",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "48af4c62-d819-4b8e-88d0-c5b1130567a0"
        },
        "item": {
          "id": "b732b94b-190f-4213-998e-c5f4c516d1be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "98811d1c-d848-4c1b-8016-b064da0a0c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0c9d20-5b39-42fd-b806-3df6a1397d9f",
        "cursor": {
          "ref": "5d9b74e5-f838-4548-a642-42904d616cf1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bdbb73fd-c559-470f-b074-803fcb5e3d3f"
        },
        "item": {
          "id": "3f0c9d20-5b39-42fd-b806-3df6a1397d9f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "11e3bff1-6e77-47ff-90ca-c48d0b04c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14189bb-d847-4e0e-8de6-20b8ab138879",
        "cursor": {
          "ref": "b9b484d8-3a76-4e6e-9c57-7c6ed674aa3a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "02f4e2e6-0476-4a12-bf83-14bde6450809"
        },
        "item": {
          "id": "e14189bb-d847-4e0e-8de6-20b8ab138879",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9c5985b8-64ae-4caa-b9b1-4bc6334f35ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ad5847-8a41-4690-9ecb-42ce7c1b8809",
        "cursor": {
          "ref": "151c1f59-0b43-4bd2-ba3c-6d2b4a0c9841",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6ac708db-656b-4416-8f51-5eecad25bd15"
        },
        "item": {
          "id": "c0ad5847-8a41-4690-9ecb-42ce7c1b8809",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c8bda853-afe7-4c5a-82c6-3b21e7aabc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc02ffc2-7fb3-44df-95ed-dd54b3e57300",
        "cursor": {
          "ref": "e88db5e0-c857-4f6d-986b-ceed87938fb9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "444d3e98-027f-41ee-8d69-46c77e8cdc5b"
        },
        "item": {
          "id": "bc02ffc2-7fb3-44df-95ed-dd54b3e57300",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "78acf4ea-c510-4c71-bc72-e7ad4d030183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ab2eda-fc0a-40e5-b529-a10dce260eac",
        "cursor": {
          "ref": "c223bf30-e623-40a1-8139-4c8cecf46a5e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b0dc6d70-b0bb-4e18-a604-8364c68a905b"
        },
        "item": {
          "id": "d4ab2eda-fc0a-40e5-b529-a10dce260eac",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e36de73-fd89-4be8-8d1b-69f2102d026d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffd868f-1b96-44dd-9465-f36f1a901166",
        "cursor": {
          "ref": "25daf867-4b9f-4f70-be73-7cfddd205b52",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "807b033d-79d9-4d44-9ea6-abf377f86be6"
        },
        "item": {
          "id": "2ffd868f-1b96-44dd-9465-f36f1a901166",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b29e0c23-6c68-4b2e-8825-dff9520cdc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8c88ea-64a4-4d14-ab0a-4a74126d841e",
        "cursor": {
          "ref": "d9234720-3275-4cfb-bf1b-89cc173779cb",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8c1de27c-4364-4f25-86ed-c40d45a7aac8"
        },
        "item": {
          "id": "1d8c88ea-64a4-4d14-ab0a-4a74126d841e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83fb9af1-8192-445d-bf24-aadb1ed00aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2bfb2d-870a-4c41-be20-02e286eda36a",
        "cursor": {
          "ref": "f419ebd1-b999-4c53-aee0-93da2a6fa080",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "faf7cc26-c43c-466e-be02-87705aa9b6d4"
        },
        "item": {
          "id": "ed2bfb2d-870a-4c41-be20-02e286eda36a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf16339f-d077-4dbc-a1e0-597f45290c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202c186f-88f5-40f7-9abc-c73eb77f6f2f",
        "cursor": {
          "ref": "5521d725-a49b-4efa-8e7e-bd0bc1a4ca58",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4137ea95-1a40-4fb8-85c9-eaca028f2840"
        },
        "item": {
          "id": "202c186f-88f5-40f7-9abc-c73eb77f6f2f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "150711fa-cbe1-4695-b6fb-7442d121657e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6acc6b-8b81-4abc-8816-3e0bdeaabd7e",
        "cursor": {
          "ref": "c9d3ec7c-529e-497e-b910-06485cb7a11e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "82a3d699-92b3-4dc6-a1f7-8b5a55ccff4f"
        },
        "item": {
          "id": "af6acc6b-8b81-4abc-8816-3e0bdeaabd7e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "78f0df75-1ea8-4086-9580-d409e0c0f042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956e854b-dc59-46e3-9bf4-b75a1fe4c202",
        "cursor": {
          "ref": "4ad1bb63-5294-475b-ac9c-b95b4fcbb222",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fd426431-0e03-4aeb-88e9-6fd81be890ba"
        },
        "item": {
          "id": "956e854b-dc59-46e3-9bf4-b75a1fe4c202",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4845b6c9-1263-45f0-9476-4912cc82da88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75167e48-3706-4cec-bbc9-09dbc0525b07",
        "cursor": {
          "ref": "3181d83b-670f-48fb-ac0b-15565c553710",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2038ea1d-9715-48d1-a6d0-d01d532d073b"
        },
        "item": {
          "id": "75167e48-3706-4cec-bbc9-09dbc0525b07",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cd9d3b03-1352-4baa-8a3c-471500f155fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda2c255-e472-43c1-a98d-48c82e25a457",
        "cursor": {
          "ref": "12a36e4c-2fb5-4ac6-b64a-c3d114c5cc1e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "105975ee-6be2-4df1-97d6-9611b6c06581"
        },
        "item": {
          "id": "eda2c255-e472-43c1-a98d-48c82e25a457",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a5ad69c-d5e6-4d2d-b94a-b974d59c3af0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4306b79-46fa-4d99-b940-eec06c29f5e0",
        "cursor": {
          "ref": "e6e16d26-9f27-4082-b796-c57daefbfa0a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8938f829-420d-4350-aaad-4c713b9559d6"
        },
        "item": {
          "id": "a4306b79-46fa-4d99-b940-eec06c29f5e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9e7a210a-8b7e-496d-9816-a4714d27ce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbb6e4a-938f-447e-8da0-e3cc9aa0d451",
        "cursor": {
          "ref": "817d8cd3-00c6-4cdf-881b-bd7e2785fa79",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5fa3c7b1-c9df-4a9a-9f81-c6d277d3f7e4"
        },
        "item": {
          "id": "bbbb6e4a-938f-447e-8da0-e3cc9aa0d451",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "275f042d-749e-454f-88f1-cc046bd2e189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06239c19-a00d-42c7-8f21-e37684e282bd",
        "cursor": {
          "ref": "c5640a46-a4cd-4373-8c02-db4f7d8e2b05",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6fb2219c-bc5b-4f81-83c0-d053cf43b153"
        },
        "item": {
          "id": "06239c19-a00d-42c7-8f21-e37684e282bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d232d0cb-def8-4edc-890e-0352a264eb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c15daf-01d1-442a-82f1-5a173e49ef66",
        "cursor": {
          "ref": "2660feca-e3fe-4084-83d5-a34f8aea484c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb97f8e6-696f-4346-95c5-d5a891e94609"
        },
        "item": {
          "id": "e6c15daf-01d1-442a-82f1-5a173e49ef66",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b3a6c265-ad92-4605-9938-76a0ddc992cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec7d2ba-2e5f-46c4-a0be-1d566462eb58",
        "cursor": {
          "ref": "ca4ec9c4-17b9-4b7b-9c69-78ad9d1b3f62",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3186efb7-5f66-406f-8f60-67c7691073cd"
        },
        "item": {
          "id": "aec7d2ba-2e5f-46c4-a0be-1d566462eb58",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "349b7e99-eac8-455f-b02d-e03902a9e5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d18e1c8-1f58-4b43-8cf4-eecf23bcf83e",
        "cursor": {
          "ref": "03fbdc59-3329-464a-bfe5-35a930cd273b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "44417296-97dd-4b2a-adb5-ca6b0a41cdb2"
        },
        "item": {
          "id": "4d18e1c8-1f58-4b43-8cf4-eecf23bcf83e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5b787f46-b857-46b2-80d0-65afd616f7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8009bb-551c-4d26-b8da-c4784173602a",
        "cursor": {
          "ref": "b30b2b57-c779-498b-8aa0-5ea7ee2f9a76",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bd6567d4-5fee-4016-8107-389716065983"
        },
        "item": {
          "id": "0f8009bb-551c-4d26-b8da-c4784173602a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b1779e24-0d8d-4acf-b33a-cfa583322977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd1c00-3022-45ad-90bb-79915b0d8737",
        "cursor": {
          "ref": "8766bcb3-0aca-4cad-9282-b8b21aeccd46",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "40377261-1ef8-473b-8eae-283e0c5ac49f"
        },
        "item": {
          "id": "aedd1c00-3022-45ad-90bb-79915b0d8737",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6f27e85-41f6-46e3-9eb5-b2bd0b7e0b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d5c879-75d0-447d-9eb4-6aa1da27b347",
        "cursor": {
          "ref": "fc3c05fe-c532-4349-9ea0-bd14b19fe6d2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dd12ce93-b37a-4e91-a8b1-f3f7ffd822c0"
        },
        "item": {
          "id": "b6d5c879-75d0-447d-9eb4-6aa1da27b347",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8fd2cfec-f852-417d-8355-b8ab8129f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65083f3c-28a7-42b5-8b96-5b38e540b65a",
        "cursor": {
          "ref": "114e6681-aebd-45ef-9484-a5f52e642d28",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e3a8ffc8-3bfd-4a8d-9700-cf5f695a82fa"
        },
        "item": {
          "id": "65083f3c-28a7-42b5-8b96-5b38e540b65a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "da088975-1073-49a4-ad96-024ab160afa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd26a172-254d-4f26-a608-f3f7ac74193b",
        "cursor": {
          "ref": "f8ada24b-da9a-451a-b4a4-3734dec4ebfe",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3aa2fad9-3275-409a-8336-d35af8121a08"
        },
        "item": {
          "id": "cd26a172-254d-4f26-a608-f3f7ac74193b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "72f3b05a-b838-47fe-a7cd-4e1b1abce2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947152c9-daef-43a2-84e9-b116a431595f",
        "cursor": {
          "ref": "9f6f9099-1dd7-40a2-9503-824f6b3e2322",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2b6970a0-c418-4941-8e0b-1abd0002a130"
        },
        "item": {
          "id": "947152c9-daef-43a2-84e9-b116a431595f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a534217e-23df-41d6-a4a3-d482f39cb697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1738868-2fec-4978-8f8e-a67259b8f7c6",
        "cursor": {
          "ref": "47ed1395-dc5b-4227-9e87-74e934a1502c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "393db96f-8c0a-49ae-88d7-dfc7b98a5444"
        },
        "item": {
          "id": "c1738868-2fec-4978-8f8e-a67259b8f7c6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a9caa2e0-4bed-4b2c-8fe7-c1d61210b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b68b4f-3be1-4005-ba4f-b5c4fc4909ee",
        "cursor": {
          "ref": "8cd40af1-af40-4006-9a7e-23cee2c5f0fe",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a5a1a999-57fb-47e0-b814-36dfed1be468"
        },
        "item": {
          "id": "e5b68b4f-3be1-4005-ba4f-b5c4fc4909ee",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e686b650-3739-473b-9ca7-5eb9bdd63495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555a8497-45d5-4318-9611-a11ec04c95f6",
        "cursor": {
          "ref": "3074891b-f69d-4bdf-b018-863c18698c65",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88e1456b-c589-467f-b45c-6d5dc52ae1b4"
        },
        "item": {
          "id": "555a8497-45d5-4318-9611-a11ec04c95f6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "90b45ad6-a507-4071-92c4-c8679fb2cb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84af5f4d-0e20-47e7-af91-557252976372",
        "cursor": {
          "ref": "179a8a26-3663-46c7-adc5-109e98915475",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8aa7ae66-16aa-482e-af0f-38ad4418c4f4"
        },
        "item": {
          "id": "84af5f4d-0e20-47e7-af91-557252976372",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "be417395-7e0d-436f-aeb3-e62ca186c118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9399a04-a8c6-48fe-8f81-0ce4b594ff2e",
        "cursor": {
          "ref": "b9adf4c7-1c26-48fa-973c-5d4e87feea70",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "19f3bf70-7dcf-464a-8692-2c35398d2015"
        },
        "item": {
          "id": "d9399a04-a8c6-48fe-8f81-0ce4b594ff2e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4bfe4942-0421-4c92-869c-5cc461b7b17a",
          "status": "OK",
          "code": 200,
          "responseTime": 201,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "344c078a-a0d1-4e40-8623-09b9fb71311b",
        "cursor": {
          "ref": "dd66b3ef-f722-4e08-bd4d-137737c9018e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3076520e-d94e-41cb-82ad-eba44b925a96"
        },
        "item": {
          "id": "344c078a-a0d1-4e40-8623-09b9fb71311b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da14aea9-1861-405d-b862-52b060b3c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182a8b8f-dc92-4ae7-b6f9-c24bd3301d41",
        "cursor": {
          "ref": "61cdccee-e2e2-48c2-acb8-b121c690f669",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "59860d11-0b3a-41da-9b4d-79376eae669b"
        },
        "item": {
          "id": "182a8b8f-dc92-4ae7-b6f9-c24bd3301d41",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f0d8295-6174-496a-aa03-3a8a8582bc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b809ca33-3835-4ec3-aca8-eab4485b6e3e",
        "cursor": {
          "ref": "e74ceb5c-8152-4f80-a903-fc03bd455c43",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a1fb9893-381f-4448-90c4-1592a4ceb248"
        },
        "item": {
          "id": "b809ca33-3835-4ec3-aca8-eab4485b6e3e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7b8163d6-b237-4a93-9827-e0398859942d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05568a65-5af7-4318-ad9b-9d8896f56348",
        "cursor": {
          "ref": "5044d38e-f45f-422f-89f9-47a3c9538250",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c4877f3c-c124-43a3-b104-516e50fc6627"
        },
        "item": {
          "id": "05568a65-5af7-4318-ad9b-9d8896f56348",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cda2e608-b49a-4ac6-8073-77b40329b4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b192b0-0cdd-40e3-81a0-fd937f525596",
        "cursor": {
          "ref": "65fc42e7-581a-45fd-b2f7-8ce805137a7c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a7db6f30-3bde-436c-b9fa-2754e02621ab"
        },
        "item": {
          "id": "46b192b0-0cdd-40e3-81a0-fd937f525596",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5bc63e7a-8413-445f-821d-d4bed9bebc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b786ea-9d7d-4f69-ae32-3c9bd79f53f1",
        "cursor": {
          "ref": "091258e1-f34d-4633-bdeb-431a9e09faf4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "729a4503-0b35-4504-821d-1e4cb1e60f67"
        },
        "item": {
          "id": "80b786ea-9d7d-4f69-ae32-3c9bd79f53f1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a07bb280-0a26-4329-8b54-8fdf81685b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895dbf9f-1567-484a-a76d-a877a2194d51",
        "cursor": {
          "ref": "f58b422b-5cee-4969-8c5d-a075d8940546",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f42153a4-9003-4563-b4e3-d1a85382d57f"
        },
        "item": {
          "id": "895dbf9f-1567-484a-a76d-a877a2194d51",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ef72900a-9c1a-44ba-a159-e5a164e73ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500671bb-3ca5-47e8-8257-eac964aa3a71",
        "cursor": {
          "ref": "001710a4-7715-4822-a9c1-3a8084970473",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "89f08e17-fe8f-4c95-bdd8-41deecdc719a"
        },
        "item": {
          "id": "500671bb-3ca5-47e8-8257-eac964aa3a71",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "16a40680-de91-4b7a-8fba-f641ed8598c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a37cda-1af0-43de-aa56-7b4f0f5b01cb",
        "cursor": {
          "ref": "bd781af2-ab2d-42e2-a110-b24c97dc813d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bfdf5061-4815-4736-ae06-d40831af9843"
        },
        "item": {
          "id": "49a37cda-1af0-43de-aa56-7b4f0f5b01cb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e9fb64de-678d-4f2e-b12c-199d397c7119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d52307-dd03-43e0-b280-4a4ce246deef",
        "cursor": {
          "ref": "0c4eae57-b01b-4a32-8a48-0d8cd870ab52",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d9f1032-6f88-4116-9ef8-fb24484c2905"
        },
        "item": {
          "id": "49d52307-dd03-43e0-b280-4a4ce246deef",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "03bb6e4c-b75b-4b0d-8161-d8b2dff9070c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f471d1a-a91c-4b29-aa62-63cb74374ac1",
        "cursor": {
          "ref": "2847ba82-bc19-4440-a49e-42f04de778c0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "15014ea9-c237-4c7e-b09a-a4201546f3a7"
        },
        "item": {
          "id": "6f471d1a-a91c-4b29-aa62-63cb74374ac1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a6710f78-540b-46fa-992a-118c010c055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5dfda6-762d-4f15-a719-6f84ae003b19",
        "cursor": {
          "ref": "0dd12c6c-5d0f-4ecd-9001-013ea476c12a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ee0e6ebc-cc32-4d34-832b-84a5748f120e"
        },
        "item": {
          "id": "3a5dfda6-762d-4f15-a719-6f84ae003b19",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "591f826f-66d1-449b-b849-ddfbde8f3f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a9c540-0488-47a8-ba8a-f525a3931bff",
        "cursor": {
          "ref": "f1946291-56ee-4514-8e2e-283ad0d175e8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ddf590bb-213e-42aa-a8bb-b3ee3cf1cd1a"
        },
        "item": {
          "id": "f1a9c540-0488-47a8-ba8a-f525a3931bff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e2b65432-e50e-42b5-b9dc-7291d8075af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0b1f4e-77b4-4ece-9ae0-a6d236f41193",
        "cursor": {
          "ref": "d96bd617-f6b1-4a18-bede-ed6e2041bc63",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bf9e5402-d57b-41dc-b784-b8fd5b56cf52"
        },
        "item": {
          "id": "1f0b1f4e-77b4-4ece-9ae0-a6d236f41193",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "58cdf717-e008-42dd-bcff-901114ecf30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d15c1a-d5bd-4a77-95bd-5e9ede1ca2b9",
        "cursor": {
          "ref": "de08039e-7902-4fa5-8283-cd51ee187c83",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8e89a324-8c14-42b9-b110-4fdd14843765"
        },
        "item": {
          "id": "12d15c1a-d5bd-4a77-95bd-5e9ede1ca2b9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "483ddc69-bd6a-46af-9ffa-df8afb048ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbddd818-937a-44f2-9f11-a69a2cb00840",
        "cursor": {
          "ref": "09efe2d4-e121-4635-bbe5-20c3d34b23a1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0bf0dba4-38b8-4027-9e9f-154f432379d1"
        },
        "item": {
          "id": "dbddd818-937a-44f2-9f11-a69a2cb00840",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "be6c8fc4-67cf-4879-b4e3-d45d0f53cc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3d97ee-ee79-4f65-b085-fad18fdc2daf",
        "cursor": {
          "ref": "15939b67-346a-48ba-abfb-bab7c0822b26",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "692fd8df-8ee5-4650-b0aa-d20f354813ee"
        },
        "item": {
          "id": "9f3d97ee-ee79-4f65-b085-fad18fdc2daf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7279a39b-c5d0-4cc9-9d87-546d48ed0652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524cef71-823e-4b69-9f56-a35fd1c3b958",
        "cursor": {
          "ref": "fefbd6e1-ab2c-4909-9639-fb6c9e468f0b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "90539496-3f83-445f-9251-1c78a23bc4d4"
        },
        "item": {
          "id": "524cef71-823e-4b69-9f56-a35fd1c3b958",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "13f63b84-1369-4c3c-9d70-535de859feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a8368b-b8ed-45a9-8dbd-9ce08fe42415",
        "cursor": {
          "ref": "a0edd121-ba09-4734-967c-20d41f507f45",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "887d214a-c772-4b0a-90da-c6057337d747"
        },
        "item": {
          "id": "91a8368b-b8ed-45a9-8dbd-9ce08fe42415",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dfa674c1-16e7-4699-9371-f32138c10cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d383958-e7fb-4615-9565-da2fbb6b9738",
        "cursor": {
          "ref": "06308093-953a-4df7-b4ba-82506eb10993",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dbe577d9-41f4-42e4-b1d1-b09a89f36ced"
        },
        "item": {
          "id": "6d383958-e7fb-4615-9565-da2fbb6b9738",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f8e8fde8-b14c-4c64-a623-3faa7bddaade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ffecb2-79c7-463f-9e0f-8fc4bc449c54",
        "cursor": {
          "ref": "6b8a2a6a-0666-426f-a3ab-e8b32f6e95b5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "18ecc3ba-1398-4f8d-a84a-8045e7d600b9"
        },
        "item": {
          "id": "a0ffecb2-79c7-463f-9e0f-8fc4bc449c54",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1657224b-90af-4496-a27b-9d6502ed55c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1410fa89-40a6-467c-b130-b3dbe4cf036c",
        "cursor": {
          "ref": "0cbbad4a-029c-469f-91e9-3cbaa70e8610",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d43eb6d3-1a77-4294-9c2d-8e2749234584"
        },
        "item": {
          "id": "1410fa89-40a6-467c-b130-b3dbe4cf036c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d24b1792-b074-4d31-915d-f58700ac3d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee35eb5e-fe21-4dd4-bbc7-822357ef802f",
        "cursor": {
          "ref": "acfcafb0-3430-4337-afe7-be837c0786ec",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5e39e512-4825-45a4-b718-f4ac540239ae"
        },
        "item": {
          "id": "ee35eb5e-fe21-4dd4-bbc7-822357ef802f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "da4dc7b4-4bd5-4df5-aaaf-8ac9be2bab5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de429f2b-62a0-4529-ac19-830b8aa5e2cc",
        "cursor": {
          "ref": "cba4a7f1-8520-40a2-a45e-8e44d77bb0ee",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "864db753-c275-49a2-ad35-fba77fb09190"
        },
        "item": {
          "id": "de429f2b-62a0-4529-ac19-830b8aa5e2cc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a80859ff-9c18-4ba3-ba56-d8b815123351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6416c925-96d6-4e3e-8e25-9b0dbe540798",
        "cursor": {
          "ref": "56596bc8-92ac-4867-8bac-94e5f8f6b0f3",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "09891068-0569-42fe-afaa-6c36a5eba50e"
        },
        "item": {
          "id": "6416c925-96d6-4e3e-8e25-9b0dbe540798",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a6a2b9fd-e23e-4845-9fb2-132e4bef934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e941e1-a72b-4c17-ae3c-d228f7582371",
        "cursor": {
          "ref": "4c60beb1-5155-4b72-afb9-7406dc8931aa",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "08197420-ad71-4817-80ff-f0c75c5e1893"
        },
        "item": {
          "id": "70e941e1-a72b-4c17-ae3c-d228f7582371",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d7623c91-46e5-4c81-98de-2d660038057c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda46713-7c42-4b25-a40a-ca20516230aa",
        "cursor": {
          "ref": "37965019-2a6d-48e4-8b30-77ea6e338aea",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0d81e022-4d4d-4472-89fc-8412fd653b57"
        },
        "item": {
          "id": "bda46713-7c42-4b25-a40a-ca20516230aa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3efc9666-7309-4617-a5a7-3828be5e0ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0c25db-dc26-4df4-adff-be65fe53caa3",
        "cursor": {
          "ref": "1c4a2226-bf5d-4d36-ae6b-37ddb078c419",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1677e110-90eb-4d96-8c91-2d70b719b442"
        },
        "item": {
          "id": "3d0c25db-dc26-4df4-adff-be65fe53caa3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d5096050-5c22-48a9-87e1-d130bf186d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca974b-437e-47d4-a65c-d84f78cc5401",
        "cursor": {
          "ref": "5fc8fc14-8cec-4699-9b99-2d90897e20fc",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e41d32d8-c7db-4e7b-ad44-b535ba204e44"
        },
        "item": {
          "id": "e5ca974b-437e-47d4-a65c-d84f78cc5401",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87f04220-3af4-4c18-9389-05d269465f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771f80f6-ebdc-4139-92d7-a47afc164834",
        "cursor": {
          "ref": "0452ebc1-044d-4ad9-a655-65d2d1a2961a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "00d2c3d8-b866-4545-81d2-3302aacdb86e"
        },
        "item": {
          "id": "771f80f6-ebdc-4139-92d7-a47afc164834",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a0e54154-18ce-4540-a990-cf5b8e636f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3155297-2c89-4931-a252-efca37555acd",
        "cursor": {
          "ref": "2ba392d6-6865-448e-9449-d09ebb64d7bf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "65bfe0c0-238c-46a5-beb6-95f9b21360b5"
        },
        "item": {
          "id": "a3155297-2c89-4931-a252-efca37555acd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c0d3b5c9-92af-427e-926d-959988bab108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895ea71-59f1-4916-88a3-689223be85e8",
        "cursor": {
          "ref": "69222b3c-8c5a-421d-b585-fb2860cbd700",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4ec6d416-6f5e-4a12-b60e-58b9fa2704d9"
        },
        "item": {
          "id": "5895ea71-59f1-4916-88a3-689223be85e8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4c6c3299-2e42-471a-bf21-2e73ff4ef900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95aef092-919d-4780-bfa7-b7eb7b8f7f56",
        "cursor": {
          "ref": "82c83f08-cbd9-40d1-b0f0-81b5ba525526",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f83dbd03-977d-40a3-b7bb-882c9d10b33d"
        },
        "item": {
          "id": "95aef092-919d-4780-bfa7-b7eb7b8f7f56",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "968096cd-caa3-456e-9040-9df3a47b75d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80e2a40-c926-499b-bc90-66d2c43d7fae",
        "cursor": {
          "ref": "a88fa04f-7661-4bc9-acfc-988f7eccfbf6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0bee094b-a6e5-4a31-becf-f76e5db428d0"
        },
        "item": {
          "id": "e80e2a40-c926-499b-bc90-66d2c43d7fae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1586d624-ae92-4568-aee1-3729b5025bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa5b10c-2ecf-4be5-83e3-f54153a838a8",
        "cursor": {
          "ref": "a0e33932-6b39-44e8-9f13-eba46b9c7298",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b0901ef5-af33-40f2-89a2-38d4abe11c73"
        },
        "item": {
          "id": "aaa5b10c-2ecf-4be5-83e3-f54153a838a8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f435f536-8a7f-40e3-a58f-3fa401c15789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e76e85-ee3c-483e-aac6-c0200a549a82",
        "cursor": {
          "ref": "4aa13b48-2587-457e-a1da-a5a7ce6fda3e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "08e6a59e-ccec-4c37-9a43-566ed1583961"
        },
        "item": {
          "id": "46e76e85-ee3c-483e-aac6-c0200a549a82",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "618b0176-5997-4431-9c1a-c6ca5dbfdbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13208406-45b9-417b-ad6a-5ea921be3e7d",
        "cursor": {
          "ref": "752a5318-132f-481d-9edd-c424c8986715",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "396f4ba5-4fad-4214-a51c-966d8b40f259"
        },
        "item": {
          "id": "13208406-45b9-417b-ad6a-5ea921be3e7d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a6007a3-ec75-444e-bc3e-57885b7edef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edce84f-289c-4147-b674-974c6402ed59",
        "cursor": {
          "ref": "b4bb0092-6d2c-4ac5-8744-f515f16fb1b7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "07c47f96-8a76-478d-be3a-51c7130ccacf"
        },
        "item": {
          "id": "6edce84f-289c-4147-b674-974c6402ed59",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b5cad6a0-b59b-4915-acca-3252fc928d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1fff6a-0ed7-4464-a0f6-c9ed98b9d827",
        "cursor": {
          "ref": "a1f556f2-a727-4854-9828-601a880ac106",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6a72eb63-746d-4952-986b-7b9b0988dda7"
        },
        "item": {
          "id": "5a1fff6a-0ed7-4464-a0f6-c9ed98b9d827",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c7dd6430-b114-4bff-bbdc-9dab7052c293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec4f6f5-6c0f-448a-a873-6d617c63d22c",
        "cursor": {
          "ref": "b3c6bde3-5f27-43dc-a849-b59387f4b1c0",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3818e7af-1d4a-45c8-854c-2d8a17c88c6f"
        },
        "item": {
          "id": "1ec4f6f5-6c0f-448a-a873-6d617c63d22c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6a1480cd-8cf5-4bb0-aec6-ff344ba88f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7cb314-a3a9-4f30-acc0-69c2dabfaa45",
        "cursor": {
          "ref": "6172ccf1-4542-471f-aad3-1fd9774593df",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "78fd71e3-2cec-4a56-84e6-2ba1732dedb6"
        },
        "item": {
          "id": "fb7cb314-a3a9-4f30-acc0-69c2dabfaa45",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "76e3e83f-16dd-4ed1-a37c-36f0c6fce0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4245d9db-07f6-4642-b5a3-718be0270e31",
        "cursor": {
          "ref": "ffc67024-7ab5-4f61-89c8-b5ff120eff4a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "32cb9208-ac90-4496-8901-073599459758"
        },
        "item": {
          "id": "4245d9db-07f6-4642-b5a3-718be0270e31",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5da42ed8-9d69-4a0a-8a26-642d77be6f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d524bc-b72a-4e2e-b793-e163080c1666",
        "cursor": {
          "ref": "20d83926-c774-43e2-9a6c-ccdf3bbd02f0",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "23f14287-7477-44a0-8e25-88374467f5a3"
        },
        "item": {
          "id": "c6d524bc-b72a-4e2e-b793-e163080c1666",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c57611b4-0f9f-44d7-80f4-f5ba011aaed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e6e8b-1713-4e72-90a5-5763c4b63b60",
        "cursor": {
          "ref": "bf3467d2-a90a-4590-acb2-5f5c9170065a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "77e91485-9f8e-4fc4-ad11-379e9a44cbd1"
        },
        "item": {
          "id": "9d8e6e8b-1713-4e72-90a5-5763c4b63b60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4bbab535-6253-4255-b52d-3663ba6ac1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eab354-1604-4f07-865b-6b718ef66377",
        "cursor": {
          "ref": "53cbe798-3fb8-447e-b4c5-ef8668f1d0a0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "077b0c24-7320-45dd-a4d5-b0c4afb61f82"
        },
        "item": {
          "id": "20eab354-1604-4f07-865b-6b718ef66377",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d6e72cdc-25d3-41f2-8009-e7c39ac9b655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d477690e-e87a-4ce5-8460-1261d3357281",
        "cursor": {
          "ref": "4de7f5f6-4eeb-4fbf-a2a8-87d9d38609d4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d439489a-a8a3-4bd3-a033-29ff0d3a84b3"
        },
        "item": {
          "id": "d477690e-e87a-4ce5-8460-1261d3357281",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4f43c55f-66f0-42fa-ab70-26288b60f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2641236-542d-42d0-bcad-6acb957f24a2",
        "cursor": {
          "ref": "52411c44-a3b5-4438-a5d1-cb80919b87ba",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73732882-74c0-42ba-8e02-370221a92cf1"
        },
        "item": {
          "id": "d2641236-542d-42d0-bcad-6acb957f24a2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20fdc3b0-c73c-44eb-b324-c3f3d29eb815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f3c8d4-54a8-4484-80b1-c8850a7c45ec",
        "cursor": {
          "ref": "86600f53-3ccf-414e-b141-ee4a3a41da22",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e4f4ac72-1e48-41fe-8f64-47306ff5383a"
        },
        "item": {
          "id": "69f3c8d4-54a8-4484-80b1-c8850a7c45ec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "99763f64-645c-41f1-9c8d-1e5f052c7601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506ec5f-6e5d-436a-aadd-8a599344e7d7",
        "cursor": {
          "ref": "835de031-8129-4dd2-ae64-39f519c05452",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "56e1a21b-9c12-4742-ac16-413c45f6d58d"
        },
        "item": {
          "id": "7506ec5f-6e5d-436a-aadd-8a599344e7d7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8286a28b-d6fd-433d-824f-4b2a0189873f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070c2192-4421-40ae-b781-b99dfb270883",
        "cursor": {
          "ref": "e7c00b3a-f2ce-4feb-885f-b487680ae98c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f30bbf1-002e-48f2-959f-c188c506d75d"
        },
        "item": {
          "id": "070c2192-4421-40ae-b781-b99dfb270883",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92c1be07-2c7b-49c6-bca1-91f5a07f60a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6398ee70-6ab0-4bf9-9f63-cb8e4f90d057",
        "cursor": {
          "ref": "e1c7b58f-5a17-40d2-8444-07c5f09d3d07",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "407a32a1-62fb-43e5-9b73-94abdc27851e"
        },
        "item": {
          "id": "6398ee70-6ab0-4bf9-9f63-cb8e4f90d057",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3a6c9efc-e60e-4877-93ee-9f8e842bbcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caa84b3-b7d9-4bd4-97ee-43abdc605abe",
        "cursor": {
          "ref": "611ebdf8-bf37-47fd-8eba-66ac7b25f614",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd563a7b-aaa0-405b-ba83-a51caf00ab05"
        },
        "item": {
          "id": "0caa84b3-b7d9-4bd4-97ee-43abdc605abe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c5ae344-afa4-4ca8-9288-f3819f8374f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169695fc-3a6d-48cc-ba84-a062c867e8a1",
        "cursor": {
          "ref": "f11db628-0583-4f3c-8d83-27ea33a6f5c7",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "93ee205a-a3b6-4952-9350-8f2cae772ca3"
        },
        "item": {
          "id": "169695fc-3a6d-48cc-ba84-a062c867e8a1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33a83986-1f26-441b-b98f-054643853f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef96bb4-8b55-47b5-ae69-09beda8a24da",
        "cursor": {
          "ref": "b17f84bd-e8c2-4687-9e2a-4d620085437d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6a2823b2-3285-4e89-b812-7f45048a50d4"
        },
        "item": {
          "id": "2ef96bb4-8b55-47b5-ae69-09beda8a24da",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0cd80dbc-6b26-4bd6-855b-3013d969a491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b70203-eeda-40ca-8f91-12efa4ed898b",
        "cursor": {
          "ref": "42521974-4a73-4027-9389-65f6f22b9fc3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4f794ac3-6e47-4738-afea-339c91cc6f07"
        },
        "item": {
          "id": "b9b70203-eeda-40ca-8f91-12efa4ed898b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "10486740-0343-4885-9081-3f3b5f6d83ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c5edc-7d6c-4f68-aa0f-9e71d3575245",
        "cursor": {
          "ref": "d8bdff46-e983-4fd5-a75c-77cbf3cba119",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "84969167-91b9-467d-94d0-313ea1fd8f7d"
        },
        "item": {
          "id": "e95c5edc-7d6c-4f68-aa0f-9e71d3575245",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c512f01a-3a9e-42c0-bea9-451b365dff19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ffb3fc-f3cd-42f5-b9cd-9ce6ffd21ecf",
        "cursor": {
          "ref": "371d323d-9984-46e6-b8e2-231b83028dd1",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2675d086-31df-4288-bd5b-0ffb63d20364"
        },
        "item": {
          "id": "e7ffb3fc-f3cd-42f5-b9cd-9ce6ffd21ecf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5e65727e-85c4-4ea7-88c0-a8a46a101f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76a9ef-1f21-4950-be76-00bc5d2acf08",
        "cursor": {
          "ref": "0fcec32e-8566-44c2-8f58-a600a520ac15",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d115a789-fcb5-49a6-8c73-9b5f398973da"
        },
        "item": {
          "id": "8f76a9ef-1f21-4950-be76-00bc5d2acf08",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c78e44e5-aaf5-4ae3-8a93-94688a35c760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72fe1ea-7d60-494d-aebe-ed1390ad6977",
        "cursor": {
          "ref": "e45037f5-1209-46ff-ac1c-95f0e091f682",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1ccdcb3f-8a8c-409c-9a37-2816f0e7b2ec"
        },
        "item": {
          "id": "b72fe1ea-7d60-494d-aebe-ed1390ad6977",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ad7dee74-7a9b-4aab-b849-3841e8d6a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c9a4d-267e-416f-9159-2d7c1a064589",
        "cursor": {
          "ref": "b066cb2c-8d2c-49d2-9665-d68482c6f418",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3d90200d-9791-4db2-bebb-ddbf2f1e262f"
        },
        "item": {
          "id": "501c9a4d-267e-416f-9159-2d7c1a064589",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0fac5873-80f7-48fe-acd3-de5b41b19f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eafdc1-2293-4c3d-b903-330f9b1bd7fd",
        "cursor": {
          "ref": "21627e78-ef0e-4818-b701-9336910dc5d4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d13e37c8-870c-402b-aa9f-59bb78fda812"
        },
        "item": {
          "id": "63eafdc1-2293-4c3d-b903-330f9b1bd7fd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e7754079-e096-46c9-9d84-c75e1b709417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa96632-ac3e-411a-9dfc-5e7fcfd567b2",
        "cursor": {
          "ref": "ee64ba17-f963-4e38-9c07-734406117755",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0d784f15-fa74-4d20-97cb-8bf6133ae077"
        },
        "item": {
          "id": "7fa96632-ac3e-411a-9dfc-5e7fcfd567b2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cec7372c-e3b9-4b55-b38c-6b737448959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4a5be5-69e7-4124-bdef-3c6de4feb451",
        "cursor": {
          "ref": "8eb242b4-494f-4027-92c0-98df5010e9d2",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ab6ff85c-e194-4aaa-abfa-c592581644c9"
        },
        "item": {
          "id": "ec4a5be5-69e7-4124-bdef-3c6de4feb451",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c96bd095-2912-4a8f-be7f-eddd8d6e711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e96889-fd37-4859-a45e-0f59e649b084",
        "cursor": {
          "ref": "9ec6b3fc-a42a-4c66-a8f5-8f940c4b6a68",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ae7a5378-3294-49a9-be65-763b9d498f70"
        },
        "item": {
          "id": "72e96889-fd37-4859-a45e-0f59e649b084",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e007bd60-f917-4670-9280-36a950c97eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3073bcbd-0e14-45ce-aef1-838337ab5d0c",
        "cursor": {
          "ref": "632d00f3-cbe0-4ca7-bbb9-0b728aedd2a4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0a97e412-f87f-4784-909c-317c1e05a7b6"
        },
        "item": {
          "id": "3073bcbd-0e14-45ce-aef1-838337ab5d0c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a42afd03-29f9-4e42-8609-7739a76346d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb1d909-bc9d-47b7-a4e1-a2ba6dfd11ed",
        "cursor": {
          "ref": "c0b0bc52-d1ed-4b49-a107-025b3ee20276",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f6dada87-90c8-4f56-8376-4d940c4b10b1"
        },
        "item": {
          "id": "abb1d909-bc9d-47b7-a4e1-a2ba6dfd11ed",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b77aac94-1995-4b3b-9e8d-1e314dfd0f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47d250-f4cf-4074-8afe-03bd4b52ef93",
        "cursor": {
          "ref": "c278feff-447b-458f-973e-2d23e41de1c1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b5ff50cc-956f-4094-b002-dbd44fb2400f"
        },
        "item": {
          "id": "3b47d250-f4cf-4074-8afe-03bd4b52ef93",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d27d5237-cd25-4fcc-9f25-2ddf0cf554be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9d4b78-2a9b-4bf1-a707-a72658341783",
        "cursor": {
          "ref": "ae8f9a9a-1121-4c29-a5f8-4a7a9d8946b4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f520191b-6957-4309-a50b-77e92a029bee"
        },
        "item": {
          "id": "6e9d4b78-2a9b-4bf1-a707-a72658341783",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f5e45402-eae0-445e-8a77-b429cc02daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd96df77-11d6-4ce0-8e22-fe6aa40c7870",
        "cursor": {
          "ref": "a9aa2e2e-ed7e-4d5d-9630-b07d6a6db53a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3f82fe03-f261-45d4-998d-e0d235a6eee7"
        },
        "item": {
          "id": "fd96df77-11d6-4ce0-8e22-fe6aa40c7870",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b00b2e9e-c05e-40e3-9f8a-678b675d1c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c9dede-5cb2-40ea-8083-debcf7488054",
        "cursor": {
          "ref": "d2af14d6-b79c-4c37-8477-0619585c1c2f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e640c47c-5d29-4268-b3eb-4e7c5243096c"
        },
        "item": {
          "id": "a9c9dede-5cb2-40ea-8083-debcf7488054",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52a5c648-38b6-4c7c-897d-debbfa345da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821f8daf-e757-4a7e-9d77-abd0f649a5be",
        "cursor": {
          "ref": "a954be74-45eb-402c-a96f-8af722eb9359",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b0317196-2839-4576-b328-7e05aa6be9e4"
        },
        "item": {
          "id": "821f8daf-e757-4a7e-9d77-abd0f649a5be",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b0fee074-a5d5-4389-8925-8925f9625cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a83c40a-5d48-4807-b835-4acdf1428eeb",
        "cursor": {
          "ref": "06e36c76-e3a1-4d7c-a304-0e8f1fbc1c5b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "40cf3ecb-1ac2-4706-a15c-2ca4a6397b50"
        },
        "item": {
          "id": "1a83c40a-5d48-4807-b835-4acdf1428eeb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "78d9599f-2dcd-4aee-82a7-408b7272a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709f7b05-f5c4-4b57-a62e-fd7a4348fa50",
        "cursor": {
          "ref": "8344ee40-3ec4-4eb4-b012-216f02b7e973",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "539a4e7f-95f8-4e0b-850f-7998ff5580d5"
        },
        "item": {
          "id": "709f7b05-f5c4-4b57-a62e-fd7a4348fa50",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44fae8b9-4aa5-482b-922e-cb448fa7f865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9f36b3-4f65-47f1-b8ae-9c8e8a5bf0c5",
        "cursor": {
          "ref": "83a2a4ce-602d-43eb-85c8-b2bd3dcb07ab",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7395e999-ccf2-4a87-9544-5f5b9154e020"
        },
        "item": {
          "id": "fa9f36b3-4f65-47f1-b8ae-9c8e8a5bf0c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d67e8deb-0d7a-4df6-b2a4-39dda9290bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41df5a13-9955-48da-b9f3-f23b82aabc35",
        "cursor": {
          "ref": "c3369f57-ee7b-4b37-8258-2b8c7ac870ce",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cbbf5d0a-64fd-4c50-b361-609f62ed4ee8"
        },
        "item": {
          "id": "41df5a13-9955-48da-b9f3-f23b82aabc35",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "944af690-c0b6-4cda-aca1-5e5a2b25b720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b8056d-4b2a-463c-8650-b4e17153f117",
        "cursor": {
          "ref": "7d53d3c3-4f9e-4a1e-947c-aa137595ad28",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c0bbd205-aabb-4242-b508-d4b68910e0ef"
        },
        "item": {
          "id": "b9b8056d-4b2a-463c-8650-b4e17153f117",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "40c30368-c599-48ba-a7bb-fa04b58ba747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7e69f3-51a0-4eb9-b572-089f8cff92b8",
        "cursor": {
          "ref": "b8803692-cc41-4507-864f-7a6d7550e506",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bcf8dd3c-e27b-4d94-bfda-afc01f706596"
        },
        "item": {
          "id": "ed7e69f3-51a0-4eb9-b572-089f8cff92b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b543dd7b-64bb-4e4f-82b6-1815fdf28994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eda4f2-fac2-4cf2-8cf0-162325c3ff5b",
        "cursor": {
          "ref": "250de1ed-4dbb-4fcd-ae38-ef5140c85002",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "17e3ab7f-b954-4eb0-96a6-be2cc36d612d"
        },
        "item": {
          "id": "c5eda4f2-fac2-4cf2-8cf0-162325c3ff5b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d9e3f688-2e3c-413b-915f-462274634e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a69e9-9e96-4cb8-b7dc-ca6a66218f31",
        "cursor": {
          "ref": "d38e937f-7c02-40bf-982a-adcb5388dacf",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "573cc104-d9ee-452a-ad7c-02e25a731ab6"
        },
        "item": {
          "id": "1b9a69e9-9e96-4cb8-b7dc-ca6a66218f31",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0e55f8e8-ff2f-4ae1-9306-c6e5a38f4975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e64dfd-3a85-4969-b42b-b03373a1aa0d",
        "cursor": {
          "ref": "4e4e1eed-deeb-428b-97f5-072e5fb10808",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b5b19c60-f1e3-4dc1-9f92-91128b50e6cb"
        },
        "item": {
          "id": "68e64dfd-3a85-4969-b42b-b03373a1aa0d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b03b4f2b-00e5-4512-8c4a-5d5dd9da30ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9491a8c-4442-4e46-aaf3-66730c715b8a",
        "cursor": {
          "ref": "8e82fff4-a0c7-47f9-bad8-990a7e1c6447",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f3875168-20cf-4c05-9e3f-7ecdc5cf5626"
        },
        "item": {
          "id": "d9491a8c-4442-4e46-aaf3-66730c715b8a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9e732a20-a15f-45c4-a5bc-e7e482269442",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50735d97-0ac0-4e0f-9516-fea058f4d3d2",
        "cursor": {
          "ref": "d8229501-c818-4478-83d5-64b0e3dfb844",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e7956f18-f77c-4024-9672-b62af2a5bc73"
        },
        "item": {
          "id": "50735d97-0ac0-4e0f-9516-fea058f4d3d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "be766fb6-fa7b-466d-a69c-97454d4c0075",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf094e0-af37-49de-9339-939430ffe1ec",
        "cursor": {
          "ref": "0c82d0d5-9392-4364-b853-18c98abda50e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "39135ce6-f3ab-4b25-93fd-62603588b234"
        },
        "item": {
          "id": "3bf094e0-af37-49de-9339-939430ffe1ec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3c3c9e97-1fcf-4305-9d92-a2073cf52251",
          "status": "OK",
          "code": 200,
          "responseTime": 1993,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f6abf3-37e2-471b-b5af-12f350c31c88",
        "cursor": {
          "ref": "fbfe32ba-12bd-4341-b56a-60f59616fbcc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1b5039a1-f1de-47ae-9b0b-daa02a39c3aa"
        },
        "item": {
          "id": "49f6abf3-37e2-471b-b5af-12f350c31c88",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2fccdffa-32da-441b-a8ab-cd1f42b1b154",
          "status": "OK",
          "code": 200,
          "responseTime": 2468,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13b17e1-f611-4f3a-b1b9-29d110e75092",
        "cursor": {
          "ref": "d04d0dd8-0f73-4963-8402-f79414a1c5d9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f8d2a10-102f-4093-8739-8650a0f9482e"
        },
        "item": {
          "id": "e13b17e1-f611-4f3a-b1b9-29d110e75092",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d8be421-d7b6-4b14-970e-6aa72a0c2432",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13b17e1-f611-4f3a-b1b9-29d110e75092",
        "cursor": {
          "ref": "d04d0dd8-0f73-4963-8402-f79414a1c5d9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f8d2a10-102f-4093-8739-8650a0f9482e"
        },
        "item": {
          "id": "e13b17e1-f611-4f3a-b1b9-29d110e75092",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d8be421-d7b6-4b14-970e-6aa72a0c2432",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a631418b-bed7-4d22-92bc-37e842b0f377",
        "cursor": {
          "ref": "f346091e-d604-46ff-83e5-1ebcd66e6df5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3df2ac41-49a3-48d7-8cf8-3d83df3d45c6"
        },
        "item": {
          "id": "a631418b-bed7-4d22-92bc-37e842b0f377",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "66cb4b77-51b7-4b7e-affb-b0f673e077ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f52bc-d53e-44b3-8814-f2e78e469f3e",
        "cursor": {
          "ref": "f263b802-9c1b-4996-97d4-458782212823",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8a10132e-c385-4fd2-97a8-88f129508ae6"
        },
        "item": {
          "id": "361f52bc-d53e-44b3-8814-f2e78e469f3e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c05c5e25-35c4-4564-88ca-161980484ce4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}