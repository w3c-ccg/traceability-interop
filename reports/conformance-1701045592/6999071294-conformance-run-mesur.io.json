{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8bfc9341-9107-4714-96a8-a415f68eb17a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "97de42d1-d379-44f8-9741-e0231cc3119a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c006f30b-373f-4fa7-824b-5a0a9e260139",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb729335-ae00-4678-99b3-0b64595f8afb"
                }
              }
            ]
          },
          {
            "id": "c5e62013-61f9-422b-b760-f7236290de96",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4206b9d2-87cc-406a-8e54-d5985ec510a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51a56413-168f-432d-8422-89cda9753248"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cdd6b589-497f-459e-b1a2-1514caed37a4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d4515328-4036-4e64-8998-7274e3b8dfd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b100c4ce-dc98-4bef-a54e-547f244ec6b7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e5efc53-1492-4979-a814-3ad26edfa043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "723a8de0-a245-4ed0-9a46-289b4cb8f988"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aaef4e04-e720-4841-a41c-dfb54423830d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f41506a9-b44f-492e-9981-9fae8d7d8d79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a074dce5-a7f0-4c71-ba8a-55b848eddd24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66a62859-a87f-455b-8aea-d8fc620a7f2e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02bdbabd-cf04-40ae-9b0b-f9206e72b1ec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d6beef99-d981-4b34-81bc-00824f124313"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b17ec0a7-09b3-49ab-8c59-96ab813c8256",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b691b82-e5c7-47b6-8f76-83c1fe354763"
            }
          }
        ]
      },
      {
        "id": "e748d143-9947-4c08-b9ea-63a3b4257cd5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "99569efa-5830-4175-9496-4c726289a4c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5579bb6-a0af-4425-8caa-957cc52a0b10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "83f1062f-76e4-400e-aa4e-c6ebe7c39f96",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce3a46e-4329-403e-aedd-4fda31dfc980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11e9ed52-5839-4b55-91ff-32094f94c585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb4ba6e-cb3c-4d79-a4b1-12411a5808ff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a0a8c8-9900-4034-b306-d7deb74ea512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60fe9969-4fff-4113-8a31-85a718dc6b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a851ff-c7b8-48c8-ba96-5f9e3099a77a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92499de-ff41-497d-8b8e-c127583f0bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df366151-4384-4168-83a2-9d934202da65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24be3d06-ca5f-45ca-a79a-fef7b24f41ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c2b1ae9-e028-4804-a574-76634ae8186d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5812d715-1e37-4b44-a3b5-058be2543edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c20fc8c-38af-40a9-a32f-21732fb39372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c64d00-83c4-4337-95b1-dd89b8900d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180817ca-57a8-4711-aed6-ceff844e7e2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "650a0ade-bd7c-4091-96fa-6630b2afcd8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cea9061-810a-4884-81ac-0958cf23b7b0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "115678b0-2b98-40ed-bd0b-96b80bb366e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dbec3542-c731-477f-a264-2c2e82a53f05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71f4a9de-a94f-4bfe-b50d-6f7e28f10645",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b7861fa6-0982-4e6f-bc3c-0f27076dd3cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3feec07b-a1db-41f6-b2c4-2f2cd628f6c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "135ecd34-40ad-4421-9b7a-c8561d2447e7"
            }
          }
        ]
      },
      {
        "id": "ee7bde0b-317f-4eae-b9aa-cdc641a70b6f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6ab5600c-0208-4bfd-bac7-d0fb8fda48e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51bb282e-c3c8-4119-9d0c-362bfd640267",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6aa15ebc-95cf-4d0a-890f-5dca01260298",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a251d76-915c-4875-96ad-2706962b3cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ef5ae5-7866-4d86-b8ca-91e5c50758de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f298b4d5-2824-4423-8f12-ad758bbfa96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80c97a45-c4ee-4f41-97fa-cf371a5138c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb907eff-8ddd-4915-ab10-2401f27a2171",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46686035-ddcf-45a6-9fdd-3d1596926a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06150c6c-1a70-4438-944a-b4fd6d08593d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dd2aee-4cfe-4c8d-9b32-f2648190282f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcacac0c-66d9-4d55-a04d-667a43bc4b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59df4eb3-4ca3-4e2f-b11e-34ec74223bc1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13105fb-8517-4b0d-b469-84f191bb1943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f7f591-6b9e-4ac0-b7b4-7869799da8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfa876a-d74b-472a-9ba0-2974b7aa98b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d649e761-3116-4e43-89ca-d32ca8f65bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35110bf1-724d-4ca3-84d7-961e6bed3feb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578555ee-80ac-4f66-ae55-1d0e1b5f514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba946c8-89ca-452b-99a3-d63f5908502d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c48b52d-6f16-412a-a920-d9b2289a2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bc48bde-2e51-494d-9dec-789b5cc79f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7ea7c4-c8e5-4427-ad3c-6da895e574ce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8338d8e1-c4be-450d-b6ab-552369d5d8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8a1644-9fdc-49f9-857d-61da435f10c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e56de18-dd72-4f40-b10d-4589d749f46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dbd4994-3105-4a4b-9dd6-e217705cb526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d6dfb9-93a1-4267-a9ed-6ae866175766",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13befeb3-8618-4f63-9495-0ab9f6f5a429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de65b3b-9621-4a21-a6d0-9ce13f100905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f91a202-8a79-4b28-928c-bd97ddc7d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfb01202-42c4-4c25-a65b-ce3f06b50cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba731629-7de2-4e51-971d-fb2eca3be070",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20af0e42-020b-4fcc-8ffe-4144e1d3ad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ba8bcd-2823-4e0e-a7dd-765acc1998f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d379c022-a6a8-4bcb-acae-3871bd1ec8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "128362ca-be63-4889-a89c-ac0f5894409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612c93fa-b8df-4bbd-92f1-e8336fbcc6bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed60634-63b8-4b65-a74a-973fa0a03506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917c7b15-a7af-4362-92f3-e0782a895282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694bcc6d-8eba-4f3d-94c5-76d38266bd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85d9b1aa-a4af-4998-9d66-c62c9a759e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb293474-cc39-4fab-b033-0d6a14a77a72",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e817238-d7bf-469f-bf60-f7cdf048bcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb043494-bef3-4f6e-88f3-9e2aa2152240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95936378-43d5-4239-bbcb-787dd412a17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a57bbf9d-b714-436b-8bf4-57505b443316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34366a7-cca8-4920-b191-8aa61a139227",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e9df4e-acc4-465b-9d74-5fff585b5abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2f78e4-4ec2-4606-b2e9-c2c687483d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d90c6b1-7106-4a69-8680-fa406c315663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb1d15b-57b3-40da-adda-c0c8b5c4bde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c717f8-ed7f-48ee-888f-8a8c7244ba02",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daa37f7-d152-4672-8db1-8b0ff43bbe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc73a1b9-eb44-4cc6-a991-31a1c9ddcab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec68720-c8c0-4766-82fc-1d99e3e2901d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54451d2e-ce5d-4111-8410-4f21b9b08824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853800ef-bd72-4c5d-9a97-df8e6ccddf73",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116763a7-50f4-491c-a41c-1d20e970cffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcd1fa2-31d3-4059-8a25-c965d16b04c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2546356c-4e42-44fe-8441-b796af320c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8449208-3b22-4f83-8b09-0cf116bfc9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ed06f-7b8f-49c7-8408-d4032753cb76",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c191d6-4422-4a25-8375-842eb7e3c6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17970211-e771-417d-bdd4-a2d3521480f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a040e9-a023-431c-9f32-9c679876f36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8d6c466-aec2-4d7a-8296-5981a8138e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc039e1-e1eb-4baf-83b5-1da42f7235ed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316fc328-6ef4-4db5-a208-58d0a1cf695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65831e66-79f4-43bc-a979-5f8e7c8f2668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c386de-4c8a-42ab-bcc5-4fa5d7c3710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ce6feef-da0d-4a1e-9d6a-b5fe09dafb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfa839-a1a9-4010-b25a-2c2687d701a5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964f221c-2165-4085-958a-7014774ae9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af637ac-d23a-42af-b62b-c1b9fe1e0115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4f1e04-ee03-4e6f-bc90-7f4e00e8d079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "409f79ee-fb23-4d09-8355-fad17df52b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78eab9a-8fd9-496c-bcd0-6c625603657b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611ac689-fd95-4f18-988f-4b0e945d79d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790cbd9e-7963-4b4e-a883-e07f7f90d0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad99c6-140f-43b7-b2f5-acc4def46861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a700d0-6eb0-4c9a-9824-e7863050f692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad3c3e0-f2e3-47d0-a4bd-161dc62841c7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8134f0-ba6e-4e55-a6e3-7d166468fac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9b31ba-b187-4010-bc74-7d251658177a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f03bf6-da13-4ced-813d-be978a9c209f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8671c1e2-4756-405c-968d-70ee57fefeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf65253-a92b-4883-a561-79d2287c5933",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744281a3-7ed6-42bc-9217-a6c5687db0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fa2fb0-bc33-4b2a-8cec-0830b4932637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c33c230-4010-47e8-9042-9ad8948a275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c1ded8-58b0-4e03-a154-95143212a57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a958e148-0a75-4298-ad12-a4d26866929a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b809dfee-645e-4140-bdc0-e41b5c7297a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57792c01-85f8-4195-9b18-a7a661f9b6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ee854e-9494-48a1-8e52-9390a18557de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ec7206-2734-4c00-a9eb-c91216650925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006d29ac-4340-471d-9d80-2c762b185fbf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf58d6c-933a-4f18-941d-b28ae0a9e65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ab214b-02bb-4845-a9fd-daf04d67d411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d37361-ab16-466a-9661-afd8d08aa667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea9b3a6-2489-4d93-9e71-4509fa96823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de5073b-ea8c-42b2-954b-a2de87982661",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578e0d8a-d835-4705-8627-44e5cbf26df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f958505-ad23-41eb-a3eb-317494402a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be90cb83-168d-45d7-800c-979e151eeff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9419be1f-55f4-4033-a878-93da7ce894d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dd9381-c1e9-4b2b-a4fe-24f83b765c3d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b40d0a-620d-474f-a8ae-ded066229915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0566d7-7983-4565-a8bf-bb119cb511ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29eaf14-ff3a-47d2-a128-ac10bd6b9fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05380612-405c-4619-873f-b5ba7c1a62cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bae8fdd-e06f-4b0d-837a-07c4e06cedcd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c41b2a4-9492-4520-b4b0-6c4380f919e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b95162-ec90-42fa-8fc5-6bf501813da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31157301-17c4-4db2-9617-d63992f3cdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f738e14e-f7a5-401f-a7bf-5cd56766b912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729febdf-688c-47a8-a46d-acca685a6699",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7020c64a-04e2-4aef-b24d-eea9123fad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d02eec-7076-4235-a760-97eb447c1f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520cc13b-dbb6-4cab-8a74-cf4cd1fd5974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "033ac16f-880d-4e80-b3dc-d5faa0a0f62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06f1a7-cb98-4feb-9c3b-50e0e5bd3ad2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fbc2ad-f084-4849-a599-572ebc228788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07537fa1-9be1-40f9-99cd-a2fc91a1d421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f936c30d-67bf-438c-aeba-1f337366f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52c0a4f0-4e74-43f4-8294-5b0585cce4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f518be-0c1a-4ed0-b0a2-8a1af4bc2ff7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0f746a-26aa-4efd-9325-118b0dff5c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f61e1c4-4dc2-4c21-9043-0ed32e852028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597dd2e-3290-4281-ae0a-02e3ec7f68d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "734a4398-eefc-48a5-b068-6a1d8f4da0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f288709-3e4c-4b3c-b84f-1ec5ef365693",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7587a03f-d18e-420d-ac7d-9db6b0749b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bdce70-0bc7-4194-b098-13ef43a66e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f9c4c-7ff4-45e5-b8c5-c27259ebf4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfb6cb5-c4d1-4391-ae21-467a29da081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2cff8a-b511-43af-8748-f9898297df6b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf0d578-b7a7-4636-971d-b480c86f63cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5cfdc0-e820-4875-8424-ff6e321ffab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00367a19-9994-4c7b-afb9-419021e2a379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76d0a8f0-d12b-4cc5-ab76-e2fcc123f2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a101658-7d7f-4be4-9019-97e357579381",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cf3edb-46cf-4a48-a6d9-7f86c05c3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5c7e2f-c677-466e-85c4-65d5aead7c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbceedf-fb6f-4be1-be9d-d9d831c8c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a9b5ac-7dc3-41f4-8065-e757fc3d3f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a5de7a-e574-48bf-a9af-a2b9d7ce271a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edadb74-283a-4d12-a149-338fb11bf7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef1d90-0c38-4466-876b-f00981e0b625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca6433b-2d84-46be-b5dc-9b606803b6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a95e77-de86-4ec9-8da6-1e966216d6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccdcda7-acda-4826-b677-9c7b896bdbb4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec99ad-7d53-4249-875e-54eb097a9244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e060fd-3e50-4389-9225-0bb6f978420c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a23b97-5dde-46e9-8c1c-dc682a80199a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4586be-3098-471d-afa2-59cfc8e1e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862fbae2-56ef-499e-a549-fdb5c1f8f176",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31820f92-8b67-4865-bc2b-7115273e8041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036d804d-ffc6-49d1-8d2b-81ac80e376d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6695ed9a-864a-459a-ab73-d6db023ee90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6eb57d6-8bf8-4cdb-b671-a0e5bd1abe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e3720f-8451-4dc5-b0e2-685604c112e4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2848b79-833b-4ffe-a366-24535e40e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4563d59e-0bf1-460d-8cad-f9e807a7a3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc52e5b6-c6d7-43a5-8f1b-8937a30dc823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f577cf0-d9aa-4bcd-8d1e-179bc03f8b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a223d75-97ed-4538-ad6f-172f54e377dc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713f4398-06b2-4844-b692-f32c4795f219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6303773-617d-4b73-9f61-be1d30916d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2ddbd7-b8a0-4406-a9be-e06f3387fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db69482-ba84-48d8-aaa5-c4808fa0cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa6d63a-b7f8-4833-b1dc-bf5a9b1dfb33",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53470fb-4b07-4e94-8ff5-c5b3eb691f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653afb86-d30b-4955-a657-3b83d65d11b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf64f34-9a9b-4035-be82-20e847f2b0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "383174ed-7094-49b8-a534-41fe8331aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50be3834-6ba9-47cf-ac52-87def801d335",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd725f2f-d3e5-4e9d-86e5-a567125eafcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1d58fe5-d8a9-49d9-bf4e-cb7a2873575c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8872a4-728b-48da-af54-d19f3a9284f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48699850-b310-4894-a7f3-15f102585bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972b8071-af8f-4a43-8be0-676c4bdc5422",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a96134-73f0-48dd-b8f3-22fa975e7363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf98bf2d-f8c6-41a4-9efb-798570dc2873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c76053-17e9-4991-8d04-6dd5f176d710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f0ff27-ec7d-421c-aeea-7fe8b98cc56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3959cb3-791f-499b-9f86-79b0dc390e25",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252f5651-d777-4afa-b9b6-a11366b4785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69b52ce-25e0-433e-9808-6cf2dc47c70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c4f4b0-2451-4172-a64d-9425318e295f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9eb4cc-a017-4d77-a2fb-c1007cebe7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a996d34-6291-4c49-8925-6c33c03e5931",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fc135b-4bf1-41f8-8d31-da518ddfffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6d8323-c094-4acd-9bd9-3d2a6af46ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0911459e-2ffc-4afc-84b1-4ac9ea7a66b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "757863b6-e251-4a96-b631-b586674cdf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd777330-2d49-49c9-879c-767d1dc174a2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1bdd32-89cc-4a15-b909-368a36226865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb51fbb-2af3-4d5c-abfa-a1e3a80e67c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733f227-2fb8-45f2-9cf8-f904a61a49a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbb50b3-c8f6-4a6a-9477-81c7a1b3ccbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fefdd61-3e40-4c20-b7fc-294e81840d6b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e262cb-45a7-46f1-9b04-33fe15d3dc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7279c2-5ffa-4202-88d0-2497c9dff59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892a5711-cff1-4994-9077-259827f09ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68079988-58a5-4eea-ad4c-dc6e24c2a6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e1a5f4-c22a-4232-b901-11d4d6827a41",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa8c84c-6077-4669-9c46-390d79606d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df8e623-9591-4560-9f65-03ec66f0685d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec63ec7-4a5b-40db-8e56-d2840b04c625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "50825dbb-03d2-4342-b7ff-4ead25103959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747a1bcb-6707-4a45-a040-dbae0d543e2b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79573394-d288-49a6-837b-bff95cdafc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafc1a16-d429-4f25-be7d-88262eb10618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d748f038-a968-487a-9aed-e77f995b1604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22cf0e60-63d7-4d4f-9f95-9d9a4cf57976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69dd33d-15c6-464d-a739-65bcaff5b1b5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5a3a5b-7903-48cc-bd28-5ee63f661a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdeb65a-db78-4d00-be51-5947751d603d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c851286-c1d3-4925-affc-48b365e24fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdde70e-07a5-4fa5-99cc-41f46b64ed91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f5024c-9ce2-434d-8c40-4b9299dad797",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f1a74b-3910-47b9-9595-e46a4894c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee798bc-fc54-40ab-b7b3-94fbe743a205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8381d46a-8052-445c-8cac-4b36f12e8713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a50f07-389d-446b-adce-bf820ec6a659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a64e37-14b1-4d43-afd8-d39eeeea6884",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cde2f5-9dcd-4357-9380-4d17618e0604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8eda420-e6ec-4b61-8844-1178886d3b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c945f5e-7dca-4615-904c-cd427af7bf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c033e29-7d1e-4573-819c-9a91fdee005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbb2540-68f9-44cc-9281-0d5eb75fe0bd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea117af-5f96-4ea3-81b6-00d0cee2977d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e55937-ebec-4477-9b44-a82e500f8860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efef768-228a-4626-b793-493b03ae0e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb79ac1-6ab0-4cb6-8ce8-1008a44a9020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9060cdd1-312a-4cf2-9731-df8713ec52b3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14ae4ed-ca78-4f94-b3b2-2d7178d8bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5096e5a3-29f6-44fe-9841-50b4e8d4cf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d011c17-3082-423e-895b-03ccd1831ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f36bb7ab-6521-46bc-95ed-64d03f3164cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3ddbd4-f5e8-4946-b54b-efab9555f087",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce25ece-d428-4d12-b1d7-3de78c4fd300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cce3920-c1b4-4013-89a6-ddc579600b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dfc018-5238-46e5-993a-29f6460fa326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a505260f-2a16-4e82-be65-f5ac08ab5ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd9e5c1-461f-461f-8a83-4e9e650315ff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b401098-8e81-4df1-b964-125f3ba57c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fdaed9-1aad-4abe-948a-7ef0f6381ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2507d62b-1bc5-4255-b0d9-f63ee98a787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5175c45d-8ae4-421e-aa4d-14106b7b3095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aff922b-2b7a-4750-a9a6-6fffda9da04b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb4aac0-b6b2-45b4-b554-a6756ec63588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9c57e4-eb03-4d9c-b309-a9578d6bbf4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77569ec-1f6f-4693-aef4-5dcf600d36df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37a46d7-8e53-4629-9005-3527d38fe1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b85f645-a99d-407e-94e5-31a67dc3893a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb124db-67b9-4785-9e93-1de0bfefbcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709837d4-a7db-48a9-8be2-60dde6812458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d28f37c-aca9-4646-8774-fc2a552dc5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7810db72-bfde-4391-b0c0-69111c5a63ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e653abdb-0647-4f10-a5ee-40e3b8d46ef9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8991a9e-b4f5-49c9-8f00-a90d2aa73a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded67bab-cb96-4459-936e-e2a65fa1c840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95863b51-fabc-4142-b8e7-e05c67db27a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60477f25-4089-46c1-8998-db4cb5313268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679ed370-5195-4e51-8472-1f4fc733b10a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dba84b0-46be-453e-bf48-09da735f9f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b00222-3b6a-44ed-86e3-8232627b3ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aeb569-617d-44c5-a817-e1769b413561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7df5210-83da-4a88-be8c-f46688f3cfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff5414-fc03-45b3-ac7d-98bf85631c2a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae43fd96-81e2-4507-85a5-d412fd9affd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63561c1f-6f01-434f-9b38-479ee8965e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e921fb-c1be-44e6-9287-0a3e09233129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23e94f4-d9ae-4e72-9c0f-494ec1b462af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093f0958-2e9a-4703-b70f-95bc6cfc88c9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c88ed1-cc8e-4b05-ac1f-960dec747021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab95f0b3-5887-4e28-a6e2-a0086ce1e4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37773fb8-38f7-44fc-a6f8-2f473c7ed8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1d18d6f5-48ba-4bb4-b993-d9acc5abd15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f5eb25-017f-4517-ac98-e195c2bfc37e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fb115e-6f9d-4bc7-b910-67a278cc72c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155f8936-3d23-49dd-b811-e24b8fa565da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d320eb5-5fc0-4639-b670-e0f7aee06b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9144d024-1371-4ed8-a486-88e4478222a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596e73e2-aa29-4295-9241-3355b24b983f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677b4038-8ea4-44c9-92e0-f7600391b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb81a8a-866b-402f-8913-1c5c8e1fc95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f00f8d-5cf2-4fe0-92eb-aad7a49c54fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77cf5d46-6c9e-4b52-971a-e9b24fada0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204f7dad-4e20-4222-8425-a6f6705f2adf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149bd830-02df-42a4-84b2-5a55276d423a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcb09ca-933a-4409-abb3-4a2c6d2f9488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b304a8f-bfdd-4ef8-8264-c1c2523b149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c03c2c4-e35c-4604-86ab-022562bbb79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30e5657-995d-4d1a-a8fc-35a8f6299c6a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4976df6d-9005-43f2-b4b6-485bc624d2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0437c93c-eeeb-4a1f-9290-ce6c05c68e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2db938-2227-46d2-8b6a-020bc5ed7e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a5d71c-bf50-4ead-b7e7-61ddfb9697b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455b9e41-a117-41d6-a897-b6869292a652",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e331cb05-8cea-4335-9995-2d23e5fb0e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f97343-246a-4dbb-bc90-4cedf62049e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261ee0dc-2e24-43c8-a8a2-2a512155d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1a1b2b-04be-45ce-a901-fddcafec304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d285f3-632d-427c-adf2-a52c28680146",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79b2182-7c3f-416b-96aa-3207b30c2d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0769cda7-e066-4aad-909f-2c7d2b7cce0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952479ab-9145-47db-823d-5638fcf16ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c27370-8257-4976-b88a-2b21c253dfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b718d753-458a-4eaa-b6a5-8447218f3e33",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dabd751-e882-4aed-8fc2-7992868deffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a34fea-c4f6-413d-8a42-6b3793a76d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60131a4e-5ec5-48b6-9522-815a3f423519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4d3b66-d87d-4ae8-abf3-84e8bd2e7134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f00934a-26c0-46c8-ba18-7ed014e8c0b7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc51fc61-0433-4e52-b08c-d3f860b58c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae4b171-d1ed-4f9c-b0e6-25af5f05dfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a18afed-56f4-4626-a059-7092900b6593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2f26d3-31c8-4300-81a3-22bc6b2ad791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0523ac99-90a7-4246-8d58-614b92f244cc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e9de20-feef-4388-b22c-6e4478cd134a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f0e7b2-65c2-4339-a42d-561b266d1f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d2b3af-e71e-4849-b8c7-8df596d57af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9295056a-503e-44a6-a41e-2edbd9066b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4c4bae-2020-4f8e-8140-6ec7a3ac1bd1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f31fb3d-32a2-4d00-a6b3-7703fa224d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf746d62-48e4-4fa0-a928-e8106a34225c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93931aeb-dd5e-4541-9e21-65db125f4ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45ee89d-734f-4301-87c9-2094c484ba49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf47b40-724b-40fc-996c-79a6d0cad3b3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7845380-3668-436d-9987-443b1f82a27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06857bf1-d88a-482d-b79b-3a2320a4e1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95349ffb-cbae-472b-9205-2318ce60c3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3230e6d5-23eb-496f-985d-a929c1378aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99f1e62-1f91-4078-8292-eb4c4e8b8fa5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc7cb26-661f-4453-974b-10f01e064750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ab2e19-4ec8-4b88-9425-583aa105189e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b659186a-bcb0-483e-9719-4846a8ba361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fda7f3c-0507-4075-9b7a-401d8d80b378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126985dd-0c5a-4f35-8eb9-80395c1f763b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c23f2a-c566-45fa-9861-b80ad5318b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de2d1dc-3ff9-4efd-84c6-eaa099666302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a5adfb-479c-42cd-ad79-f2fd7afc1236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d92e44e-79fd-4599-a085-6b742c1360c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6802df3-a0ef-41d3-b51b-1aaa3e8215d6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15503a10-f7d1-48b2-bc7e-529fdf6c6812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d2c3e4-e6c6-4822-9379-3f2d724e556d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e23da6-cb42-403a-ab05-9ec5288342f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1557bcfa-efdb-4cb0-b0f3-f76f85ae93c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384ce007-a7b5-4525-b3a3-1398abaae035",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba0d250-0e11-44f3-8c13-bc529d86bafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a746e970-c391-44bd-80dc-a8434168cd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa89648-49ad-49f3-93b7-57e7f43dd590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0198e174-53a4-4555-9a26-fb529401e694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376d8a0b-4f37-449c-8a81-3bbbc7a870fc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a1aa69-4c92-4182-bb7d-70a6aef4c310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afea175d-35a8-484c-a55b-5b56d2c24a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4508aec7-ea90-469d-8ca5-0b11819058c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13eeec28-2b62-4676-9103-b91d15561fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b68818-863d-4055-ac8a-35a3680a4bda",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a9eb63-38f4-4d59-9c58-1d69f265b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d034080-dc85-4ecb-ad4c-d7d10747d0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caac9d72-930e-4823-bee3-77d10bfbca4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afe52b03-f837-4540-9a95-aba0f01f5478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c19aaa-c5a2-40d9-afb8-edaa9cc90a5a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a8a724-6ccc-4ce2-a4c4-32af27493a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092dfce0-c2a2-4798-a88c-7f90cf9f67a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e0f872-328d-4b7b-8f9e-9589494ea476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f943e978-8eeb-4b5b-9fbb-b330d6419d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b15648-03f2-41b4-9e82-bb9e64965c85",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b701efb1-ca04-477f-a941-f4fd6e4bf9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fe6294-3a97-44bf-86f5-5101f2527b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833ae29b-f4df-460f-a9c7-caede91c2465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cacf1d1b-c561-48f1-9ff8-4540c72d4a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c879e91-d5c1-4ca5-b2f0-ad75b5c674da",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2415ba24-61bd-45d8-865d-039348fcc37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df85d11-7f69-43a0-81a7-aa05e0243f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8a3189-5e18-4373-adc4-d4edd82549a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "398df554-3399-427f-a616-9095970a2241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c56a320-deb8-4d34-9e81-cb450752993b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5498010-3b88-4d13-905e-57060a7036dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ae04b5-9009-4e86-8484-ef1c28942b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae715d7-01cf-446d-881e-a39e34227704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceae88a7-e6d4-4728-b536-2cd30956c501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b33f18-063b-4060-9859-c64b834a0091",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2fb144-83bf-4baa-970e-3dd499c1945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae89e09-3a35-40f9-9d9b-ecfbc8e208d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cbddfe-7328-46af-a864-c6435360fecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79eeb3ee-795e-466b-aae8-d0fac4a2cd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7f6dd7-c7a0-45a9-96b9-0248a1015e06",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04310ae2-e0ce-40d4-b40d-6a92edee8893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3a71e8-3197-4168-b84f-59dbb30ad259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e120ff-452d-4996-913c-02e54b38d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a00372e3-fc1f-4eb5-b3e5-e45bac71da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8033b9b8-8863-43fb-81d0-0345965c086f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163bbe75-fcd4-4335-8bba-a50f81137b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb94110-d2d3-4e07-8ae4-ed9ab2704b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9a4d17-a027-4e01-af1c-fc54674e3cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26085210-2f8e-4bf3-a086-3b8be951455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3c4519-5940-431f-8485-f8a5fbe1c839",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dd8a82-c469-4d1f-bf23-259ca334d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bbac47-5b0c-45ad-aebc-9b2c3ea341c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cce5172-8af0-4cef-ab90-890948c06fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebdef40-9ec1-4c99-a0f4-adafa4e9a5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a83d5e-3b39-434b-8b78-0fd114107fd6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b82f56-8cc5-4805-8724-e9031a3f77c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3242c0ea-5e78-409f-9d3d-f9ebac0438fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baff899-6e49-4d87-9e73-bdfab983e989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a976112-4ae6-40ac-b471-92d07901020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a21cd8-bd63-4924-88ad-8152d6cd189d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf28e34-bf62-4756-86b9-6ac8ec1923aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582d08ca-e058-4158-a1f8-1ab47ba1140d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50408c4-d785-423a-94a8-3b2315017f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae646379-f8eb-46dd-a387-904c963283ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e063d66a-3378-4d20-8287-7c835f08ae55",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705011bf-0f7f-4109-a2c5-e3527c440e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b888fafa-3b9f-472e-bac7-d200c91746d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535347ef-75b3-4ff5-b396-e4de1c731ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f8b322-5bba-4499-ae4f-39aa74ffbb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffdf9db-dafe-4e10-ac45-438c6d0f0cda",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a90dc4-4b0c-4cd8-84f6-eaa5abe52945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85ed01f-d6b2-4973-80ba-963b1de1c98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206294ad-52e4-4b88-b2ee-29a036d34f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3afe70-32e5-4043-8ef6-3c987f12feee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eba425-71d6-4721-83f3-4fab0b3701e0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e00366-a06c-4e1b-a5a0-7000cbe67087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeb0fa5-bd84-433c-9e7b-2c3115c90fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7c620c-a427-4ef1-8ab1-fccc6287f523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8adda3d9-0741-4758-b1d9-f91bd2f92357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6849e9-408d-45af-a816-b510bd0e4299",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dea204-2822-46ca-a54c-df9f4fc3190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635ecc9a-b76f-4aa5-81ab-da68329797ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdac30d1-08b9-45a5-8ab6-a76bbcd999ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5eca3e0-42dd-4e8b-a8e7-1ecc969beea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb32b3cf-972e-4a37-8b34-560b1a0c2764",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392d3d07-7802-4ec3-ac80-553615728b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a9be16-c302-437e-8ce7-b6ee9589256d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1def4875-d1a8-4cde-b44f-1e8c5fe2fae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0793a08b-27e9-4e3e-96ae-f1dd7d651ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab909035-270d-4b89-9784-8886346286af",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f331ab-d252-422a-950b-182f3307424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5737d94b-4d47-4039-bc3a-fc0517806c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704c1222-4ab2-4e0d-b37d-44bccf50771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dde8c67-d7a9-44f7-ac13-4c87e3f6da57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15814064-b363-4e25-8036-7eca786fa776",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9642770c-7bf5-4e89-909d-30508b7c2365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb57eeaf-fc62-4569-89d5-aa8c24dafd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442f70cf-92a3-4a5b-975b-33f10442d199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "924396d8-d4a0-4b61-83ca-47613f52de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a9ea50-a976-40ab-bc11-91a60b87fbfe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d901fcf2-06a6-429a-acfe-f277744acbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2639091-c895-454d-a95f-af27699606c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de93ce63-0f87-447d-9cc5-5d70a010c315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3891c1d-e6f0-4860-b28e-e4a004019e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893395ec-2686-4515-a26e-3b368dadb0b1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f310777-0035-4fcc-9564-77a6d828d400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9fcceaf-51f4-481f-ba0a-ff8406bce4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7036d9-3982-4f11-af56-b8f003ebd450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed74e60c-c640-4235-87aa-1301f1a3c7b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bde31516-d035-4a43-912b-d3a15ccd3e6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "314767dd-bbd4-4952-b84f-82b5944ccf06",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1404b79-44a6-479d-95cc-5dbad8974b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12d2506b-a7eb-422f-abfa-51ac97a34975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0aa61f-d415-412e-9183-d6c164e869d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03122234-b33d-4f8b-b1f6-c18389848215"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc671522-7d7b-4986-abd2-69f80558deaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e28f9766-0100-4c2e-8eed-9f79ec01c3b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f0245f-3afd-41e4-8e81-75699c0b4519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e3ec4a-a1be-4695-9a57-b5cfbb9656e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69d9e4db-497b-458d-ad26-555c6d6103d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79402a0c-4fa0-4532-9dcc-2832c8a98377"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54cee38f-3942-463b-bfad-46c74641ab85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ec6378e-75b3-4f9c-9eb6-aa4e2fd71dd4"
                }
              }
            ]
          },
          {
            "id": "b12c68ca-af14-43f8-b736-bc9181ffebfc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "156b2e43-657f-46c9-b23f-dd503ddae502",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "beba136a-13aa-4048-b766-ed196c1dd8e3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89657419-5ee9-43ec-a971-e9d837675cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a309d120-f527-4a57-8c7b-40ebf4d9116a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94753582-9470-485a-94b5-998475ae791a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5979157f-c4ec-497e-bd72-1dcabeab6483"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7c3d654-c6b3-496b-a87c-3db13cc6c7d7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec1c52da-4e33-4217-9199-c3677ef1dc2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a33017e-0caa-4807-9caf-0a127f7ab405"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e9d1435-404b-424b-875d-fd4bce28149f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40726bda-2dbd-43a1-9c20-488af1baffb9"
                    }
                  }
                ]
              },
              {
                "id": "27d61e20-1e06-4107-859b-67d607df2bf5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a4d4533-c16c-4928-a083-fa0990e1eeeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67c67829-ea89-42e6-a9e9-0cae4443a438"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7b5c2c7-5a8d-443b-9523-5bd73302fa2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9275181a-0faf-4083-a7cf-f7a645b03b8f"
                    }
                  }
                ]
              },
              {
                "id": "aaed0592-c07d-4ca1-b5ed-361fae00ae8d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b02ff01-48b5-477b-895e-8d417b629ca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50f51cef-54f1-4eb5-be1f-569f2a4728af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2d70317-f98c-4bd6-a1f7-c2356f6bd1d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56e8d2f4-1f8a-4ba7-9146-7d166c1bbd1a"
                    }
                  }
                ]
              },
              {
                "id": "a0aa72b3-1a73-499c-9c3f-54fa2960be4e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abad1c14-abdd-4cf8-9a09-77c65df5f8ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51eb29cd-75df-4f13-abec-42adf0d163e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac09a70e-576d-4c90-83d2-e709643336ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "84c891fb-93cf-4053-b8e5-497bfaed8ef9"
                    }
                  }
                ]
              },
              {
                "id": "dc190926-a86f-4c68-bf4e-cdb967d10475",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "448addf9-a83f-4cab-b356-d1cb865cf866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff40fb7d-3018-45a2-9bf5-f67dbef05813"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab05dd3e-9bd3-4aa7-a2b7-e4840aaebeb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "770fc977-38bb-4d1c-9595-f1e3440b7b42"
                    }
                  }
                ]
              },
              {
                "id": "74428285-43ec-4fef-a886-549dbc57f266",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1039bd46-8a2c-4b1a-8d0f-ea0101088f5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebdc4b03-7f2e-4f21-ab04-475cff2e74a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d297579-0f37-461c-a8d3-964fd43f8a05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53051b26-7be8-46fe-8c58-c13896c40583"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c08d6c1c-602e-49ff-a6b3-4ffc135190db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b20e002d-85e5-456b-a9de-9255ce6e73ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c6ffdc0-1eb6-4c75-b8f0-e5722dacce23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cbc41a8-b7d6-43e0-ba58-b02111c5d9d9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "190eb7fa-50ce-4999-8931-85fc3163c14f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2688aca4-bcde-4055-9ae5-bef852f2e05f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfabcf9b-79f9-4804-882e-48fa86a8a783",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2aaef4f-5ad5-4e08-ae3f-444819fe595b"
            }
          }
        ]
      },
      {
        "id": "50b24a06-29ba-4c99-a7ce-9d6d1be0958e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c622c6cb-ad39-426c-8eab-26137380c0a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "563b43c3-7d3c-4a99-b26b-078f75d8b1ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a50e5e77-7b2a-4866-8f48-1978c49d7e79",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ca9325-e854-41e4-b6f2-6cce0e16d784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfb17f1-d2ed-467b-81f2-3f1e405487e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6a7bb5-87f3-456d-a1af-69515336a062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db32680-f47e-4c77-93e8-6906a388063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11539bf1-efd4-4990-b545-03256bdf65fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd73d45-a58e-4ffd-a7b2-bd12e9ef8fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ad7c57-45d3-4354-9e7e-973f50ef79ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc854ff0-5d63-4fee-8e75-5522ef4d9f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efaf5852-3d98-45da-a172-686b705dc8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786854fc-c14c-4a08-b09b-5f7dd07650df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49611ad1-3fe7-4972-a973-26b91c3abda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5aa957-883f-44d0-9858-02bf1d8174ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7939f385-aa0d-455f-bfdd-488388d5e0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c275d2b-f720-426c-8354-e73739a4f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89a2253-292a-46d6-a256-016a663967a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95884bcd-7956-4e51-becb-9ce8a24c1576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12835e9c-7eb5-4e0f-b3e2-4f5efd506caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa90760-aa3b-4cf6-85f5-fd9e9a19cc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e4e047-6582-4aa0-94f9-7e445ad94e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff67d4-d830-4c01-b2ae-89a0f04fdd44",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7b2fd0-7bbe-4a1e-b28d-50a2fa3b6de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68e3f87-b374-4b81-a7e0-9bfb0d840efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a45e2d-ab63-43fc-a980-e36971e2515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "639817cd-6857-4739-ae2e-1368b233d829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713deda4-a15d-4fda-b570-8c095b3dd664",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed14d8a0-01be-450a-a9ad-778dbfb012e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8220e2cc-02f2-460f-8980-c5a9d2210deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b19d618-a4f6-40ce-91b6-a2010329bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb424510-8b38-4bef-af88-f44f8dbc65d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab51c347-0dcb-4e3f-b05f-59f8d21b2955",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b35033b-9c0a-4dd6-a1b7-5ec2fb2485d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d217045c-37e8-4d2e-b3de-7b8f48d99493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463271fb-ded4-4e0b-997a-16b2e10337c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7e0056-1372-4816-b0aa-b4b80a3026a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c5b50-f315-437a-b580-9eb029319acd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d52e6b-fabe-4951-bd1c-33c700bd465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bd4dc7-02e8-4604-917a-39aeaa65a242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbb6520-7e05-4611-a541-3121e4b655b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc804be-ab56-4d83-867d-28a0b377d857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecd5411-332b-41a0-bc36-bfb5415381fa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1459f818-664f-48e5-b2da-ddcaa6e90322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed2e6df-c151-40f0-80df-c7c216661d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2486b98-f1db-47a8-b980-5c78ff62241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53245125-1038-4a28-bed6-1dd42a03a616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576adc97-fe6f-4ab3-8b23-c1576d66de14",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be276db6-57a1-471e-a3a5-6766a74eb220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2759d056-3f49-43e6-83d6-bf6f2fd1dfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41b7724-cb38-4237-9e80-39e0ae3c0449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af6f7b8f-c77e-48ce-982f-5b8fb5d92a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af6feb5-a68a-43e5-92e4-e85da5ad76e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c16f8a-71d5-4ae9-9d70-24053f53eb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f67451b-459e-4a8f-891e-9c644b834bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4442eb-3887-4db8-b182-ae97b7ee5d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ed155e0a-f8a5-460d-aa0a-2c8c99784882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21376486-6194-4019-869d-ec1d891bd582",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de017c9e-6a0d-4edd-ab89-faf9de93ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6017633-44c0-4601-a2fb-eda9bfea4b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94200310-ed70-4cd2-a021-c3c0bf1daaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a74a1b12-9fff-4ecc-bcef-ff38da5f42ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3cf482-c722-4cd7-830e-1a8e7e44e5b7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b3681a-3d68-48ae-ad77-0a475b66d018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3034bda-c202-4b3c-9a80-b615d9d37409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e210d821-ca0e-4733-8aa4-c681a39f82ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f4ac37-790f-45ce-a484-dfa15a7e2ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f225a50-efae-47eb-b56b-6b3b2948e44f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88aaa773-3540-4985-8fa7-125aad1b5d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730f6ea9-c9b0-49cd-98bb-7bb72f6bfea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9ccba-f144-4338-852f-0aa9434559ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8656fe-c17c-449f-84e8-138ef05da8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f48deaa-653d-4ede-8d8f-279d9682ed7b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d6390d-cfc7-4950-ae8b-7bbb93378e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf068a-f9c4-44bc-b186-63b239027556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94bce95-b7d2-4eb5-ab3d-1f12329a03b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a05d2c-7a73-486e-ac0e-625e6da7c80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c98a5ca-6dd8-44d4-9b05-66d8721c9c04",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49a7a5f-1954-4a5b-8b7d-3fc655e21d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5379ae2a-5633-4c95-902a-a36a3f49fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b783a3-c967-410e-9061-80493b990351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6247d6e-062e-4d0e-8960-805b759368a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff3cc00-983c-4897-8275-9ecfe5c1ec35",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d8b997-d558-4296-83d5-949cc4f1c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7a6084-f7b3-425d-b7c1-75ed2824fcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7825d64-3cdd-43c3-843d-b3113ced5b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a614a81-c5b5-489d-a378-081c7f55ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1393b79-7675-4268-b117-a58358e05ac0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4359a3ad-f2b3-4ccd-8ed8-d06a382c2cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32ec100-e168-4375-ae5f-05462b4d56dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b52fb6-2a44-4db9-a75d-e8d9afd46cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "346be228-8e0d-4874-8a5a-097027f0d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68f02fa-f602-471d-9f4f-9579f8be574d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287c7a2a-b96c-4a07-b788-70df232ac5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10224024-d9b0-42d9-9e26-f974f458caab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f07c3b-1f52-4e96-94a1-18ad1efc0bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b9e02c-5200-49d6-97a1-3f41d65fce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e13de8-955d-492c-a03b-76612d43e157",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8195ed85-80e7-44a0-984c-c23a0a1a2176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89d3f71-0c3c-43c8-b876-1a142699b76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e6fe64-1538-4513-b2b7-08b39dc7034f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf86750-f600-4ee8-b3ab-548ca5204999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7782b451-3b6a-45c2-a242-7d609b7a413d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114101b-1021-4f2b-a6fe-adca9d65ec38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0085af-17a9-4062-a139-a6cce309f7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018da776-b1a5-4061-ab2a-10c7af77a33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f885523d-921f-4b08-95d8-312889caace8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8236b7-2c24-472e-b490-5cd3e068768c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d88e8b-babb-4cc7-93e1-8156a8e909cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51167503-0980-4acb-84c1-b8af471fe13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f2d702-b0ba-40e0-956d-fb805286c4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0f1aa7-d017-4d4b-8162-a1687e384018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a69c23-fa51-47e7-afc7-21c5ab690227",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe59e41-00fb-4bae-a837-f905a83e27a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3866a2e-1d2c-4843-a3ee-d22e0c7ee95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1cd260-fe4d-49de-9eda-3de8ede51631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd61bfd-b725-4ab6-a695-cf9e1e20f2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5283041f-7645-4959-9305-709f11774500",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb7d2d5-4d93-4341-896c-e99a0559dc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0560941e-96ed-4446-9565-83756a19f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c0a4bb-a13e-4880-aae0-a2e7d5661b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec25f10a-bbb7-4c93-8160-834522bf89d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fe6c97-d20b-4919-bd3c-4521f84131b1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d604b2-3b69-4389-85c6-d21b42bc8802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10405fd2-ddeb-4779-bf76-00c151835309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2986d98-13a5-49aa-972f-a92f0e32f73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9146354b-0acf-4500-8f05-6ba0c50fcda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc77118-5a1e-4f5f-8d5d-249347f2378e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8fedc2-914c-4a0b-a2be-55bd073a3fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a9e07d-329e-43e3-a903-27831ebc06e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b658469-a950-4509-8025-10cbec645f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7422e6e-938d-45b5-9285-14a2515aa5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bc1045-f879-4795-a42c-8dc383af07d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7474ff00-4e85-4cd9-86b8-bc2460722c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4863476-d17e-411c-84d5-e32fc390d452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2477586f-cbee-4b3c-b5a1-59925fb05d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5de5129-751f-4ab0-9c69-d5a7b42981fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872d6ad2-d708-46bb-bdcc-f8e4c564205f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9790b380-0878-458a-8873-f508c53fa01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210f7e9e-8abf-480f-a0cc-aa4af62066a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed169c0b-0e51-41b9-b13e-fa23b5961054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268207ca-ab26-4a36-bced-982ce13913d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef34bc-5838-4859-ad11-4cb153a1cab6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f540fd4a-013d-48cd-afc4-57632447af8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d760606-54eb-4d41-bbf9-36e5b3132f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b645b9-8978-4c05-afc2-337c65f88114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16061967-7b59-4438-95bc-860a636cb78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d81343b-e813-41ad-95ad-09476154fe7f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bafc10-4359-4c8d-b600-4c1fe78b483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8665d6-a257-4161-bb21-535a3ad3db54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e08d0ce-97e7-4a92-b319-da119fc6fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f200d87-5912-4ee7-ae0b-7c73714db906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f4a805-6379-416a-91b6-6bc21a1e1c4d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c951319-b39e-4d41-92ec-c75c4190c262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa904ea-0257-4ad3-bc05-c8699ab5f6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ece86d1-aeab-4931-b156-1a8a77f44493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdea255e-5a38-46a7-99c7-ce9deb7b5759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae0939-4f08-4237-90a6-9afc3914f101",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317ee6b-7469-4a93-b6d3-d4dfa826684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc2b70d-2c30-40d5-a430-e94ad9c29454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512f8ef8-0fcc-46d0-8d30-d5e333da4eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff832064-b523-415c-955e-a830e5abaca5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbf2b19d-4864-4f33-9f66-609d71d718bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4ecca1a-ce94-4d1b-82eb-04fe41e7ad6d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ac4457-21fd-4b24-ae4f-9db2f5654198",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac325d4-851c-4e6e-811b-1bcebc055fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76388f19-3c22-4768-96ae-c9ac766509b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2752bd27-dcf6-420a-9448-81ebb1f51eb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53a00dfc-ea11-46ed-b64f-d994c86c3df5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7332e89-2cd1-4c2a-b321-6015e92310a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94155f4a-b5fd-448e-b4d9-787b55003206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b27609d-5144-404f-88ec-639a5e64970d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "198e720d-5fdb-4d50-a9b8-557c88c78b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "63bcb48c-b6c1-4634-96f2-9c57f7c923f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe2f0564-acd4-4a30-8f47-626455e781a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23472a39-2d04-4472-9892-b9b736575ed4"
            }
          }
        ]
      },
      {
        "id": "f4392e71-56ad-4e0d-8cd4-e4832c949b1c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "668e0dcf-98c7-4bb3-ba4f-f89067413ab7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44d5d793-e71a-42b4-bb42-77542709d3d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93ca980e-89df-4951-8a85-94d77815806d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af3fcb3-ff4c-48c0-a079-2bf9c4474e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34922c0-01b4-4857-bed7-52c56d56e987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae7eb2b-e051-4968-a48f-1ff778d0b771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d812a3d-1bb1-46ec-81ac-5dc61462effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e684f50-f605-4745-8c4b-82ed8075a601",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66b1b3-2a5d-4188-ae25-b48fc3630029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f833fff-0500-4abd-9164-ca5cb0f7325c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fa2ed6-dcf8-488a-8402-46d826bd5eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7344e35a-3f9e-4ce0-be42-08ecce626606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aaa385-a092-4eb3-b143-1712a5b2ccf0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac6a44b-2950-461a-a4c6-d469462c007a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db913c90-7231-4a3d-9489-331572fe3f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb96e437-f0bd-4b1b-8934-430edccc1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8a12d2-cb79-4138-8488-bbed1cac45c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acb9298-f512-4d5e-bfae-33cd622790cf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf18cc3-b33f-4e9f-bd88-b2a4d1e8dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2149b4-c1be-4c6c-b9b5-8cbecbdd95e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a4e5a2-a3d5-4a75-8c03-4a07d9dee0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2617b8-3fc1-4f1c-a0b0-4d96688f178c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41fc164-2961-4d03-b878-6f38684c5f27",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a91970-b84d-4c3c-b60a-41b63353891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c060e7-ad72-4d17-bb28-c9014960e51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e31841b-a815-4db3-8084-1992d5830746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8d5bbc-e587-49f6-9462-823ef9a24a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b846b073-a258-43a8-8276-66e716dfcd85",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197413a1-2c30-43b9-92d7-c42b765b099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f86ffc2-b564-435c-91e0-9fd527720504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4400bcc2-8087-4fda-b42a-277dbd158ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30245238-4410-43bd-bfa1-44bbd6df7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a104050c-185b-4eab-89bc-953714f7f83a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01f1947-02e0-444c-96b3-ef6785abc93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887a44df-c582-4f07-b308-fedeb0520368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a93148-a015-4014-a2a0-3133f947d916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ce740e-0434-4157-b717-8b759d4475bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d891ded7-59a0-4b39-9f35-68c008195256",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312a31cd-de0e-420b-91a7-0ba786b70907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8217a192-6e31-4c8f-9c6a-8ddb0c28965c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7748771c-52fc-4dff-907d-2bc52e2644bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c12a92-4693-41b8-a046-4df805f2a3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fe9045-60eb-4810-b063-37bc7be888b1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6d58dd-4432-4122-b3d2-17377ab494d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6414d67f-eaaa-4857-8d08-072d71b9438f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b29cff-6e92-4ebd-af7a-545fb8e63c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65bbffd9-60c4-4c01-b763-05f2edf5d1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eede1532-c67d-4968-896d-8861c6d80149",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1d55a7-8db3-4da6-8012-a8e23c9c3339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27327c1f-1fc1-449b-9033-1c918a3bd0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e86b32-9548-4444-a264-3eba0815a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5ff6bb-6e24-499a-bd19-ef2ee4031e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fcf0de-533c-4ed0-86d3-2a39a6205c5f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bfc1a9-7021-42f3-a1cf-e7fac4f76d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde75c6b-11e5-453d-906f-9d65ed9298c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c7dc00-8c98-4ce0-8882-d92debf597ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "175e4a4c-1867-456a-823f-3f0bf9909e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064234e7-06e4-4bd5-8104-c1f93d0d7e12",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc03c7fd-bbcc-42bc-b4d1-f26e7af665ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8202cff-b5c2-4e06-97f4-480655339953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f51260d-352b-41f8-bc14-68fa102620b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1200c4c1-64de-4e06-94f9-ec2f8eadc7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2a22b1-6d37-4171-8b4b-3007d77f9b19",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203ec55b-80ca-4892-bb11-9b502caa2c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51255b1-743a-47ba-9f94-293f7b43c7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71bcb34-b74f-438f-8989-8669832d19e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d355211-ae21-4584-9e84-741114537776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5c0f2c-d661-494d-a8f6-183b77dcbaf1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e7ada-fa48-46cc-b79a-d8a2836e6669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061e23e6-62a4-4e40-85dd-b0a1f1779d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aa53e8-b1bf-4e7c-a8e3-627c8d821898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6f3949-248e-4d13-bb63-b6b13f0c9c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7ac834-4935-4663-8352-dd91cceb03e6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6456dd-ffb3-4bf7-ab8e-2d00d21f5db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f1455e-8052-44b4-9e1e-79d1f5b62c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70bdb35-eb16-439e-b339-e3a0e045207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa1417b-90bf-4d2b-85d9-838eddb7a708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93bae2d-155f-4e7e-a3f6-67d8a7f06d78",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe6c686-5aa9-418a-a522-d7595da4f9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d5a581-48b9-44fb-bbb8-bf0039e7a2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b74453-d106-42a5-9912-22ca8db0ec2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d82d5b-c664-494f-b148-33356aa60c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b342e117-bed8-4b6f-9567-57dfc79a4ca9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b894c10e-2b41-4dcc-b53d-2f0faff01977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0affb0d-f0bc-4bbc-8812-705c88b07d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2e9b9c-1682-4762-811a-1981976c25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3db9c93-f869-4fb5-9dfd-fb10b1510be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9ebf4b-c001-4e0e-a155-8f66ea60f906",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123ad57a-8251-47d1-aa28-1e361cdc3668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fd708f-5015-4192-a2dd-508625db7e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a895973a-46b0-4bcd-aa06-162863987048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "409e5bc6-a851-4f5d-b843-d227b1fffc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411c57fb-a0f9-4a4f-87b2-4332eb8066f3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdf225c-d895-409f-bef1-29c9a269bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8dedcd-fa89-437f-bfba-b6ce38860308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51185ec-21a8-4723-a784-492c0cdaa814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458625cf-d884-4a74-a42d-64caba6b8e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad93d30-153f-4c43-a2f4-480c1440a2bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06d2b7a-1991-4613-87d0-c73053a2aa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47b1386-a6b1-4372-ae62-d2a33b931797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9487bfe6-1792-46ef-b7f1-db2d89a3e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e768840-b69f-4445-8799-e4a7364e034f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca10ac7-dc73-43cb-bd5b-0751542364fa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70729daf-7e40-40ab-a011-76f7d9489580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93a189a-303f-4ee6-89e7-6e36f15b4aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c46d7e-67d0-450b-ba79-90d0f3ee3471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79280918-e522-4fb2-8d68-67b1440d6f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145c2815-65a4-4c92-9318-7ee37ae907e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa154df-d065-4410-a460-429d7e035cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564593cd-3e40-4581-b692-f7be4dee92b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0261565f-9d44-433e-80c6-048ae0172eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e091703-6d59-4232-af35-e9e0dead3137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557c582d-be9c-420e-899f-0508b3cdd7e5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248f0c45-2da9-4c18-a1a2-dfa70879a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40189ee-8def-4efb-b950-7ed4f2904a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c278732d-db31-4809-80ff-b4c26910b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c6dbbd-209e-4fc7-ac5f-b55dcb29122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5f9d28-eb49-4864-a40e-18c9e5259efe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c589fdf-30e7-48dc-b3b0-b55118ba64b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76096f5-c8d6-4bc9-bb08-140435f27db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfa2a80-2fc8-4cb4-aa85-5829cb306bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a93725e-83a7-4c9f-8833-1014351c99b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf486c87-0e81-47ff-92c4-55b1f9d6c13d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92982418-5021-4048-a1d9-22724d6219f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8721ba7d-8b5b-45a6-b331-110a21367d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a373665e-bc61-48ed-b02a-0925873fec8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b960684-78ec-4025-9c33-3cd73e6d7068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd742872-2876-4f3a-be30-75b71e0f495f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8866ec35-54e1-4736-a6f7-8dfaf323ca27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5af471-8ee6-4958-a6c7-8670ced0cfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf88748-4170-44ba-920f-e0b0cd74f7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d37fba-68a2-4436-96e9-edfda1af1ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04e32be-ff87-4d8f-99a9-085df57173a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad35e5-2e80-4346-b434-028767bf5d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebb1d6d-fc0c-4441-8380-f6180d447148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96406dfa-3838-4413-8653-a92882f749cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15923a6-9d03-4300-abcc-6d841f1b8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd2f0ae-5b65-4a6b-bc78-7be21c6ca4ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3720c4-bcf9-4efa-b8f0-44da34826c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06af015e-416b-4fc9-88e4-61cd48880699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f66748a-2f83-4d12-b03b-afd0bc3ee983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ed24a7-c8bb-42ed-b07c-e802eadf0c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7441402-2523-4925-8f26-c9dfc2384d71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61153b70-b4ea-44db-9c9d-386f67bb67d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2aa2503-d58f-49fa-a3a7-6d7130904d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7f0267-4458-4880-919b-4b623a099aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f7a4a-256d-4995-a694-81f4b36102c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1396c4cc-6686-47c3-8b40-5578c581299b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511da508-4b07-46d0-9c58-0e56e964c60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40192033-2846-4209-a814-ddaf2d5560cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76d2647-7327-4019-9b46-a0b34983439b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36dcfaa8-75fb-46b7-95a7-c587fe6488e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c124f64-7bab-43e0-aca1-48eee3ecbb46",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8aa4b2-437f-4c3b-a519-499fe8a42321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57991a5f-10be-4251-80af-fd2dd7b58825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79188c-ea07-4181-8505-61db7de10fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20111160-29ef-4772-b5ce-de7764eb893a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38909b2c-3ba7-4c71-99dd-4b152252c6f0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6a0425-e51b-4de7-b586-bb4d7dacfcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e283faf-656f-4657-9702-c1b1d0c1068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef3a562-4a65-4e35-ab92-22a2207c71f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca10958-5f25-4db0-81bc-c67fee6569f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270b5984-33f6-4f46-a55e-01b16327390d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205ba544-05d5-4c95-a06d-baa1c78cd2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1583e21d-e54b-4f32-8ca4-d28e3564a508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e201e26-aa9b-4662-8c68-c94b337116fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b952441f-dc4c-459a-8655-69bbe88d1647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47a7f2f-c980-4b8c-91ba-116727e63f20",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840bc673-179f-4182-b5c3-c587108f440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53506110-9121-416e-b7fe-132b1c515466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25fe6fa-1165-425c-ae1d-ecf2ea465c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f34dc5a1-a041-4d5c-a779-bf58e0fc0dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316332e0-60ca-4f30-be08-4e77958ca3a3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47765d94-e8bd-438d-a667-8b23acbf0113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373b2c82-9cab-4bfe-a160-77629f191228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0a9b94-6df3-4745-90cf-e2a96b1ca7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93e49ab9-dceb-4ef6-a9d9-120a483c2765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3256f3-d3ec-47ff-9b0c-774e6af04c8d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc1b98e-4bb5-4409-9f78-43e60d9cf837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1101253a-7bcf-4d44-8395-9560655ca753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bd006d-7eba-413c-b324-da50d2270fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e86a61-5bd0-4799-b067-eb8129e0eaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe21a53-1702-4f8c-9571-eb60e9da8a1c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a7d524-fbe7-4a88-918b-9487fa316fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdd4207-4710-4c90-8262-725dc82a5292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c768d157-d1f1-4273-b7f7-f46c50bf3bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f538c55-0608-40c0-98a5-8ea624641fe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f92d6ca4-286f-435a-833d-5bf46b1bfb6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83416c08-3705-484a-93e8-1a4717ee4fd9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048fe7a0-6a35-4491-bf76-8d26be934015",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "18e0d609-a645-4cfa-b131-78006f660ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57792f83-d054-4552-9ee3-474e1c1f0dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5556c5a-6a96-4a0d-9d19-b5d2002d4452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c48682b-1def-4af5-8ad6-267e09fd8b8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24595d12-66bc-472f-bd93-82391ff5ad36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f81a08-9b1a-46f3-8cc2-4cd60961b31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce0c245-70c8-4948-932f-637a4c7b74fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef69c361-1acb-47c8-8c96-2ecfa2b9270d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7d88cb1-66ae-46de-9f32-9f21a031c37a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86a52efc-50c0-4fe8-8b0f-9c8527b8f06e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5cf2a42-098e-4928-a6f1-d2fc7eb5ad1f"
            }
          }
        ]
      },
      {
        "id": "dc0eaa49-23eb-4219-940d-c9181aee0881",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "200557f8-52be-48d2-bf00-1d8b82c9a6c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a9d5529-2141-423b-8cfe-cfa0d56a414b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "feba249d-8473-445d-bb0b-d06eed8d42ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593b75b7-1af7-471f-9fb1-a0a4dcece298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da4a97-6bc9-40d8-afae-761de4813847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf7da56-a4b7-4776-92a9-a7a8e80357c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75cac26-1af5-4556-a05a-a168bf4a7928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831c5b56-db7f-4220-ab91-2ef5d72d48d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20363d37-40dc-4d69-95a6-5322854f8d75",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d337390e-8252-4ec6-af23-c923d4dcf6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fbfaed-3aea-41dd-a433-7f1d865dbc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3e1d5-bbc0-4c8c-a4a3-ffec0b631c9c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0ab6f1-4af6-4fef-a3fd-bab959bfe984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5d00ca-62bf-45ff-a64e-7910de6cdc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf35d3c-2fe0-48f4-8cdb-002353614283",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9a2041-91ed-4263-adcb-e13a0c9684d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7636a30-601d-4e50-85a7-226547107d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864a14bb-6369-42d8-b526-e86a4334d5a2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7d8b42-e9ba-4dfa-bc32-970295c719ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3a16b5-8f5b-4d67-8175-24e4e4205a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569a1600-37bf-4a75-8566-dfd2eb1440ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509a8755-c3d6-4092-b2cc-377390cceb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866f857c-0d65-407a-a386-3c459b5cdfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c428c4b5-d198-4ad0-8456-be0a2a53cb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2465dc-fdba-4aa2-b500-57435ba21e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9509e41b-3498-4090-92c6-aa35987fe6fc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ec861d-0c0e-4947-a95c-5e761e47b850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c25e48-a25b-4073-ac0c-cef9d03ab133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e60ab95-e639-4e89-9ed2-b06e4634dbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab22241-b05f-4c0c-8b55-4cb2e44fc8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b08d4ef-991a-4857-8372-e55df554ab5c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b57c7-fb75-45b5-860c-6059c974fb32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa806a8-49dc-471e-bc9f-6a1db18634fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0f689d-bc71-4ec2-93df-78bb14f2dc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b38ab36-48cd-4462-ab15-a03e635cbeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3f4b65-60c4-4024-87c9-09a707daefeb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae2b117-c097-443c-bc9e-38b25f4fd1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547e6d7c-d3c5-47db-b5d1-031c3a1f12d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a36cba-7faa-42eb-8b8a-e6441978a8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ec222f-8ab9-49e8-9d43-92fac0bf3ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485e8357-322c-459f-a270-6263754b64de",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d1e49d-8605-4d72-87cb-b2e4d9d3d4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d9f93-ba4d-4ca0-ae48-38c3a78c790f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bfb9e1-44a1-4cfb-a81d-191ec281ae7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f7da58-cf4f-418e-b584-82c9806cb7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c07d7ee-5bfd-4975-b64b-8613f9ee8e92",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa306a6-9d1a-4189-957e-fa42b8377af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee65bb62-3048-4215-82da-b3f356577c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5737c28-4f39-4685-8110-69a82287a0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cceab0-fde3-475e-bcf9-9fc433465287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e0bbd4-5299-4b5a-bad8-271c12c23493",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66de5a19-a896-4b2d-bfb8-171a3cd49ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49aa2ac-91ca-4149-b5af-584903a0eced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b77959-a211-4ead-8882-afb97146652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2f0bb5-772c-4cfc-bafe-55a82ce30f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7676a26a-4915-42c5-a5e7-7bdb1955ddb9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7355cfa-3747-4b0d-9b76-266fb9c4a23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b3579f-9888-45a9-acdd-9ac3ccddf6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4851d542-68c8-4d66-86ef-cada508ac6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a7119-e0b2-4464-a0fd-906fd1d850d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918044d0-f584-4c9f-b591-92438d67b72d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837fff45-8aed-49a2-8de7-344715286972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66cc638-0dd8-4364-8d0d-0d6951f3d860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362cfb45-4c9c-45e2-a375-9cd83dd9dfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8227297-cd30-4bdb-b2d2-542d024f8449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75bc9f4-c816-4bdf-81a9-cdb693cb7ec1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d83b7c7-0ef8-4b87-bf1e-f6c5bfeb8aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25003cf9-ffd7-4536-a0de-4ce769c2a390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84699de5-0cae-4d90-b77e-9886fd202da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21abc7f-94b9-498b-b8f8-169e705493de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5865e198-418b-4bd4-9b6b-9ce1955496cd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c9d843-791d-475f-9e6d-ddadb460a7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a5d359-b6f5-420b-9f0a-d1db3284dc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61f3115-9d57-4eb2-9e78-12662085fa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f385e52-b1a8-48c9-9103-1d2d8e9db0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e961639c-4242-40f5-bb5e-96126b5295b5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9ccced-0966-441b-abc5-96dfc00b1542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7887c4-84c7-4ea7-815b-b1ffc4f146c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56af5c01-ce42-4b69-b386-a753cf8f5c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f42fb34-88ec-4e78-86b6-bca89254af59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b995ddb-533c-4159-a7ac-516f44091780",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2274f353-c688-4d11-ad40-b5a10d524a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47cefa5-f2fa-4484-a244-00f7754f6137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c2b75f-4c65-40e1-8acc-a16f466597c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31994035-50d7-45f8-81cd-18b8a2a07b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82f58fe-bac8-4915-a366-3cdc5c6e9824",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782e29d8-da6d-485b-aece-8f9a4ece915c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05841b26-cd47-414f-accf-9820d4fc85d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90530f4-921f-45b2-ab05-7fe2b096699f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f46494f-d198-4381-b76e-f0443c9b7a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ba9d9d-9f05-4c94-9366-567b86bb0bc2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7b53c9-e22f-4fd1-bd73-527b90cc2599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8af5ba-28d5-4e80-a334-2629c81d9e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64291180-3f4c-4201-a3b4-e94839b73071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c870a652-74b4-470e-acfe-f522bc463305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e37724-56ab-48fe-9859-2ccaffad4bdd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b1a6c4-252c-4653-a30b-4f32c86508d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61274ddf-29f3-4631-ac2b-82ddb1ec1535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16877317-ed68-4c14-8885-8c7fd745ddc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee8925b-5100-4790-a43e-75cd7087b86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c12bd-64de-4ee6-83f8-3740846a0159",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f462939-17a5-4b40-9f57-6eab47723c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609f4a3b-e0f8-4617-97fd-79b0cbd7df62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e877b-743f-44e1-9b0e-323a6332d92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb1d07f-1be0-41fd-b6cd-c09327f92b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35622ec6-8099-471d-91df-a5552df837b3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ced7dd5-7f08-4542-b211-045b94f97393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6712aa9-d5f2-4c03-80da-6f1f7fc5f4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57e9b2e-dd69-48ea-8712-5f30c3ecd551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2763e642-86a2-42d0-a734-df14ad7fccea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba85a661-fcc8-40cc-83b3-a83a03d7bdde",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf3e38-dee5-4165-ab69-da2b9d27f712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98c9985-66a3-4372-959b-d21456b1a467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94be624f-6b4d-472a-9423-fcccf2133b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009119da-d22b-465f-bbc7-9a60a9595f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c44f63c-4c9b-4b26-bf13-917e3c4ce2d9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4960bbe-ea7f-4364-b7d3-0e52cac0711d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d12af66-71cd-4d33-8e72-0ea0df84cf12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42455dc6-86d9-44fb-883b-a3256dfcac81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328e2d84-5fd1-4881-bb1f-080fffa5db51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66283866-5435-4655-b603-31c0e0e42373",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7ecb48-a031-41fc-800f-60586eb95e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28f8c32-9deb-451b-8c64-279846dfe747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c022b94-ce07-4b2b-b180-0957e0690592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8caa1c6e-a7f9-4e09-92d9-2d2ea0074738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb44a578-f155-46e5-9f10-de8e42ac3d35",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ae128d-d094-4039-86ac-217f5f17e23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaae90d8-6a51-4723-ae72-fae5dd177f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a6753e-c6ee-4249-8d1f-0405087a91b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4423b3-6917-42b9-8fc5-9db43951c5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb89c40e-5e66-4632-bfcd-0dae0e9d1126",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8670b44-3355-4a39-b975-ada665ada7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e73fe20-aed9-4d25-a103-8d0ccf5b75de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1aa7a-de52-4777-b0e8-239984182bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00063e0f-f5ac-49d9-8f74-fad37f3724b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c1a64d-e2e0-4cfb-8ea5-b4bbbf7ec8f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a9cb67-6235-455e-8996-f433d6a60d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bea7887-38cd-44fc-a604-37dceb7f1625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc57357d-9040-4906-b359-1aaf22013515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f2199f-d3f9-4d26-993f-26dd3d85d96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb0ecd2-3b8f-45b7-80b8-c3ffa5be3c49",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011b580a-15d5-493a-9fe4-d8f9042b4443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89c6227-038b-4faf-8fdb-7ead100fc977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68df93a-d216-462d-97de-158fd1f04c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9852f3-605e-4d26-a704-a3dbd72d413e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01638c53-f2ff-438b-8d19-f0ad0254d749",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bef5ee9-bfb6-486f-b93c-2bc2412568f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582c6023-5013-4a1e-90d8-763205c9f922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18945d21-a1e0-4f25-91d4-236f4e962a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589011b1-f207-47ff-b642-ed2c227fe77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e9529f-03fc-4d77-95fe-bc1e1ba2c899",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6761bb-dff9-4f74-a0e0-8a666d97b072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74769c5-67e3-4c8c-82aa-f6fdb6130439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d68c19-3d89-4a55-b32a-5557b9046469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40816854-461b-4b52-8cef-cc52bfad9b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa8afca-7a7d-47d3-bfea-b3374a8e792b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4276515-439c-464e-a8cf-7c57a4bff205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ebcb03d-8057-4af7-991d-e61d82add706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f06198-05f8-433f-8a4e-d0df06593774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5afdac-dec8-44b4-8112-ea27288b1e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944ed783-978a-4196-a871-35d69ff7fe5c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c4b998-fa2b-4cc2-ac6f-b84f08aaf57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101b806d-6899-4f0b-b225-a68a206b8704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f625691-96e5-451d-9704-61ec4dbef74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cda827a-8cba-4ec3-a109-c4395f32f2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a459483-e0f0-48c1-a9f7-16eaeab56008",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4db026-08d3-4097-8c4f-2fb601e87c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79e5059-efd7-4e08-b56e-85196c2bcf96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bd2756-398f-4ca7-9092-b95c76a930b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619b420d-2db3-4c40-84f8-228a0ddf44ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4521712-3f86-4662-bf96-984530a7c881",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d759360f-c4ff-4bbb-828f-7f20e175172a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c075fda4-68ed-4b6e-8627-2d48df9ff369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2860fa-e1aa-478c-b6d4-7fbdf879eff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617d7030-6ae4-4d4f-ad80-3124a76d0f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166aa396-a570-46ce-ade4-9306834d7602",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2d4e66-edf7-480e-a755-e7c1c40b3dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a6066d-739a-43bd-9d23-75f248d36888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66eee0f9-bac1-4639-b70c-d528d8e95f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2afd138-ebd0-4a22-94c2-cdb83aefaa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753447b7-ca0b-4576-b1e9-205bc1e9df81",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8faaa3-ed37-4ec7-9842-09070f46edb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a8f840-5bca-471b-8523-8ed269c631f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46871152-dd26-464c-9717-49760973c3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957d6c90-d092-49cc-960b-961e005119d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96172fb2-7764-4b2c-b70f-405635f7ccdc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6897c685-7f1d-44aa-b6f4-d634941a0ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be7925e-f1ff-44ee-aeb6-820a34d12589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b10cf8-12c1-4943-986d-346c63119205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205ebc1c-925e-437c-8411-7d559aa62e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ec78bd-1cc3-40ee-b37d-602610aeb1ba",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1410c4-f871-434b-b77c-3883a7299b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffec222-14e2-406e-80aa-07157da5c3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8022410a-e659-4ee5-9ce1-e39dd4ce618e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d63f2a-3dae-457c-acea-eba51344cea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68911d7-cf30-4f6f-8440-de54b716143a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1a6495-44a4-4dcd-94b7-1091f5f1b516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425612b0-da5a-40cd-9a60-ee8e6d67b647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99c346-b027-443a-9648-8e4a19044a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a464c6b-c88a-4e16-a9a6-24df2446dd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed652ef5-8a2c-406b-9c4d-6ac9164aec1a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6058fc41-382e-47c7-a778-b3cafe8364f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f6aff3-1450-42fe-8e09-0c4cce665945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ed540b-8c0d-497a-8339-641ccb196529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cbbf89-5707-432c-8130-3bd55aa62ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d752e759-81ed-4b42-b748-6c549c207dc1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4941f538-d460-4395-8349-91e439b314a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d987e495-21a3-4bad-be02-1e6bcf0a77b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ef2c27-bb2f-4900-873a-3ece25478812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6224437f-404c-4231-98dd-381617505ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a98c4a-2f0f-4422-bba6-78314d775ab2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba676d3-71d1-4432-80e3-003b09068961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4085f3-3b85-4d4e-b481-3282256b7ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24e7d28-1314-4f56-a507-c1e781208fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04dcfd9-5010-4a46-b5a9-e21e331cfef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ffb4a1-26fd-451a-956d-e9c59925119c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea673a-5d84-4fd6-a452-63a6854ccaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61eb48b-7bce-425a-97e2-943b023fb5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a401325a-60f7-4f52-8d00-1cc20f23e3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e6b654-c385-46f5-9a79-b25305bf9184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d522d4e-915f-4327-ba88-15d236eeef69",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09c2335-2eba-4b53-b09e-75602beb1910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f662dd8a-ea81-4c4f-901b-25663121d1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51181099-6fb3-43b1-884b-e87aa16b1d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53d644a-928d-45cb-972c-8491c9049c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980c6185-7f77-46d2-ab3c-3dd27b6366ad",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd82abc-c46d-4362-a066-36e6f8cf778e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43129ea-8b8c-48b6-b8e1-6088a1ed03cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26570cd9-c7f2-4ad0-ae3b-f99fbaa8b56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b34282-24f5-4aa5-afb2-a4e57284b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8bc05-1275-44de-ad49-be9f3c904a6d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb1281b-0ab8-44fe-9d51-28fa73e8a318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b8a3e7-7436-47c8-a94d-96d3fa62e2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1985aed6-7931-4778-bcc4-0a6ab622139d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70553fd6-ad4f-44be-bdc9-96c89d257389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616b55f5-d832-4805-a6e4-4962544de4da",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa1eefe-fea3-4d1b-ba3c-d725667b002f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2462bf-619a-41ae-888e-56de6b0caa6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21da1283-6454-4144-892b-cc2c5084f50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a03d85-1d64-4504-a69f-88c8b8206ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c73df98-77be-41b4-ae7d-dfb3358e1802",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccf3bfc-a838-4fa1-99f9-a4852e26f4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f0eb96-ec1e-4a3b-a51a-084180af9b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0fefc7-cd3b-4f12-8978-72d481cdacf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74fcc1c-7ca0-40d6-9884-959d4bd75a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2515b0-f89c-419e-9d65-b4eaf5653834",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10891553-363a-4e6e-846c-a0c5f5a1ac4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a8cf0a-5bab-4a3f-8636-106857373761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48772a48-641e-4da5-9be0-7a7f5e8156d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a375ca-2488-4ac1-9fe9-e3b7be3d9ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f399a-a5ed-4b67-8ff4-e3875bd81f58",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f970b89-6d48-4482-bb34-3aa78a561c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e7a183-ebf6-4984-8fed-bf0b0ea8e4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ebe78-c1d4-461d-bac6-b3bc562311b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7009ae-77b9-44a0-b6f2-161e4b924a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47a568f-b3b6-4c63-9929-d8c6bf682465",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3120ab61-b82f-468e-b7ef-2d8f1baadd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647641f2-1adc-4319-a6d7-8114aebf3bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf29d82-f09f-4d20-83db-e7e3b02267fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba4ab50-5885-45cf-bd94-4508cae8d2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a178a5-ecfe-4b84-b55d-7df6a60131b7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1734c00-541c-4666-abd1-0349bedc0f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f8afb6-6b6f-4789-b937-f1219dae4ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bf8045-a7a2-4b36-8e03-ebe1444be4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c7272a-794b-4052-80eb-44b440020b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6782cc2-443c-4c4d-bf7e-7483eb1ab3e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f47c0da-cb9c-46f1-b325-9c1d5d115e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c09449-227e-4711-8301-0b55f334b5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96f9764-0306-4469-8fbf-48ba18934fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d9d1b1-a948-406a-b233-43f6333d0d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f19536-0566-4e89-8311-e9aa9fab70e5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5c895a-fa48-4167-a7f0-51ccc543dcf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c5ebc9-0c7c-4821-a341-5f7fd3ca8c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdee438-e671-4146-809b-4462af0cad39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43680518-0376-411c-8485-fb8994d3722f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ae53c0-e492-4106-a54e-55e3070af7da",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0579fcdc-cc61-4975-90cf-4f0b4038ebf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd913f4-415f-44c1-b1dd-90ab3462ed07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f877b9-f57d-4cdc-9ae1-adb1bbc78017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fe1d82-53fc-43d7-bee8-8100ffcc1a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf27bc-8328-4683-9798-1790f33b5809",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f199be-e106-41b6-81cb-90f641a2a4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108062b7-e305-4a6b-b10c-f0124484dc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91877e08-4797-49e0-b08d-20d03c48b7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf04576-da03-4120-80e8-5c47b6f7362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedf973e-c45e-4d11-96d5-2b935f2187c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c67e509-0c25-4118-b907-38e206ed34f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d95867c-c931-4a66-a05b-e16de74269f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7ac596-e576-4d77-ae94-201d0c1687a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c96eed3-592e-48ff-9686-a2ea8adf3f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e6146-2060-46fa-bd99-275b85a270f7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e64b1d-640f-4902-8a78-e018590f3a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fff2b6-9917-4dd4-97dd-668b7006fa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4308e95-bc07-4e8f-96ee-9ab6e1456acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01623c4-d0c4-47ff-af95-71f30cfa94ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b3421a-1312-4e9f-b9ad-6694596baf5b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e851408-25e5-4d07-bec2-ced7294e4af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5a36a1-4c8c-4cec-9281-2b976d3a21e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b61fb-50e9-4d90-b82d-e29998618854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed526bc-8eb2-4556-a857-e5cb427b3772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf654d1-3c77-4d6c-8ebc-738de594da9f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b669ef9-3c46-4379-9478-fa7e9a2f03c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb0213b-7efe-407e-a542-b28dc14c5c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afed98db-b6c5-436e-b2d8-c4622fdb1524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e966b1-0791-422c-bec3-8aa66d3a71d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1cb2a7-b279-40a7-b26b-93188d2829f7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d575613e-c337-43c5-9d9a-32b0581e94bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "976edf1e-7c94-4036-a711-190ae1d71f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c294f-2470-4248-b3ca-eae597ff08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a3c1c0-23a5-4545-97a3-c65f079189a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622d0d6b-25f5-461e-9ce8-f8437b4681f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0355f61-3a06-43e5-892e-1ae6cc8577bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9032e4f-b5e8-429c-9426-b6c245e08052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71f7b10-095c-4d85-a64e-09ed54b25cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3721198c-bceb-4b10-818a-a7aae70b877f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce2275d-56fc-476f-adfa-5af89e9d0d88",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391ec607-28d4-4d2c-9c6f-6fa9403f8860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d9d0d6-a481-45b9-a591-7e4bf39d2a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8802736-1ce1-45b9-81c3-229a817846a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc13ace9-7fcf-4d88-a9a8-f9e244090547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91435cd6-9d60-48d1-a4a9-9e5ea408a709",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd927631-2efc-412c-8170-8143968e386d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c74ae9-522b-45f2-83df-87d3604a9f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9e0d49-ddbf-470f-b893-c22612bb19f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508e0ff6-8b6a-4092-98b8-3993f147d43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aabd443-002c-4975-996a-37f6858c69a9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2ab034-6879-4557-b7ea-c0dfa732c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba729ba-b00c-47e1-abfa-7f2c04b9801c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7416a9b3-c377-4f4f-89db-c3938b2beae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0582e545-e812-43cb-8386-4315ef97e7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74456c7-cc65-48dd-80ab-3c67823d2c6d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90782a6-7166-40f6-aa29-56b1f6044419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f411e35e-a32e-4eae-abf0-89a74a262bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe9a03f-c25e-40bf-b707-2822335dfb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5162e565-3401-4955-ad38-cf18a2517213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a7161-58b5-4cb0-9acc-086cc584f471",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f1a161-e8ab-41a7-ab79-9e1346f52a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344675ab-9060-438b-aea9-d0211801e199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ce8435-fbc6-47e8-bed2-a21f989f2a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40e10b8-6198-49f9-bfad-c3adfa75f9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59071ab9-0ae1-40ea-9f1b-78307f58025d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b746da-4934-4eb0-bce9-ad10aae9a27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6917b2-2571-4d32-a809-60f38d72d2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7405d7-b89a-4993-b2e1-285c0bf41f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890b439c-826c-4b0b-853e-955119da4e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22b9f79-c3ac-4f1e-9ec2-dad178a72cf7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb8a81c-6aeb-4698-8fed-84d546e0c9a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73301cc-8b77-4fd3-8b4a-ad9c4adac621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edda49d-e3d9-4a3a-9e01-ccb755b2428c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b3a4bd-aed8-4211-b90b-32bb5bd91dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447b3e60-5616-429f-8655-733a47df3606",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55de4ef-38dd-447f-afec-86aeac62695e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79ae3417-01d4-4177-8b49-f2f943a3f49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d9d57d-569f-466f-a385-bce432a90b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ca5921-4adb-4ea3-a726-97cec4a1e366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab4674f-b7ec-4351-a3b5-edfa41d80c48",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ad6c78-8fd4-4137-a71a-ed7633a7abb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3510f609-9e2a-4ddc-a573-0d3adf05e153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd45c1b7-689f-4482-8b24-f1d0fb2c26da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1adecd9-5d25-4070-97a7-7c538bdc93a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab290c90-2dcf-4ded-90d4-24d64a0e21d0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec371f66-9692-4c6b-906b-bd350b157571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06fb914-54a1-4756-b604-ce4f62386eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76ba4d1-e88a-4b6e-85a6-1fa3a15a7512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea87fd94-6c89-480e-96bf-903d9e83c8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2b83b5-9144-4b01-bab1-f42fe0278d2f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1234bb6-b24a-4f4b-bffa-2ad0f01f4ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f946c4-545f-4989-abca-e388f96950b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3764da8e-639e-4c4c-af9a-c9a0b039e05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d90b35b-18d1-4274-a67c-38ae7def846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74d7c25-bb50-434e-bcca-d326e5002485",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510b94b8-6aba-4072-be8d-5f133b9bf50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "389a2e8d-67a4-42a2-ba6c-80c3f7be8b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c08b92b-2ec1-4b3b-85d4-4c426a006dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e93180-52a4-4b17-92ea-59634b0f3dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916af41f-80b9-4f1e-93d0-89a2d69c7479",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a85697-49a0-4679-9476-78aa587bccd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be64f410-13a4-421f-a109-65876f1dbfa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec94a08-fc73-4b59-a4fa-1d7e3b6e230c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e1cc5f-11fa-4515-846c-47741a013ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92802269-601f-4416-afc6-9a5e201043ac",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb12297-8671-43e4-925f-11d19d70178c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec837d8-a4c3-4cb2-8e9d-d02a288f8ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57b7934-ed04-482d-a54b-be4d4b89b2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf3a597-ec54-43c1-ad8c-37312e8923bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b05d32-0fb3-4b2c-9c36-c92f7630b0bf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3f4165-d632-4557-aa54-4a607909d59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33430352-452a-4a09-bde9-2469a9766985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7660af-6802-4941-b050-9668b3673f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b51225-4c69-4193-b3e2-498ac8a42af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dda75a-496e-4825-99aa-f62e25c57f49",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5249cb32-ff8e-4185-906c-ef71e5306f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79eb255-1c2e-44dd-ad3a-442bfd88ee72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b12692d-32b5-4d4b-8b65-ddd15e09579b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dab330a-f68f-42ba-8c74-86401b6159c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c5509a-9994-472e-ba77-322739caed40",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db7e306-fb0f-47cc-b853-49308683490c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e35d5b5-1426-40eb-94f6-c051cf2c3599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33e64d7-599c-45b1-b8c6-0949bd350452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e3d045-7c65-4a4e-99b6-0b8b737a06d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95a5c04-425e-4165-a397-5a4ab983cf4f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3675ec6-7671-4b81-b147-4e4b03c3f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dae6a75-8fb3-4016-9e5a-6cb6fa9b65ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a47480a-3e34-444f-ae78-39bae229d724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c6feb8-4c5b-4864-8744-6631d1e8c8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b459603-3ccf-4c31-b1d0-29d471c05752",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4707363-70ea-4ac3-837f-4e0e63918d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba863165-637b-4adc-be27-7e6630528a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ab1368-b89e-4310-8df8-aa0f8ab54c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69098c2-9660-4275-ab4d-20a227ba050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dd6985-0910-43b2-bbc8-90c7c19a22d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5e94d4-dd3e-4ed1-89f9-c11eeca61ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215d8b64-bab0-4694-a82c-d5f1d7cc0594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca9cf56-f56b-46c4-8935-b25659f533d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f8e2a2-e35d-453f-a0d7-4a13a0be67f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f839a530-710d-411f-9d84-1784a3e1383d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9d0868-263a-4d0b-8368-675148ee3f30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7923b9-a6ac-42b2-a9ba-e0830bf86691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e0d719-8906-4422-86b6-ea362999aaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef602f8-3344-4f72-84fd-47c3ef4858ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac789832-1c16-47a6-b2cf-1c21b5e09ab8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ad186d-b964-48fd-9a42-f99677c67907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17dbb95-7659-4da8-8e90-655ef32bb1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4a40c6-6601-44b2-92a8-d3926a0db61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0117458e-dfb1-41f6-ba4a-26fe415c2d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd91a6f6-dba9-4a50-9bc8-bed6cf68f668",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449e085c-c5a6-4ed6-8e47-5d2868d2c0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951cb6d0-c7ba-4c89-a052-1bbef6a1ee87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fc6f7e-1ff9-41f3-a467-21ba9483e199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652289c8-f1a6-4959-8c76-8a380b1aba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02c4703-4848-4f75-8eaf-3473080bf6bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2176599-1f2c-46e9-a7db-73704a5d1f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe28a842-dc64-46a4-adc5-c5d7e5677ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9f3ea7-2b43-4454-be14-3df93c4d564b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506964bf-16ad-4c39-8389-3fb429328831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9949fb1-9b65-4bf7-ae93-7f7445b419dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25626cf6-96ab-49a8-8c83-b2c0c4f497a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fb784e-6b51-416d-a76d-2d6468fd1b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b9234b-8738-43cf-bebf-6d17baa81463",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bffc4c8-080b-43db-afca-e03f77ca1a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9d4b7f-d9a2-43f7-a3ac-a2846acc4072",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a9c35c-6b71-4fc1-a09d-4137f42a1e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d57755-27f5-45fe-baa4-68434976c659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c94bd8-a605-4070-8344-d27e5c44c372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46554e9e-b7bb-4123-9053-913563e9d914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b79ad8f-e681-467d-bb8b-849d74fce189",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d492bc92-e958-44fa-ac16-d5b902be683f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be756711-5a33-4379-815e-63fb760e5e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc21053-01bf-4412-9b17-c23a35b6a736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fdac46-6446-45d2-8ee9-1d87049ba7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2f3b34-5103-45d3-855e-a15d75e90656",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3922771-1579-441a-8193-7582957a6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11d4b417-621e-41bc-8328-8df81305923e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7564b7-7f7e-49c2-b302-7d685741324d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0aafc7-8dac-4da5-9b70-a23a53a7af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6ae902-fddd-4ac0-80b4-f4817c695c70",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d5214c-aa97-4670-b299-c6cdcc0b663a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5f00c8-55f0-4243-8430-c98ba2088c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7281f6-f923-4ba4-8b32-0baa329d11d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a9f166-7282-451f-81d6-8ffe35036a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746d6204-2d00-4ae9-993a-83984f8a0934",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12334e9-720b-4766-b549-6b8117141142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99faa31-dcfe-46bd-8a61-33697b477aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035cf900-e6ea-4eee-8da0-d644f28c0124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae80a049-89ba-41ec-8797-cdb839b25ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf9b85e-8fbd-47cf-a97d-88b3c2fbdcc7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4978165d-2468-40d6-88a6-45ccfad69de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fe9ab2-1697-4b55-ac78-fb62e81fb9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d980f1b3-9911-449d-a4f3-791586cb6c50",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93f4a90-411d-4e9f-85f7-cd0456963c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef85e8e-f672-4fb9-bd1e-5f55fdb52062",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c754a50-e819-4e1b-8b39-6ccf08238535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49c3cfe-28fd-4470-8af1-79ec37b1708f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f704668-0190-4706-88c1-f0ea78f0a9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5a4385-ad44-4180-a6b3-b5d732f63795"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8caa0f2-e671-4630-ae2f-ef626611c8b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23a0edf7-f135-4105-81a3-ef9cc0d39346"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a4f90a2-c0dd-484c-ac05-c390d088c214",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "141a969d-2d24-48a4-83e1-f87a23986dfb"
                    }
                  }
                ]
              },
              {
                "id": "08cbb1b3-c7eb-4cdf-94a6-b0cb4ccae5a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bafe09c4-879a-446a-bd22-d9a5debb681d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5932c5-dbd6-481e-852e-8ef1eb5108c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "89a77f3a-0eb1-4574-a254-048fc95adc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5e98d-049d-4c22-8813-b76f73acf73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dbd14b9-d205-49d1-9119-fa7cb6a5b9ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec2d454f-aaf8-4f5e-a87f-765359ccc3bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2af8a31-b631-4263-90fb-f7578328d848"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8456c7f7-3771-4891-8ad9-a2d9641391dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4c8213a-b13f-466a-bf22-c19d1e5e71e8"
                    }
                  }
                ]
              },
              {
                "id": "df3d8d08-add3-4d9e-ae45-ca41b9fa3fda",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d1201739-48ed-436b-978a-0f853326acf6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bb5bba-59d6-420b-8318-abba3cd8a4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "332d9af4-dc63-4e43-b325-686eb0ba1065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ea6d21-fb0e-4cb8-857b-a5d184691971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1e6f5e-b871-432e-9522-e79d18e20c3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9eb0b84c-4e09-49d1-a021-a9a3f5b61996",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b81c9a0-1665-4e28-ab54-5b7a3479d882",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7377b4c-891d-451a-8cd3-fe5c93ec4d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f4cf8179-e960-4410-9556-9c7fb278bf98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "374d868b-ed23-4f16-ad9b-7d05297db586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f1387af-9a93-4824-8260-e1c92620fd4e"
                    }
                  }
                ]
              },
              {
                "id": "4eec7468-b163-4974-a582-9f82c69d07ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb71d2a3-83d0-4647-8749-17d7c7b61225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f112b203-c1e9-4168-a65e-03754f7d8299"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d71ea62c-a9db-4a7e-8d75-50e1f8e08b0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5955b11-9a2f-4b0b-b396-9ea0d332cb8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e67a2916-f017-4a42-a635-fc1fc261b8e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4d383f4b-70d3-405f-9b06-f5610b790b7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c19e30d-9a07-47fc-93f2-0339f556e797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5a303a1-4d7c-4c23-9eaf-6b335562da98"
            }
          }
        ]
      },
      {
        "id": "fe244dd9-2d13-45b9-a53f-82b022c64a4b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d38d5d1-02e8-486f-8184-f6f7f0c1ddd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b725a53f-d27a-479c-9698-9b3bde03d7b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3ebc0bc-f259-41db-8cd7-920a41d7dffe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb65f49-19f8-4be8-a6f8-626f2eb2915c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "86dd9d64-f372-48d1-b3f8-1a2bb01834e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cf4456-8685-4211-a562-86b7115305f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee0f216f-111e-4a30-8b86-5716362ce5e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e643946-534a-42be-872e-21ca90e2935f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc0f9e43-2aba-4e7e-a09c-357e1f3cb6c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf1dd44f-bfc9-4880-bc44-613e28bb6436",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81460361-140d-4db1-9fb6-b7415016b1a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66680a5a-8ad9-41fe-a9b9-16fb8b4782d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8d4096dc-2119-477c-b42e-6cb90814b10f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36ef7fd5-660a-40cd-9ccd-122ae41a7014",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04da429b-f33e-476a-a32a-1666bf450bee"
            }
          }
        ]
      },
      {
        "id": "1e4ed1a3-eadc-4dd0-9e6f-e80de020e11c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4adc87fd-6934-45d7-9fc7-5df666d54432",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8417355-f035-47b7-a992-c19fe3b703fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cb9e651-8a5a-4874-9603-5c72159c2926",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533a4948-8ad5-46c5-9dfd-5e3177b9241e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d76b4e2-e2be-4f59-9439-d035243f1d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcfba95-fb5e-4290-b185-469d8a3328aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ca2fa69-931c-4ff6-868f-55ae6fefcd76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7886224b-8c4d-43c6-8b5e-c5c77ce700e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb23c6a1-f84f-45d2-98f5-8cb12d7f5b41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f1af5d-0dbd-4d35-a0d8-566d9ffa0e3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3e91f54-3204-4450-a7d9-c8b4c66f6e3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2df81bc2-f44b-41a8-a80f-c8a716c063e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4a61618-f6f8-4efe-80e0-1f60a70b4aab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd5e5004-39cd-45a2-b610-b71a99f0e319",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11b06f37-f3a0-497d-b3d7-dc3a3466dfb8"
            }
          }
        ]
      },
      {
        "id": "27ccb42f-e803-4636-b6a8-fdbc1d259828",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd661d97-3764-4cc2-974a-263ea01abb98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0c944e5-dce3-4a7d-9f8b-4ac00aac8b67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fb7bb0a-c05f-4a5d-a533-16c8294a4530",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281c23ea-7485-428f-9a99-fb7d12fc0899",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8a7e291-51d6-49b0-9e6f-26053f3a137c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b57e591-3285-4d4c-bf80-17dbad685055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c14a53ff-eed9-4f1a-9ec2-73d30ac41cb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bca40c1-c845-4b71-9978-6d1364bb6280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "556f141a-374f-4bef-820a-a3717299bca9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12841108-2b3e-49b0-9bf7-b4001d3e3a8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d03708ef-4909-4ad0-b563-a50265b38715"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "266a4f38-98e5-45dd-bd43-91bd14f0614f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6bfd93c-ed1a-44b4-88d6-19f8713597f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e38090d9-9dcd-497a-880a-691116d0d846",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e84e9a13-32ac-4ed1-946a-ce41673440cf"
            }
          }
        ]
      },
      {
        "id": "b4133fd2-9f95-4283-8672-5c50cb8693ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a754b1-3371-4f67-b2e7-7ae1cbda1ed1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d243daa4-3ada-42b5-9099-ca48fee363f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "64936ab6-759b-4300-a1dd-10b2089454ca",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "088cc44f-c012-4162-9ed7-59d5a8a89a6b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae3c1aa2-cf72-4629-83c3-f7c6b780ca91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.96491228070176,
      "responseMin": 2,
      "responseMax": 262,
      "responseSd": 24.108792101041765,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701045362872,
      "completed": 1701045373906
    },
    "executions": [
      {
        "id": "97de42d1-d379-44f8-9741-e0231cc3119a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6682369b-83d7-46d4-b695-2d0522bd4964",
          "httpRequestId": "9688dc71-f340-47c4-bd28-5ddb444193bc"
        },
        "item": {
          "id": "97de42d1-d379-44f8-9741-e0231cc3119a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a89d8fde-9230-401d-b60b-476885ce57ba",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "c5e62013-61f9-422b-b760-f7236290de96",
        "cursor": {
          "ref": "56ec8612-1bf9-4f34-ab09-05f7218f2477",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd4e131e-f336-4ea2-b61e-e3d695b690a7"
        },
        "item": {
          "id": "c5e62013-61f9-422b-b760-f7236290de96",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e49af90c-bc44-4e6c-8617-8c38b1495948",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b100c4ce-dc98-4bef-a54e-547f244ec6b7",
        "cursor": {
          "ref": "fec80cc7-15a5-4dcb-be27-4785b4cc59f2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dfcdc483-c5c0-4c65-84d0-ac7c473e4422"
        },
        "item": {
          "id": "b100c4ce-dc98-4bef-a54e-547f244ec6b7",
          "name": "did_json"
        },
        "response": {
          "id": "fedeb8f7-59e0-4fe9-90db-3e0c53f3e101",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f1062f-76e4-400e-aa4e-c6ebe7c39f96",
        "cursor": {
          "ref": "df183d1e-807c-42b0-aa8b-98fff56adb9b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "096ca373-8e82-421f-bda6-befe82371d97"
        },
        "item": {
          "id": "83f1062f-76e4-400e-aa4e-c6ebe7c39f96",
          "name": "did:invalid"
        },
        "response": {
          "id": "a585f2ad-8482-4216-b62a-0d3f61a33450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f1062f-76e4-400e-aa4e-c6ebe7c39f96",
        "cursor": {
          "ref": "df183d1e-807c-42b0-aa8b-98fff56adb9b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "096ca373-8e82-421f-bda6-befe82371d97"
        },
        "item": {
          "id": "83f1062f-76e4-400e-aa4e-c6ebe7c39f96",
          "name": "did:invalid"
        },
        "response": {
          "id": "a585f2ad-8482-4216-b62a-0d3f61a33450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb4ba6e-cb3c-4d79-a4b1-12411a5808ff",
        "cursor": {
          "ref": "9074fb38-4162-473f-897e-55ac1db4ca48",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1d3385b0-490d-4c89-a3d5-67ce6558320a"
        },
        "item": {
          "id": "bcb4ba6e-cb3c-4d79-a4b1-12411a5808ff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7ab36210-49c0-4bd5-a29b-5bee66b7d958",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a851ff-c7b8-48c8-ba96-5f9e3099a77a",
        "cursor": {
          "ref": "fcbfc8e5-f786-41a8-9340-878bc50a8bd2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3c7b995b-dbf2-4793-bbf5-d055e0683699"
        },
        "item": {
          "id": "89a851ff-c7b8-48c8-ba96-5f9e3099a77a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f08b6215-fee7-462b-84c9-1b49a4e33ac1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2b1ae9-e028-4804-a574-76634ae8186d",
        "cursor": {
          "ref": "752b2c8a-d8a9-45ad-b76f-08afc3fe5e11",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ae84e6af-b211-4adb-90be-04fa3149d012"
        },
        "item": {
          "id": "1c2b1ae9-e028-4804-a574-76634ae8186d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "db726706-8663-4986-8dd9-3b9b5c1d2815",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cea9061-810a-4884-81ac-0958cf23b7b0",
        "cursor": {
          "ref": "79b90347-fba8-49b2-be20-cafd10a64052",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a9eae0b-69be-4d10-9906-0886ecafefa8"
        },
        "item": {
          "id": "4cea9061-810a-4884-81ac-0958cf23b7b0",
          "name": "identifiers"
        },
        "response": {
          "id": "785c7d2d-d00e-4fe9-a47e-210049193410",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa15ebc-95cf-4d0a-890f-5dca01260298",
        "cursor": {
          "ref": "42b273f9-50d2-491d-88a3-7c589c5c5d8d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "347f09a2-fce2-4b49-b7da-7451d86a3593"
        },
        "item": {
          "id": "6aa15ebc-95cf-4d0a-890f-5dca01260298",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d57ffa71-29ef-44ce-b5e7-6c6f1fc078a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb907eff-8ddd-4915-ab10-2401f27a2171",
        "cursor": {
          "ref": "224765b6-f0c7-4ddc-b7b4-08b1ad91ab62",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0dc27d9-df7d-4b97-a11f-584b7334d825"
        },
        "item": {
          "id": "eb907eff-8ddd-4915-ab10-2401f27a2171",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "559600ab-3584-4aa0-8165-a14d3f9295ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59df4eb3-4ca3-4e2f-b11e-34ec74223bc1",
        "cursor": {
          "ref": "2297798b-2efb-498b-a1da-a8b432a98e8e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bbf188f7-7620-410e-bcac-f162c16b6872"
        },
        "item": {
          "id": "59df4eb3-4ca3-4e2f-b11e-34ec74223bc1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e0b9f560-b74e-440c-9d32-22b31f1f53a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35110bf1-724d-4ca3-84d7-961e6bed3feb",
        "cursor": {
          "ref": "61e06eb2-cd10-4ff1-b93e-777d871b9d5e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "01d9e541-3b38-43cf-91ae-3b3da886afd9"
        },
        "item": {
          "id": "35110bf1-724d-4ca3-84d7-961e6bed3feb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2229a6b0-3d5e-48af-a6ce-abc7a3ef080e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7ea7c4-c8e5-4427-ad3c-6da895e574ce",
        "cursor": {
          "ref": "2c0b777d-3072-48ac-b8b7-c2f002801ae8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8ccaf76f-3dcd-42aa-88a6-62a9283d1ceb"
        },
        "item": {
          "id": "8f7ea7c4-c8e5-4427-ad3c-6da895e574ce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7c48af28-6b7f-402b-9cc1-47c016a67726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d6dfb9-93a1-4267-a9ed-6ae866175766",
        "cursor": {
          "ref": "5f7afe4f-ba06-4102-871d-4231088b210a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "970b8c12-5f80-4e20-a28f-7b1c293cd62e"
        },
        "item": {
          "id": "a2d6dfb9-93a1-4267-a9ed-6ae866175766",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d0d0088c-431a-4a55-86a3-d2bca11fec59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba731629-7de2-4e51-971d-fb2eca3be070",
        "cursor": {
          "ref": "24835045-5880-404a-8267-64c948a67cea",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "16d39148-b397-4d88-b59f-931f88262a54"
        },
        "item": {
          "id": "ba731629-7de2-4e51-971d-fb2eca3be070",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75ed0777-9670-419a-ab4f-b5d73e37a6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612c93fa-b8df-4bbd-92f1-e8336fbcc6bd",
        "cursor": {
          "ref": "e8b163b5-886d-4ae4-8e61-8dae0b5a058e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "173b4f88-022b-433b-9d09-7d26f04243e4"
        },
        "item": {
          "id": "612c93fa-b8df-4bbd-92f1-e8336fbcc6bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aaf5a1ad-a0d6-4241-81e0-008aa1873bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb293474-cc39-4fab-b033-0d6a14a77a72",
        "cursor": {
          "ref": "64eeaca8-6d6a-4477-ba78-41d3394b1ebd",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d21a27f7-f535-4a06-adac-0ec0969f39f0"
        },
        "item": {
          "id": "bb293474-cc39-4fab-b033-0d6a14a77a72",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b66c6f89-134d-45f6-87c4-f3fb85197610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34366a7-cca8-4920-b191-8aa61a139227",
        "cursor": {
          "ref": "12b10aed-fdc3-4f2a-92de-db0adf942e49",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7eb503a4-9eb2-4ae5-a5dc-34a2de55ec18"
        },
        "item": {
          "id": "b34366a7-cca8-4920-b191-8aa61a139227",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20e50505-c62f-40e6-b242-278b9981e150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c717f8-ed7f-48ee-888f-8a8c7244ba02",
        "cursor": {
          "ref": "16d11c35-783f-4e2f-aa7a-5b48d39a2694",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d5bd4199-dfde-4cb4-b55c-e9c3e426fed4"
        },
        "item": {
          "id": "d9c717f8-ed7f-48ee-888f-8a8c7244ba02",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "259ed75a-b140-452a-bd08-50276466cf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853800ef-bd72-4c5d-9a97-df8e6ccddf73",
        "cursor": {
          "ref": "97edb788-fc7f-4147-be66-7af3bb03eb05",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ff22d81-207e-4ddb-9536-276800d65de1"
        },
        "item": {
          "id": "853800ef-bd72-4c5d-9a97-df8e6ccddf73",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7950abe6-3523-4666-a47c-934d5b9fc634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ed06f-7b8f-49c7-8408-d4032753cb76",
        "cursor": {
          "ref": "06e8e2c3-0caf-46b7-b7d5-5850d64266a5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2786e7d2-e6a2-4ccc-970f-191476dd0c2c"
        },
        "item": {
          "id": "6e0ed06f-7b8f-49c7-8408-d4032753cb76",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46d86d2f-46d8-4715-bad4-f1abed172f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc039e1-e1eb-4baf-83b5-1da42f7235ed",
        "cursor": {
          "ref": "c9eb32e6-bc2c-40d6-bb2f-8ecc8c7c6f43",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "889d6734-af62-48ae-a1c8-c6bf17406b07"
        },
        "item": {
          "id": "edc039e1-e1eb-4baf-83b5-1da42f7235ed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2cf08412-de70-4d3d-9a81-0e805321c6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfa839-a1a9-4010-b25a-2c2687d701a5",
        "cursor": {
          "ref": "a2bb502d-b107-48ae-8691-6793bf2bb8d2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "02168f98-834d-40d8-b870-0b960f27bc84"
        },
        "item": {
          "id": "56dfa839-a1a9-4010-b25a-2c2687d701a5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b98423aa-8393-47a9-af20-9527b40790ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78eab9a-8fd9-496c-bcd0-6c625603657b",
        "cursor": {
          "ref": "efd19eb6-1927-480d-a318-9b075e4af652",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1b838ddd-d021-4938-8cec-d5da59ca5709"
        },
        "item": {
          "id": "d78eab9a-8fd9-496c-bcd0-6c625603657b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "29a9cc1e-9503-4788-9200-5bdcea61848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3c3e0-f2e3-47d0-a4bd-161dc62841c7",
        "cursor": {
          "ref": "0d84b6d7-0eb8-4403-be8d-6132a7fc80d4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22572a00-0569-44a4-88ca-c81dd39688f1"
        },
        "item": {
          "id": "3ad3c3e0-f2e3-47d0-a4bd-161dc62841c7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f0408db5-0490-4401-ae54-f3ae6bc0bf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf65253-a92b-4883-a561-79d2287c5933",
        "cursor": {
          "ref": "d81bfd74-33ad-4f54-8e4e-78476755a874",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "deb2f669-1a04-4bed-9829-4a09973a32ea"
        },
        "item": {
          "id": "ecf65253-a92b-4883-a561-79d2287c5933",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e6b00604-1573-4398-a408-6d5b5076192a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a958e148-0a75-4298-ad12-a4d26866929a",
        "cursor": {
          "ref": "819c8365-6765-4658-b873-2bba19b0a503",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a3bfca3f-01e4-418c-a8c9-ac8a22223e53"
        },
        "item": {
          "id": "a958e148-0a75-4298-ad12-a4d26866929a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0b62b40f-5389-4e9d-b183-72705fbce3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006d29ac-4340-471d-9d80-2c762b185fbf",
        "cursor": {
          "ref": "f0214312-b197-4bf6-aa4c-8705141e437d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6a16ad57-bea7-4ef5-83e8-86ba212b9402"
        },
        "item": {
          "id": "006d29ac-4340-471d-9d80-2c762b185fbf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c69861fc-017f-493a-8919-67e6de8380dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de5073b-ea8c-42b2-954b-a2de87982661",
        "cursor": {
          "ref": "c1efe5c4-341c-45dc-92b3-fc885cc217fb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a91712a1-51ac-4770-b3eb-a162d123be3f"
        },
        "item": {
          "id": "8de5073b-ea8c-42b2-954b-a2de87982661",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "47cf2c05-efd7-40a6-9fdc-87ba9ea37194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dd9381-c1e9-4b2b-a4fe-24f83b765c3d",
        "cursor": {
          "ref": "3b12df62-2eab-421f-9171-47f1cf7fb5de",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3719048e-da60-4b33-83b1-eeda7fc6afc5"
        },
        "item": {
          "id": "84dd9381-c1e9-4b2b-a4fe-24f83b765c3d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4833dab1-04fd-4520-a8ba-b678448331fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bae8fdd-e06f-4b0d-837a-07c4e06cedcd",
        "cursor": {
          "ref": "91893f99-03aa-4a19-be4d-fa3baeff934e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "65c73f69-00a8-482c-8050-158bffc13acb"
        },
        "item": {
          "id": "8bae8fdd-e06f-4b0d-837a-07c4e06cedcd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "25e6f3f7-de7c-4404-af20-f90edd8c942a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729febdf-688c-47a8-a46d-acca685a6699",
        "cursor": {
          "ref": "d6436f6f-9057-42e5-beaf-110ebc473387",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "098eca65-0b82-4224-a5e8-fd0722c103a2"
        },
        "item": {
          "id": "729febdf-688c-47a8-a46d-acca685a6699",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "26a3cbda-057e-4c4d-ad0d-e1409fb1efec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06f1a7-cb98-4feb-9c3b-50e0e5bd3ad2",
        "cursor": {
          "ref": "637fc8b5-6064-4bf1-9cc4-51ff753991a8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "48cf6c94-8460-4b69-8f59-ee4cab51597b"
        },
        "item": {
          "id": "fb06f1a7-cb98-4feb-9c3b-50e0e5bd3ad2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c0595f4c-7354-4cdb-ac41-b08a7c808d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f518be-0c1a-4ed0-b0a2-8a1af4bc2ff7",
        "cursor": {
          "ref": "7199c8e4-d0d7-4dda-9127-918673f9070b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d67316b-cff0-407e-b1ad-f395ea3bb1a3"
        },
        "item": {
          "id": "35f518be-0c1a-4ed0-b0a2-8a1af4bc2ff7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "141fbb34-608b-4e11-a932-0ab641b5e774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f288709-3e4c-4b3c-b84f-1ec5ef365693",
        "cursor": {
          "ref": "848e7482-7fc7-4e93-94f2-471985949dc8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "576280d4-f464-4297-97ef-4d194bd9cea9"
        },
        "item": {
          "id": "4f288709-3e4c-4b3c-b84f-1ec5ef365693",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c256f35b-7133-404b-9c8a-8ffd95b1f7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2cff8a-b511-43af-8748-f9898297df6b",
        "cursor": {
          "ref": "c2a450cf-046c-4c6c-a0c8-baedd18559f7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "befd5991-fdce-429c-bc09-ac550782b200"
        },
        "item": {
          "id": "cf2cff8a-b511-43af-8748-f9898297df6b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "658e1e6a-12c5-4ffe-a760-75f1338e79b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a101658-7d7f-4be4-9019-97e357579381",
        "cursor": {
          "ref": "05645ed7-10c5-4633-a850-8f1f3ea1223f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "610e5dba-dea5-44af-8387-644e9158f9b9"
        },
        "item": {
          "id": "9a101658-7d7f-4be4-9019-97e357579381",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "13dfb075-73e8-4284-93c1-6950ed66d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a5de7a-e574-48bf-a9af-a2b9d7ce271a",
        "cursor": {
          "ref": "9d0623f6-0904-4615-85d4-dc997df4f3c7",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "87d43164-a575-4ed6-baf6-8135c560ac6e"
        },
        "item": {
          "id": "81a5de7a-e574-48bf-a9af-a2b9d7ce271a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "039ff9df-49a1-4739-98d9-8e56d25a5113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccdcda7-acda-4826-b677-9c7b896bdbb4",
        "cursor": {
          "ref": "4329c7c7-736a-46a8-8606-98a51309239c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0db72fd7-332d-4df4-b8b7-feebc4a07ae4"
        },
        "item": {
          "id": "dccdcda7-acda-4826-b677-9c7b896bdbb4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a4203168-50f9-49a0-998c-d169f58e47d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862fbae2-56ef-499e-a549-fdb5c1f8f176",
        "cursor": {
          "ref": "9f70381d-7cbc-433b-8b9a-0e3fba48dd49",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13649332-f482-4a8e-bfca-b231663fa5e0"
        },
        "item": {
          "id": "862fbae2-56ef-499e-a549-fdb5c1f8f176",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3435803f-fadd-48a8-add5-78e0d791418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e3720f-8451-4dc5-b0e2-685604c112e4",
        "cursor": {
          "ref": "b4521120-30df-4f4b-b447-81e7211207b9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "697061e4-e0ee-4113-9054-829d5bb01855"
        },
        "item": {
          "id": "69e3720f-8451-4dc5-b0e2-685604c112e4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d0421cc3-71b5-439c-9631-e560ad782c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a223d75-97ed-4538-ad6f-172f54e377dc",
        "cursor": {
          "ref": "f4cb39fb-5b3c-4261-83a3-35ffa9361105",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a4537599-caf5-4d69-bbc4-458d622c110e"
        },
        "item": {
          "id": "8a223d75-97ed-4538-ad6f-172f54e377dc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e24061a4-1515-4c25-9ea7-c4c10eace43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa6d63a-b7f8-4833-b1dc-bf5a9b1dfb33",
        "cursor": {
          "ref": "a64911af-784c-4144-9ab8-95870332aa14",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6977e6ca-3d1e-4ddf-8d4e-08d5dfc8ec54"
        },
        "item": {
          "id": "bfa6d63a-b7f8-4833-b1dc-bf5a9b1dfb33",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6668f749-e65d-4864-ac68-c89431b63464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50be3834-6ba9-47cf-ac52-87def801d335",
        "cursor": {
          "ref": "50517d79-a2f2-428f-9b24-8f3bca2823f4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "473e6bc4-f690-462f-a847-d1ab7ba521e1"
        },
        "item": {
          "id": "50be3834-6ba9-47cf-ac52-87def801d335",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "58939824-39af-46e8-a924-503913da7a95",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972b8071-af8f-4a43-8be0-676c4bdc5422",
        "cursor": {
          "ref": "62fef514-ab51-429a-ac0f-6659aa3f3887",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a8dc8f9-7061-4aa8-93c4-ab78eabebf0c"
        },
        "item": {
          "id": "972b8071-af8f-4a43-8be0-676c4bdc5422",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8797138e-705b-4ebb-bad4-ac1d38f73749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3959cb3-791f-499b-9f86-79b0dc390e25",
        "cursor": {
          "ref": "45615472-2f0e-426a-a614-f01ee17e30a4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a350dd2d-ad4b-4e8e-93ef-d8214173a1b9"
        },
        "item": {
          "id": "e3959cb3-791f-499b-9f86-79b0dc390e25",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c92f7adf-e949-4541-907f-7e42a060c338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a996d34-6291-4c49-8925-6c33c03e5931",
        "cursor": {
          "ref": "b0d280b0-7ed0-421f-bbb5-c9ba0397874f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b2acb83-e869-4ecb-9604-79ae1518fcf4"
        },
        "item": {
          "id": "2a996d34-6291-4c49-8925-6c33c03e5931",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e85ef78d-d22c-40e1-aa85-90025a3a4cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd777330-2d49-49c9-879c-767d1dc174a2",
        "cursor": {
          "ref": "36a350c0-90c1-48d0-8317-d38142a26a5b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d2e2f7a9-8626-4fca-a630-087a5dfa35fa"
        },
        "item": {
          "id": "cd777330-2d49-49c9-879c-767d1dc174a2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c39fa735-6883-4b44-833a-ecabec5a8235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fefdd61-3e40-4c20-b7fc-294e81840d6b",
        "cursor": {
          "ref": "3336c6a4-55ef-4a2a-9bd8-abbde14afe78",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dac75f3e-569d-4c52-bfb0-bef4b4f6f357"
        },
        "item": {
          "id": "6fefdd61-3e40-4c20-b7fc-294e81840d6b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5b79396e-15da-47e2-b80a-34051036d271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e1a5f4-c22a-4232-b901-11d4d6827a41",
        "cursor": {
          "ref": "6122a04c-a7b5-47eb-9d09-4115b77936d5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2e8dde20-3301-43aa-90d2-e4fb7a19d709"
        },
        "item": {
          "id": "30e1a5f4-c22a-4232-b901-11d4d6827a41",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c3ff6e14-1a56-4202-9b3b-fd96cbb97360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747a1bcb-6707-4a45-a040-dbae0d543e2b",
        "cursor": {
          "ref": "3e981c0a-5d8a-4fa8-be7f-491d99fbc93f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "509e3110-cc14-4ac8-a793-8ce92ce7e957"
        },
        "item": {
          "id": "747a1bcb-6707-4a45-a040-dbae0d543e2b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4822bba8-9969-4ef9-b428-d418fb16b74d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69dd33d-15c6-464d-a739-65bcaff5b1b5",
        "cursor": {
          "ref": "6f03ac5d-dc24-4a68-90b6-c3a51cf8afbc",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1c7a9148-b092-4d10-9498-1693cc27bb52"
        },
        "item": {
          "id": "c69dd33d-15c6-464d-a739-65bcaff5b1b5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2faefae4-1d58-46d1-aa5d-d056297f1363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f5024c-9ce2-434d-8c40-4b9299dad797",
        "cursor": {
          "ref": "11d66f4f-1688-45f2-8068-61152854456e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dd260853-8179-49b9-bdc6-5979e27feed6"
        },
        "item": {
          "id": "97f5024c-9ce2-434d-8c40-4b9299dad797",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "99e7af17-9fb5-41f3-b321-a508aac5bf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a64e37-14b1-4d43-afd8-d39eeeea6884",
        "cursor": {
          "ref": "36efc3ad-db3f-4aca-9cbe-0dc07cd5f2bd",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eba80f97-2772-4bd8-96a8-4a2408a1d675"
        },
        "item": {
          "id": "79a64e37-14b1-4d43-afd8-d39eeeea6884",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "60f17bcf-9337-4254-bf2a-3dbdf59fd1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbb2540-68f9-44cc-9281-0d5eb75fe0bd",
        "cursor": {
          "ref": "745080f7-e9d5-4b60-9428-754a383da0f5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "00fdfc67-0798-4c05-a5dd-e16bee5c137d"
        },
        "item": {
          "id": "0cbb2540-68f9-44cc-9281-0d5eb75fe0bd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3b9b607a-9784-43a3-aab4-ecc2ad87c929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9060cdd1-312a-4cf2-9731-df8713ec52b3",
        "cursor": {
          "ref": "29c8d668-7e1f-4dcd-a110-375952e57b81",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4467ae6b-e518-48a1-be4b-a22873f15ab1"
        },
        "item": {
          "id": "9060cdd1-312a-4cf2-9731-df8713ec52b3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0b11489c-86a4-4c0f-b7a2-f8261b1a346b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3ddbd4-f5e8-4946-b54b-efab9555f087",
        "cursor": {
          "ref": "3c2e9112-7739-49b3-b84e-e00432da5413",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "78782e00-7c43-45ea-a456-4f6069c8856f"
        },
        "item": {
          "id": "5c3ddbd4-f5e8-4946-b54b-efab9555f087",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "628825bd-63ab-4711-864d-bd4e816e691b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd9e5c1-461f-461f-8a83-4e9e650315ff",
        "cursor": {
          "ref": "8cd2a184-841d-4e81-8c15-207a9752983e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cbb55af5-e7bc-4d2f-b6b5-f1cbab26e617"
        },
        "item": {
          "id": "6bd9e5c1-461f-461f-8a83-4e9e650315ff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2ad3fe4d-d326-4c7b-b7c4-977edfd9e0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aff922b-2b7a-4750-a9a6-6fffda9da04b",
        "cursor": {
          "ref": "42804077-db12-4ac9-b12f-cde2c657e85b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f46ac9ef-694f-4790-8183-1d7812b4f2c8"
        },
        "item": {
          "id": "7aff922b-2b7a-4750-a9a6-6fffda9da04b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "96e4f7f6-1bd3-4dae-91fd-abf1d8ce37c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b85f645-a99d-407e-94e5-31a67dc3893a",
        "cursor": {
          "ref": "de8393b3-1ce7-47c7-9d77-29904586d047",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "afdffee6-58c1-44d2-9dac-17bf16e63789"
        },
        "item": {
          "id": "1b85f645-a99d-407e-94e5-31a67dc3893a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9bc2ca81-3931-4c3f-9902-1d24e22b1f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e653abdb-0647-4f10-a5ee-40e3b8d46ef9",
        "cursor": {
          "ref": "dce83634-2b6c-430b-9b9a-c1a9a3a96885",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "30070473-bcaa-4ae0-bab1-8277ed9ff638"
        },
        "item": {
          "id": "e653abdb-0647-4f10-a5ee-40e3b8d46ef9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1a85357f-5395-46d1-a241-a2e25758ddd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ed370-5195-4e51-8472-1f4fc733b10a",
        "cursor": {
          "ref": "2918c5e9-5f25-4f16-995c-6f2ce0b11279",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2feae6c8-9d38-4b1f-9314-2409e37a9bc5"
        },
        "item": {
          "id": "679ed370-5195-4e51-8472-1f4fc733b10a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "29344a42-4383-43e4-97ae-24b1b29edf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff5414-fc03-45b3-ac7d-98bf85631c2a",
        "cursor": {
          "ref": "d96028fd-c738-48da-a3c7-d8a01620f8ea",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "667873fb-9236-4ee3-872b-1e84fb18fdfb"
        },
        "item": {
          "id": "5eff5414-fc03-45b3-ac7d-98bf85631c2a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9e2e3f48-c48b-407b-971e-485d550a0f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093f0958-2e9a-4703-b70f-95bc6cfc88c9",
        "cursor": {
          "ref": "9080dce2-2b3e-4ab7-9603-45990634c3e4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1132f481-f3de-4bba-baa6-1d231935cddc"
        },
        "item": {
          "id": "093f0958-2e9a-4703-b70f-95bc6cfc88c9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6e04eb9c-03b7-4c71-96fe-38f975005122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f5eb25-017f-4517-ac98-e195c2bfc37e",
        "cursor": {
          "ref": "d9943d55-e6ba-4dfb-b7e2-2e563540e46a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cb76f18a-7e29-4522-8dbb-6864333bf199"
        },
        "item": {
          "id": "d2f5eb25-017f-4517-ac98-e195c2bfc37e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6d437d0b-622c-45c9-943d-9d639ed9eb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596e73e2-aa29-4295-9241-3355b24b983f",
        "cursor": {
          "ref": "f21bc2c0-e457-48bc-ae60-cf58eff8022f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4f982451-f07c-46fb-8644-0fcbf46bfba7"
        },
        "item": {
          "id": "596e73e2-aa29-4295-9241-3355b24b983f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6ff6a82-f962-4ca5-8843-6e1471ccd67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204f7dad-4e20-4222-8425-a6f6705f2adf",
        "cursor": {
          "ref": "75f9b015-aaa6-4962-bca3-8d914728feaa",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2246b9b6-b87a-4eb2-bd42-55001a74221d"
        },
        "item": {
          "id": "204f7dad-4e20-4222-8425-a6f6705f2adf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5121db26-4bd9-4644-a842-6f1bc830e365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30e5657-995d-4d1a-a8fc-35a8f6299c6a",
        "cursor": {
          "ref": "cbc10ce3-9bd8-4b56-9df3-85bd4b0247e4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8eb068fc-c72a-495d-bd7f-c925a5d42367"
        },
        "item": {
          "id": "d30e5657-995d-4d1a-a8fc-35a8f6299c6a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5ad11f61-c16f-4204-8343-299de5a2e829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455b9e41-a117-41d6-a897-b6869292a652",
        "cursor": {
          "ref": "ea390d5c-3e63-4617-9d52-b82c24a1567f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f1f9646a-0240-4071-8661-7cd3b9cb9876"
        },
        "item": {
          "id": "455b9e41-a117-41d6-a897-b6869292a652",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "74cb48ed-5407-4bba-9384-62cb2ad4c02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d285f3-632d-427c-adf2-a52c28680146",
        "cursor": {
          "ref": "13c56869-9168-4260-8d18-9c02f0856b75",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "be95f814-a788-427f-abf9-d0be7562839b"
        },
        "item": {
          "id": "85d285f3-632d-427c-adf2-a52c28680146",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ff0b1faa-2b8e-4f34-9f4c-084993dda4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b718d753-458a-4eaa-b6a5-8447218f3e33",
        "cursor": {
          "ref": "0554a493-c8e6-4276-b819-77255d6ce777",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "416c5fdd-4e43-458c-95c0-4a0cef21e08a"
        },
        "item": {
          "id": "b718d753-458a-4eaa-b6a5-8447218f3e33",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "32522960-050a-46df-9166-973ed415e1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f00934a-26c0-46c8-ba18-7ed014e8c0b7",
        "cursor": {
          "ref": "068ba1e1-d85c-47b7-a134-8de3ae6a459e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fcac410a-a8e1-4402-a2e1-d3ee03185f6f"
        },
        "item": {
          "id": "0f00934a-26c0-46c8-ba18-7ed014e8c0b7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f986a00b-7157-4e46-9b9c-8c4e822f306a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0523ac99-90a7-4246-8d58-614b92f244cc",
        "cursor": {
          "ref": "a8a9f838-3396-47cd-910c-206be4437119",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a77054c9-aecd-4486-8049-cdad48e3ae21"
        },
        "item": {
          "id": "0523ac99-90a7-4246-8d58-614b92f244cc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "224b1209-04f4-48e0-af6c-a5c33270ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4c4bae-2020-4f8e-8140-6ec7a3ac1bd1",
        "cursor": {
          "ref": "f06f0b76-4aa6-4187-9d30-c2c86dd14fac",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2fc547cd-a6f4-4a4b-bd8f-c7397338f8a5"
        },
        "item": {
          "id": "be4c4bae-2020-4f8e-8140-6ec7a3ac1bd1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9f4f8e4f-1e4f-42f0-b093-3382cc42f915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf47b40-724b-40fc-996c-79a6d0cad3b3",
        "cursor": {
          "ref": "a8716d93-13a9-4734-bfa9-6e097f451bf8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4f73d9ce-a2e0-48ed-a62f-5080eadfef77"
        },
        "item": {
          "id": "bbf47b40-724b-40fc-996c-79a6d0cad3b3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ec837a06-59fa-4fc9-a1d7-30ffdc7fd871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99f1e62-1f91-4078-8292-eb4c4e8b8fa5",
        "cursor": {
          "ref": "827586cc-2ac9-4dc9-b0f6-7045e886a59d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "38a1d55b-0f85-43ec-9106-0660e7355c50"
        },
        "item": {
          "id": "c99f1e62-1f91-4078-8292-eb4c4e8b8fa5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5c3e18cd-aeca-4de1-8d25-3cb01b221aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126985dd-0c5a-4f35-8eb9-80395c1f763b",
        "cursor": {
          "ref": "dd719158-97ca-4096-a05f-5d0e460c6d8a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a6e5937f-5067-403f-bcde-486f2d06dea8"
        },
        "item": {
          "id": "126985dd-0c5a-4f35-8eb9-80395c1f763b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "53a1e169-3e7f-4d22-9c91-f7f88f2f1685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6802df3-a0ef-41d3-b51b-1aaa3e8215d6",
        "cursor": {
          "ref": "06e715ed-bfb2-489b-84a6-f52422337371",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a5778668-bf55-4b27-beb8-e8cfa0c961e5"
        },
        "item": {
          "id": "c6802df3-a0ef-41d3-b51b-1aaa3e8215d6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4ecff095-c344-4d42-9a71-5454e7a7af4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384ce007-a7b5-4525-b3a3-1398abaae035",
        "cursor": {
          "ref": "e71de9bf-53d0-4cbf-a450-fa98116948ed",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b464d185-11d1-4fb4-aef0-e1eca4544d32"
        },
        "item": {
          "id": "384ce007-a7b5-4525-b3a3-1398abaae035",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b0c8d7f0-08c9-470a-822e-ecccd28a0c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376d8a0b-4f37-449c-8a81-3bbbc7a870fc",
        "cursor": {
          "ref": "0cfc8cb4-20ec-4ce5-8785-a0158d187d2e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5ba124ec-61bf-478f-aa53-4f02309faccc"
        },
        "item": {
          "id": "376d8a0b-4f37-449c-8a81-3bbbc7a870fc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "207c6431-f56e-4779-8b13-832cc071f3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b68818-863d-4055-ac8a-35a3680a4bda",
        "cursor": {
          "ref": "3198ddbd-2b84-4f2b-b9b9-adf651e5b439",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "100cf899-7713-4485-8916-c204b5098a3b"
        },
        "item": {
          "id": "34b68818-863d-4055-ac8a-35a3680a4bda",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "62ef366b-62b9-4330-80ee-3b15ba8cc503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c19aaa-c5a2-40d9-afb8-edaa9cc90a5a",
        "cursor": {
          "ref": "c1d38eb3-497a-4cdb-b73b-91110a5dedcd",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9abd5cef-0367-46dd-bcbe-b04ac9079586"
        },
        "item": {
          "id": "94c19aaa-c5a2-40d9-afb8-edaa9cc90a5a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "68920730-b5d3-4a8f-9c70-2fe2dee82dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b15648-03f2-41b4-9e82-bb9e64965c85",
        "cursor": {
          "ref": "6568026a-862a-48a0-b890-78fb9a8bf5c5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "90543849-c2de-4916-ba2d-7f3cca6d76f9"
        },
        "item": {
          "id": "42b15648-03f2-41b4-9e82-bb9e64965c85",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "662472b0-226a-4222-bd0b-4352c95b7d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c879e91-d5c1-4ca5-b2f0-ad75b5c674da",
        "cursor": {
          "ref": "37c43ad0-86af-468b-861d-01d96511fb5b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "32cf12f8-cbdf-4c35-b527-05ef157a5e13"
        },
        "item": {
          "id": "7c879e91-d5c1-4ca5-b2f0-ad75b5c674da",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d70e7078-9237-4f21-bd03-90c0c8f40553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c56a320-deb8-4d34-9e81-cb450752993b",
        "cursor": {
          "ref": "f7e9201d-d5a3-49d0-a508-045374a82644",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ba083aee-47b3-4460-a5d0-c42cb47684c8"
        },
        "item": {
          "id": "8c56a320-deb8-4d34-9e81-cb450752993b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "56ef32a1-94bc-4d38-9912-638589ff29f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b33f18-063b-4060-9859-c64b834a0091",
        "cursor": {
          "ref": "6c21a9e6-8728-44b5-b238-dd3e2cdda9d5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2f819451-f4a2-4f82-802a-b49fa1e7ae74"
        },
        "item": {
          "id": "99b33f18-063b-4060-9859-c64b834a0091",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "09b97264-b196-4d66-b987-961324e5b4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7f6dd7-c7a0-45a9-96b9-0248a1015e06",
        "cursor": {
          "ref": "d10c21de-7196-49f6-8b8b-eadbad36d548",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1adc3ab1-8194-45e5-9ecb-785d176344c9"
        },
        "item": {
          "id": "8c7f6dd7-c7a0-45a9-96b9-0248a1015e06",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b272095f-261b-4c62-ba3a-e6c5a7da95d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8033b9b8-8863-43fb-81d0-0345965c086f",
        "cursor": {
          "ref": "a7467a28-35b8-4719-831d-b97b8958e01d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2ed4318f-d078-4bc1-b833-86693614ab5d"
        },
        "item": {
          "id": "8033b9b8-8863-43fb-81d0-0345965c086f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5a68a332-7399-438a-a7a9-aae444a589e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3c4519-5940-431f-8485-f8a5fbe1c839",
        "cursor": {
          "ref": "6e2ece2a-6996-47ac-8910-2fe32d69d97f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "efd23776-f5f7-436a-8979-2c138942a9ee"
        },
        "item": {
          "id": "ad3c4519-5940-431f-8485-f8a5fbe1c839",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3a4b6988-6063-45a0-a013-041513d4efdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a83d5e-3b39-434b-8b78-0fd114107fd6",
        "cursor": {
          "ref": "a6a2f7cf-61d2-434e-9f96-8bbaf144c003",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6024235c-2c58-410f-ba83-e8b92cdc1853"
        },
        "item": {
          "id": "01a83d5e-3b39-434b-8b78-0fd114107fd6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c8da1092-3062-4f28-b341-9e84c99016a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a21cd8-bd63-4924-88ad-8152d6cd189d",
        "cursor": {
          "ref": "4b95d41b-6c3a-4a4c-9d47-0f3890e8eace",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ac51eac0-0c9e-4b88-b113-1e49032e02ec"
        },
        "item": {
          "id": "d9a21cd8-bd63-4924-88ad-8152d6cd189d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8a7813cb-3c80-4631-b8ef-5a5370a4f2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e063d66a-3378-4d20-8287-7c835f08ae55",
        "cursor": {
          "ref": "b0f58a88-3d12-40bc-b5d9-4ffef24f6a63",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e47c11c2-e964-4d07-84d9-b0fa1e21468c"
        },
        "item": {
          "id": "e063d66a-3378-4d20-8287-7c835f08ae55",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4c99408a-9f5d-4dc4-b04a-996cc221846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffdf9db-dafe-4e10-ac45-438c6d0f0cda",
        "cursor": {
          "ref": "45e43a65-b619-470f-a582-0883bc5469ae",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3bd1452f-d91a-45eb-8589-2426f9bdf508"
        },
        "item": {
          "id": "6ffdf9db-dafe-4e10-ac45-438c6d0f0cda",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "80fd2253-353c-42b7-be74-345094e05838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eba425-71d6-4721-83f3-4fab0b3701e0",
        "cursor": {
          "ref": "914031ef-3a1a-4156-806c-137d4603ade9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4041261d-8e3e-48bc-9f3a-261b8e91dbb2"
        },
        "item": {
          "id": "f7eba425-71d6-4721-83f3-4fab0b3701e0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ec815c36-54af-482d-a423-1b808762b8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6849e9-408d-45af-a816-b510bd0e4299",
        "cursor": {
          "ref": "251d8639-a2f0-4bc9-974d-489662f2936d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9b516b0c-946a-483a-b8fc-939c7551762e"
        },
        "item": {
          "id": "3d6849e9-408d-45af-a816-b510bd0e4299",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "16fcfce6-0568-4189-936d-60aa6eaa3bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb32b3cf-972e-4a37-8b34-560b1a0c2764",
        "cursor": {
          "ref": "151595cd-205e-4bea-aa6e-98bb186f461f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "27d0d16e-07d2-407c-80f9-652f4030c1e4"
        },
        "item": {
          "id": "bb32b3cf-972e-4a37-8b34-560b1a0c2764",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1c43e173-aa6e-4c73-914d-ae756c574e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab909035-270d-4b89-9784-8886346286af",
        "cursor": {
          "ref": "52d8f3d0-5caa-4b47-979e-53ea5726ff42",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "019c4b41-5a7a-4a3e-a3d8-b507c886072a"
        },
        "item": {
          "id": "ab909035-270d-4b89-9784-8886346286af",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "47f821a0-89b4-4e94-9c87-d5624b6bf85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15814064-b363-4e25-8036-7eca786fa776",
        "cursor": {
          "ref": "d0626eb8-a57c-4ddc-9352-2c9fbe1491ce",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bcdd2181-4037-42dc-8687-4ebd91ee0d4b"
        },
        "item": {
          "id": "15814064-b363-4e25-8036-7eca786fa776",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6fbef690-45b3-4a6e-9140-285c706c174c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a9ea50-a976-40ab-bc11-91a60b87fbfe",
        "cursor": {
          "ref": "4339d8a6-60cf-4edf-b0bd-4bf5f18e94e9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b922b845-c754-4f26-8f45-9053cd3f6949"
        },
        "item": {
          "id": "f8a9ea50-a976-40ab-bc11-91a60b87fbfe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "12cd711a-be2a-43b6-be44-d02f473fbd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893395ec-2686-4515-a26e-3b368dadb0b1",
        "cursor": {
          "ref": "43fb2403-3026-497b-ae92-022fc062f3bd",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "caed8b1d-ff6a-4d39-a41c-07ace10c0ddd"
        },
        "item": {
          "id": "893395ec-2686-4515-a26e-3b368dadb0b1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "36dd426b-f646-4827-9e34-e9959fcfa7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314767dd-bbd4-4952-b84f-82b5944ccf06",
        "cursor": {
          "ref": "60ebbc6c-2813-4cde-aba3-03a63c64c05b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ef0c23ef-cf78-4ad5-963a-38bb4fe7f32f"
        },
        "item": {
          "id": "314767dd-bbd4-4952-b84f-82b5944ccf06",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e834b7f0-8bf1-42a3-a4dd-d52691db9858",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beba136a-13aa-4048-b766-ed196c1dd8e3",
        "cursor": {
          "ref": "95e48e7c-08e1-4ca1-afba-137dd144a878",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "795ca020-ed0c-4082-a76f-1ce2ee7e22b5"
        },
        "item": {
          "id": "beba136a-13aa-4048-b766-ed196c1dd8e3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8550e599-020e-4849-ba6c-bff61709dd8a",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c3d654-c6b3-496b-a87c-3db13cc6c7d7",
        "cursor": {
          "ref": "8f710a75-d873-4f45-9150-b9005cf2a74f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "373b9696-bab3-4a33-88cb-56664586f2ab"
        },
        "item": {
          "id": "b7c3d654-c6b3-496b-a87c-3db13cc6c7d7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7d461c3-a5b2-48d8-b7be-cda324402845",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d61e20-1e06-4107-859b-67d607df2bf5",
        "cursor": {
          "ref": "d946103c-6540-4370-8173-14780086c1f2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "435a2801-9def-4ebd-96dd-20a1a0576655"
        },
        "item": {
          "id": "27d61e20-1e06-4107-859b-67d607df2bf5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "209c9a7d-e092-4249-af53-bc03ab293e22",
          "status": "Created",
          "code": 201,
          "responseTime": 176,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaed0592-c07d-4ca1-b5ed-361fae00ae8d",
        "cursor": {
          "ref": "23128fc9-cfa6-48f7-a7d9-3a5ddf2655f7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3e4af76c-7229-4763-9d07-ef979e5386b8"
        },
        "item": {
          "id": "aaed0592-c07d-4ca1-b5ed-361fae00ae8d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3a7fdb36-e8b0-4cb9-8359-7a4cb0559b03",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aa72b3-1a73-499c-9c3f-54fa2960be4e",
        "cursor": {
          "ref": "b0d87db1-cdca-471b-aec6-a02f7e101131",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cb760bfb-0b58-4a0a-a58a-b891babda1d9"
        },
        "item": {
          "id": "a0aa72b3-1a73-499c-9c3f-54fa2960be4e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4fd292c3-0533-403d-88a7-2c6b1c5a13a8",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc190926-a86f-4c68-bf4e-cdb967d10475",
        "cursor": {
          "ref": "9c0c1deb-3e92-4a45-9db9-478d5f0d5953",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9761a828-97ce-4e33-85de-4165fa1d0725"
        },
        "item": {
          "id": "dc190926-a86f-4c68-bf4e-cdb967d10475",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "84e12ac2-471d-4387-86d4-df5fdaf090a2",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "74428285-43ec-4fef-a886-549dbc57f266",
        "cursor": {
          "ref": "d634af5c-a538-473f-a782-fd4ea69db948",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2450c6bd-a104-417a-abb3-2bc8a170a44c"
        },
        "item": {
          "id": "74428285-43ec-4fef-a886-549dbc57f266",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "566976d3-27bc-4a33-976b-33056bdaa7fc",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e5e77-7b2a-4866-8f48-1978c49d7e79",
        "cursor": {
          "ref": "2c54fd69-6ff4-493f-b8fa-95f73170c0e4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "28a437b8-66f4-4ee6-8c72-4d72ff2f57c9"
        },
        "item": {
          "id": "a50e5e77-7b2a-4866-8f48-1978c49d7e79",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f7dab43d-cfc9-4849-b11b-49cf0c6a0549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11539bf1-efd4-4990-b545-03256bdf65fe",
        "cursor": {
          "ref": "496831b2-a71f-47a9-a8de-ad5fcd9c689d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b7bba71b-5ba7-4bb2-b746-8076481f7917"
        },
        "item": {
          "id": "11539bf1-efd4-4990-b545-03256bdf65fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03b1f021-b4c3-4fe8-9623-89face6afad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786854fc-c14c-4a08-b09b-5f7dd07650df",
        "cursor": {
          "ref": "30416f0c-6bdc-4368-bd9c-cd6ce9cfbb7a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4ba96a25-df70-4f33-ba35-f3ce3dd5fd61"
        },
        "item": {
          "id": "786854fc-c14c-4a08-b09b-5f7dd07650df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "80230847-ebce-4137-8077-1ce8d69e138b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89a2253-292a-46d6-a256-016a663967a4",
        "cursor": {
          "ref": "4603b41b-abf9-4c6f-8023-84ea060a362a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c4c07ae4-1a86-4908-9442-77b4ed21d9ba"
        },
        "item": {
          "id": "f89a2253-292a-46d6-a256-016a663967a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba30a3b4-0cc4-4da6-bcff-5a9de9666e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff67d4-d830-4c01-b2ae-89a0f04fdd44",
        "cursor": {
          "ref": "f1de9a09-3c24-412e-bc3f-378cfa2e3080",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8eb6a6b7-a2db-4896-8925-8b1173374c76"
        },
        "item": {
          "id": "3dff67d4-d830-4c01-b2ae-89a0f04fdd44",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6339636e-e890-407e-aed6-dae13cfc1789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713deda4-a15d-4fda-b570-8c095b3dd664",
        "cursor": {
          "ref": "6d34b6d8-1e43-42c6-be78-6e0714750586",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bc7ad9f0-9241-4396-bda9-5ec00508ee56"
        },
        "item": {
          "id": "713deda4-a15d-4fda-b570-8c095b3dd664",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7eb22732-ff1d-46ae-84f7-da10a68c5892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab51c347-0dcb-4e3f-b05f-59f8d21b2955",
        "cursor": {
          "ref": "33b9a1f9-9fe8-4afd-a9bd-003f80be8b4a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "79b13a87-2102-4d6b-b3a7-eb1ff2687735"
        },
        "item": {
          "id": "ab51c347-0dcb-4e3f-b05f-59f8d21b2955",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fdcc7195-a74a-476e-a323-2f1c0149340b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c5b50-f315-437a-b580-9eb029319acd",
        "cursor": {
          "ref": "b7611bf2-1802-4f00-b123-9b57fe6ee384",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5335350b-392a-456f-a9c7-3d7b54be8ead"
        },
        "item": {
          "id": "ea7c5b50-f315-437a-b580-9eb029319acd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b9985b75-27c8-4fc9-9527-1f1f849308ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecd5411-332b-41a0-bc36-bfb5415381fa",
        "cursor": {
          "ref": "1dcc0c19-1e99-40df-907a-bb725a224bbd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "344d5932-43aa-4adc-94ee-df0a3afbc426"
        },
        "item": {
          "id": "aecd5411-332b-41a0-bc36-bfb5415381fa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7bad766f-a449-4f7e-b25e-e0ba2b103348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576adc97-fe6f-4ab3-8b23-c1576d66de14",
        "cursor": {
          "ref": "a8211c19-e661-414c-919c-7dd9d645a7c4",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "06d6c53d-823e-4a00-921b-0a96cc188dda"
        },
        "item": {
          "id": "576adc97-fe6f-4ab3-8b23-c1576d66de14",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "19c161cd-86ed-42be-a3b5-221f4a905bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af6feb5-a68a-43e5-92e4-e85da5ad76e6",
        "cursor": {
          "ref": "ebf5f016-2544-4e44-9a76-679dc575817b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f38058f7-5fdb-4071-921d-bd2e30ee6f99"
        },
        "item": {
          "id": "9af6feb5-a68a-43e5-92e4-e85da5ad76e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a29e06cd-6c1d-45e6-b766-b1a1a5e7e6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21376486-6194-4019-869d-ec1d891bd582",
        "cursor": {
          "ref": "42306328-8eb3-44a0-81ea-9a95ae8cd985",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7b166f8e-d30c-4d0a-a0ed-a67e3ee21a23"
        },
        "item": {
          "id": "21376486-6194-4019-869d-ec1d891bd582",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3dd350b0-bcb2-4708-8755-8522d50544d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3cf482-c722-4cd7-830e-1a8e7e44e5b7",
        "cursor": {
          "ref": "b0c6d387-a007-4a22-aaf3-90fe19c617e2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5a6677b5-ee1c-4914-b137-c3fb2347abf4"
        },
        "item": {
          "id": "5a3cf482-c722-4cd7-830e-1a8e7e44e5b7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4f953caa-de9d-4159-b8be-f78dd385c382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f225a50-efae-47eb-b56b-6b3b2948e44f",
        "cursor": {
          "ref": "3a033a27-a74e-4454-b76e-14de226aae51",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eed187ea-b5dd-4545-ab24-5b5e783cff3a"
        },
        "item": {
          "id": "4f225a50-efae-47eb-b56b-6b3b2948e44f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fff7eeef-632c-42bf-a136-9b1f1d67e949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f48deaa-653d-4ede-8d8f-279d9682ed7b",
        "cursor": {
          "ref": "d319ef45-e07c-4fbc-9d67-50afc2d731b4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "beeebaa5-4820-42fd-8b65-dab8c26688f0"
        },
        "item": {
          "id": "3f48deaa-653d-4ede-8d8f-279d9682ed7b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "55903857-466a-4cfb-acda-901a5bb8bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c98a5ca-6dd8-44d4-9b05-66d8721c9c04",
        "cursor": {
          "ref": "29489a31-38ea-4a86-9c88-ba14c555669a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e8a1304-5101-45de-a5fe-e385943331a6"
        },
        "item": {
          "id": "5c98a5ca-6dd8-44d4-9b05-66d8721c9c04",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "95390dfe-ea7f-4336-b9a4-4dd08a15af41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff3cc00-983c-4897-8275-9ecfe5c1ec35",
        "cursor": {
          "ref": "73aab490-e649-4747-b120-608a0761e857",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0c73ae8e-f6e6-4794-a763-196c6c82814b"
        },
        "item": {
          "id": "5ff3cc00-983c-4897-8275-9ecfe5c1ec35",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9df849ad-a646-4fae-a63a-e2300863b09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1393b79-7675-4268-b117-a58358e05ac0",
        "cursor": {
          "ref": "40b586d9-9ad5-4cba-9495-7bcf9a6c7ea8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8f8158ae-f934-49f1-aba3-0259c5db943b"
        },
        "item": {
          "id": "e1393b79-7675-4268-b117-a58358e05ac0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98946930-9e79-47d9-a5d7-fa9b8302c8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68f02fa-f602-471d-9f4f-9579f8be574d",
        "cursor": {
          "ref": "b6833c83-19b7-4d81-9391-5c40006aebc4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4405659c-fbdc-49d4-86e2-2db13c7a2778"
        },
        "item": {
          "id": "f68f02fa-f602-471d-9f4f-9579f8be574d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "670c4896-a7c7-411e-9272-a4afc86bfe04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e13de8-955d-492c-a03b-76612d43e157",
        "cursor": {
          "ref": "e66b9837-de2a-4df9-bce3-ccf11bbc1034",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "993833f3-2caa-4539-b14d-fb11ac6305d6"
        },
        "item": {
          "id": "62e13de8-955d-492c-a03b-76612d43e157",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1b4aba7-712d-4b71-9845-fc9ddee4c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7782b451-3b6a-45c2-a242-7d609b7a413d",
        "cursor": {
          "ref": "cd251d04-f7dc-490e-bd5c-f13f451ae84b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "85248737-bc33-4bea-b13f-3c1e38ae3963"
        },
        "item": {
          "id": "7782b451-3b6a-45c2-a242-7d609b7a413d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e9657de-c13e-4fe4-baa0-435206abbfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8236b7-2c24-472e-b490-5cd3e068768c",
        "cursor": {
          "ref": "40871ce5-c56e-4746-a110-3ada43bd3588",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b0c5e15a-ac4e-4038-b54b-8cea3e971fad"
        },
        "item": {
          "id": "7d8236b7-2c24-472e-b490-5cd3e068768c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76bef6ad-58e1-4c94-a678-2be0ba2263c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a69c23-fa51-47e7-afc7-21c5ab690227",
        "cursor": {
          "ref": "6e7f74c0-2708-449e-b6a5-5ceec9ac1227",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1c7db5a7-e848-4ba1-bed2-a4db21bba4bb"
        },
        "item": {
          "id": "f4a69c23-fa51-47e7-afc7-21c5ab690227",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29380abc-f3b8-4afd-928e-155b9727eb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5283041f-7645-4959-9305-709f11774500",
        "cursor": {
          "ref": "96737249-b3cd-4aa3-8918-dfc14253f3b2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "61b38409-73f1-4f46-8b66-4f4cd29eb6b7"
        },
        "item": {
          "id": "5283041f-7645-4959-9305-709f11774500",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d86b7a01-25b9-4432-926c-0deb1382716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fe6c97-d20b-4919-bd3c-4521f84131b1",
        "cursor": {
          "ref": "51f93f24-8159-467b-ac2c-e941272a1976",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fe59dbf7-6413-4094-8673-d5466ff12555"
        },
        "item": {
          "id": "74fe6c97-d20b-4919-bd3c-4521f84131b1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "75074957-867c-41bb-86bd-a3e3fc3599eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc77118-5a1e-4f5f-8d5d-249347f2378e",
        "cursor": {
          "ref": "abeb5367-9d80-4964-afc4-b25ea60a75f5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2aba84c-0790-4106-8680-afd51382c5df"
        },
        "item": {
          "id": "bbc77118-5a1e-4f5f-8d5d-249347f2378e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "691e51f6-1fa6-484d-8689-1fe52e2274c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bc1045-f879-4795-a42c-8dc383af07d0",
        "cursor": {
          "ref": "27e2d3f6-33f6-4ac0-84a0-86329ccec329",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "44440693-d6be-4373-aa1f-d0e1027c5127"
        },
        "item": {
          "id": "50bc1045-f879-4795-a42c-8dc383af07d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1170912a-207a-410e-94c2-6f5176ec69db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872d6ad2-d708-46bb-bdcc-f8e4c564205f",
        "cursor": {
          "ref": "8e2fd966-7a0d-4f31-8b86-6ec3d8eb93e0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c55998cb-ef18-4aad-bb11-e43d2153d052"
        },
        "item": {
          "id": "872d6ad2-d708-46bb-bdcc-f8e4c564205f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0d0fa8cb-a3fd-4a08-affb-d30036d43eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef34bc-5838-4859-ad11-4cb153a1cab6",
        "cursor": {
          "ref": "ba51e901-3112-482f-88d7-ab726572619c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "24814e46-ebe5-42b8-b9ac-16b67ee9e615"
        },
        "item": {
          "id": "62ef34bc-5838-4859-ad11-4cb153a1cab6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e17aae3c-dcd1-477b-b4c4-e65cea9227bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d81343b-e813-41ad-95ad-09476154fe7f",
        "cursor": {
          "ref": "e0305efd-9def-4e3b-a523-daf47129f922",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3e2939df-1c68-4270-b1b2-97dec3b49c9a"
        },
        "item": {
          "id": "0d81343b-e813-41ad-95ad-09476154fe7f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "61c89bd1-fd58-4183-9155-a5ee2f98d017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f4a805-6379-416a-91b6-6bc21a1e1c4d",
        "cursor": {
          "ref": "d26294b7-00e1-4d15-9614-451b770e0dc9",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f11ddb2f-f07c-4737-85dd-3b5d5145cee8"
        },
        "item": {
          "id": "51f4a805-6379-416a-91b6-6bc21a1e1c4d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1bc42c09-2240-4f32-a067-46ea66dd577e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae0939-4f08-4237-90a6-9afc3914f101",
        "cursor": {
          "ref": "cf7a1d06-7e83-487d-830c-62545f43c964",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "22500e6e-090f-44e4-af68-ff631b1b11a9"
        },
        "item": {
          "id": "13ae0939-4f08-4237-90a6-9afc3914f101",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ce472c7-c55d-47c5-9f43-d00cdc472512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ecca1a-ce94-4d1b-82eb-04fe41e7ad6d",
        "cursor": {
          "ref": "cf5faafd-f44f-4d51-82cc-378d7e1e1a82",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59ccf1a6-ec45-40a6-99de-732ca5cfc0a7"
        },
        "item": {
          "id": "e4ecca1a-ce94-4d1b-82eb-04fe41e7ad6d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "26328c89-8032-499a-89cb-943491a7f230",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ca980e-89df-4951-8a85-94d77815806d",
        "cursor": {
          "ref": "84ea0c0a-8084-419b-aa81-cf55884bd19d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4ece6182-bfb4-452d-bc49-2f8888484af9"
        },
        "item": {
          "id": "93ca980e-89df-4951-8a85-94d77815806d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f8026ce-9424-439e-a9e8-9849b69b8dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e684f50-f605-4745-8c4b-82ed8075a601",
        "cursor": {
          "ref": "a23627d1-4ab3-4327-9036-aea0210182e1",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b53c5ae5-88da-49bd-bca3-786521c36451"
        },
        "item": {
          "id": "2e684f50-f605-4745-8c4b-82ed8075a601",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc37ba38-6364-495a-a8cb-a54b3e42b0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aaa385-a092-4eb3-b143-1712a5b2ccf0",
        "cursor": {
          "ref": "af5a6ba7-b6b4-4846-a31f-7e7bf9e088a8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc9dc4b0-c956-4464-819c-bcdfef0cae25"
        },
        "item": {
          "id": "02aaa385-a092-4eb3-b143-1712a5b2ccf0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "044aae32-a9d2-444c-8c8b-e1f0c4959577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acb9298-f512-4d5e-bfae-33cd622790cf",
        "cursor": {
          "ref": "d8fc2a1d-809a-48c8-958a-ef7bafc4e021",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fccd726f-d710-4173-b669-d6c7cd5ff263"
        },
        "item": {
          "id": "4acb9298-f512-4d5e-bfae-33cd622790cf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "08edae1a-2a01-4f1d-aa5a-c435e90725ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41fc164-2961-4d03-b878-6f38684c5f27",
        "cursor": {
          "ref": "e62f4968-697b-45ce-bbd6-2a70492798b1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6ee9be12-bae8-4a19-b3e9-92c63e28a123"
        },
        "item": {
          "id": "f41fc164-2961-4d03-b878-6f38684c5f27",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec6d9a4d-4212-4771-9a52-ecc771ecd750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b846b073-a258-43a8-8276-66e716dfcd85",
        "cursor": {
          "ref": "63e730ab-732a-4ac7-8900-d79c21330874",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d08b358d-e05d-4ea0-b693-6a03fdc7dd79"
        },
        "item": {
          "id": "b846b073-a258-43a8-8276-66e716dfcd85",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b00498d5-b387-4e6b-954c-e376d6e9a3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a104050c-185b-4eab-89bc-953714f7f83a",
        "cursor": {
          "ref": "69de96b9-dbe4-4834-8ff6-23ae4bfe83b9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e600fa88-fb25-4201-bf2f-9fb5d79823c5"
        },
        "item": {
          "id": "a104050c-185b-4eab-89bc-953714f7f83a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "69f1112b-19f9-443f-9b42-7c977b379013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d891ded7-59a0-4b39-9f35-68c008195256",
        "cursor": {
          "ref": "70876161-8f5b-4c1d-98b5-f7c5bbc64679",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "58a290c4-fb4e-434d-bc48-7c043eaadfcc"
        },
        "item": {
          "id": "d891ded7-59a0-4b39-9f35-68c008195256",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4169a646-0770-410f-8d68-60942d557510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fe9045-60eb-4810-b063-37bc7be888b1",
        "cursor": {
          "ref": "bb0771d8-6b77-4540-aa68-5fb566962ec9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3dd1498d-e170-4859-af80-f953ab9188a2"
        },
        "item": {
          "id": "e4fe9045-60eb-4810-b063-37bc7be888b1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc69ba8e-154a-4016-b9e5-dad3860c225d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eede1532-c67d-4968-896d-8861c6d80149",
        "cursor": {
          "ref": "86959f74-e534-4038-816a-1736f54772f7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "993c15f3-1a6f-4b83-b621-7611defbc862"
        },
        "item": {
          "id": "eede1532-c67d-4968-896d-8861c6d80149",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "da2dee41-65e0-476e-af4b-63727f10e157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fcf0de-533c-4ed0-86d3-2a39a6205c5f",
        "cursor": {
          "ref": "c656eb72-5acd-4f80-8b97-c680481be481",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6d14a972-df8a-41ee-b62b-04ebab521699"
        },
        "item": {
          "id": "10fcf0de-533c-4ed0-86d3-2a39a6205c5f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "22c3c076-99ee-41d6-96a7-dea84666478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064234e7-06e4-4bd5-8104-c1f93d0d7e12",
        "cursor": {
          "ref": "80c65fa2-9119-4ba7-8550-f3fbfaf9f078",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cdaf7864-9e77-42f3-be6f-e0b38e6d546d"
        },
        "item": {
          "id": "064234e7-06e4-4bd5-8104-c1f93d0d7e12",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c46add75-2570-4dfb-891f-0dbee5578352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2a22b1-6d37-4171-8b4b-3007d77f9b19",
        "cursor": {
          "ref": "c299ebc5-d935-4721-9a4f-b6bab9878660",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "198672ee-9aeb-4e68-8224-dec3960e5b41"
        },
        "item": {
          "id": "ea2a22b1-6d37-4171-8b4b-3007d77f9b19",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "616667eb-9183-4bd8-a301-1830f6283deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5c0f2c-d661-494d-a8f6-183b77dcbaf1",
        "cursor": {
          "ref": "77bc89ca-213e-433f-9071-65ccd68ca2a0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7b9027db-8938-48ec-99a9-96ccf377fb85"
        },
        "item": {
          "id": "1d5c0f2c-d661-494d-a8f6-183b77dcbaf1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dc49d4e6-edf2-4f86-8107-04217609c10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7ac834-4935-4663-8352-dd91cceb03e6",
        "cursor": {
          "ref": "1e419421-93e0-40d7-b393-f3ab50b85a43",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "acaeadc2-6355-42f9-9968-e0d5ff8040ec"
        },
        "item": {
          "id": "cc7ac834-4935-4663-8352-dd91cceb03e6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d54e5d83-2e08-4e03-8657-af8eab814a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93bae2d-155f-4e7e-a3f6-67d8a7f06d78",
        "cursor": {
          "ref": "51bf436f-43d2-483a-9ae8-4224ec08cead",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5f7450ab-e544-4cf9-828b-ef42c7f70be3"
        },
        "item": {
          "id": "e93bae2d-155f-4e7e-a3f6-67d8a7f06d78",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "616f7b23-b2c0-4ffe-97eb-4d6877fea4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b342e117-bed8-4b6f-9567-57dfc79a4ca9",
        "cursor": {
          "ref": "b71cb697-c168-4efa-9eab-420d577ce7ec",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0a60b84e-dd63-4300-9572-f1893e96ebcd"
        },
        "item": {
          "id": "b342e117-bed8-4b6f-9567-57dfc79a4ca9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "36cb788b-d1e0-4fd1-bcd9-7d4e495af476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ebf4b-c001-4e0e-a155-8f66ea60f906",
        "cursor": {
          "ref": "51ce51f8-921e-4fc6-927e-35501baef357",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "730ee0e9-c4c9-4517-84a7-63ab6f7156ab"
        },
        "item": {
          "id": "9d9ebf4b-c001-4e0e-a155-8f66ea60f906",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ccb3453-aad6-4128-af8c-2b9d669d352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411c57fb-a0f9-4a4f-87b2-4332eb8066f3",
        "cursor": {
          "ref": "e8905297-0423-4905-ab08-3e06be0fedc5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "15c462ab-9839-4c8a-ae48-7ba6fbabf962"
        },
        "item": {
          "id": "411c57fb-a0f9-4a4f-87b2-4332eb8066f3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "97b77fc7-63f8-4495-8722-58580e615289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad93d30-153f-4c43-a2f4-480c1440a2bc",
        "cursor": {
          "ref": "0e1615ba-05da-441c-b3ae-af8bc9524de5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f4fc5c28-5427-4b75-943a-1e24fd32721c"
        },
        "item": {
          "id": "7ad93d30-153f-4c43-a2f4-480c1440a2bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "178f451f-9239-4b2c-88b3-9b0ac188fd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca10ac7-dc73-43cb-bd5b-0751542364fa",
        "cursor": {
          "ref": "faf5c7fb-3a8f-451a-8dd9-9e7f8c81a177",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6fa3b1d3-d607-4327-8965-786afea7f5d2"
        },
        "item": {
          "id": "9ca10ac7-dc73-43cb-bd5b-0751542364fa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e72c887a-6eed-430f-8ccc-3cabc13126e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145c2815-65a4-4c92-9318-7ee37ae907e2",
        "cursor": {
          "ref": "f142bb7e-aa07-4e98-ba47-ffa32dabea24",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9819bd88-740e-4879-98b2-1486e6735383"
        },
        "item": {
          "id": "145c2815-65a4-4c92-9318-7ee37ae907e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7742f193-22d7-4cc4-a94d-e8b7ba0d1ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557c582d-be9c-420e-899f-0508b3cdd7e5",
        "cursor": {
          "ref": "ef7eb0f1-defd-4d02-a039-c4518217690b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "566c5e7e-cb91-48c6-a202-ce94374a01a7"
        },
        "item": {
          "id": "557c582d-be9c-420e-899f-0508b3cdd7e5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2347ae28-ea80-49ae-95f9-634c51fc1937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5f9d28-eb49-4864-a40e-18c9e5259efe",
        "cursor": {
          "ref": "17b98a4a-9e1b-45cd-a957-e0876cae07af",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2c8846a6-baeb-493f-ac20-4ad7b17e7361"
        },
        "item": {
          "id": "5e5f9d28-eb49-4864-a40e-18c9e5259efe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5422e9f-f252-4325-a328-3ee6128b29cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf486c87-0e81-47ff-92c4-55b1f9d6c13d",
        "cursor": {
          "ref": "d034db90-5738-4d47-8dea-cd0aa90d683d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5a5720ab-a274-4a0b-9511-832d33ca2017"
        },
        "item": {
          "id": "bf486c87-0e81-47ff-92c4-55b1f9d6c13d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aa643b1f-d8cd-42ec-8e07-8112859850a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd742872-2876-4f3a-be30-75b71e0f495f",
        "cursor": {
          "ref": "be351922-d741-464a-a80d-f4cc71699e60",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d91fd2d9-8fea-4c9f-86a2-325bc15f181f"
        },
        "item": {
          "id": "bd742872-2876-4f3a-be30-75b71e0f495f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a336d336-433c-405d-9b8d-1a590d22e7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04e32be-ff87-4d8f-99a9-085df57173a5",
        "cursor": {
          "ref": "91dd5957-421b-4116-beb7-2405cbffc8cd",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2f326319-a9f6-4016-9a2e-5eb5a389c78b"
        },
        "item": {
          "id": "e04e32be-ff87-4d8f-99a9-085df57173a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "24ec35bc-1db4-4663-b771-9cc3ca64783b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd2f0ae-5b65-4a6b-bc78-7be21c6ca4ba",
        "cursor": {
          "ref": "2d888e69-cbdf-4ed5-b5eb-987b2d51b843",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "72012acd-c933-4d93-8a82-e93c24114a54"
        },
        "item": {
          "id": "2bd2f0ae-5b65-4a6b-bc78-7be21c6ca4ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5b866950-687a-429d-963c-c9cbdf373506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7441402-2523-4925-8f26-c9dfc2384d71",
        "cursor": {
          "ref": "2373b779-95fa-4ece-bd26-4ea340eac95b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "51009990-182f-4686-a9ce-80553a6c617a"
        },
        "item": {
          "id": "d7441402-2523-4925-8f26-c9dfc2384d71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b828c3ab-15a7-47f5-9824-0c39951659b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1396c4cc-6686-47c3-8b40-5578c581299b",
        "cursor": {
          "ref": "6e4cfe3f-fa89-40eb-9f63-ab3db36a1708",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c79ff05d-983d-45ec-a7f0-524a78f90d65"
        },
        "item": {
          "id": "1396c4cc-6686-47c3-8b40-5578c581299b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d3d9d1f0-7411-40e7-a58c-8637b5f05442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c124f64-7bab-43e0-aca1-48eee3ecbb46",
        "cursor": {
          "ref": "03b3b37c-daaf-4fe2-a38d-70c9f377ff2b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43a4135a-de0a-4d33-8f19-a80418a513e1"
        },
        "item": {
          "id": "9c124f64-7bab-43e0-aca1-48eee3ecbb46",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "97722831-3787-4e1e-b01c-4f90f5036421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38909b2c-3ba7-4c71-99dd-4b152252c6f0",
        "cursor": {
          "ref": "368669dc-b2c4-4867-9013-68d95c6a725d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2c727098-949c-41cf-9ed3-fbc63fc0dc84"
        },
        "item": {
          "id": "38909b2c-3ba7-4c71-99dd-4b152252c6f0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "eeeb05c2-ed6d-4a99-9174-2d77fd5372dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270b5984-33f6-4f46-a55e-01b16327390d",
        "cursor": {
          "ref": "5401c6c2-5d4a-4636-bfed-612be0c43af3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c87827f5-04bb-4e4e-93af-77454a23ec85"
        },
        "item": {
          "id": "270b5984-33f6-4f46-a55e-01b16327390d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2543a124-eb69-485a-abd2-bf068cc74b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47a7f2f-c980-4b8c-91ba-116727e63f20",
        "cursor": {
          "ref": "073f45ef-453b-4d2b-b625-12bc6137493d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f988301a-9b42-4ee3-b973-2701214801e8"
        },
        "item": {
          "id": "b47a7f2f-c980-4b8c-91ba-116727e63f20",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ee380820-c172-4d65-9354-81adfa3da164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316332e0-60ca-4f30-be08-4e77958ca3a3",
        "cursor": {
          "ref": "589eef89-d5ec-49c0-891e-892e17ccd138",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "285daf6a-41da-47dd-9f2f-14ddf88e9cc5"
        },
        "item": {
          "id": "316332e0-60ca-4f30-be08-4e77958ca3a3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a52abe44-6f31-440e-b19e-41e9abc049c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3256f3-d3ec-47ff-9b0c-774e6af04c8d",
        "cursor": {
          "ref": "78195953-ae6b-4d62-9f63-c428cfbd88aa",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "87972221-5c75-45f7-92e7-85a4039f4feb"
        },
        "item": {
          "id": "8d3256f3-d3ec-47ff-9b0c-774e6af04c8d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "facc3465-cb73-4a2f-a7b3-453ee08e974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe21a53-1702-4f8c-9571-eb60e9da8a1c",
        "cursor": {
          "ref": "29eb0f4e-45cf-4893-9a63-4ad0d918df7d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "63ee9928-d6ac-4f75-915d-fe19fd625fb7"
        },
        "item": {
          "id": "dbe21a53-1702-4f8c-9571-eb60e9da8a1c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dbb42bca-f170-48b5-b661-9bff7741e85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83416c08-3705-484a-93e8-1a4717ee4fd9",
        "cursor": {
          "ref": "a6d5b41c-c3ed-41f1-be86-61b4d5b104ff",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9e0c26a-1918-4417-98e3-298a687f72ff"
        },
        "item": {
          "id": "83416c08-3705-484a-93e8-1a4717ee4fd9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b10c5f83-41f7-4576-b251-f6df9af62abd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feba249d-8473-445d-bb0b-d06eed8d42ab",
        "cursor": {
          "ref": "9d58831e-15ed-4d15-b8ab-c7083f86c4ae",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1a5efa8d-b879-4f25-92d2-14657d4f0bf9"
        },
        "item": {
          "id": "feba249d-8473-445d-bb0b-d06eed8d42ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6027de31-6c08-401e-938f-73e7c52cd005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf7da56-a4b7-4776-92a9-a7a8e80357c1",
        "cursor": {
          "ref": "03925d09-468b-4967-b475-6c0a694ecc79",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8bdf4b8-1bd3-4f0e-9e4a-3fd9636f7796"
        },
        "item": {
          "id": "1bf7da56-a4b7-4776-92a9-a7a8e80357c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fd385a1e-8f22-46dc-b2d3-7e034470a812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20363d37-40dc-4d69-95a6-5322854f8d75",
        "cursor": {
          "ref": "264b09f4-52d7-487e-a750-242e27940eaf",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fbae9911-bccd-42ab-a371-ed7e27c68f26"
        },
        "item": {
          "id": "20363d37-40dc-4d69-95a6-5322854f8d75",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0466b58a-6ce9-49cb-bd11-4bd40e95d0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3e1d5-bbc0-4c8c-a4a3-ffec0b631c9c",
        "cursor": {
          "ref": "968d05c4-7f90-4634-b49d-1a7effce7658",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "13d5e667-8f9d-4d15-a124-5b947822edc7"
        },
        "item": {
          "id": "5ab3e1d5-bbc0-4c8c-a4a3-ffec0b631c9c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "845140c5-9509-42f9-bc6f-844cfa36c4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf35d3c-2fe0-48f4-8cdb-002353614283",
        "cursor": {
          "ref": "ce887731-4586-40cf-8416-3cf5385c0d3d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cdf40b23-2c3c-4da1-8e74-f8f94ba009a7"
        },
        "item": {
          "id": "9bf35d3c-2fe0-48f4-8cdb-002353614283",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d6ad2952-0540-4d7b-be0e-e8d0e1577952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864a14bb-6369-42d8-b526-e86a4334d5a2",
        "cursor": {
          "ref": "e24f8d66-8403-454f-a777-f62ce506254a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "55a538dd-31c5-48e5-8862-e4f822dbd2ff"
        },
        "item": {
          "id": "864a14bb-6369-42d8-b526-e86a4334d5a2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e17229b7-96b1-4f24-87a6-05f1f77d35ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569a1600-37bf-4a75-8566-dfd2eb1440ab",
        "cursor": {
          "ref": "9e4d5b33-a99b-40ab-b62c-7ecf10586698",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b7e4f681-64e5-4c3b-9089-2d68c0293e50"
        },
        "item": {
          "id": "569a1600-37bf-4a75-8566-dfd2eb1440ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0878a20d-5b80-4f84-8356-060cfe02febf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9509e41b-3498-4090-92c6-aa35987fe6fc",
        "cursor": {
          "ref": "79d0d528-ba89-4020-b051-a4d410f4729e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "def41663-8f87-4ba0-9e29-66f46ef17c54"
        },
        "item": {
          "id": "9509e41b-3498-4090-92c6-aa35987fe6fc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5439245c-9e2d-4d3c-bd0d-abb58509cd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b08d4ef-991a-4857-8372-e55df554ab5c",
        "cursor": {
          "ref": "d79c5caa-3d73-49cc-8c30-e6b1bc1e6ff9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18e44a3d-f00f-4508-bb6c-56ae303a06cb"
        },
        "item": {
          "id": "9b08d4ef-991a-4857-8372-e55df554ab5c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "08a3c5d4-c098-4d60-bc8c-813607b44f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3f4b65-60c4-4024-87c9-09a707daefeb",
        "cursor": {
          "ref": "17402510-5e1b-4627-a3bc-49fb5c35dc2a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ed8b88dd-b7f3-4fd0-9d84-0a774bb00f1e"
        },
        "item": {
          "id": "eb3f4b65-60c4-4024-87c9-09a707daefeb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "68c29ee4-9676-472e-9471-12e59cd14da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485e8357-322c-459f-a270-6263754b64de",
        "cursor": {
          "ref": "feec2dd0-8ad7-4fa6-a768-0e7d6f73c8e4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a8e64d57-ed57-4f6f-9992-f6e2ed4d10c3"
        },
        "item": {
          "id": "485e8357-322c-459f-a270-6263754b64de",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3cc3a0c5-1b55-498f-ab66-677852980197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c07d7ee-5bfd-4975-b64b-8613f9ee8e92",
        "cursor": {
          "ref": "252c6dde-6142-454d-afa2-3a8d878b4145",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7388b41d-1b08-461f-a7a1-a833a0974931"
        },
        "item": {
          "id": "0c07d7ee-5bfd-4975-b64b-8613f9ee8e92",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "37097e98-7540-43eb-91ff-7ce392a92eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e0bbd4-5299-4b5a-bad8-271c12c23493",
        "cursor": {
          "ref": "092a6d44-6f27-4536-bd11-64824d877519",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ef750016-aa84-418c-b003-8689ea33b22d"
        },
        "item": {
          "id": "a7e0bbd4-5299-4b5a-bad8-271c12c23493",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0ba3b36c-0288-4b38-934c-f9dadbc05c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7676a26a-4915-42c5-a5e7-7bdb1955ddb9",
        "cursor": {
          "ref": "c0548027-9df5-4a91-aa57-6dc0828a7cb8",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d4168ac0-fd75-4f9b-9099-9bc9d4da8639"
        },
        "item": {
          "id": "7676a26a-4915-42c5-a5e7-7bdb1955ddb9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "490beefd-3227-4f10-b31a-3f1b6b0d76c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918044d0-f584-4c9f-b591-92438d67b72d",
        "cursor": {
          "ref": "0f368909-cc96-4b4d-b429-05b3ece76516",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b5200a74-0fb3-4af9-bd9f-90cf988210a2"
        },
        "item": {
          "id": "918044d0-f584-4c9f-b591-92438d67b72d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b220d92-150e-4675-96a9-144632b1b346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75bc9f4-c816-4bdf-81a9-cdb693cb7ec1",
        "cursor": {
          "ref": "9a3b9851-7631-402c-a76b-a75ef929f8e0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ad5b5c9a-41d6-48de-b822-9bf431fc3625"
        },
        "item": {
          "id": "f75bc9f4-c816-4bdf-81a9-cdb693cb7ec1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "44e9c22b-b84f-4437-b9ac-8bc494d1028e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5865e198-418b-4bd4-9b6b-9ce1955496cd",
        "cursor": {
          "ref": "bb535f69-e09b-41a2-b8b2-6751393b4297",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5831ec41-bf5a-4858-be7f-cf33aa2ae35d"
        },
        "item": {
          "id": "5865e198-418b-4bd4-9b6b-9ce1955496cd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9bbcfb10-0013-4f3c-a819-120f9f206c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e961639c-4242-40f5-bb5e-96126b5295b5",
        "cursor": {
          "ref": "c0225c68-da32-4e30-863e-a7cf0e3f0e22",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b827d1c3-85df-4071-8740-420127a6815d"
        },
        "item": {
          "id": "e961639c-4242-40f5-bb5e-96126b5295b5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "55e36f7c-02f7-4179-9949-df450703de56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b995ddb-533c-4159-a7ac-516f44091780",
        "cursor": {
          "ref": "71788fb1-0ac1-4069-ae45-92707ca3e1af",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "83ff588f-aa07-4772-afec-2d5b9c8e8747"
        },
        "item": {
          "id": "6b995ddb-533c-4159-a7ac-516f44091780",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f9b9fe84-735f-43c6-9fa6-c48e5092335b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82f58fe-bac8-4915-a366-3cdc5c6e9824",
        "cursor": {
          "ref": "d8da3ff3-6ffb-45d8-8b6c-fef49746daa5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c866cc5-175c-4d15-a10c-5934dcca2d5a"
        },
        "item": {
          "id": "e82f58fe-bac8-4915-a366-3cdc5c6e9824",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9e358bd0-3540-41a5-94e0-25477d019aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ba9d9d-9f05-4c94-9366-567b86bb0bc2",
        "cursor": {
          "ref": "2c3af5e2-5c76-4aee-b6f4-36cdc8f2c76c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f4f20f0d-ee36-4806-98dd-efdd975bf195"
        },
        "item": {
          "id": "f6ba9d9d-9f05-4c94-9366-567b86bb0bc2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8d0da8fe-59d3-4f58-bbce-313d95fdfc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e37724-56ab-48fe-9859-2ccaffad4bdd",
        "cursor": {
          "ref": "ac0def0c-e6b5-4d08-acd6-6799e00637c4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1b1a68d7-443d-483d-bf0a-3bbfa0b2c3fc"
        },
        "item": {
          "id": "d0e37724-56ab-48fe-9859-2ccaffad4bdd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2c80be91-4d01-49c3-9c67-d68da915d767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c12bd-64de-4ee6-83f8-3740846a0159",
        "cursor": {
          "ref": "256e2f35-a60e-4632-97fe-1403e4e271aa",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d89ec8be-27e4-4e2d-8eaf-a59c025c8a09"
        },
        "item": {
          "id": "494c12bd-64de-4ee6-83f8-3740846a0159",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dd208fb6-94ce-45d7-a278-014bf0dc208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35622ec6-8099-471d-91df-a5552df837b3",
        "cursor": {
          "ref": "634473ac-1589-4311-89b1-2ee1fca87a44",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d90fddb0-9ec3-4ab3-a29d-a68074d88d65"
        },
        "item": {
          "id": "35622ec6-8099-471d-91df-a5552df837b3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b867eb3-5249-42fd-83fa-f079d18b8ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba85a661-fcc8-40cc-83b3-a83a03d7bdde",
        "cursor": {
          "ref": "8b8dbc65-2f0f-48ff-bc1e-05e8d1196053",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b820eb33-dd73-4592-9dd1-d44e0146fd53"
        },
        "item": {
          "id": "ba85a661-fcc8-40cc-83b3-a83a03d7bdde",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5a87d469-0568-4131-8d2b-0a241ae18366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c44f63c-4c9b-4b26-bf13-917e3c4ce2d9",
        "cursor": {
          "ref": "0b3aff15-a082-4801-b576-63f82f7f7b37",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d4ae4bb3-790d-45d5-a04f-66e498ec5492"
        },
        "item": {
          "id": "0c44f63c-4c9b-4b26-bf13-917e3c4ce2d9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f8cd4f3e-1b4c-441a-9ff8-1a7906524bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66283866-5435-4655-b603-31c0e0e42373",
        "cursor": {
          "ref": "c63a0113-3204-407f-9498-c7a9b9d7b8ab",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9e34fd0-47ff-485b-b985-3e73306e358b"
        },
        "item": {
          "id": "66283866-5435-4655-b603-31c0e0e42373",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "33c5669c-e360-4867-9b2c-43e71ec1217f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb44a578-f155-46e5-9f10-de8e42ac3d35",
        "cursor": {
          "ref": "3b55d383-6da3-44d0-acb4-616d48448db0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6a88da66-dfd0-4f8a-9e85-0df2fc57c210"
        },
        "item": {
          "id": "fb44a578-f155-46e5-9f10-de8e42ac3d35",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "77dbe283-dcf9-409f-96cc-4f0829ec3841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb89c40e-5e66-4632-bfcd-0dae0e9d1126",
        "cursor": {
          "ref": "8090f8ba-368b-4c05-a18b-20c0d2229801",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "33048556-48f0-4965-9925-c0f03ab54315"
        },
        "item": {
          "id": "eb89c40e-5e66-4632-bfcd-0dae0e9d1126",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e562a63f-96fe-4ad8-a862-9f00168adb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c1a64d-e2e0-4cfb-8ea5-b4bbbf7ec8f0",
        "cursor": {
          "ref": "f086b0bd-4f1a-4fbb-a118-d709b815258a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bd082949-c853-4b2b-b11a-1a74eeb7aae3"
        },
        "item": {
          "id": "f1c1a64d-e2e0-4cfb-8ea5-b4bbbf7ec8f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "996b2513-8177-4840-bfa0-4bc57a9d2a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb0ecd2-3b8f-45b7-80b8-c3ffa5be3c49",
        "cursor": {
          "ref": "35133ffc-26a8-4271-b32c-879e18f43648",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "68a10e6f-ced7-4d91-8238-aea575db6497"
        },
        "item": {
          "id": "3fb0ecd2-3b8f-45b7-80b8-c3ffa5be3c49",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d903bcd7-70ee-457f-9511-68728439645e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01638c53-f2ff-438b-8d19-f0ad0254d749",
        "cursor": {
          "ref": "0dde55cd-979d-4f83-bdf6-6f28467ec936",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "04d0574d-2b4f-490e-8b24-6ca26a8b60d7"
        },
        "item": {
          "id": "01638c53-f2ff-438b-8d19-f0ad0254d749",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71d2ab65-c9ce-49a9-baee-1e202ca52c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e9529f-03fc-4d77-95fe-bc1e1ba2c899",
        "cursor": {
          "ref": "e366159c-0c60-4d3e-859c-4c5d4ca29311",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d4cc90b6-870d-435b-ba78-19abcc5cb134"
        },
        "item": {
          "id": "35e9529f-03fc-4d77-95fe-bc1e1ba2c899",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e1826258-c556-4c89-9c11-7973f64e5ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa8afca-7a7d-47d3-bfea-b3374a8e792b",
        "cursor": {
          "ref": "185d655f-0315-4183-88a7-b3942dab47a0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d7338fa9-d800-4216-9eae-7fde0f09da14"
        },
        "item": {
          "id": "2aa8afca-7a7d-47d3-bfea-b3374a8e792b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ce396f1-3e31-40cd-8844-a0cf966b93b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944ed783-978a-4196-a871-35d69ff7fe5c",
        "cursor": {
          "ref": "d79225e6-0ccf-49ab-984f-bf760271a477",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "837ed63e-05af-4923-aba1-e238c64daed9"
        },
        "item": {
          "id": "944ed783-978a-4196-a871-35d69ff7fe5c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "39e07f50-88a6-4094-bc5a-5777b5a00280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a459483-e0f0-48c1-a9f7-16eaeab56008",
        "cursor": {
          "ref": "ccd518d3-6377-4cec-8b0a-798cdc5e230a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5fb0953-d54c-443f-baf4-80af157b5eed"
        },
        "item": {
          "id": "2a459483-e0f0-48c1-a9f7-16eaeab56008",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f3b316a3-8bf5-48e5-b7e0-01ea319ccccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4521712-3f86-4662-bf96-984530a7c881",
        "cursor": {
          "ref": "b34c2752-512d-4a2b-bdc5-1a950eb0eafe",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d1824c4c-fe10-4d67-9092-886539dc2e8c"
        },
        "item": {
          "id": "e4521712-3f86-4662-bf96-984530a7c881",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b4bcfe95-f2b7-42b2-b457-5e01f73547fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166aa396-a570-46ce-ade4-9306834d7602",
        "cursor": {
          "ref": "87ac873c-7ba3-4054-b1b6-d5c36f2a63ae",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1e42c77-f3b9-4c74-89fe-3d607483f650"
        },
        "item": {
          "id": "166aa396-a570-46ce-ade4-9306834d7602",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "05103eff-8007-42e4-abb0-ab735d564b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753447b7-ca0b-4576-b1e9-205bc1e9df81",
        "cursor": {
          "ref": "6ec8e3cf-c9fd-41b5-b8ee-71a7702bd39e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "72414491-5ef8-4efd-be1c-9ff9d2d2c895"
        },
        "item": {
          "id": "753447b7-ca0b-4576-b1e9-205bc1e9df81",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1222ff38-2970-4699-b962-a06686b8de06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96172fb2-7764-4b2c-b70f-405635f7ccdc",
        "cursor": {
          "ref": "1af2baef-cd4a-44e7-b8ce-691499c506fd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b34fbc7a-067a-41ce-8afb-327257fb20e6"
        },
        "item": {
          "id": "96172fb2-7764-4b2c-b70f-405635f7ccdc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "db652958-7c95-4c17-91f0-df9d33f3ceaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ec78bd-1cc3-40ee-b37d-602610aeb1ba",
        "cursor": {
          "ref": "11a6b134-1d58-4168-a46d-9002c1e2eacf",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1e4169dd-31aa-46d2-9949-30ad5ff1d47e"
        },
        "item": {
          "id": "d0ec78bd-1cc3-40ee-b37d-602610aeb1ba",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c84db4a5-dd61-4f1b-ae84-1924f6678491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68911d7-cf30-4f6f-8440-de54b716143a",
        "cursor": {
          "ref": "7086f707-5ca2-4bd9-a85e-9e43b3fe4c24",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eb14625a-f183-4cad-8d46-7da5d3c799a7"
        },
        "item": {
          "id": "d68911d7-cf30-4f6f-8440-de54b716143a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "67dfec24-e15f-4c43-af4b-3c612759db7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed652ef5-8a2c-406b-9c4d-6ac9164aec1a",
        "cursor": {
          "ref": "1483cf10-937d-4d11-b29f-9f30c751df7f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6cbf8920-be4b-41dc-a972-28b3f2926743"
        },
        "item": {
          "id": "ed652ef5-8a2c-406b-9c4d-6ac9164aec1a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "12e93ef3-d529-4a9a-a1a0-47f38655f387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d752e759-81ed-4b42-b748-6c549c207dc1",
        "cursor": {
          "ref": "68c21b0d-aa77-4bb7-9fbb-9f10d1a1e3ce",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b35aead6-d6b7-45d6-8b39-144597d453d9"
        },
        "item": {
          "id": "d752e759-81ed-4b42-b748-6c549c207dc1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c849e9e9-2e1a-4577-91dc-3fbc1e064b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a98c4a-2f0f-4422-bba6-78314d775ab2",
        "cursor": {
          "ref": "ecc63e9a-b909-4466-a1e2-3b34f5c87a88",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "adb551eb-73a1-4fab-91b7-87781a4576ef"
        },
        "item": {
          "id": "19a98c4a-2f0f-4422-bba6-78314d775ab2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "33f2ea94-53e4-41af-a6c4-d5ae4077bb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ffb4a1-26fd-451a-956d-e9c59925119c",
        "cursor": {
          "ref": "3b03cffe-d388-4016-93fd-1f77455436e3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a909c4f4-5d7d-4431-a67b-28cb9400b7ea"
        },
        "item": {
          "id": "00ffb4a1-26fd-451a-956d-e9c59925119c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bbe59e84-09aa-4dd8-b194-92955495d464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d522d4e-915f-4327-ba88-15d236eeef69",
        "cursor": {
          "ref": "25ff4df5-6636-4454-993d-06af09fe28f1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de308609-5539-4c2a-8f37-7f3fbeb527c4"
        },
        "item": {
          "id": "3d522d4e-915f-4327-ba88-15d236eeef69",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5bc3f19c-43b3-4c08-b3b1-30a87c540b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980c6185-7f77-46d2-ab3c-3dd27b6366ad",
        "cursor": {
          "ref": "b20dbe05-9588-4804-a08e-6b67b3215fdf",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fb3db3a1-2cdb-4371-8a50-c942b7f8006a"
        },
        "item": {
          "id": "980c6185-7f77-46d2-ab3c-3dd27b6366ad",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c7e68f4c-2aa6-4802-85cd-dac206bf4462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8bc05-1275-44de-ad49-be9f3c904a6d",
        "cursor": {
          "ref": "b9e0494f-58c9-49f5-a724-9117bfc671b3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "56c0d390-ad71-4881-be84-efa18edf1fae"
        },
        "item": {
          "id": "83c8bc05-1275-44de-ad49-be9f3c904a6d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0eeb56fd-ae20-4dce-8af7-092261b9d540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616b55f5-d832-4805-a6e4-4962544de4da",
        "cursor": {
          "ref": "3b2b158a-6593-42b1-82d4-8c392a8c9151",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7fd6278a-8129-4d0a-86f2-44dc1fd03d22"
        },
        "item": {
          "id": "616b55f5-d832-4805-a6e4-4962544de4da",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "019657d2-c679-4ecd-994d-1f7f169eb9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c73df98-77be-41b4-ae7d-dfb3358e1802",
        "cursor": {
          "ref": "90407744-949f-47b9-b259-00c347a30e44",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f936b649-4abf-418b-8715-8f056a65221f"
        },
        "item": {
          "id": "2c73df98-77be-41b4-ae7d-dfb3358e1802",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "24f2cc53-aec7-45a5-a1df-8e5593cf25c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2515b0-f89c-419e-9d65-b4eaf5653834",
        "cursor": {
          "ref": "3666abb0-22ea-498f-b6ec-d1f3c1b46540",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f912b447-e54a-4425-8d22-29a7a5ba5cdb"
        },
        "item": {
          "id": "3f2515b0-f89c-419e-9d65-b4eaf5653834",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d9faf355-d9e9-463d-a881-fa708a5366fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f399a-a5ed-4b67-8ff4-e3875bd81f58",
        "cursor": {
          "ref": "7970100d-375f-4339-99b4-798939aa18c9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9e39355b-93d7-42ec-8f0c-1baf7980a4a5"
        },
        "item": {
          "id": "ec1f399a-a5ed-4b67-8ff4-e3875bd81f58",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "acef2dc9-564a-4841-86fa-4c6739cc7e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47a568f-b3b6-4c63-9929-d8c6bf682465",
        "cursor": {
          "ref": "735f2354-7ac8-465b-89b6-178e0aeeec07",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ebd6434d-e3b8-4a40-8916-3645c50695e7"
        },
        "item": {
          "id": "b47a568f-b3b6-4c63-9929-d8c6bf682465",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b395d005-3215-4572-a104-680fa5a34794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a178a5-ecfe-4b84-b55d-7df6a60131b7",
        "cursor": {
          "ref": "4cfe4c4e-a358-4af7-a5ea-c843d0d15a18",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "41203d77-fc11-4f86-ae85-e9ab60613640"
        },
        "item": {
          "id": "c1a178a5-ecfe-4b84-b55d-7df6a60131b7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4b8cd097-1d39-4b10-bef3-0b54df94675c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6782cc2-443c-4c4d-bf7e-7483eb1ab3e3",
        "cursor": {
          "ref": "04219cd1-cf55-4bef-9061-b3fc91136936",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4c69caf-5f1b-43eb-bd94-724ff2a7f072"
        },
        "item": {
          "id": "d6782cc2-443c-4c4d-bf7e-7483eb1ab3e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c75e7a83-935e-4ff1-a34d-86f951a994c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f19536-0566-4e89-8311-e9aa9fab70e5",
        "cursor": {
          "ref": "b441860f-3e31-42fc-97a3-eb530d683e57",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b27a4592-e108-41d2-8a5b-a57f9a197593"
        },
        "item": {
          "id": "c4f19536-0566-4e89-8311-e9aa9fab70e5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "126b5cd1-b66a-449b-9fac-ec854c174860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ae53c0-e492-4106-a54e-55e3070af7da",
        "cursor": {
          "ref": "94478fcb-2dc0-45ce-8972-f417426a18d6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9ed06317-5da2-4128-a7ec-fbb65d778567"
        },
        "item": {
          "id": "64ae53c0-e492-4106-a54e-55e3070af7da",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dcf3c5bf-b24a-4c5d-9083-a71fee2021e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf27bc-8328-4683-9798-1790f33b5809",
        "cursor": {
          "ref": "0fbdd9ea-d183-4846-9770-39e040a99224",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "61390f2f-2040-4481-97ba-6dc16ad96a38"
        },
        "item": {
          "id": "aecf27bc-8328-4683-9798-1790f33b5809",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3e488aa7-c36e-4c6b-bf31-990981106689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf973e-c45e-4d11-96d5-2b935f2187c9",
        "cursor": {
          "ref": "491746ba-dd23-486b-b285-c61788a985bf",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b114e1f8-470a-4e49-bc97-4709e7882912"
        },
        "item": {
          "id": "eedf973e-c45e-4d11-96d5-2b935f2187c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "69b21241-343f-49f3-b4db-5f963a7c12f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e6146-2060-46fa-bd99-275b85a270f7",
        "cursor": {
          "ref": "9e6136be-22da-40c2-abff-778384fe86df",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "178e2d50-f699-48d9-9e5d-09e9b6a83602"
        },
        "item": {
          "id": "401e6146-2060-46fa-bd99-275b85a270f7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1f224352-6e8d-479e-9b15-fb7319302c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b3421a-1312-4e9f-b9ad-6694596baf5b",
        "cursor": {
          "ref": "8fa3aad4-753d-495c-9d4e-38ab22614bb6",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "944f16ca-3c61-44ac-9bb9-9157d9bc2c86"
        },
        "item": {
          "id": "82b3421a-1312-4e9f-b9ad-6694596baf5b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d614a476-c41c-4d4e-807d-9f6445a0b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf654d1-3c77-4d6c-8ebc-738de594da9f",
        "cursor": {
          "ref": "8a5db153-28d9-4c4f-9f2f-c55cfac6a9b5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9d493fbe-0af3-4427-ac29-21ce98bcd2a9"
        },
        "item": {
          "id": "7cf654d1-3c77-4d6c-8ebc-738de594da9f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "72de99d4-fcdc-4788-babf-c070b3c0cd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1cb2a7-b279-40a7-b26b-93188d2829f7",
        "cursor": {
          "ref": "9cb9702b-1f11-4032-a80b-3b9c081c7a57",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "514b0f31-4b96-4181-9358-7201c1977562"
        },
        "item": {
          "id": "5f1cb2a7-b279-40a7-b26b-93188d2829f7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e6e3411-cb65-42a7-a515-266ba1920738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622d0d6b-25f5-461e-9ce8-f8437b4681f9",
        "cursor": {
          "ref": "a7c16718-4d25-4302-a76d-6e88f75117f6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5d0dbcbb-edc3-4ffd-b565-42042be111fe"
        },
        "item": {
          "id": "622d0d6b-25f5-461e-9ce8-f8437b4681f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "67dcd43c-72c8-4801-98c3-9c94caa1eaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce2275d-56fc-476f-adfa-5af89e9d0d88",
        "cursor": {
          "ref": "87a35f32-f7e1-45af-a8ce-ef0d019b25dd",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e197b2d3-58a2-480e-bd29-631a6db36c56"
        },
        "item": {
          "id": "bce2275d-56fc-476f-adfa-5af89e9d0d88",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4789bafa-1558-4e6a-8c09-9102aee9fb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91435cd6-9d60-48d1-a4a9-9e5ea408a709",
        "cursor": {
          "ref": "c674abf8-c1fe-410e-b914-bdab5220683a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d78319cd-beda-45ce-a4c7-492f1c8a7ba0"
        },
        "item": {
          "id": "91435cd6-9d60-48d1-a4a9-9e5ea408a709",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "50904386-687e-42a8-8258-96bf95b4304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aabd443-002c-4975-996a-37f6858c69a9",
        "cursor": {
          "ref": "390a861d-0f3a-4737-9b10-2d9ab9a1c71d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b7dc8a4c-d8a1-4944-a81e-a903c404337a"
        },
        "item": {
          "id": "9aabd443-002c-4975-996a-37f6858c69a9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1102c6c2-02ac-4d32-a8f8-fc818454d990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74456c7-cc65-48dd-80ab-3c67823d2c6d",
        "cursor": {
          "ref": "4c750ed5-4f24-4282-bcc5-298e9672d43f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f532a43a-a2f3-4e59-b59f-4b07931382b5"
        },
        "item": {
          "id": "e74456c7-cc65-48dd-80ab-3c67823d2c6d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4ca93a0c-7a18-4a3f-b83c-ff2f4abfe23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a7161-58b5-4cb0-9acc-086cc584f471",
        "cursor": {
          "ref": "7f75cb99-f1a2-41fc-b8a2-47b883f0b8c2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e442f49a-cc32-4c71-a5c6-563a867589c0"
        },
        "item": {
          "id": "b20a7161-58b5-4cb0-9acc-086cc584f471",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "af3129f7-d935-4267-af99-0d99b51e418e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59071ab9-0ae1-40ea-9f1b-78307f58025d",
        "cursor": {
          "ref": "1e79055c-02cb-46bf-bf30-aa3dc7d64d2e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fb0c7b76-0f0a-4666-8fb9-8cee081250bc"
        },
        "item": {
          "id": "59071ab9-0ae1-40ea-9f1b-78307f58025d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3c366e1d-4011-48ad-a3b8-8928630420d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22b9f79-c3ac-4f1e-9ec2-dad178a72cf7",
        "cursor": {
          "ref": "9a4b9aee-6f02-4b9b-ac06-c4a4db0a28ae",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a60ec47b-1a3a-4c1e-937c-081d706ef8e1"
        },
        "item": {
          "id": "f22b9f79-c3ac-4f1e-9ec2-dad178a72cf7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bca0b39f-0ec3-4d17-9cd7-384c6e2f29d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447b3e60-5616-429f-8655-733a47df3606",
        "cursor": {
          "ref": "b4594e12-a910-45ce-930c-ccd0d9d4f7c0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "56a42782-a683-46c5-a639-c2568968cbc3"
        },
        "item": {
          "id": "447b3e60-5616-429f-8655-733a47df3606",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5a0a2110-3c34-432c-bf66-80aa2999972d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab4674f-b7ec-4351-a3b5-edfa41d80c48",
        "cursor": {
          "ref": "c506b534-ee52-4a2e-9dcb-841f33195352",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2c67380a-c4a7-49b5-a085-c550def599ad"
        },
        "item": {
          "id": "2ab4674f-b7ec-4351-a3b5-edfa41d80c48",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "328e481e-17a2-4367-95d0-4919effb66bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab290c90-2dcf-4ded-90d4-24d64a0e21d0",
        "cursor": {
          "ref": "320aee3a-f65b-47cd-b9d8-7824ea398ccb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "eda58193-cb4c-45a7-99bb-aaecf075f3e4"
        },
        "item": {
          "id": "ab290c90-2dcf-4ded-90d4-24d64a0e21d0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fb7d0d64-3d8d-419c-ac79-33e87f2b3fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2b83b5-9144-4b01-bab1-f42fe0278d2f",
        "cursor": {
          "ref": "a7ddfb30-b0dd-4a5b-a963-9ca73e700646",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "30260397-55f6-4673-8a77-fdc6ca1ff920"
        },
        "item": {
          "id": "0a2b83b5-9144-4b01-bab1-f42fe0278d2f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e0d7855-8399-4067-98a0-72f1d70f76d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74d7c25-bb50-434e-bcca-d326e5002485",
        "cursor": {
          "ref": "864a30e6-51d4-4de3-bf89-80e15a512ce7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "781fecf1-3fef-4008-8a43-bd812f4057ab"
        },
        "item": {
          "id": "b74d7c25-bb50-434e-bcca-d326e5002485",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d44484d1-52f6-40fc-b51b-f618a5948c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916af41f-80b9-4f1e-93d0-89a2d69c7479",
        "cursor": {
          "ref": "c5657611-c128-4a3c-ba84-f7137f90009b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "05fef894-a2c5-4966-8db0-9726a40b9519"
        },
        "item": {
          "id": "916af41f-80b9-4f1e-93d0-89a2d69c7479",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "caf7c9db-ff43-44ae-bee9-3f49d1d5639e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92802269-601f-4416-afc6-9a5e201043ac",
        "cursor": {
          "ref": "1407e646-beef-40b6-b375-a46e69d74c10",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "58c379fc-7fc5-4b8e-bb54-29ee6eecf5da"
        },
        "item": {
          "id": "92802269-601f-4416-afc6-9a5e201043ac",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4544142e-16ed-451e-b0bc-c9ed54c6ed67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b05d32-0fb3-4b2c-9c36-c92f7630b0bf",
        "cursor": {
          "ref": "091f7ca3-a47b-419c-9b13-e60092320d3d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "365e99f2-fb45-48a9-8968-d6f5956f3326"
        },
        "item": {
          "id": "94b05d32-0fb3-4b2c-9c36-c92f7630b0bf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "76524292-5207-44ed-9faf-0ed90d4494d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dda75a-496e-4825-99aa-f62e25c57f49",
        "cursor": {
          "ref": "8f6093de-e6f4-46ca-a35c-779340f63b5f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0d4721b0-2fe3-49e3-a1ed-4ad9a5b4e6c8"
        },
        "item": {
          "id": "c4dda75a-496e-4825-99aa-f62e25c57f49",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4b0ee31e-482c-484d-8c54-915369afc049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c5509a-9994-472e-ba77-322739caed40",
        "cursor": {
          "ref": "f545454a-976c-49f9-bb66-2fd287d26e7e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1d8038e6-e4a4-4170-be7e-49efdf4452ab"
        },
        "item": {
          "id": "99c5509a-9994-472e-ba77-322739caed40",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bfafc593-62fa-4f49-ab51-1e54a3fe1b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95a5c04-425e-4165-a397-5a4ab983cf4f",
        "cursor": {
          "ref": "daac766a-a946-4b8d-914d-db8673c784cc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4d20cddb-8c4b-4bb3-80ad-cdef0d420b76"
        },
        "item": {
          "id": "e95a5c04-425e-4165-a397-5a4ab983cf4f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8387a69c-bf86-4606-ad6b-d3316b8d1f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b459603-3ccf-4c31-b1d0-29d471c05752",
        "cursor": {
          "ref": "040d44be-95cb-4bd8-9077-6c303a8278dd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5143141d-c2d8-4664-a10a-78c5a5f9e4f4"
        },
        "item": {
          "id": "5b459603-3ccf-4c31-b1d0-29d471c05752",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0fd25724-4824-400e-b633-88559ef449ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dd6985-0910-43b2-bbc8-90c7c19a22d9",
        "cursor": {
          "ref": "ef4bfb1e-afe0-4698-946f-2c5d090caf7d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "26d9776f-fdcf-4b95-9517-1d0be4ee7d50"
        },
        "item": {
          "id": "f6dd6985-0910-43b2-bbc8-90c7c19a22d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a3194785-524f-4a45-b39e-535fd93b687b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f839a530-710d-411f-9d84-1784a3e1383d",
        "cursor": {
          "ref": "716760e9-bf6c-4cb1-bfab-bcba4a07e285",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c28aa526-2436-4b6f-a177-140895de543d"
        },
        "item": {
          "id": "f839a530-710d-411f-9d84-1784a3e1383d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "531cfa26-7267-434a-8d80-58c263219c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac789832-1c16-47a6-b2cf-1c21b5e09ab8",
        "cursor": {
          "ref": "0781875d-3f87-412f-84d4-16a0e5ca931d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2eaa827e-b464-4e24-8afd-1373a47382d3"
        },
        "item": {
          "id": "ac789832-1c16-47a6-b2cf-1c21b5e09ab8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "178f427d-5b3c-4245-8480-e18ceca6fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd91a6f6-dba9-4a50-9bc8-bed6cf68f668",
        "cursor": {
          "ref": "c067a130-e987-4eb9-8270-e358791921a1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9e7188ff-0a78-452e-b9ee-87bafc878720"
        },
        "item": {
          "id": "cd91a6f6-dba9-4a50-9bc8-bed6cf68f668",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "938bfc3c-2b9c-4529-a7da-1de96529c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c4703-4848-4f75-8eaf-3473080bf6bb",
        "cursor": {
          "ref": "b92ffe15-7e2c-4452-8dcb-119f5179efee",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c0cc626b-a2d6-4066-8c44-c8ab6cd8a84b"
        },
        "item": {
          "id": "e02c4703-4848-4f75-8eaf-3473080bf6bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "baf23e92-ca07-446f-a824-30b2c521bda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9949fb1-9b65-4bf7-ae93-7f7445b419dc",
        "cursor": {
          "ref": "37bc35b7-c5c4-434d-ab04-2a7666350961",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aefd8a97-6ac4-4c13-b807-935f495c1973"
        },
        "item": {
          "id": "c9949fb1-9b65-4bf7-ae93-7f7445b419dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4aceda24-dd7d-4481-9751-445c54f477a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9d4b7f-d9a2-43f7-a3ac-a2846acc4072",
        "cursor": {
          "ref": "d040e411-a422-43d8-9da3-eb30a817eb9c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "adeb2a50-f322-43d1-94f5-65a63ea116ac"
        },
        "item": {
          "id": "cf9d4b7f-d9a2-43f7-a3ac-a2846acc4072",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8c853b1c-ec3f-4f09-ac76-6620026d2123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b79ad8f-e681-467d-bb8b-849d74fce189",
        "cursor": {
          "ref": "ab71bb5a-2f6a-4498-9ebb-1e8210d6bcda",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a27aabdb-8eb1-4cd8-aab9-09d7bbe10b0f"
        },
        "item": {
          "id": "4b79ad8f-e681-467d-bb8b-849d74fce189",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c891b2d-5821-4ce3-9098-38f29ed6a8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2f3b34-5103-45d3-855e-a15d75e90656",
        "cursor": {
          "ref": "925107d6-ef49-4712-b84d-331200e7a7d6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cc79f458-76ac-40b6-b816-bae56fd38f1a"
        },
        "item": {
          "id": "9f2f3b34-5103-45d3-855e-a15d75e90656",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d07c90d4-cfa1-41e6-97a6-3c5172ce7024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6ae902-fddd-4ac0-80b4-f4817c695c70",
        "cursor": {
          "ref": "21a77c35-8d6b-4655-a952-c01f4221e5fe",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e85d72e7-ef50-46c3-9bd5-bfc687e92aab"
        },
        "item": {
          "id": "5c6ae902-fddd-4ac0-80b4-f4817c695c70",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b3082c0b-6b22-4a8f-952e-53a139b6b350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746d6204-2d00-4ae9-993a-83984f8a0934",
        "cursor": {
          "ref": "76048fd3-6ed3-449f-896c-4d437c58669d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ca04c9ad-6b46-4648-be45-0f357efb5ec4"
        },
        "item": {
          "id": "746d6204-2d00-4ae9-993a-83984f8a0934",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d71d57bc-beff-4a4a-b5a7-e0b3ab43e652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf9b85e-8fbd-47cf-a97d-88b3c2fbdcc7",
        "cursor": {
          "ref": "96098b18-f2df-4d4c-ad41-ccc7ed3b9d74",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6ea88765-13ce-477e-93af-917e20197816"
        },
        "item": {
          "id": "daf9b85e-8fbd-47cf-a97d-88b3c2fbdcc7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "71ca1b48-f75e-4785-b5c6-4ad59d5576b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef85e8e-f672-4fb9-bd1e-5f55fdb52062",
        "cursor": {
          "ref": "31bec607-6656-4d3e-a921-1a54fd5c41a9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d5b0bc5a-e368-41bf-8325-642282c4268b"
        },
        "item": {
          "id": "3ef85e8e-f672-4fb9-bd1e-5f55fdb52062",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f81d6f2c-f2a1-49c0-9cfc-7d3a9c0da5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe09c4-879a-446a-bd22-d9a5debb681d",
        "cursor": {
          "ref": "f2c4a299-051c-4e11-b0d1-04e89e488e44",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ed66e02a-6243-4efe-8945-1ab77b648e12"
        },
        "item": {
          "id": "bafe09c4-879a-446a-bd22-d9a5debb681d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1186a1f3-92fa-4bd5-bc5d-524018a9aa80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1201739-48ed-436b-978a-0f853326acf6",
        "cursor": {
          "ref": "bcac80f1-8aab-404a-a16e-9ae13efc1427",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f5ab66f5-ac0a-4bfa-9ac8-1e26bfbe3de5"
        },
        "item": {
          "id": "d1201739-48ed-436b-978a-0f853326acf6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1895a334-42bb-4ade-85fb-c82d06b3fd86",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b81c9a0-1665-4e28-ab54-5b7a3479d882",
        "cursor": {
          "ref": "6f85d8ba-c80e-4c83-a4ae-f9c637670eda",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b6c531dc-0422-4c7b-83dc-c5fd782cd7f9"
        },
        "item": {
          "id": "9b81c9a0-1665-4e28-ab54-5b7a3479d882",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d7797217-2557-42c7-98a4-5b1cec74bb95",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec7468-b163-4974-a582-9f82c69d07ef",
        "cursor": {
          "ref": "756ac1e1-e5f8-4c30-8f50-420ec7a00570",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d02bbdcb-90dc-403c-9a22-eeb08209b4a3"
        },
        "item": {
          "id": "4eec7468-b163-4974-a582-9f82c69d07ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "47b6a51c-6ee2-41ff-a3dc-ccab46f96be6",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ebc0bc-f259-41db-8cd7-920a41d7dffe",
        "cursor": {
          "ref": "66f6cee2-10f5-442a-970b-09b516504cc1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1eeaa61f-1f56-41ff-b99a-7759ba6a84b0"
        },
        "item": {
          "id": "b3ebc0bc-f259-41db-8cd7-920a41d7dffe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "abccb2d6-aa05-4fe2-8b9b-a4602d20b446",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ebc0bc-f259-41db-8cd7-920a41d7dffe",
        "cursor": {
          "ref": "66f6cee2-10f5-442a-970b-09b516504cc1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1eeaa61f-1f56-41ff-b99a-7759ba6a84b0"
        },
        "item": {
          "id": "b3ebc0bc-f259-41db-8cd7-920a41d7dffe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "abccb2d6-aa05-4fe2-8b9b-a4602d20b446",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb9e651-8a5a-4874-9603-5c72159c2926",
        "cursor": {
          "ref": "daf546b3-a79e-494b-a45c-d56bd410828e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0d789aac-4389-4c7e-a0b1-0f10fe9e5f73"
        },
        "item": {
          "id": "9cb9e651-8a5a-4874-9603-5c72159c2926",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9b5db5ae-e4c7-4a21-be52-d49b51f0d529",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7bb0a-c05f-4a5d-a533-16c8294a4530",
        "cursor": {
          "ref": "dd691dda-4406-4dda-aa18-f576cb73cf4b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "eabe782a-46da-430e-bb41-67c94e898bb9"
        },
        "item": {
          "id": "8fb7bb0a-c05f-4a5d-a533-16c8294a4530",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "75bef160-66d7-4e01-be8f-c4571958191c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}