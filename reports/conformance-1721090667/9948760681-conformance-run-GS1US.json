{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e77e590-3a8e-436f-9105-b3be449c9b00",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5789410-e2ec-4749-8d18-6bdf329a70be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89d23b4d-752a-466f-bc0f-df22f8d4d653",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a661c1f7-4ea0-40ab-9efa-2c4381ebb987"
                }
              }
            ]
          },
          {
            "id": "71957126-406a-4a86-895f-63faee109a7c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e06bc02c-ab7f-4d3c-bca9-ddefefedf067",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5ddcd0f-68cf-4bdb-ab7b-e4d184106a35"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d8a430a-769e-493b-9399-c6e11f0eca56",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "494cbbdd-16f8-4989-ba44-31514864eea1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac06498b-1ca2-49d4-9309-a00a9d670591",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cbc4193-99c6-403b-9005-267d18cee68f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5046a42-7b96-400d-b902-279c824da9d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3220bf0b-1f14-4a11-92a1-afcc53c376d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c92bc08-5f25-4899-b15d-5aa4a7e0992b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e48cb5d4-91a5-4eda-afb1-8810a58cafb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "603c61ef-8935-49ba-949b-68cc6b59d7dd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "813f1d31-e824-4f02-be4e-22718729c2f0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7c7abe65-eac3-4574-af1d-c0bf462d3045"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7511dae-a482-463a-8133-3843b21e006e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39a2ff3f-dcd9-4946-a92b-e83c49c21db7"
            }
          }
        ]
      },
      {
        "id": "b5bc05bd-ecf8-414b-a51f-5a87ca5a7da2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b3755a5c-68e6-43cf-90dd-b9cd23f9c64e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc8c3641-2b4c-4547-a360-8b6fa4305c00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "809227a5-d7ff-4432-8b1d-69213791b20d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a706f5-ea8e-49e5-949e-5980e22a4d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8244fe7e-2e86-4b77-a82a-a1202f8cde8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236a6a7f-7a00-4379-96cb-7280da6b0d1c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccffdda-24c1-4b47-8158-54fa092bd06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "589d8236-9279-42d6-bfe6-d9880a298da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237e9551-6b33-4fe2-a1e4-7c94285cd7ab",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf648b3a-1c44-44c4-b340-21d069f11e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d0948d6-889b-4542-b26c-fe8dc6cdc7fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51a1a350-ee50-40ba-823c-706933a75399",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "939ea9fe-a5a2-4aff-8c8e-8ce5dcacaf2a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf5daef-a80d-4158-8afb-1bed650a2fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "966f0963-6860-4b9b-9edb-9c003865682c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f2c6dc-c463-4b6b-bf42-f7bb1eb6454c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ceece6a-72e0-4893-beb4-44be8c5c48c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd49fa68-1b56-47a9-91ec-8d6b17b928d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4563c7bb-b24b-437b-a0d7-baec8da7be4b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06e56a77-2aca-4149-b0be-cce115c5e844",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d9de6577-439b-4284-bc70-860511e0e8bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "690a10b1-61bf-448d-96e7-536ed8bf3255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d7648fe4-2993-4184-96c2-22c0355948f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e16c45dc-ee14-481e-8a0c-fbd07046afed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ad62ac7-751d-4ba5-9d99-bab730e9d4e8"
            }
          }
        ]
      },
      {
        "id": "b0c4d93c-d63b-4f27-98b0-e2e684c8c7d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e880aa88-5ade-4add-bfbb-eccff5883e9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1591a06-e527-4a70-add6-8c5e957959be",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a0019a59-d954-4dc2-b51c-de583ab73342",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f4168e-f448-48b0-bd13-b32aa6bed2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9a6316-1bb6-4739-97d6-849761da3837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b837b3-bb29-4336-93e9-3cd385f744b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc8f89c-3b44-4a54-9b8c-c8b394dbd0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077aca7f-db3c-46ea-82c8-58d5207b2b05",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2240effa-38ec-4229-a2c1-5a647d17a1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aa1f8f-90a9-4397-a5b0-d5b64ff98736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c5d47e-3ea1-4271-9298-b227fe86f2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e3f937-c010-4e6b-b051-708cffb3899d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428fe6b2-6dbd-4f4b-9c57-38f43d914242",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd8f20-c6b0-4e77-bbae-b19c23df0877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3dea8d-579c-425c-9b08-af38f38b263e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccf8cba-3339-4aa8-b454-a8e3ef36de9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f609ae4-24e0-442a-8821-1061fd737c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896d01ed-d3e7-4a1d-8456-244f89b88da8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b8b1bc-8ce1-4d8a-9fab-d83ff56c4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e958bf-ba8c-4aed-8c81-b1eeb56a9084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2c08a0-66b5-42e4-85d4-cf254a474177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9caf426-dad3-426e-8027-d897a2b9027d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db18ef1b-ea47-490e-83d9-72cf32fbfaea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfbfbb1-b8f6-4edb-8189-e0a2829bab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfc7fe5-598e-47b0-9f77-a0054e144ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70d9650-ec1e-4364-9090-ed20c3698381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab23dca-5818-45b7-a9f0-64a9d2cb15f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6691d822-1676-459a-bb1e-3076d855df3b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3518df-4cc3-430f-91a3-7a2fffe2737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd025a7-875d-4444-b7d5-29d0cb5917d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe8861-4b4f-4fb0-a608-46c161ec5e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1939714e-c666-47e8-8674-6f7ff5e0e6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c29cdb6-3a59-4acd-b6a9-f3aa02433c5b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1824dc5f-36f8-4aea-886a-6e8d692af26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67af2223-f383-4bd3-8176-74d9cf76fd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762f3b97-bdf9-4d36-8977-23e51795459c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e9734c-ede9-4d32-b9eb-b281b806c7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb153bc-df6c-406a-aedb-1a214a0c644c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7b3635-d306-4f68-8d23-530ae8383d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe960e4-1742-462d-ba0c-85264e662ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc1bdd0-c6d9-4ca6-8cee-0448d7bfa4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05135c23-7d07-4faa-a061-6bfa69ae6764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b2b8e6-8a82-40bd-ab4c-a12378d81f6c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6597d1d-d450-4940-88b7-a13d09d42f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23cf334-96d6-4be7-b924-ccdc7f88d0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f99f4-b553-41e4-996b-4e4f7ce65444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb44d347-0960-4a51-af4f-c6ac17f184b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe3107-28d2-4072-8e9e-12c5de245d7b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ba575-0b34-4a94-aa97-b9ad90441e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1775e6-d5dd-4c52-afbe-3d7e2ada081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df7c6d3-9c8c-4664-b992-b42d67192f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e7c292b-dfb1-4ca2-80f4-ee9f78974538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cad3f0-a319-4591-bf39-fe95f5803f9c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6c53cd-0e4f-484b-9351-2455b7dd66e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037b978d-a877-4fb3-be6a-cf7ef888d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486e165e-3856-43ac-b92e-1b702131174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeb2883a-9324-4399-a8d5-fb4796c9c432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0ea228-402c-493f-98d6-c0e916c63ee3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dcf110-6e80-4489-935c-c673ef7b95cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baea745e-218f-4aca-afdb-dcf5cb392ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe49ac-ed96-4dac-946e-3fb6fd960d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80c62228-3143-45f5-b331-44646fd5b231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36474c5-9893-420c-ad41-342bce832439",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88dd35e-1f01-4cb7-808d-fdef1dd86977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f5c22b-d234-4fea-adbf-cb867d2492e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f471fb-5c3c-429e-be13-1302bded9a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "840c16a5-6200-4aaa-bc24-3529db316127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9b9329-3de4-4e8d-acee-006c5ce14888",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2505b3d4-a955-43f2-8c7c-8571cff4bf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50141e33-2994-4747-b8b4-dcf98f962dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c19fc-b562-4bee-883a-c740d926a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52dcda0e-d95c-4c0e-a705-44d261580db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6f068b-f8d0-484f-983e-405639c5841f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac13a1fc-f593-4d61-80e9-53608bba032b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c428ac-6b8c-426a-b9e9-831ab02eff1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16c7721-b006-440b-85d4-d38ec75d252d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6a8ed76-2a11-44e4-b051-136433be3c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b9cdb-6911-4aaf-aca1-b9a338288f99",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ebf04e-f7c2-4293-aa63-c1afb08f7f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e04c5e-d7f7-4831-ac47-1a5f0024c073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba0c850-d033-4a24-b76c-84bb179d5228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d64f17d8-2bd1-474c-8340-41eeee8172a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3bfc02-97ab-480d-b9ab-b06998b64e74",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01df110d-045f-4802-ae93-a59a20ba56f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7e3437-b638-499c-a40b-103fabe00ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03446a7-ca0c-41fd-b329-745d78b963cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2afb0ea-592a-409c-88d1-5476f41eceb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e515e113-7af0-4c27-9fdd-dcfddcd4be96",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895dbf7f-8f07-4132-845d-ec9a8dbb9985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f274619b-0193-49df-a802-71e76ea60403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda2288-1519-4a5e-891a-afa5dd2c4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfedaf9-c756-4379-afdb-70eea3597f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519d3402-4247-4246-b171-3e6ac534480f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c817b4-a9f4-4293-95b1-5acd3f404884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08870edc-a933-4736-a3dd-85f274322310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4529fdf-c507-4adc-9c95-b25a79896308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9adf797c-9f71-45f1-abc6-b1c50a8e55a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3536d3-c1f1-4fec-ac6e-c6d0ef1474d8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68ddcf7-8ba1-4068-9ae2-0fff1adbeabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e5b7d3-c6b8-4b99-a696-908399ee07e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf35a7df-fd1b-4553-ba30-e9b8546c9935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da91a2da-9601-4fe8-9ed2-f51236b59787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f4f382-c7fa-49b4-a810-bbdf6f16938c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7b225e-da9b-4d6f-afc6-6e6e246d9f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d63507a-d13c-41a6-954c-db8927b1e05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92b34bf-2417-42f4-8e8d-897801e1e2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f64200-c75c-4ebe-8bef-cc3fc106a134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7bfa93-710f-4f1c-8dc4-d7ded56f479d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eef7d2-f343-4a51-8fe2-209218a5ff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1405b1b-b7f2-41d1-88b3-b94dd7146126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76bcb92-c2e6-48a6-a7d0-6287370047ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd174f3-0fdb-487c-bb84-10962f388c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f39a9c0-4dd5-468b-b335-3000e29277d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e5809f-84f7-4820-b117-f3a2426e17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380dabcd-102f-4877-bc39-95512b3f1814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e728c0-4527-4010-9602-3c4b5bc5aeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "587c8820-b749-4546-9302-58999b43e60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9e9e9a-11dd-4e03-acdd-ef92f8d46252",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab697842-54fd-4807-9c82-fb7833f09de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65fd870-1988-401e-ba5e-89dfc0c82f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44825a2-82fd-48d4-93e8-bbd088bb50fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "521f9c7b-ffd1-4c3d-8ce8-34734d4fe6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e161fb1b-8bd3-4f4f-b3f3-b356dbb51c61",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2718a94c-d7f3-48ee-9075-4d7929277d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638835e6-a2b5-4d03-9842-1410e55a957d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f73d30-55ee-430f-9b93-82f89e376e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fe0967-6440-4147-8cc0-f943a014b23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa8db41-69f0-4132-a13e-a37997fd017d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453a1765-d46a-49d7-8e09-d72cebfffdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1270a7-0b26-4479-b8b3-75944b27848b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7990de-e91e-4b84-9692-ef6a850c5803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "413da300-f330-4382-a643-dc4348a73bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edadaf8a-1ac6-4cf2-823c-d5a0e5382d9b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a9ff19-68c0-4bb7-a4b7-3669f55f402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b79fc11-957e-4731-a393-954d3d7865c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e2680-72ad-44be-a92c-207bab3b4041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af8160e-5ca7-4ba3-b867-6d47b23ba384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b810b1c-0389-41d3-aa2f-814e9a29c95c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fedae6-0adc-4b35-871e-6e7344818766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a827367-68fb-4089-97af-cc212256fdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed6880e-4f7f-4a46-a84a-27ecd58c519b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c76fe3f-fa5b-4cb4-aac4-3d75e9474b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cbb3a7-1a1b-43e3-ab82-9f352777d18b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7513ad6a-2f19-436f-8dcc-0455352ebd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb79c91-3098-4823-b3f2-290541161791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f858e08-d3d3-4f3c-8938-d156444a14b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3e40a0-1495-4966-985d-506a36cdf094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cc3764-fc66-4bdd-b5ce-d82eb775240f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed007ced-1b36-41cf-a8b2-7f92f7659b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d4f958-3f2b-4f78-ba82-64f27ed46471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4097b4a-6203-47aa-b940-9310cf2f4bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae617c4-7fe3-496e-9305-c7299b1a831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52c4f44-d42e-4593-854d-64161f35bc13",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5beec8b-dec3-457b-91ef-7e9c5367e080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80f5fe5-bff1-4e7b-ad1e-5f6d46a4b117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c80556-bf03-48b0-910e-beb195fa3479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40603f21-7221-4e0f-8583-a7bdcb6d96d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a9c243-92c9-47d0-8774-5a09ba3125fc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd12cf5-aac7-4dbf-9bbc-679e7a36b182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112dbeaf-a6a2-4afe-9c2e-47c56bed4eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4f96a5-f2f9-443f-9869-f456e1cb924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6cd5cf-3ff2-47bb-9cf3-52e08968f5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c70880-3b7a-4c68-8aa2-d1fdabbb5e3f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11cfeba-7121-41b5-82f8-34e0f5743fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a7202e-bd26-4d8c-b9b8-920bb332c78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60814ee1-745f-4746-b95b-1ad25b77fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69217cd4-24a8-4f87-9026-cf4b2289378e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568fc93-1d37-47a6-92a3-220004d8710a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc87cd-f767-4ba3-9904-fb77086420b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f594d20-91dd-4153-8065-6ba5917b33fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6618aec5-90fb-4cf7-ba10-ffc53c2f5b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d827a73-9114-4040-a71b-7d4c23d69966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ba2dc6-05c8-46ea-b8d9-046197e7f709",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b26dbc-f58f-421d-bcff-9d225b07202e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27bfa76-418b-40fa-b62a-275252b53bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b425da4-610e-4703-95cd-35691b6b8017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fa00e0fe-f0b3-4d28-b480-c4a0bc9658b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c950768d-8169-44d9-8a18-eddddcb2852e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcebab55-7260-439e-9540-4afa863e6f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ecab632-73be-426c-b35a-3e9ba51c73bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a937d0a8-b398-4793-bf36-4c11350617c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa1b101-e08b-4aa8-8e5f-858012a6d46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbfc3bb-3987-4fa1-8a3b-5c49dfb765ba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef2975d-577e-4303-9c49-9b4d3c401400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9267a673-7863-4a8d-9d6c-eac133520fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb8962b-31b2-4676-8ca9-8f53d3aea6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31afd5c8-f3db-4242-915e-06906930f112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbbbdfc-2696-4407-be3f-16674ff7aa9a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056311f0-524e-44f1-9475-4f0a956e737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d869f62-b1e3-4142-96d7-a87fa4aa6a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfb9bbb-9b64-4c81-8c9d-77751894c351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9d9e32-1f99-4d8b-8867-c9d054fa4e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9668469-c14b-49f1-8ce9-bd425e574b31",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e726d8-484f-4a2b-bb98-e163f0d76adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e1ac4b-4a92-4150-9193-bd90058ac953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676a21b-98ed-472b-8bc0-8fa9c420bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a0eacc-79c6-4c83-940f-f2c00412c054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830a6d9b-9c27-4422-b1f8-834a15351461",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f61a708-850f-4f7a-897d-2ab317606aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484f462d-011d-4eca-96c5-4ee7739e3173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236ed1b6-e7e7-4b68-b4a0-c84018894837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a507387-c3bd-4551-8e51-dc87e612fcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a6cb73-25b8-4e2c-8d81-e17fe6b11dd9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252db670-81dc-48e7-8878-08774894fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedc452c-72cc-48a9-b933-dc3587c4fce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f1d24c-7a68-4c50-8eb5-598d6bb2cace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c25182-fc1d-4899-bf67-338317547ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdbdd9d-2239-4af9-b223-094af23c55c5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2bdc89-d85d-405a-9b96-e5dcc6ddfe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8280337-908f-4620-b1a6-511613bebb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde156a5-b96f-4c6a-a28b-285e802a71ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaed284-9eb0-4254-9cd6-9c7457bfba6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eecbeb-6aae-4cd4-ae7c-7287dcfd7b10",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da250d9d-f982-434b-a79e-af5b257d5e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153d9faa-96e1-4632-8448-2cfa31b2950c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d41685-b1cc-4c30-8fa6-b9d3e832867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c38e4718-3a2a-4f1b-98a3-a2fd372766f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c16296-e098-4907-8542-2a1efdc8a901",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7246d93-ec40-48d8-b839-858d79cd967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d63b471-ae2a-4f1f-9f4c-6007ac3e942b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3344eca-6967-4113-ab93-ca3bc238ccae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "849b9bcb-ef40-457a-93f6-3fa34f5ec17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f71d9d5-fdd7-44b9-af14-1d15deb8d59e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c13ede3-55f0-4b49-952a-71ef9ab095a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9322ec-11b4-405b-9f4e-1c8183404135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25349634-ab6e-4fd1-b9b8-bbbf4052c59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdb0322-41f1-4f3c-8ecf-082a2ae64fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b444b49-029e-4c7b-bb1d-0a36f869865c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffadbcf2-6ed6-446e-adb6-14903ee6a6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9f373b-0bf0-480f-a86b-b403f753743c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91c9ff7-d579-4cab-a328-330fa12f55bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a8df29-4e2e-4471-a7ea-6f4f5e0b2234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc90b21-939a-475d-8600-fce06ba49cac",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dd6fc0-dad7-44dc-ad3a-6431a9b45a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a7b25c-cbea-4058-a1c3-41a355352f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7668a8-9a72-4e9d-9f1d-b4c53089aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a043efda-d592-4298-a0a2-553b8c64e30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6fbb28-6043-4151-a1a8-5cc2c2772281",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3015add2-b9de-4190-867f-375a8f955be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a7caac-352f-4af8-b169-3fc394099480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cf85e4-31b7-4356-96cd-996f5ab07dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa50266-9f1b-4f21-be02-fd9e1e311441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e022384a-5765-476f-8f8b-56b33fd71782",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14cdfcc-229e-4317-84a8-e155f1823a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b8690-d5c7-4883-baf4-c5e604de295e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973c35b4-116f-4515-ba5d-2ef682be2954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3362ed8-a2a1-41fe-9357-753c3e049ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd528e02-cef4-41b1-bbcf-5b6a1fe2521d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e589e6-14fb-419d-9013-5ec656ec8843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1322cab0-8b01-4dea-b2fc-7401555a027d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7a90d3-eb71-4bcb-89f0-c31bbd4f493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47f7985f-3c67-4a04-b4da-491252445761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dddd57-bac5-4989-80c0-04f04410c21e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45608ccd-1faa-44b5-8776-751e1ca04874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4c6ad7-1de5-4f25-bb3b-86a6bf14c97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e15924-cc69-4103-81a7-a58314bf5b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa03f88-ef3a-4de1-822f-dd7bd6416a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6722d162-0724-4975-a5bc-b6d1b6459128",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe0537d-4ee1-4b00-aecc-61b1eb8b2918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f32cbba-1bde-4a29-9cfb-81afd135d5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e5582-e1e6-4cb0-85e2-5a997e4c1134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48a5694-bf27-4cd5-b539-2c31a3f2f0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa168f5-750b-4e07-98e8-d7386166ef6e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d128f3d1-b8ad-4d41-a47a-a1696ad811a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e08b1f-3b58-464c-803e-75955fbdfbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8476643-6264-4822-a80c-e4552ac968bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9efe8b57-4d86-403f-bd94-4c1875a07594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93966e3-9200-4922-b71e-b2d627bc7722",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb44559-9596-4d50-a706-19882af71068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f2358f-f2f6-43b7-a0e3-fb4d9b038049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ba6c86-36b2-4140-899f-90d9e0889d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83827db-28ec-4536-86f3-85677ecc00b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf2d7bd-5249-43d4-84c5-55151697de0b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1579c5-f82d-407d-b795-826e4089e58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4eeb7a-0050-4722-be28-2bf1d4c5ee13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4a37ea-d2c0-41dc-a9f8-7c05b500f6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b41ad3-6a23-4b0e-b1f8-430039c78487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f10077-96fc-429b-9be5-c22eb736039d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95eea4a-9a1c-4763-ae1e-ee0d00e17f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ad21dd-a43c-40f4-ae79-90d743b06fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5620765a-0692-4452-a85e-285a4183bd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7f5857-2a1f-4dab-8f4d-6039b58705a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46abb37c-dc8d-4424-804a-e68b7a754220",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059c13cd-9f85-4837-b929-1339a2903bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e618781-21a7-4120-bcd1-9231f019f5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dce42c-3194-4799-8062-43bf70784d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b769034-58d5-4d4f-a11d-054cc14fef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0951c25-5a8f-442d-97a1-f32fc42f58ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74df5a5-c3bf-4500-a087-75c52dcc1729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e41defe-e0cd-4ee7-9e80-f1e2a3223f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41bef68-f06e-4212-82bd-cc96938bb6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "519a7e57-097b-4daa-a817-475d2a9fffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e1a3e8-ec02-4042-8f17-2329cc497d9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3796f7c3-5bed-495a-a782-79ee521266f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94663db-bb3b-4d8c-a5ca-bbab308e2371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6780f2-5e69-48ff-a961-d7997eb21d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "abcce17f-fd84-4093-bb0e-d4b95e150a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19182f7-e30d-46b2-b516-790ace3aaf10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafdc629-644d-4bf2-952b-02a69f23d354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623c3bc1-2238-4e87-8dbc-c4d19424014f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d7788-606b-45b8-bc0b-b92b017d8d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d21d48-9f42-488d-a471-66ff75379a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeebc4f2-4724-4c16-bc09-2484130b9a5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7bc0b7-c473-4f25-94fe-bc1f1878bd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5bc492-b6ba-4875-ab87-67dbd1dfba27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80df019b-e230-4c71-9f1d-359a07fe3e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2edce650-feec-4689-a32e-19e03f136b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9c1d9-fa9e-474a-95c2-9ee7343b97c7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1335cc0d-d472-493b-a673-40409394cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b83924-62ba-4327-9948-c306d7de2c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d967284-ef2c-4739-a652-730e09e1ede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "af79058f-b2c0-4b67-b3f3-292a0f62771b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c77acec-525b-43b9-8e00-0287343b54cb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51913f8-90b6-498c-af5d-a43cc382bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c5302a-5bcf-4581-8605-620f9ec46dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7675ff-0c86-41f1-a5a4-33875cdcef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e619660-cc45-48c6-b5b4-49af617c51b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0762bc5b-fb1c-4ce9-a563-062f42193ee5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649e4d71-1a4a-4507-8fed-511186e68612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7a2cc2-3724-4aa7-b230-fb33a92dae6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d72a6b7-b160-4a60-9f27-d17e6125c4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8378a4fa-db4a-4b39-825b-cba74172b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c30cc-d7a5-4d03-9fd1-dd46e40bf34c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05c5f5b-781e-4546-a68f-cd3d736ede71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5fa3ef-f3be-4466-a5fb-9e474c9576ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7eb5ad-73ef-4721-b4c7-18f8926f347d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fa251b-aa4c-441f-813b-157172e35e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1360c41-4b22-4bee-a848-8e833d24645e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e286a10-78b3-40e8-bbfa-26a5028b34e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af297678-7847-480c-bb86-cdba904a2d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831aab75-54c2-4adb-a2e1-bf2795aeeaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf349fd-24c0-4e42-86df-53e11ecb097d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2b3042-4773-479e-a0ce-65bec73b5aea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75474f1-4982-47cf-9a28-5672cc298d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31687a46-ebf7-4dc9-9733-1e51313d72b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795dd04c-d82c-4b04-9605-a1591c9a83c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "055b8e16-a928-4699-b414-8a2245bca33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c023d9b-6e0e-4caf-9bd4-10e2a530bc1b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e53672-242c-430c-8f2a-dde65db21a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc273a-e963-41f4-ba66-dc09812cbd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2a088-82b0-46b2-b423-1c150b720b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3039c2-b63a-454f-9e18-0046476fa6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f3193d-8c3a-4e39-b455-398747913bc9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f29884d-3935-4bc8-aecd-9f78380d62c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d47b7bf-fe6e-44b2-9b51-cb2f3bec07af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e30466-b459-443e-8fc4-f90a60a3ff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "117620c1-d1f5-47b0-95c0-854e3cff73f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa791179-02c3-42a8-acf7-a048efa2f67e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f33336-98f0-49ee-a5cb-d07d573f059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b5bfc1-d2eb-45ab-892c-199cf8d35614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4366cb08-238d-41e8-a31e-3c271e448522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "975dbacd-4901-4d01-9aba-7c3632b1045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7adc4ae-fd0d-4815-9251-3af4895a9c92",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe69a7d-defc-471e-b9d1-29036ba496f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093884a4-5b67-4417-b68e-4380b085debd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbbe4eb-36aa-45ff-9312-13fe55db9735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf64a30-7f74-4ab4-9308-ed49ed2d97d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e4c47e-1cc3-423a-817c-e1b2d1a7c07c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ee47fa-91e2-4d5b-821a-f12d780935d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e9e11a-6a7f-4fc2-8b93-cbedb49d3aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc111360-9685-4d8d-8f98-d0da06e39df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "746a7391-397a-497e-ae28-ed759fdd0ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987d4bc7-b455-4017-a86f-c1792510c6c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d50d31-8eca-42bc-a763-114d8f7dcf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b85bc4-ea56-494a-86df-4ec381f1c13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75bb80a-f4a6-4aea-8602-7d7a2923b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b62b097e-583b-4cee-a765-f643261b31a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b9207f-edb9-4fe9-aaeb-8b149e08a598",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1804df-c310-4c09-a491-b76389fe702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fdc3a4-b37c-4f4c-b9d0-f5f63656556e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a059ffd7-e708-4323-8cd5-02901dcb682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "164da0c8-4304-4656-9cfb-ac9cf2f17595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b27c1ca-0f8e-4dda-975a-434169e493ab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f1187d-455e-4326-b7f7-db9b85de7195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba2252e-929d-4cdc-ae56-b9fae3fd9382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6536f97-8787-4854-968a-7f6f446e0167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e343f9cf-6f88-4594-ac90-0bace1364e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1635375d-be55-4a48-bf0a-b3b8d0c3be40",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0cf2e8-25f1-496e-ba2f-de06cf7d4f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276b9cc2-a5a2-494c-940c-8901ae706708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040461d7-db7d-4497-b73f-65f466551cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe9b3fd-f960-43d0-a6a5-256d94be33e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac427d35-4716-4116-b3b7-8c9e7cff6ae3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a34c7d-5db7-4c44-a520-817b78009158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8acfab1-4d57-4db6-add4-c9f6a92b5242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2142c2b2-f6e3-4a83-99a3-9f0e91a71fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6749570-1d4e-4e84-842a-85039bf37337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eaa290-8f92-4e93-882a-f56424fe8f61",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fc3e7c-584b-40ac-8f31-a3fd267ed753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e9280d-2608-45d3-9b8c-8fa9230a2087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6649609-e032-4791-8af9-cd89e06b3138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b270bc3-4286-4cb7-b04b-13edefb37fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a645e1a-9304-4419-88f8-b387280f74a1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfd4c7e-adea-4ed7-8e25-51c982d58ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2803c9b-5769-4fad-867d-511ac06a9d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c476d-5c9b-4c85-a9e7-4cadd6f9af51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "495cf4b4-c99d-4207-ad14-8ef93ae00126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd43347f-2adc-4487-bf17-52eb3b74c868",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09c965d-3e62-487f-9932-eef177b6c28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bb133c-7a7e-41d1-bc56-2af67197bfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a192921-a06c-419a-a34c-bf2eb4879164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb186463-b93c-4f8e-a8dc-981e3be9754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35918d1f-eca7-4b3c-bce5-412c9566b6b2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbb961a-0241-46a2-8d16-054c38dab659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790fbf0e-9c2d-40f0-ac9b-8cebd7a45a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479722cf-769a-4556-bfa1-7ebd5055dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60284213-2b1e-4eb4-b6b1-b616b083c1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c59c10f-97c7-41da-80fa-93884cff1851",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60050b46-c1b0-48ee-b7c3-a440c17dbd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12962d17-8bf4-4fc2-b359-1526aeaf4539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9acb3a7-f5fe-459d-a1f0-28b4c3ec1d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "425c324f-5745-49a4-a33b-efb25284d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84a676b-dd52-4428-912a-1c412d459242",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf5b929-af10-42c3-bcb7-c70a74c97be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f2c418-d997-4c39-9a67-4a2b560767e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8ab121-94af-498e-93fb-cb984d589147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99edc92d-a55f-4f5f-abca-11dab91967af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd98efc-e619-4aea-a482-ba4da4ac02f5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f06cc-40a0-4292-aa5e-3f8a7da46572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0a3269-aa6f-4a9c-8a2a-61d95af6d031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8902f5ca-6f1b-4044-a201-0339b58beb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8d2765-d45b-4aca-942d-3e16fc33386a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fc17a8-35e5-4a3a-9622-303b613b073e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55879dc9-fc24-471f-9046-1f78b26d6e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61a019d-2f33-4b54-a481-df940401a5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db7b9b-17bd-4208-a342-2631a1cacf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1613147a-db5b-451a-8be6-e6270c82a766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4351cec5-e730-4edf-a1e3-4f7bef02eeb2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538d511b-af90-49b1-a4e1-c076c92a72b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2e5254-477a-4eee-af44-5c14f90379ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b06ee5-da12-4d5e-937e-acdfbad85135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ffe4e3-f93d-4443-b67b-a650529fca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b516d-0891-4691-9a8e-817659850422",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce32c081-0db8-4bb1-a0fe-9a3874dacec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93abac5-fac5-4815-898b-9254b3f60900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32875a93-6488-4d3c-8d21-e23643d10998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4bc33b-f0ad-40c4-83ff-897a884d3c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6fc3cd-18d4-45a6-a5b5-a1a3cfcc112c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2411949f-fe62-424a-a816-9c098e3b879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d163ad0-1b3a-421e-881d-960cfc46cd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dd0317-78db-4408-9b26-65d80d037b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "734bfac0-4bc0-4016-8500-a7bc6848fb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96397c9d-ede8-4b2a-8276-89f5901e22c7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36a2395-163f-4d62-a227-f68c6b9df1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57806ff1-fd5e-4191-92e2-dea355fbb08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d815777-1173-4492-b3bd-aade2fb136bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63b39e8e-fc70-4cb2-90dc-b3fb370d0f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef037ec3-b7be-4e5f-8188-8c4838340110",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b966c99-0df5-4f0a-94a9-b9cee3e5f531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1654667b-ed47-4078-be69-ffdcecc6b85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efedfe4-330b-4bdc-9933-a52e7a09f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c11cb544-ccdc-4cec-be79-981c5b96c105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077e1fd8-0c13-4467-bb1a-9b833f890dab",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5826884d-c851-4eb6-b20c-4c99e12d5d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaa864a-f6a0-4446-b634-5b90689f7934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bff2d6-3ff7-40b3-ae07-929d84006d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4370df16-5e89-4dec-97c8-d7ca64fc8df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dc771c-c610-406e-93d8-24f3d430fd00",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73eef6d-9fc8-4342-bd99-d9cd246bfae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f32f12f0-7cd3-46ee-8944-dc637eb9d088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc415df6-3031-4a03-beb0-8f7c5ae3679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98e7eb8-c3db-4618-812b-7e4ff0061664"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cbc8d75-def6-4f9b-b5f8-f17aa9558944",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51dd1c8e-8753-4f93-ae4f-a39f9aec293f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bec6bfc-9dd9-4917-99fb-1903789a0046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08f66433-9ad3-4666-8267-6328717a813b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710ee446-9c2e-4cb0-871a-c737f85fb58c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4663602-59dd-44b4-8151-cf4e42ea9fed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cba043b-8f03-4204-b42e-1f9da78ef724",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b54fa5a-388d-4bbe-afc9-07dea25c8f8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4bd75a5-32a9-4d32-95a2-fca7fc3e2289",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a016a1b6-37e1-4147-b66e-05885198edcd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "686fa76c-83f4-44fd-a499-c240f876fd9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3986bc35-8f0b-4486-b04b-d03f6ebc13fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94da5f8d-d879-4977-9178-91b9c3e9d051",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8db89415-6f8a-460f-80ce-067796ff0b46"
                }
              }
            ]
          },
          {
            "id": "91754e74-2dca-4248-85b9-0d01feef6d90",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a85e53c-0e59-4e87-864d-b0c63d963e6b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "63518b1e-333e-4b07-9dd4-e732c9ee7fc0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348e3634-13dd-46af-8437-0c6c2cc0d0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a4c61d2-d60c-46e6-8645-989820861170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aed64c2-e51b-4fe1-b954-08d70b37262c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acb4e88-b696-4919-9ba4-f034311b5729"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "556894d7-c2d5-498b-a461-7ebfa3eaf3a9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdaeac79-73c2-480e-91ee-7e83d8e0ca81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aa3c253-8330-4251-97bd-fe37cae7ee0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c182f0ca-f301-4282-8bc5-943f4fd2ede2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a9367b2-7f47-48d8-9b11-c76df213aff7"
                    }
                  }
                ]
              },
              {
                "id": "02cadcbc-7e64-479e-b385-526caf153ed8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b66dd03-9a0b-4562-8582-f11cb8e3b567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "146a0fc9-8764-4207-8760-fd875a96c00a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d75074c4-bbc6-4fa7-9191-0f4469f721c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a38b4771-8579-4591-b197-2e27fb9b5a49"
                    }
                  }
                ]
              },
              {
                "id": "410aa7ac-f23a-4e7f-90ea-885bc9b7b657",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5536328c-7602-471e-af89-18f5fefc3df3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "589955ef-fa85-46a2-99d5-756a57555d4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b643d379-f01f-4489-a21e-6c8eb2f6ec66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5e9d811-8f98-42c4-902a-78294871b683"
                    }
                  }
                ]
              },
              {
                "id": "c8a4a3aa-38a9-4395-ae0d-d95a1d27a2b0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "899fed6d-35b6-4ab3-b15d-398746e7dd36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fd13a3d-76bd-455f-8034-6447ecd9fe31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "321a4b2c-f618-4e99-aef1-06cc0f07bbff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b230f365-d8d7-48b6-93a4-7f7bb979d942"
                    }
                  }
                ]
              },
              {
                "id": "a8b35427-a820-4df8-9a1d-62fa5521b245",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06df9758-10ae-4e9c-80fb-0644eec148a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2221c0c5-2d46-4a09-aaf6-ce5dacefd7fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70aedff6-4b65-4e66-9812-23538e674e4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca189914-0443-4fbd-8fad-15b89b88018a"
                    }
                  }
                ]
              },
              {
                "id": "8f33742a-2034-424b-ad1d-e028d0517c45",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33707acc-a138-480f-b8b1-8f5261dfe59a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fae61ec0-246f-4630-b292-5314ccc2a8b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62e665f3-33c3-4fce-9b76-995971fd7a8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f1d8efd-5d81-4d50-8a2a-d47b9ed23fb2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8676e1bd-4617-4fc0-b9d8-c68052461823",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b52d3403-0287-424d-aa11-8961249f2579"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89d1f8cf-cb8a-499a-b0ea-79702475b486",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "678bb8c3-476f-4427-bd38-4ab61659b70f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f32423e9-cf51-4c6e-ae78-8c5d5160daa3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "50aecad8-3da4-432a-a1bb-ea4d76617293"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ca12d91-158f-4384-8054-35b76a3b26b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d90d6650-6fa4-4149-8d89-aa5b3451e7db"
            }
          }
        ]
      },
      {
        "id": "19693994-5ea7-4628-8ba1-7249093dfa7d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "78ba1367-8221-4f45-a406-8cad1c7e1e26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cb4c657-c004-431b-b89f-2603ad408080",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7de1504-9b4d-4954-a11f-c700a33fff3c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40827f9-d4a8-4f05-bbdf-0bddd0b5437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a577fb2-f915-447c-a0fe-678d48a89b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb96aa2-a3f8-407f-b58b-a8b25bcad968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "950a3967-bc0c-4cc3-8025-182a6b989c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c1dc0d-bc8e-4f20-8f47-cb7a8ecbec8c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da373f1-f9eb-4f2c-9031-441bd70d9870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54278488-218b-45a0-a0f8-f9627b98d077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040ed567-9c1b-4bb1-b5b9-987d01f2ed8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff197ec-263e-4ced-988b-e66794c242bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35982b6-45ae-4c94-9ad6-67e4c140a814",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f42cbad-8065-4bd3-98e2-700b6499a6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f52ca6-adc2-447d-87b8-3f14180c1fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b110948a-91db-4e70-8074-57f41a0b31da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "950431f4-8b43-4375-9c91-73ac85910ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724fb9ea-cd38-4787-a976-ad50c4d18efc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc832973-f47f-405c-b044-3718b31ec591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286cb2bd-5bf6-4a88-94dd-ce93f11b7098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01da9fd8-70cd-4400-8314-8e3a27be7c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0641b5e1-963c-4087-a699-09b2e15dbcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b87c63-dc07-488c-92c8-808284942f63",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ee75c7-bfa8-4178-b230-47eda978f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5c25b2-a273-4a18-bbcf-7d304e183316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f95512-1a7e-4993-a404-9eeb3ea50678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29bc22a5-a46e-4bfd-ae2f-8abb2c82e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041daf41-7d8e-4dde-916e-ef877d8cbc1d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1bb88a-2575-460a-90ae-712207948977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce600dcd-4562-4585-8fb7-f35d3ccd51a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32535f05-5935-4fed-9e15-b74795aafa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e20cac-39ad-4860-ac98-9a0a1361985d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcef0b10-1a27-401f-ba0d-77a8aa48077c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441bb140-bddd-4d02-9616-408d51f767eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e71e63f-e0d6-4f61-b2fa-27545a862b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3723b5b8-171c-47e2-9bb4-169acc7c8927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7b1ab8-154f-4a1c-a9ee-9212c6bcaf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8b2264-d7bc-4295-b634-cbfe9cc29242",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12321d3e-2093-485f-99bd-7c3746ad4361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1031a77b-411c-43df-9bee-b681a653ecb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6949653c-3c98-40fb-a326-4ee0f0dc5dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b63e9da-2f81-4d26-baf8-e4ee4566bb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa8bd44-d041-40a7-81cd-c13d15da80d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3a29e8-5efc-4ba8-a80d-bec268fdfdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e31a18c-71e6-4021-ac82-e7304301b0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6781fd99-356f-46cc-9ca5-b94be80ab47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45638903-1a2e-43aa-a9cd-3e92ef6c5d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde28be0-7a93-4b96-b5d4-20bdf3857d45",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a72e7d3-fc06-473e-af31-73c23779cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e48717b-da4a-46f7-a9b5-a2c7ce153865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f557ad-2d02-40cc-bfa3-7f1564d031d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92beaf6f-d115-4e8c-b683-e85800149a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea25ec4f-3083-4ad3-ba5d-7c489fcbb920",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e811a127-9ba3-4b52-b445-b0c5d1ab21d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8c3f60-db40-4ec5-a2fe-e218d1ff39e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba07c8-54de-42e5-a2e6-f6059ca141c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "df606642-dbc5-47f7-b21d-c933d18441df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c80f9a-bde0-4fdb-99e9-dd17a934cca0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150611c-99f8-475c-a56a-3a36930640ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1da55b-e341-46fe-b89d-060bc7e18f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d3cee5-940d-4dcc-8b56-822c7d414a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64537b5a-2394-42ff-9f8b-1f7f2f7a48d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8744d-276c-4e01-81cc-c1bf35a50958",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d3862a-4545-4850-b62b-a343d6e4d283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20480e9-7e8f-4094-88f1-2b67d93c80fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2051490e-17e4-47a5-80c2-673635a0608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "219b2166-429b-4aa8-9928-18b5aa4bd181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b3612e-1356-49c9-b4a2-59ba5d79f058",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a67900-f88c-4d96-a6fc-e801bbdb22d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d34619b-8001-4cfa-ae2c-8f36fbf74260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc20d1a-437b-4ed4-987e-79b3d2ce4b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe91fe48-9c75-4958-9793-27e79bb40d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80474c14-b219-4755-83b6-a283b9a7b7bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a386955-360e-469d-a3e8-0f9016e1efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2ff6c4-67dd-47c8-84f3-a1ec8318f6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b894f-cb15-4a7e-80e4-47964f13a413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ab0efe-9184-4527-b50b-5f47624da090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61d4216-01c3-474b-96ad-b9883c0afef9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae2132b-4d96-4bff-bf83-3dfc802d6656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d47f47f-0593-4061-920c-84cd4a822c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed87469d-0e3a-497a-8cfa-218eebcb8612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b9aa9e-e442-47b4-a9c1-57218c4acb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111bdc4e-34eb-45d2-98ea-f4295d0676f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb86253-39b0-40b9-8674-203465ee6af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0927eaa3-d378-4e55-b762-5177b13bf6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6b4623-536f-473c-a96c-5332c978a8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af58abf6-ee72-45ca-862f-eb56fee7ab9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f6b316-2990-445b-ae69-7a905001df02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a9861c-58ec-4b4a-a1ed-9450bcff789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f943b7e-0b0b-453d-a9a9-acb07e9d8513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8070063d-59b7-46de-8480-6938940bacfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7885ba03-f15a-408e-9ea1-48ac90ce0e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8c12b-7976-4f91-ad9f-fafd1a0c57c7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8d94de-ce9a-4a96-9594-41dec11f0eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3a9805-bc78-4009-93d8-74aa46680edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75bc7d0-c917-4cfd-b6e3-777e8ab90522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04c30a9-2cb2-4a58-a4ff-6817ee04c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfbc34b-f3f8-4aba-8d64-3b977095e905",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0feb36-c891-4e0e-9580-8d7e7fd89720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbe9c82-7d8a-448b-a1c4-8c2b1eb424a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb861ed-e1b4-4bd9-9e61-5cae762cef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "676ca2e0-e898-4d35-b283-2a2983b72ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7f8b6e-02e0-46ed-a7d3-009ca9f17a9d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30876db-7150-4082-a26d-089d15491475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d51a151-16cd-4ec9-8903-c3bb5e35fbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97951c8b-8cb7-4c6b-aad0-8573f001bc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4bdafd-98c6-4824-88b9-efd262828514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91cac80-772b-400b-8acb-7554304c3e97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007a3264-6023-4c6b-97fe-876c808a4dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f11f779-17d0-486a-8ab7-8882560b6046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c5cd19-b55c-45d2-b5ac-1e208f40abff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13da8f31-bf7d-4ab3-acf5-743e27cb749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd9bf02-ce55-40fc-a76a-abc233538099",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301cc1c0-3de5-4da7-a111-0fd05666b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ad08f2-2493-4d04-a29d-157ef4e283ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d90bcd-c32b-4354-a0bc-fa0db0452999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7659e30-413b-4ff2-a261-f43729aca47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536464a6-67f2-4f7e-96ea-0970990e03c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba0ba1-bef2-412d-ba42-e380a7c179d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e705de1b-d9be-430a-9f09-f5f01cd46b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3736bbf5-54ff-4efc-b353-6568ddf39633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeb37b8-0201-401c-a1cc-1ae8cc8d7670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c9a727-20dc-4b6b-8a5f-d981bddc6762",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a54364a-b518-45f6-bd81-43d7afdfdb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c89935-6304-4577-99dc-f0b4b5bf82cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdc51e3-e21f-4749-9881-792289721a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca17725-d787-4c08-a93f-a5bfb612d468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e657aa-b038-44c9-94c9-7fa606fd3089",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187c79e4-9f50-46c5-a6ca-3ded0bebafed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b547e85-0ca1-4042-a2d7-95681c9e3a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ec4091-96e3-4a95-9e86-b4646b2cdc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5f23b0-0f45-4a86-a3a5-accada3bb49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a974ec-271d-4d22-a96c-ec98bcc161f1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7142d4-5d3c-45d1-8d94-c7100e20f4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80db2670-154e-4b9b-a8d0-622d3a945ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ce31ee-ce1c-45a2-9638-27547735156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5aaa1cd-efce-4986-acee-406280523c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8956934b-5f24-47d0-8757-fc5b61b7f8a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4caf68-ac4f-4ad2-9b0c-7c5f228b6b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f539a8-2bf5-43e2-a9bd-27972f249580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368d3ca8-bd4b-4bb3-9592-5b6655124c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5c6dea-0fb3-40fa-9899-0fe869957d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdde11e8-eded-499b-bf9b-4a7a95fd06bf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c320dda-d3c8-4be5-bf19-2ddba130a9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0388f992-00eb-4520-89ff-fc0bfe1c6148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d556a8af-c9f3-44f9-8c81-3ff2251337e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97420640-4336-4dc2-9664-8a6c04ab5ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c012f19-a3a4-4e6f-99ca-2f5c761416c2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac011ef7-90d0-4a8b-9534-fa95331b0fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e229e798-f2a4-436b-b44c-eb2ef961456e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4646a89f-b42a-4b39-9030-bc450b77b317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d829ec-59b8-4332-9456-e50d66707a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d252e44e-bb95-411f-8798-11d3353a6a01",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fa683c-9dbd-42ef-9736-b731eb08d18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f444aca4-8411-4335-8945-d681730ceb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba658e9-bc6f-41b0-b3e4-4135d49a7f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb1f0f8-b326-480e-9ea3-d41d5da29243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02e5332-131b-4406-ad53-7055e4fbcd48",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eab199-399e-49ad-9995-04ffc61f7843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d74cdb8-e5ec-45b0-a4df-3ac236a3a490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9aff1eb-8cca-4660-82f8-976541ad67d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf28213-ed5f-49a1-86a3-197a2a842a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348991a2-ecf2-4f7b-81e0-2dc5ae47d4db",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2445aef2-8281-4749-a199-027615b8f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db5f7f6-c483-4801-b5f3-1ce4cd02da0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e903dc-7cfa-4eee-89bb-ef8b9c546ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d252261c-9d85-4d52-8adf-6015eee11d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5b7817-678e-44f4-a81f-025d5a22bd44",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ee521b-2f61-4050-8ef1-3ba269ada3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda6b05c-abcc-48c6-b229-9a730aa80b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dedcdf-be7a-4463-aa60-60c1c0163eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3963717b-57a2-4757-89f9-99376415dadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434c30df-d4f1-4270-bd87-a6b4dd8e8593",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8bfea6-6d2a-4d81-a961-bdfa6efe4a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad7f9ae-425c-4925-a08d-e2d64a738fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114aa8c0-b558-4ea7-bbd0-b7bcf894a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b348b530-60da-4a18-af10-f65d0acd911d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903267e5-c83d-4c27-afd4-5535fe9c8773",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fc3877-987e-45d5-9ea2-9f3cd2d94990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fc2630-a808-493b-a3b0-de0d076e4b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d998929-c652-4d7e-b93b-d2038acee7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "264a3d0c-2494-4b34-8142-563f0f667660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b1537b-ac8e-4e8f-a62b-eb9886bfa493",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8e1568-90f2-4e4c-8ce1-d7fa27a1b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21caca7e-5c0b-4deb-9fbc-363ae20f9fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a8ad12-e9d0-499d-8bed-4e29fcef0668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cfcf86-9928-4a17-ad7e-6f8b301761f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97e49fbd-14e9-4dc7-bb57-9577e46ec6f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79d36c18-aaee-4bc7-85ff-6ac2a1341409",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca85e45-4f0b-4611-83ba-28b93eb9a55b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fc199d-8634-42ad-9bb4-6b959e4e4687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff72449-4936-49aa-9c94-efc536a2cbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24568684-c5f9-45bd-867d-61ddbb6474a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bf2dacc-2949-4cf9-bd24-48c44633f2d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5044da8-2f70-451e-8ec8-8b50dd704381"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2353c74-7ac0-454c-82fb-750b02edb7db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38f0d94d-8375-4fbb-b6ee-747a15744675"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "690e9d07-0b6d-47bf-8e37-40b9a1f01cce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc3a1a7f-46a0-4128-8abc-6e0b2431abb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eaac033-26db-447f-ac7e-75ea77000b22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dcd6d17-718e-4cb6-8750-1c3bf2be6e9a"
            }
          }
        ]
      },
      {
        "id": "fa7c2504-1b95-4f83-a3e4-97a732c16dda",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a10e771a-4806-40b5-8f34-b506a9325da6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0b79a53-e578-4635-9ff3-c66f394af038",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2534ade8-ae42-4394-be53-a452bb9512ca",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272dd5b1-56a0-4181-8cc2-e399e81ebe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db13d73f-8bd4-4ab1-8f5a-1a71e69715db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee27c97-0cea-4dc4-8b34-de9dbb62f0cf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee0ccb9-03b3-4de6-9f6a-541d004867ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc996ee0-6589-4208-9a85-d2df8b728d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c90ebfb-cf99-44a2-bd3b-c3e6969a2f47",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f770a110-4c09-4333-90dc-e760376868f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fad3e3-978a-41d7-b196-f33d2d3f9f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6617936-9805-4bbc-9765-8aa24dcbad2b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b873d019-4647-4993-a4fb-d871095aba45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05ff300-c815-41bc-9a8d-a642e371e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efd544f-bd0f-427a-aecb-6a30080a8755",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d9386d-e014-4c5d-9878-2fdebc09aa26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1003dd85-9a37-47b3-b196-183de8dff0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c13f7b-cdbb-4045-aad3-9ae519559844",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6486bc7-0779-441b-be3b-3931a12791dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f0eda9-0965-40e3-bc54-74c46aeaab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b89afec-990c-40db-8bda-bf0174d8fcda",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf9f887-0251-49f5-8930-b242b15855f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b27db3-497d-44e7-a4ba-0080dda52d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80445677-bc4d-4d53-8fb3-25639980711f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0496e0-d170-4b78-ade5-829437983a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925f69fa-676e-4f64-9ddd-639c6d653bae",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334882a9-eebd-47b6-84c9-d9f23a5a8792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50628cc-3b66-4fe3-af33-54001243fa01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475fb3d3-c1af-4a35-aeeb-77f79ad9ce7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf19a1c9-f54f-4636-bb4a-d4fe5b4a96ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd57b63-c984-4dfa-932d-24fb180dc281",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a687a2-638e-4ac0-ab8f-03b40342927f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d066e4c-90d9-4b5f-8384-e99e722d3be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c50bd-c1e4-4cc3-8118-d58f5186a65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fa6589-1c14-462e-a578-a1ea63253c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9beb6957-f2ab-4059-a8cd-b2d9295f9a09",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e319d27c-5697-4a5e-ac65-dc5101ce8274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06bfeb5e-4d0c-46f8-9a85-e086e302a3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bca80f-e502-414a-a9a9-5e4fc80740cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d740356f-f668-4ae1-b536-8cd95ce7ea40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849fb811-da30-4052-82db-af1aeb2ebcbc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36f781d-61ef-44ef-ab4a-2afdfaf94553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32511028-9d5d-449e-907f-631d6d21096b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e62aed-800e-44a7-beab-e68f2d44b917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bdc37e-b3ad-4b3d-ae3f-dc98e19e60bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff0c487-d367-49e7-b5ed-f487da1d1af5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f196c6-4087-4852-a969-085abab6dfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e01353-5cad-47b8-a901-8bcd2137634f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf090f5-9d4c-40b5-97e1-92a471ca8500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a170d14e-c7f6-4bfb-838e-2623c4581322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc0fbba-3002-4401-bf7d-8ea03af47c54",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593d893e-8896-4f64-8661-c1eff4bbff3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c197a722-ca6f-4175-98d3-ce53a7e7e67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b33e98-31fe-478b-80b0-f46e4f5ad4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ae37c5-038e-464e-8987-3bc3f9dde9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8d5411-21a8-4c94-b9a9-aea0c9414ca0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e93d5b-8c35-4f7f-bc45-3b41bb5663ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb7c913-6f9b-4432-a79f-0c61a9db0620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4516abf-21fd-4e79-981f-0d812d74bb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3e7d97-e52b-48f2-a7f5-ba8eb765dc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed64015-564c-448b-9f79-cb02825a1ca5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9927cca-afd9-45de-b29d-8c7708fc8d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7810c746-a705-4ca7-b85f-e7fe2f92f207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede48e33-d419-42a3-abc8-5fd1deec3c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9193ee0f-1633-4e1e-bd8b-c18111678b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125bb67b-d43f-4a54-8a5b-c33011faca35",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e17826-72ee-452f-8272-d8c2570a2344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd937192-5345-427b-aad2-37a2c2e4d7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bbfed0-cae9-43a5-9fb0-f5583b6ce140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e5bc10-5e86-445b-a5b0-45ebe40c0327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0c69e0-917b-4c6c-a739-6a4f3776e341",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8903c9-0fc5-4d03-a28a-9ea3d442b9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fad0647-52df-419f-9529-8ee204849f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a7cf71-3d5e-4da8-ad62-0d01e3c12c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9f9e97-920a-4ba4-9b62-13f03a6975f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54564a42-3ed2-40a5-ae6a-83040e32b48b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be3ce4e-caac-44c1-89ab-f88999674295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8192d4a9-141e-4eb4-b864-dacc360c27a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca1e8c3-4147-49eb-b103-8939c5e044c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c77861-56cf-4cd8-8087-448f8f7e4321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34303f6f-3661-4d5d-aadd-ce0307136d25",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25af1850-c494-4b86-96cc-93b33a82aeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157e896b-5125-4ee1-8b97-5c497d0e5e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f926c092-ee1e-431b-abdd-825d59124765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cc9494-248d-4675-8ae0-4f31c5f61ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ed0753-9712-4410-bd2c-c856fcd9d0a0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1b9f2b-6b8c-4627-b2a7-8ad783749a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67012ce-ae61-4ac7-99d3-bc6d8129dd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f671bce-56a5-4d8a-a881-5065d5d9fde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e95e7db-47cc-4a2a-9aca-ec97d7a47f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facb673c-b09a-4498-8fe3-8477dae9ed63",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a01e023-4bf3-48cb-b6c6-63993b68bb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388d2c08-4bdb-4a3a-a61c-5fd37cfa5991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea3f063-b80e-49e0-b40c-21e36dade552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab5f41c-ed00-4727-9b65-60fe6aa8a7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd42dde-0310-45ff-aea1-90fc53cb322b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593861ee-7b20-4a01-bef8-c52745e8c173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5d947d-23e7-4b5c-8373-95175c1e8731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921a0489-0a87-41a4-bef0-26eff8340459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d63f2cc-0b58-4005-94d2-12ab5f372312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856aa653-416c-47e7-921c-44af3fc3b340",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2940135-7b20-4e85-891d-4f2c62134aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0ee3d4-70dc-492a-8f2b-36f0e75ab888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc512f0-b8cb-4b8b-a471-db2d64f7ffb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb3d043-493a-403f-af05-c08793bd5e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756e6353-7875-4429-8515-3527ee4565c4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1fb635-fd4f-458e-85c0-74387e8e813a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95e9f97-fb05-476f-8440-8b57bc3f2905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d7e770-18f2-48d5-a38d-0611aff78e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd2d761-3a73-4fd5-a411-a15d4abdea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fda43f9-1340-49f8-a05b-834a13a7d697",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b49fe14-9884-4368-a1c3-f5e686ccb0f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a8e753-7f32-406f-a85b-a446329edde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4030e0-fdd1-4d88-b699-9ddc5e69439d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dad9d31-73d8-4af1-b589-9fbcf224f131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe7d379-ce94-4d7d-873c-91b45e51988d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95bbf61-90fe-4494-8c8d-3a59a1a15c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c483e7c8-5eba-43cf-a3b8-fa49d345179b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042957c9-eb7c-4faf-bf83-4b910a736fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724835cf-a7e3-4942-b7ae-31fc0c392338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e611b17-6faa-4750-97bb-20cc049127e2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d910a4b8-5d83-4011-abb7-22e5e265bf13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e2ef64-498e-4227-8295-9c2097a3f9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7227cf60-9a5c-44de-aa1b-c6d2e82f29fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c74d8d-b0c1-412e-82c3-d2eac65cafa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51920b71-0f26-4cf3-a4f9-f4f7a49ace9d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d3bbc-8539-4298-bd7d-b6536f1245b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9696e9eb-6846-4039-99bb-2aedde04e9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69df3af-31ed-4421-8880-bb3c498b5f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc1dfad-362b-465b-8e4c-079403652e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9802b6-f4eb-4cef-a634-15e21289867e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1b6712-b0d1-418c-b3f6-af1d372fa89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4526975c-1813-4a03-b9d2-f98cf92ac581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8acfe77-eb5a-4188-808c-085789fbabbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b735b56d-a64d-4ca6-a8fa-bfa87898fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03722c46-d4a1-4583-a1b2-7c3088a9ee0c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114fbcc4-6241-4236-8b82-817ebe2e4c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9199c03b-923f-4b03-9219-0015e058c28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dbb10a-4275-4024-805e-cc8e9e7dcbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e4bfb8-2bd8-47ad-90a7-fdeb1f67651e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6fbdd3-9baa-4705-b9f7-4d4f5b4fc015",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eacd25f-0a2c-4eda-be66-c992c4c809c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e9e317-b933-438d-ae57-e6ec1eddd654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f0227b-f9b1-4f61-ace0-bbc7011308ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd6604b-aa12-4bd4-97a2-644a3393fecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a077ec00-2bd4-41ad-8c3b-db964a171b50",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99f28c7-e46f-4d2c-87a4-6500cc1903fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae77228-25cc-487c-860b-aa1ab001a619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97cbaa4-361e-4a84-90f3-791f4276c9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41fa105-d066-4963-bcf5-ca8d48b2b773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c860366-a936-416d-8f2e-d6b83c938900",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5bcdb4-124e-4e01-bb94-225428e8cca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c39dec1a-19c8-445d-867f-ec6fd153582c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33898442-7891-4c42-9946-d7dc1cbfdd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab8ce6c-492e-4227-bea2-dedc2787c442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4cf308-d7d6-4be8-b192-10e347918dda",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca7d65e-8cbe-46df-b713-479dc0f8ed36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab3726e-21a5-420a-a7b9-d465dce46997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc046d3-4165-495a-9055-449996caba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7de964-a281-4d65-a5be-fca1e421f8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded018db-825f-4bd7-967e-6de7ab855155",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f093aeec-bfd3-4ac9-a47d-2c7f08c85848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bef83f-7600-471b-a866-ccaa55bcecef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a72bc0-0195-420d-bce7-b1318e17fe16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b34b0b2-53a7-41c3-95d7-f1fe868eef74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76be879f-d15d-442f-a080-bb9b3d3ba9fa",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c1aac1-ac25-4861-bbc0-81a724e86b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaa0ddf-4a1f-4411-828e-1032a531a6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5de983-e836-409b-bc92-08fc8a4e8fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da36f197-6c3e-418d-87f9-3732d9b33c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b851e8e4-70d8-4542-b435-7e11f475c000",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6253d6-2640-40f4-bf4c-174c26b8b322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56ce969-8faf-47f3-b276-dbe7a678b1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6098c39-7a22-4ab7-bdf8-a1bedc488a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059b2a7c-e1b0-48a1-a761-3cc30524d460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5072475c-5040-4ad5-83cf-b98e08bc7d5a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae3b2a5-9ebb-4510-8ac6-3c55837d27cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8d0d60-6551-4602-91c1-4e90be1253af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b240b-95ad-42ab-8ba9-754b0767cacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9a578d-6bd4-4591-8982-d39abe60aafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa02470-af1d-4b1e-9e63-6f40afcd91f4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4433b07f-50e7-4791-9e59-6b6cc5317f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53485dd1-64fb-474e-ae72-65b113992197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4613212b-08ea-42c6-a974-bd8077d6b376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a485a29d-fdf7-4055-97f8-83ca7dd4a41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d30dcde-b03d-4713-8f32-b6ba7de33266",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5af903-0126-4bc5-b99e-69fd080112d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a041e80-c3ee-4820-9bd8-7405cb385134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e76baf-20ed-4f93-8224-8950a6cbb942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9d58d5-7e0f-4787-9845-7707b48d9ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b545d5a-8c8f-430a-b5ec-7174b3b90e47",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d0b40d-d307-4298-8260-1d23f13c9267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f64768-937f-4d91-bb67-5a50ada332bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875e7377-4078-4e52-9de7-8138d5032bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853de65a-5577-4223-8f88-c4d8bcb2a5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077325fe-9709-4de1-97a5-779a5ca45428",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d998a49-20f8-4f11-b661-1653bdef4b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291c1b13-b927-4bc4-b3aa-481d4aeb4576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03938101-68ce-491d-aafc-492b9e856ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5688e4c8-acc9-4324-87e3-95a97578225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891ccaf7-3c62-48ec-bdc4-0fe64513ba56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398c9480-a1b9-49a2-9820-f7825ab8795f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997024e6-2237-43b6-90a9-0cfb3ca847d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66d3168-bbdf-4ac1-ba1a-8c2c8cf057e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47eecb5-2110-4402-b8d9-1f4f2045492a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea63cc0a-798d-4c7e-a701-2339c320600d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80861fde-3d32-490e-8a4d-768f6aa7d705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63427874-8940-4aa9-8c89-8ea6f58b9219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba92371-ce38-4c6f-8896-428146af758d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb5c29a-5d17-4a13-8f5a-e16d67fcb753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c242926-ce16-4069-ba38-3e35c3ddc201",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5c8658-ab1f-4bed-8d7f-aef7cc1d7ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07922400-f5c7-4108-b8a0-03e40aa89e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12e06c6-9733-4c83-8e97-7698bb5a20ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ff4d5d-b66c-457f-8ee3-d3870f1f91a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717dcc88-9697-4601-8be9-3f5a829ae2a7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6d3569-2a0d-451d-8940-6b5022a9830d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdbf508-6e3e-4f65-9175-28d6c91869db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41916f49-18c5-44bc-857c-9bfe5c8860aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d813b45-2856-48a8-9dab-ebd779cb5a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4909d2c9-8d3d-43e0-af14-6bbca7ff79df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe5dd0f-4aa5-4d49-bbb3-ecc3136e9c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49cbbdc-dcae-45ad-94ac-38842a74e66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ed9eb4-4ae9-48af-a2f8-4da4a518826f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b501b35a-7396-4576-b2ed-5bcf9715410d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dbf85c-4dc7-4276-a1a4-e06f0c514799",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8879b91f-d75d-42f8-9afb-eb0bca3b20a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bc6621-01c8-4b38-b90a-8571d13687f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692f6af5-5b27-4c23-ac13-c9eb135c83ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a7a1bd-1407-42fd-a8cb-030b8416185e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02edfc2e-aa99-42eb-bf49-f4ef0603c8ec",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c46501-ad5f-458b-a228-2ea83ed9ae17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bc2446-b327-462f-b2bb-b17fb5c8253f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee7d740-6f56-4119-bb04-57adc12a1a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f7894f-8aab-41d0-b3ca-1dd974a01fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1aa1e1-fbfc-4b20-8208-d6c549ef6e78",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49929a15-e1ec-4dcb-9115-dfcc4b627aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d3f05f-a77d-48a8-908e-041a9a23e401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46addba-2357-4080-a482-b02d7d92437c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6371d698-d4ee-4815-8d69-848bb171e78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9318bbc3-8bf8-4c54-8441-45d131b65850",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fded5e8-cf81-4a52-b151-07e1ab317348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a572850b-08f7-49a0-bc04-85c36e218ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe2be4c-c39f-47b7-a4d2-f786fe40c039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8ed12c-f120-4968-b4c8-8b56637ba6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219793e7-8627-4c08-a4ca-27745e434c7b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea84291-ac55-4888-bc2a-d91752cc949b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db932157-81b2-4435-9ad2-652f47930f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3344826e-f4fe-42de-80b2-ff9e71e79008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7bbd99-bbf8-463c-900d-cd474af4ff5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ef37b-1a28-4162-abfc-12f42f9d5ea4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c867b04-45a2-4c40-b268-0e84a91d46a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb5bbf5-2822-443b-8f0c-b71dc0155fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea85a7-ce39-4497-a98b-35967f1fc624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10708df5-f06a-40f0-8929-7efbe5456f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeca06fa-28ac-4501-af7f-a3a5c98f8a2a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3952f2c6-b380-467f-9fab-439e292e2c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe50fab-743c-45c2-9e46-f14c02d0d4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c69291-234c-4838-9575-ba4f4d92949f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3db5576-cc97-4cfc-8e8d-718935938fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7cfdf0-2630-4768-9939-45938212513d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68430326-f43b-464f-b011-3d98e89e5966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e110c1c1-0511-421f-9c3c-2b4239ec3a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec09d8f-02b9-4c99-a6b2-98549af9b4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f65ca2-a048-4a7e-9689-12be06e4a963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fef2437-55de-469d-883d-c8653dadc7d6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa88176-5fe2-42eb-b6f8-a73c1060e81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8598bc99-b3ab-42cd-819e-5560b09af575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a858e4f-0880-4fc5-9ef7-a65c6d39a6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536720f3-f886-43f1-bfb3-d7aa821fa345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52822bd0-39a7-4dc1-9421-bcc73e14aa9f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d8b60e-e8d6-4579-81b5-17fb55c8c1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d748df0a-156f-42df-b61d-657bf45a9baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bfd797-938b-4857-bdbe-c43576a5df11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fac542-377c-41a9-933e-49793b61a9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c260d6-af6f-4245-9199-123b3409f710",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94694d08-b55c-4da5-b002-0b6856110011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8911b042-fc34-47e3-8c80-4bd46697486b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e339fa6-9f22-47b0-8291-5759101e2e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db724605-641c-4517-80c3-8950880f8bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87852b6a-1491-45e5-8dcf-14fed0c862d3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55af0c85-6566-43b1-8c4b-c3fb948f235e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98d6758-6a3f-4979-bb3c-5d670ea06d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f55f0-ed09-46b0-a2e5-8c019b702c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a53484b-9086-4f35-a991-0aafbaf7f681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74185f9f-b932-4238-8fd0-86e2606f21e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a9342-65a6-4646-bd1b-85be3ff33d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9747f99-461a-449d-b629-6b9de732dca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb7bf14-8ec2-490b-93d9-c421c6fbfadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f847d77-802a-4cbe-962a-98589d62a550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca48a1d1-3a5a-40c0-b639-e304556286a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eea6e01-cbc0-4dbc-b20f-aff9fd516aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1abc9c0-3de7-4230-8848-32a02f873548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b143226-1c5d-40a1-8256-27c09923d619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ce7573-2eeb-4764-8071-204785318f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d316b1b0-df0f-43bd-b855-6702a35a62b7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9c1a53-28ba-480d-af67-bf39fd92b5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc0cb95-c240-48f5-8086-8197a416fcab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765ee59c-d177-47b6-9176-cc54cdcdc42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c351cda5-044a-4c32-bece-b53fb27cb989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df393b2-b486-4160-bf48-cd3f42e7ddd8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5efa860-96b1-4062-a3f6-12a54bb406ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c8d461-6ae7-41d4-b34f-7a029babff93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c886099-b15c-4a22-a299-801140c05171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cae9331-4a96-4024-b46e-40f94f36dad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12f1ca0-bc11-43d8-9913-33e1074c8ce4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5901c61-cad7-43b2-a2e7-1113a916f22e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781fa074-46fe-400d-84d0-1bdb82d4832b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5247a8d-ba51-433b-8e5c-cfc3a7fc4095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb05e4b-d7c7-41d7-9725-207bd07674dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbee9c14-8686-4920-bb90-890d098eea97",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a3ee09-50a4-4dfb-8d3d-8501a519131c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f883d593-897b-41ef-aab5-8b4bd3719833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9636a26e-76a1-460c-aaa8-507da76b10e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d3d96d-a057-4045-b3b5-73b96af42879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f074afb7-d5e4-4fc0-81a8-394b8298e6d1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21316376-ea85-40e1-890f-85223b480507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51e40db-4d4d-4c40-a2d9-b2eff627749e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c02579-7918-4af7-baa1-34aa38488f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326475ea-c9b4-4262-b964-2bf95500b221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d0a41c-1fd8-4a69-b4ab-5c3944dd6baf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e083d37c-dc5d-4185-81bd-4c7cf8ca982b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417e1a38-353d-4d42-9113-4ff0da3f409d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0b69c-10d6-49f4-aaea-b24184bda1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6e9bee-cdc6-4135-afd6-4fce0749058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2d7e43-e0ec-4bc7-9b9a-66ac14d7e795",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8cecf-4b13-4217-bd8a-f00123427a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a309a8a1-f29f-49ef-8b15-52cd25aa40e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f69d108-ba82-432d-9de6-56db92468a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba3fc42-1d92-4fc1-9949-e3b4aa7056c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a239059c-aaab-412f-8a83-4d0798cb5609",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e807dcd-81a0-4930-b65c-86ba7d7cc0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce16deb-7058-4761-a52a-a06acb5481e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfb0368-cf9a-4517-8176-d745d3a6bec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dea6188-4654-4e37-8b39-6fbe62f22aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d77267-400d-46c0-87a4-269ea220890a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826c2caa-44e1-4054-a313-4c93f1b35b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c47c49f-b2f5-46fd-92ba-91d4df506fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eb4191-8e5a-4d4c-acf3-7a2fd1358e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c8146b-02f8-45f1-9854-01afe4c81de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85819bfc-c899-4720-b46a-94155ff8c6e7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494e5807-057d-4700-8ce1-1d35a292e828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1605a742-5412-4ed1-b9bd-cd5ee272dc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fae39e2-7633-490b-8c87-86ec69f5d8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1a7c19-367d-4196-85ff-1fc6a0958a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e37bfbc-1d20-4298-97d5-955017c844b2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a96dd6-2845-498a-b2f5-f82e7e9f8bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad4364b-2ffa-4b8a-9c2c-17956d3de7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcccdd6-d289-41da-bb87-1a0eab6b45eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1a23a7-c271-4293-a3fb-a04ae8010a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb5636-8346-4234-9951-b785c950c53f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d187dbf-9326-4bd8-8d77-66f14bd1a660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484b7577-0667-4e75-b082-9081f16c8b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd2d61c-189e-4607-a692-50d8ddf8915a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96ef9f4-5d82-49b2-be70-c8a5acfcfde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253fb191-3cb3-4658-a370-04585c921298",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bbf6e9-3bd8-440d-9713-5a1257d073be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e70edb5-cf79-4b86-8c35-46cf68288dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50340703-c1de-4b5f-b7d9-40edddc8cb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5597bf27-0ced-4248-b5ac-aa6d568e0baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab88384-9045-4f9e-b278-4b69801a709d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f417487-fdcd-4803-953c-219c64813d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573c44d9-806b-45a0-8f00-ddceb70c5b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272dfb17-dd6c-47a3-b86c-41e1e5413097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd9c735-e3a5-420f-93de-803df7bf7821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f351bb48-925a-4d33-bfc4-7521627f8d84",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0d7dd6-4e4e-4ebe-83d5-af17d088f08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a0ded5-cbd8-4e83-a424-042669868a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaf8b1a-83f0-49f6-88c4-a4980479fca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5796b4bc-06d7-4773-bef7-28247f99f925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31e1063-a0e8-4fb5-8f42-ba4cf33a9084",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4825825a-6f0b-49e1-8ac7-4a1d9c14d83d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a90dbd3-28eb-4483-93aa-661043ab878d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e103b36f-d797-473b-90bc-5f222fbc4273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb21db33-f8e1-440b-b5af-87f39ec74071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4337805e-6dee-4ea2-a356-740f110cfb9b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55842f57-3357-40a3-b343-0d0c2ff92e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3696116-163e-4cd3-9c24-c94abcdbd737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce0949-fbfa-48be-8e48-e3e1db3de6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf05425-6c05-44a4-9370-85fd0a5bebd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91d0184-ab1e-4bef-ba9b-dc194ee3788a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2508de5-b57e-472a-8564-8b52583326fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7aff9cf-b946-4e0e-8cde-6ae94d959d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cfcbf4-d64a-4a4d-a3d1-a14b1978f000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb3a12b-d143-4186-949b-bcec24e7ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f477db-f9e7-4018-b5ba-6fc673bf2fbf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d97ef5-be66-4415-935e-eec7c24d8fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5fd32ae-3527-48be-b898-618546d52fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d991b28-e5d9-480c-b723-faacd0599060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ee5bc7-3f67-4c21-960d-f47881864d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63348358-59fe-4c2a-9b7a-d9d113eabad0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59ce7a8-6398-499b-af8e-6b9a414c3188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045dc823-10c1-4342-9dd5-99b1725a9e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9587138e-b5e9-4800-ac35-9cd547debc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b73800-b7e5-4b15-a31f-a640a7a997a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee6195b-3411-40c8-b5ad-fb77f663f27f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1e1716-03d1-4db7-8565-5a9026c95249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696a4db5-1c0e-48ba-8f15-a3f648da3d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c437cd-e4ef-40c2-93b1-7a8d93d5e7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b126ef-6022-4931-b987-eceaff8391ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a35d99-04ae-4945-b99d-3879745932c3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8545f9b2-fc6b-494f-bbed-a7b62e771c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0654d304-fd7f-4912-9456-a4d38fc818ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b765864-6f5f-4a1b-af3d-af32be2fa431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b52103-334b-4e61-b55c-41b7de2c7303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7d8c7e-ee7e-4f3e-b38d-955791e9633c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f840d3-cfee-4e0c-91f2-23b11f448ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ba9e3c-f1d4-471f-8831-7c0a3a548459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5552affb-4699-403f-a381-f70c0174f516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11029e6-2f95-43eb-a24c-8be2a98a7421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82eb9894-5121-4ddd-a04d-b18078c9c34c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edeb273-f75f-45f2-bb17-d264c09204a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec1a9b0-269b-41c2-88d8-1501ac7d4254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544bbfdc-0fa6-4d77-81a5-af89e9738a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9bd31a-1c39-445b-b0ad-cdf55454c861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49dda39-72d4-4d5b-ba4d-a9aad10ff971",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5942c4a-608f-4a35-9c72-4b2639eb22a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2630b3-ef7b-4f85-b1e6-7d01e4e60015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699c4db5-e498-47ce-b1ab-43240a782ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab96ccc-8fd8-4932-9d2e-24197921a379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7479490c-9bf2-4701-a3dc-171d9c3677cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a9ccb7-2710-4c3a-b2af-5330daa09bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2f7e28-47b6-4f3e-8ca4-c4da7bf99351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ace25f5-5394-414a-bde0-5469c355556f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c96702f-2372-4622-9cd2-7482239c328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169462b3-c2e4-4d62-ad57-650ae89dae6f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8029acd-9ead-41fe-88d8-cf7e44a11e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a000daf7-9894-4c08-b5a9-21c80cfb0b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0629711c-019e-4209-92ca-1a37f85a0c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319fc4c5-0c34-4c22-8386-ebb93c6c6531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184782e0-747b-478c-adbb-fb601fbebdfb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cad4ced-28a6-4b06-97b1-e119fdec10e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa961fbf-14f9-4ccb-a643-22d2e1779995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca4935-56bd-42ad-a130-d7895d571bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c19b00-d9b7-425a-8bd4-9b1481fa2db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b33af-d87d-470b-90ce-b12e444fc740",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8d6253-1d80-4031-9d80-ecd73f464829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c4d1a9-cd17-4a92-a588-d6811a26943e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c0a13e-a42a-47d5-b824-82a8a2039dcc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576173a5-9f13-4559-a577-3a20f22b767b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db195f6-9d0d-495e-9219-ce63c93b1510",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879d4752-fbb2-4945-a568-48e3a1c53748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5eddbf9-a21c-4d14-87aa-0dc638495e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d7ee5d-f583-4354-b85a-5084547de7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a68dc8-5cdb-4754-bd0b-a6e76fc79242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7eed15-7313-4be4-8f18-964dbae8640d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe8d2d-fd85-4161-9250-7f83ed0811c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd52486-8b9d-4ffb-93c1-7057a4fe40c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46e92e3-6717-4361-a210-1f7e448a099e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1e4567-115e-4d81-91b0-d112510322a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8787cf7-13ba-4c94-a980-06b977b1af0a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1427a80-e161-4902-9eb3-174062fcc49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02fd6815-156e-426c-b1a0-9113a1503cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bf6567-4ac1-487b-869d-63c406e3498c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0157a043-1807-4b8b-8047-a61f3093fc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b717f718-364f-476d-8e7b-0d59e40c67cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8e9167-8cb3-41f0-ab38-5b74cd4c266b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c7e203-99b7-4d7d-99fa-f0ccd0ff9ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1e84e6-10d1-4d57-b51e-1863cb06d8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c15bd5-8857-4f15-8d9b-2ea6a01028a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec90a1af-2f10-4fbb-b86f-ac627027c385",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ec447e-fe6f-4123-91de-6dc79275f5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a172c51-8ff6-42d8-b5b9-9c6c9e6fdfb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e236485d-e3ce-4f45-8732-b523f46ea971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45624ee7-07af-4ea6-b250-82db58d67946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a3137-39d9-45a3-b3a4-aa8365d402c7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00a387f-28ed-4559-91a6-ef6aa7dc3c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b62d9a-8063-44a4-b3a4-422efedff947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a281952-4e5a-4d24-8d25-3a3cf8ce8b93",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b521e1a-7ce9-48b6-92fe-26d89b1c33a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c00dde-1d51-4105-8a29-885eef4098e9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3ee107-ce8c-4448-8aca-934b4d24abd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bb5245-2a28-41b6-b3e3-037b745351df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19552587-b300-42c2-bfd6-14d3e24c728a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0e5b77-3515-40ad-a5cc-96b9dc73ec58"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00b90f6a-3121-487c-bb71-0e8a2b019e2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3854386e-380f-4875-b46a-b0164403435f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "577ae8dd-544b-4e1a-a76a-8d9b4a049d10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c11de88c-dd89-4eb0-a13d-f9091b1073d1"
                    }
                  }
                ]
              },
              {
                "id": "56f66a79-4ba4-4d96-9659-bf7003669052",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5637fdb8-47d7-4e9e-9eba-c935dfc62edd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd500b4-9b7b-4d84-888f-6df5d4015ae8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d75f5bdb-6520-4c4a-a00e-4c2f67340041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5159dea7-f987-48ac-96bd-aacbc6252c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc301a75-0b01-440b-9a04-049ce1014aaf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94e43376-4ca6-4ab9-b000-109cc3b47456",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10044921-e709-4e8f-bfbe-5452d20c759b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7796d1dd-dcdc-4f13-a66d-7456c05e543a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdddfebe-58ca-43ba-b378-bd54abd5ed9f"
                    }
                  }
                ]
              },
              {
                "id": "ce94c4f5-b999-4537-abc6-db36a56b08e8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c1430773-7e6e-41e6-9cf6-e8f581773ee3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d1c4e2-09fa-4387-83a7-66c5775f00de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7c2d7934-8bd4-4b14-9207-7a7d5c3c1cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30220812-4a91-4d8e-b1ad-35fb53be271c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db2588c-ff90-49f1-91f5-76e24400e1d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "18d1689b-98e7-4d1d-a7b3-03bee0b4137b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3124ea9-c01e-4bb7-be93-5c2c084550e7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a147e36e-9f9c-4ac3-aa16-72333fed4d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30206e88-38bb-4a71-8c38-e2a290b061cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d5fe3ff-5aa2-4b26-92e6-f181f2a26a0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3374cbd6-5cae-4d8f-bae0-32d08e03d447"
                    }
                  }
                ]
              },
              {
                "id": "971d8682-d8e0-4506-a1d3-cf660965a477",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82013bb6-3917-4d1a-a31a-efb705bb1207",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b4da6a8f-5b8a-49d7-a5b1-5a3cc1a14f55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b6c3feb-f242-4284-9708-15cac47a174e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ba40c69-6d03-458d-9c85-0b9567ada895"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7ec7c28-ff59-4710-98fb-0d5ba37bfc89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2d57ad11-1ab1-442a-a961-4887eb6a401e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c678cc4-9f6a-4c36-bc5a-9975f8ff3b31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "559e4e77-83de-49f3-bf71-2ef59e8acc12"
            }
          }
        ]
      },
      {
        "id": "1e5ec1af-a14c-4cad-a905-2addc526cb15",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c1f442d2-8cbd-424a-9614-1a005dc02edd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27870549-0f48-44d1-8d04-b121fa67b3e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fae8d42e-68eb-48a0-8d41-b2170418c902",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b1513f-6df6-4348-a197-eef431e13598",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f562b63-94e8-42c9-81d7-e68991f2e60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dd0237-27a3-47eb-869e-dd4a953120d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01ad2d7b-520b-4c29-9dbe-7f04874bb3c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03d2ffe8-ab4f-4f78-8ef1-bb0413ab81d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d50b5cd-839e-48a0-abf1-fbf6e5c31118"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "790bb94f-e841-4d9f-bcbc-1745dbbd6cc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db284b19-b121-436c-a33e-7ead949df7b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6485075b-7c0a-49ce-b9fd-6d8920efe507",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "806568b0-030a-41be-838a-3513a2956e8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d9b2294-a324-4204-9c42-f8f665f89064",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09d85888-f01a-44ad-b841-69131f2492dd"
            }
          }
        ]
      },
      {
        "id": "11bad07b-c6c8-4eb4-af7c-341ea4a4d957",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ab19aba9-bb3e-4aa3-bb8d-4afcfcdb00df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e8a84ee-a9c0-4c16-becb-5fff534e04bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8cfd64c-bc25-4fe2-b7c0-1fa61326f7a8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871343d5-09f1-4ba3-a290-81f9d5f22241",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02960e8b-c158-4b34-a504-6d7b692f4106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd3b4a2-79c8-4d61-a38c-5bb53148446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "475e743e-08c2-4eda-8ae8-a70fa1c09af7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d05e1c0a-c654-44ac-8452-0ca9dd2a0f72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5617d077-7007-4e15-b7ff-86519c38ee55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eeac643-ad6c-4c80-832a-c5f1bcad40d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64030477-bf2f-49ac-8ef9-c00cd5583108"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "281f2ea1-be3c-4b9c-b55f-68fa1c667112",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5a35214-9867-4a9e-bcfd-ce26b9f6b1fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4adb8094-6b44-400b-aec5-bf4067ea0397",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30761ea6-91d6-464b-9e95-0212847f08a1"
            }
          }
        ]
      },
      {
        "id": "4fe2f9c6-345a-49ad-9219-3b2086ce91a2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3bdca7a2-9237-4ad5-a442-69d576b067db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9999df41-641a-44c6-9bad-986ff63c6e80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98043646-7c09-4305-bf97-518f425c1331",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553b079b-5848-464c-9ffd-904c87329a3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a282aad5-9a5b-46f4-9ce9-7442d8b54b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999791bf-3d76-42b1-afd8-1ccef81e33ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c06f1e4-77e5-47ed-bd1e-c4899a4494d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8e37259-713f-49cc-ac0c-78678521b6f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "748f4858-32fd-44cc-9b72-3c17ccf8d8dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4a994b-c5bd-4356-ae5a-7c819c45f3d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5101c0ce-0718-4939-b586-07a0c5d40d85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "328532ab-8be6-466f-8814-ab89be57148b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70e9594b-87c2-42aa-85c0-76e85190fdb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc8747b2-fb0e-4eb6-9a25-6e2751fa565b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2f6e47c-8594-4b5d-a5c2-14e07db3b69a"
            }
          }
        ]
      },
      {
        "id": "925520af-e058-462c-bed3-da9de907131a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c270e6c-40e7-40f3-93a4-246068f28b88",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45dbf160-a7cc-4931-833f-fa2121d64b9c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef9432dd-1623-4f7f-afc5-bb5b4dc625a3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24d39ff8-6d44-47c6-ae31-559a3174604e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5aab16b-73af-4b14-a084-9bc18016539a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.63095238095238,
      "responseMin": 10,
      "responseMax": 12801,
      "responseSd": 835.3593720492524,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721090384680,
      "completed": 1721090421561
    },
    "executions": [
      {
        "id": "b5789410-e2ec-4749-8d18-6bdf329a70be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c01ee08a-2fa4-4213-9006-64ced61bbae5",
          "httpRequestId": "0cbfa72d-255c-4dc6-8b9a-f73a766fc056"
        },
        "item": {
          "id": "b5789410-e2ec-4749-8d18-6bdf329a70be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "389b5494-bca2-412c-935b-dd009b240253",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "71957126-406a-4a86-895f-63faee109a7c",
        "cursor": {
          "ref": "a16b5686-e90b-44eb-968e-550d0e20222a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3731ee31-c9cb-4df2-9f51-0b5b34c1563a"
        },
        "item": {
          "id": "71957126-406a-4a86-895f-63faee109a7c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bca6439a-734e-4867-8cc6-e04c346ee85e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ac06498b-1ca2-49d4-9309-a00a9d670591",
        "cursor": {
          "ref": "0d4a4897-a3ec-4489-a598-7c4d974fb3cc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bbf91f21-9ab5-4423-98b0-cd1a0bd63b4e"
        },
        "item": {
          "id": "ac06498b-1ca2-49d4-9309-a00a9d670591",
          "name": "did_json"
        },
        "response": {
          "id": "7539ad81-3522-4979-a65d-8350fd43edb1",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809227a5-d7ff-4432-8b1d-69213791b20d",
        "cursor": {
          "ref": "33afc6ae-3407-4616-9190-e3f0785b69f9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12e49490-8bf6-4837-9612-5aae6441cf3b"
        },
        "item": {
          "id": "809227a5-d7ff-4432-8b1d-69213791b20d",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c47fc61-961e-48cc-ac3f-500de975d55d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 268,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809227a5-d7ff-4432-8b1d-69213791b20d",
        "cursor": {
          "ref": "33afc6ae-3407-4616-9190-e3f0785b69f9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12e49490-8bf6-4837-9612-5aae6441cf3b"
        },
        "item": {
          "id": "809227a5-d7ff-4432-8b1d-69213791b20d",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c47fc61-961e-48cc-ac3f-500de975d55d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 268,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236a6a7f-7a00-4379-96cb-7280da6b0d1c",
        "cursor": {
          "ref": "60c69948-29b2-4940-a067-0ffc54e5b3ca",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "12e5b0ff-534b-4cd4-9d40-c2027dda3909"
        },
        "item": {
          "id": "236a6a7f-7a00-4379-96cb-7280da6b0d1c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5bac5d28-7def-41a7-9637-9e370d24d557",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237e9551-6b33-4fe2-a1e4-7c94285cd7ab",
        "cursor": {
          "ref": "28342e9d-bcaf-4d40-a1cf-2d538be66d78",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e0e674ea-a876-4549-9cff-7d1ca435d855"
        },
        "item": {
          "id": "237e9551-6b33-4fe2-a1e4-7c94285cd7ab",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af934ece-2a17-42d2-acfb-1605e47f1391",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939ea9fe-a5a2-4aff-8c8e-8ce5dcacaf2a",
        "cursor": {
          "ref": "10411fd0-f98a-4eb4-b438-ea631f4e567b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "853f995b-82bb-4dc2-a1c8-5968eaf6e9a1"
        },
        "item": {
          "id": "939ea9fe-a5a2-4aff-8c8e-8ce5dcacaf2a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d111131e-ee8b-4a67-9943-36c8b1d39113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4563c7bb-b24b-437b-a0d7-baec8da7be4b",
        "cursor": {
          "ref": "b6d5d015-d174-426d-90a0-2fd1b3c08c73",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a38e7b4e-1dc4-4cc8-b4d9-57eba135e80d"
        },
        "item": {
          "id": "4563c7bb-b24b-437b-a0d7-baec8da7be4b",
          "name": "identifiers"
        },
        "response": {
          "id": "f5d54fb6-5847-456d-966a-a4e1b8df1385",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0019a59-d954-4dc2-b51c-de583ab73342",
        "cursor": {
          "ref": "cd21c16d-474d-406e-86e0-475888ea5c84",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ccd6fce2-9c62-4e61-97d2-41db20ced1b8"
        },
        "item": {
          "id": "a0019a59-d954-4dc2-b51c-de583ab73342",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dff610bb-1589-4493-a66a-6793e584702d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077aca7f-db3c-46ea-82c8-58d5207b2b05",
        "cursor": {
          "ref": "c47b4f5f-24e9-44ef-b801-6a832753ab4d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fae6fbca-7a44-4d7a-817a-4f5a6f90f672"
        },
        "item": {
          "id": "077aca7f-db3c-46ea-82c8-58d5207b2b05",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7e3facbc-0da5-44da-85ac-1f1751f10fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428fe6b2-6dbd-4f4b-9c57-38f43d914242",
        "cursor": {
          "ref": "c6eafe8b-5df1-4058-96a8-98e10c38fee3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60b0c1ed-e414-458b-a379-178a3eaf6d70"
        },
        "item": {
          "id": "428fe6b2-6dbd-4f4b-9c57-38f43d914242",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1d12851d-ad7c-48fc-b23c-3dbfa55acee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896d01ed-d3e7-4a1d-8456-244f89b88da8",
        "cursor": {
          "ref": "de7592d1-4124-45e9-b30c-28085db3cb13",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "38a7ef7f-c0d4-4ce9-b515-93832e40e2c0"
        },
        "item": {
          "id": "896d01ed-d3e7-4a1d-8456-244f89b88da8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "10f5136b-bcb7-4403-8a1e-d7d299457a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db18ef1b-ea47-490e-83d9-72cf32fbfaea",
        "cursor": {
          "ref": "1778fa22-63ac-462d-baca-441195c82333",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f14438aa-0139-4ec6-a1dd-b5a20e3c7de5"
        },
        "item": {
          "id": "db18ef1b-ea47-490e-83d9-72cf32fbfaea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bc44d1e6-7765-42b0-8afb-2de2a0640f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6691d822-1676-459a-bb1e-3076d855df3b",
        "cursor": {
          "ref": "2847e392-2642-4ba3-85a3-b9dae9517916",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aa202ab8-edde-4133-b15b-11f91bad0baa"
        },
        "item": {
          "id": "6691d822-1676-459a-bb1e-3076d855df3b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9549021e-b2a0-40ba-ac66-7542d24365fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c29cdb6-3a59-4acd-b6a9-f3aa02433c5b",
        "cursor": {
          "ref": "8267ab23-1569-4f81-8055-20a34df1fd46",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "659ab4df-679f-4927-ad59-4e1d1226fc9a"
        },
        "item": {
          "id": "1c29cdb6-3a59-4acd-b6a9-f3aa02433c5b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db2e17b0-c6d8-401e-a3ff-edd0fd5b99e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb153bc-df6c-406a-aedb-1a214a0c644c",
        "cursor": {
          "ref": "d4b5891a-2953-4c8a-93e4-3c388c7db278",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8a887327-513a-4fc5-b738-a7e35788190c"
        },
        "item": {
          "id": "dfb153bc-df6c-406a-aedb-1a214a0c644c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c0897d80-f71f-49ed-8e7e-832244da80dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b2b8e6-8a82-40bd-ab4c-a12378d81f6c",
        "cursor": {
          "ref": "1585a046-2c4c-452d-b9b1-7a62d013a82f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19c1cec5-f6ec-40e4-947b-e1e7c9e02439"
        },
        "item": {
          "id": "d5b2b8e6-8a82-40bd-ab4c-a12378d81f6c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5696c4f1-6406-4065-a651-a3c99556d6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe3107-28d2-4072-8e9e-12c5de245d7b",
        "cursor": {
          "ref": "075bdd5f-26de-412c-bc47-d16dd57647b3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "367bb264-ac36-4ce9-92d3-f521e3128a08"
        },
        "item": {
          "id": "8cfe3107-28d2-4072-8e9e-12c5de245d7b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "160d8989-0bd4-4891-a799-407d11c5e55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cad3f0-a319-4591-bf39-fe95f5803f9c",
        "cursor": {
          "ref": "830b4955-0691-4f31-bb99-e0fdaed81666",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "682f9190-6716-4461-852f-5b416448bf2e"
        },
        "item": {
          "id": "97cad3f0-a319-4591-bf39-fe95f5803f9c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9b778c8d-5c61-4219-a9a2-77898240ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0ea228-402c-493f-98d6-c0e916c63ee3",
        "cursor": {
          "ref": "77061d1e-d18e-4c2a-a12b-bcee707c52a7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "13a922d4-169a-4069-86c5-86b68344880f"
        },
        "item": {
          "id": "ab0ea228-402c-493f-98d6-c0e916c63ee3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c270a1e9-f245-44a4-97a7-f65206aabcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36474c5-9893-420c-ad41-342bce832439",
        "cursor": {
          "ref": "b3502399-64c1-4cd9-8250-0f64de9eb58b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c444dc16-6568-4be5-879c-660666228fc3"
        },
        "item": {
          "id": "a36474c5-9893-420c-ad41-342bce832439",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8f6e996-fc6b-4013-beb7-8e0fcf39ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9b9329-3de4-4e8d-acee-006c5ce14888",
        "cursor": {
          "ref": "172d5efb-8242-49f2-803b-79bfc96bf056",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d1410cb5-5b50-4e43-a7f1-f0c16d7b05c9"
        },
        "item": {
          "id": "1d9b9329-3de4-4e8d-acee-006c5ce14888",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6b5a9d30-7f87-4bdd-962a-e4a9c7473888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6f068b-f8d0-484f-983e-405639c5841f",
        "cursor": {
          "ref": "930cf317-ac91-46fc-96da-30dd962b2691",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd4c46d4-aa0d-455a-986a-9221a22a39ef"
        },
        "item": {
          "id": "ae6f068b-f8d0-484f-983e-405639c5841f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "92036121-3d94-4bd7-998b-add01f412a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b9cdb-6911-4aaf-aca1-b9a338288f99",
        "cursor": {
          "ref": "a17f555d-312f-49a3-b2a5-8e4a1f40d7ee",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "351b2a1f-c840-4eb1-9250-de6cc35fff5f"
        },
        "item": {
          "id": "452b9cdb-6911-4aaf-aca1-b9a338288f99",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "406d2aaa-c3b7-404e-adf9-5fa6f3c659c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3bfc02-97ab-480d-b9ab-b06998b64e74",
        "cursor": {
          "ref": "4fdbdce6-fddb-45b2-a06e-6526a4cdffee",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "84e6285b-f9a4-41c6-ac4f-64b37f471db9"
        },
        "item": {
          "id": "bb3bfc02-97ab-480d-b9ab-b06998b64e74",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "870c342a-61cd-4301-8458-e9977c3f5c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e515e113-7af0-4c27-9fdd-dcfddcd4be96",
        "cursor": {
          "ref": "0a5ffd09-d44d-4277-aaf6-2651de0a6a7c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d759a9c2-ff4a-4e8e-bb2e-b68116e9a729"
        },
        "item": {
          "id": "e515e113-7af0-4c27-9fdd-dcfddcd4be96",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "920f842b-df1e-4a50-a18c-c1d02682077b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519d3402-4247-4246-b171-3e6ac534480f",
        "cursor": {
          "ref": "bc75d7d4-ea7c-4f5b-860b-2ec9f4840d6d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ebaa9fff-b648-42aa-b0d2-7296bf2cb2e3"
        },
        "item": {
          "id": "519d3402-4247-4246-b171-3e6ac534480f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6b767032-895c-449c-b1e7-4257029ffc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3536d3-c1f1-4fec-ac6e-c6d0ef1474d8",
        "cursor": {
          "ref": "c6e74376-b776-4da9-8ad3-0cb73593647d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0b4269b7-6efd-4635-9553-65e164155d78"
        },
        "item": {
          "id": "ba3536d3-c1f1-4fec-ac6e-c6d0ef1474d8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d4315ef3-7d72-4828-8d25-63a9211714dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f4f382-c7fa-49b4-a810-bbdf6f16938c",
        "cursor": {
          "ref": "b5d172f9-fa94-4820-8be5-7cacf5227256",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ca25f089-61c9-4c50-b7c9-eff943e229d9"
        },
        "item": {
          "id": "01f4f382-c7fa-49b4-a810-bbdf6f16938c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6e342f2f-c238-424c-a506-a3dc4a0567fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7bfa93-710f-4f1c-8dc4-d7ded56f479d",
        "cursor": {
          "ref": "5f35fa47-27f2-4f13-8d3d-48f1429930e7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97ff7aa3-3205-4b36-87b0-ec0501a0a476"
        },
        "item": {
          "id": "ab7bfa93-710f-4f1c-8dc4-d7ded56f479d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4374cb7a-d950-4d48-ac62-21c7299dd9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f39a9c0-4dd5-468b-b335-3000e29277d9",
        "cursor": {
          "ref": "60fece75-f850-49a9-8c30-c98bca27671b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b6e6b15-d06f-446c-8128-2edf3c840faa"
        },
        "item": {
          "id": "4f39a9c0-4dd5-468b-b335-3000e29277d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a595109a-c218-472e-b88c-956475804e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9e9e9a-11dd-4e03-acdd-ef92f8d46252",
        "cursor": {
          "ref": "17b1d2fd-a497-4ac9-a80f-daa9cac759be",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b5be9f33-a6ea-44ce-9e35-08ee6242c937"
        },
        "item": {
          "id": "ee9e9e9a-11dd-4e03-acdd-ef92f8d46252",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b5a7b834-0be1-4400-a530-0de9843149dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e161fb1b-8bd3-4f4f-b3f3-b356dbb51c61",
        "cursor": {
          "ref": "bb8892cf-4ef4-4df4-a57c-b71188cd631c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b2c835e8-5325-48b9-9bf0-ed4837afa2ac"
        },
        "item": {
          "id": "e161fb1b-8bd3-4f4f-b3f3-b356dbb51c61",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f0786fd-b301-43f5-b808-c0c4cab5f26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa8db41-69f0-4132-a13e-a37997fd017d",
        "cursor": {
          "ref": "49f5b0d0-f881-43cb-9d2d-cc832e25414f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "607d2cce-7076-4bea-90e9-2f70e3bb56e2"
        },
        "item": {
          "id": "efa8db41-69f0-4132-a13e-a37997fd017d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1964a271-3779-4849-a7b8-d40d94111e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edadaf8a-1ac6-4cf2-823c-d5a0e5382d9b",
        "cursor": {
          "ref": "cc43544e-7121-49df-ae12-584cd8cfc401",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ad43a028-f25d-4243-84db-086cd4f3199a"
        },
        "item": {
          "id": "edadaf8a-1ac6-4cf2-823c-d5a0e5382d9b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "feb128bf-6441-4e8b-ad01-a5e79a634019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b810b1c-0389-41d3-aa2f-814e9a29c95c",
        "cursor": {
          "ref": "bb92a9ab-5c59-4e98-b6d9-0d0f59438416",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f73e387-cb6b-4434-ac22-8f60d5d64df0"
        },
        "item": {
          "id": "0b810b1c-0389-41d3-aa2f-814e9a29c95c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "88bb9a8c-58f6-4403-ba40-d7595dfd4678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cbb3a7-1a1b-43e3-ab82-9f352777d18b",
        "cursor": {
          "ref": "3682d7f3-835f-4baa-b15a-fb086d2c3fc5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ef980d71-1518-4a01-8ae2-d0936b675b0d"
        },
        "item": {
          "id": "86cbb3a7-1a1b-43e3-ab82-9f352777d18b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15d37d3f-c3cc-4446-a0ea-94cc4f752119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cc3764-fc66-4bdd-b5ce-d82eb775240f",
        "cursor": {
          "ref": "9b2d3a1a-85fb-4573-8320-9060b46be682",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9c46e35c-47a0-47a6-b8be-eb8db0bf9497"
        },
        "item": {
          "id": "53cc3764-fc66-4bdd-b5ce-d82eb775240f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ed6c2fdc-664a-4807-9a65-f287a20dd3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52c4f44-d42e-4593-854d-64161f35bc13",
        "cursor": {
          "ref": "d5e374d6-4273-4c5d-92c4-7cb2887a44a5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4c0f6793-450d-473b-a91b-d97eb92fa8f6"
        },
        "item": {
          "id": "f52c4f44-d42e-4593-854d-64161f35bc13",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c4c08e31-2b42-483c-9cc0-46e4730873a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a9c243-92c9-47d0-8774-5a09ba3125fc",
        "cursor": {
          "ref": "ea4c47bb-dea2-4d44-874f-6d144ca6f049",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3c7ce986-ab48-4d1f-849e-e9fca175136c"
        },
        "item": {
          "id": "e9a9c243-92c9-47d0-8774-5a09ba3125fc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7c786873-c301-487d-a394-ae55c32a0908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c70880-3b7a-4c68-8aa2-d1fdabbb5e3f",
        "cursor": {
          "ref": "d72be1e4-dabd-46c1-85e4-b50e3d1d35bf",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3bba4ebc-8709-4139-8cf2-5cd302eb8497"
        },
        "item": {
          "id": "12c70880-3b7a-4c68-8aa2-d1fdabbb5e3f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c9002725-07b6-490c-869c-3788dbdc1758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568fc93-1d37-47a6-92a3-220004d8710a",
        "cursor": {
          "ref": "2792c834-72d1-4402-b949-284df731b354",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd300a9f-12c5-4768-b0a0-220ae8e3c5af"
        },
        "item": {
          "id": "7568fc93-1d37-47a6-92a3-220004d8710a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2b4224a0-1ae7-4bde-aea0-34715694cbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ba2dc6-05c8-46ea-b8d9-046197e7f709",
        "cursor": {
          "ref": "da9a0be1-160b-4c01-8605-a668353c4ca8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2d010ddb-8724-4be4-9899-3a32590eb8a9"
        },
        "item": {
          "id": "84ba2dc6-05c8-46ea-b8d9-046197e7f709",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "381bb85a-b989-43f4-82f7-57cb2fbb7b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c950768d-8169-44d9-8a18-eddddcb2852e",
        "cursor": {
          "ref": "9eabfd80-ca3b-4e64-a79a-6ddf56a0d946",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d09f688f-bc41-4860-bccc-dd5ee6ea2ad9"
        },
        "item": {
          "id": "c950768d-8169-44d9-8a18-eddddcb2852e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1dd41094-fbc0-4d74-bbc6-8171d7b6b9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbfc3bb-3987-4fa1-8a3b-5c49dfb765ba",
        "cursor": {
          "ref": "1ad4cf34-6247-4874-9c61-1d0033729d2f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e71e9aa3-5287-4341-9b26-6ebe7b3fe1af"
        },
        "item": {
          "id": "1cbfc3bb-3987-4fa1-8a3b-5c49dfb765ba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "afb1f87f-6ff6-46c8-85cf-6a9d1bab799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbbbdfc-2696-4407-be3f-16674ff7aa9a",
        "cursor": {
          "ref": "bdb0aa2c-562b-4f5a-a6e5-3cf0e17fc2e1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "51e43134-c6e7-4a0f-83a7-dc16aa2832a6"
        },
        "item": {
          "id": "9dbbbdfc-2696-4407-be3f-16674ff7aa9a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e6a9fd38-118d-4646-83e1-130d388f7931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9668469-c14b-49f1-8ce9-bd425e574b31",
        "cursor": {
          "ref": "d32d77de-ae1b-443e-872d-5b7c1358ba27",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bcc414fa-7b15-448e-bee6-5260d59d5988"
        },
        "item": {
          "id": "e9668469-c14b-49f1-8ce9-bd425e574b31",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3416618f-e610-4d38-9d54-6734ac03b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830a6d9b-9c27-4422-b1f8-834a15351461",
        "cursor": {
          "ref": "0f3e776a-90cc-4c10-867c-350639160625",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dc82dd1e-ecdf-4e59-930b-ffedc34081e9"
        },
        "item": {
          "id": "830a6d9b-9c27-4422-b1f8-834a15351461",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8f3653f3-c9fa-4158-98e4-eda8aed04caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a6cb73-25b8-4e2c-8d81-e17fe6b11dd9",
        "cursor": {
          "ref": "9c113684-8939-4218-b306-bfa7215bdbc8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "503246ba-6207-42a3-836f-3cbf42120d65"
        },
        "item": {
          "id": "00a6cb73-25b8-4e2c-8d81-e17fe6b11dd9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5b1fa534-d00c-4c6e-bad6-775e92a91834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdbdd9d-2239-4af9-b223-094af23c55c5",
        "cursor": {
          "ref": "56966509-fa5b-4a27-ba7c-df08731cfd98",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "75481964-ae21-4624-a67f-28e2b4842d73"
        },
        "item": {
          "id": "acdbdd9d-2239-4af9-b223-094af23c55c5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7116dbba-1f6a-46ce-a237-1ad491a9ce81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eecbeb-6aae-4cd4-ae7c-7287dcfd7b10",
        "cursor": {
          "ref": "3ba92309-b4d1-4c7a-bf4b-b47d3969abbf",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57f27141-9bf8-4a0b-91d6-6c8916ec2ff5"
        },
        "item": {
          "id": "30eecbeb-6aae-4cd4-ae7c-7287dcfd7b10",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da3d0456-6e50-4997-8c17-b1502e6db9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c16296-e098-4907-8542-2a1efdc8a901",
        "cursor": {
          "ref": "5259f9aa-0741-4753-a269-3d9e2c806f64",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bb5d3023-3699-4b41-9965-9323ba17d380"
        },
        "item": {
          "id": "47c16296-e098-4907-8542-2a1efdc8a901",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a5fc664f-bd77-4799-a205-ccaf7d4c949f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f71d9d5-fdd7-44b9-af14-1d15deb8d59e",
        "cursor": {
          "ref": "b070d04d-5701-4666-b47d-ba197c20404a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "61424519-079a-4fba-aa82-f095d6f13559"
        },
        "item": {
          "id": "3f71d9d5-fdd7-44b9-af14-1d15deb8d59e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "40e2bdd5-6bda-4793-9379-42526a47f597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b444b49-029e-4c7b-bb1d-0a36f869865c",
        "cursor": {
          "ref": "1ac5d07b-8422-46d7-9b52-2df840dfec6a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7a0e5775-78d8-43e2-88d1-a04fb3427ced"
        },
        "item": {
          "id": "2b444b49-029e-4c7b-bb1d-0a36f869865c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3857bd8d-4b1f-4ea0-971a-305f0cc36480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc90b21-939a-475d-8600-fce06ba49cac",
        "cursor": {
          "ref": "172a3194-22a6-4fc5-a11d-5159fdd8b9c2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4b4d52cd-f301-4e50-9be1-8d3015569f5a"
        },
        "item": {
          "id": "fbc90b21-939a-475d-8600-fce06ba49cac",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4913f7a8-33be-4e75-a167-7eead8adfd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6fbb28-6043-4151-a1a8-5cc2c2772281",
        "cursor": {
          "ref": "9d8c39c4-e970-4615-9561-cf68170af678",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dc67f5f9-82f9-48a4-aa58-41a2d602899a"
        },
        "item": {
          "id": "6f6fbb28-6043-4151-a1a8-5cc2c2772281",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "be2ca0c0-743e-4a2c-8253-b377d96b4672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e022384a-5765-476f-8f8b-56b33fd71782",
        "cursor": {
          "ref": "e7c116cb-d195-45d8-99a8-ef5bb050004a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09c35448-96b8-4f34-a337-9e0499247c9a"
        },
        "item": {
          "id": "e022384a-5765-476f-8f8b-56b33fd71782",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "43de9252-37aa-48e9-a7f7-5da53de94c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd528e02-cef4-41b1-bbcf-5b6a1fe2521d",
        "cursor": {
          "ref": "7ba4e797-051e-434a-93e4-7870f0004819",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "46682640-639d-4c64-a9e2-8ab9b022bf4a"
        },
        "item": {
          "id": "cd528e02-cef4-41b1-bbcf-5b6a1fe2521d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a7a8fb72-b409-4e90-a1f0-51725fe1b10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dddd57-bac5-4989-80c0-04f04410c21e",
        "cursor": {
          "ref": "6fb3a908-b98d-4cdc-abe8-48870805f284",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "68aba339-e0ed-4403-bae5-e6ef74aaedc1"
        },
        "item": {
          "id": "32dddd57-bac5-4989-80c0-04f04410c21e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f950723f-a55c-4099-b4d9-7ea55067db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6722d162-0724-4975-a5bc-b6d1b6459128",
        "cursor": {
          "ref": "7bc2fbeb-35da-473f-8cb0-8f2a42f19d86",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "18b8b538-8c58-422a-9326-3bb233faf30c"
        },
        "item": {
          "id": "6722d162-0724-4975-a5bc-b6d1b6459128",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e2beea3a-1a5c-4692-aad7-d01a2134afff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa168f5-750b-4e07-98e8-d7386166ef6e",
        "cursor": {
          "ref": "3ff5e6ee-a5e0-4543-82df-de555e46ea7a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0cc2b4c0-5211-4690-bfcf-48a3ab8764fc"
        },
        "item": {
          "id": "daa168f5-750b-4e07-98e8-d7386166ef6e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "09ba9954-18b7-45b2-936c-1b745715f71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93966e3-9200-4922-b71e-b2d627bc7722",
        "cursor": {
          "ref": "cafa2c36-003e-4fd0-9549-96b1785fae6e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7973b10b-e37a-4bae-b234-64f3a37793cd"
        },
        "item": {
          "id": "e93966e3-9200-4922-b71e-b2d627bc7722",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4f13af9f-b72e-48ef-b57c-89f1144572d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf2d7bd-5249-43d4-84c5-55151697de0b",
        "cursor": {
          "ref": "b2f83360-a9a1-402a-aa50-c9bfcebb8f4f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3f5683dc-e205-416f-8d5a-1b1022561417"
        },
        "item": {
          "id": "8bf2d7bd-5249-43d4-84c5-55151697de0b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c2c94b91-12da-4129-831a-147aa3bee3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f10077-96fc-429b-9be5-c22eb736039d",
        "cursor": {
          "ref": "af587fa2-65b8-45a5-a630-1fc7e7f38b30",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d16460ee-71fb-4dec-90ec-e50f5e669ff4"
        },
        "item": {
          "id": "69f10077-96fc-429b-9be5-c22eb736039d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "89ef9dbc-cdf3-4aed-9b6d-07c786857e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46abb37c-dc8d-4424-804a-e68b7a754220",
        "cursor": {
          "ref": "0a57eb2b-7f82-4b1f-ac25-f75429325583",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b33d3c95-bdfd-48e9-93a3-cf1341d1a992"
        },
        "item": {
          "id": "46abb37c-dc8d-4424-804a-e68b7a754220",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fcdb7d9e-e3e9-4092-b7c1-d4c00a8f8199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0951c25-5a8f-442d-97a1-f32fc42f58ae",
        "cursor": {
          "ref": "bbb302ad-0ad5-48ae-b675-61f0af8b56d0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a7ff49b3-8ab2-4c28-92b8-e33759cbc6f7"
        },
        "item": {
          "id": "e0951c25-5a8f-442d-97a1-f32fc42f58ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8f137190-2b79-4aef-a6cd-fae819b8151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e1a3e8-ec02-4042-8f17-2329cc497d9b",
        "cursor": {
          "ref": "3f8f359d-30b7-4b00-a746-c14c988c5f72",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d1381899-c9bd-45b8-8200-703a27522c19"
        },
        "item": {
          "id": "a1e1a3e8-ec02-4042-8f17-2329cc497d9b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "38c75ef3-9d7e-4a73-aa64-f5814b50a54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19182f7-e30d-46b2-b516-790ace3aaf10",
        "cursor": {
          "ref": "88958cc6-b121-445a-84b0-dd53cd08c4c9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d2dd1ef6-c17d-4665-a937-5c6d581bb86e"
        },
        "item": {
          "id": "a19182f7-e30d-46b2-b516-790ace3aaf10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b786b4ff-1018-4c82-9191-795e35b92e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeebc4f2-4724-4c16-bc09-2484130b9a5f",
        "cursor": {
          "ref": "5de1c3c5-881a-44aa-bc75-dda47dda738e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bf0d78f7-8fbb-4465-957d-cc4f6b499ad4"
        },
        "item": {
          "id": "eeebc4f2-4724-4c16-bc09-2484130b9a5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8e23dd50-8a67-4dcd-bde7-a3b311d9838a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9c1d9-fa9e-474a-95c2-9ee7343b97c7",
        "cursor": {
          "ref": "c53821c2-10c9-4442-8838-315aafc96222",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b8004c1c-ee0f-4a11-a9c8-50c4763fcc7d"
        },
        "item": {
          "id": "39e9c1d9-fa9e-474a-95c2-9ee7343b97c7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8d2fe254-21b7-421a-a5e7-d50529217e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c77acec-525b-43b9-8e00-0287343b54cb",
        "cursor": {
          "ref": "b52111cb-0e27-4076-9042-11515bf06ef3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9c0d8d5-5dff-4ba6-8e14-b8e39eec4f41"
        },
        "item": {
          "id": "1c77acec-525b-43b9-8e00-0287343b54cb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "979489db-6239-47e1-8235-4d4a2c948c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0762bc5b-fb1c-4ce9-a563-062f42193ee5",
        "cursor": {
          "ref": "7f79a6eb-3354-4381-9005-113e32a811d7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c7569394-527e-471f-a106-d8ae8805caa1"
        },
        "item": {
          "id": "0762bc5b-fb1c-4ce9-a563-062f42193ee5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9b5f6a84-e3f9-46c0-9cd7-923f8354e2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c30cc-d7a5-4d03-9fd1-dd46e40bf34c",
        "cursor": {
          "ref": "1cf97e26-4839-43ab-aafa-bb98d571847b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "de312b4e-1ac3-437b-bf8c-48b6fd71e941"
        },
        "item": {
          "id": "7d9c30cc-d7a5-4d03-9fd1-dd46e40bf34c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4f846180-9e7b-4560-a909-91809969f96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1360c41-4b22-4bee-a848-8e833d24645e",
        "cursor": {
          "ref": "f1ca8424-5b97-435f-a0ca-0d2b22bd0266",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d5e7b9e8-4e49-4299-bdc6-2a5d8fe065cc"
        },
        "item": {
          "id": "b1360c41-4b22-4bee-a848-8e833d24645e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b775b93-2f3d-4529-8597-f4a52bde2e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2b3042-4773-479e-a0ce-65bec73b5aea",
        "cursor": {
          "ref": "a3a56a43-7c5b-413d-8c76-84371b06df26",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "10c6c481-26b3-4387-b4a8-125d33283ee9"
        },
        "item": {
          "id": "aa2b3042-4773-479e-a0ce-65bec73b5aea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a9f41411-385b-43ac-bfca-baa197dcb6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c023d9b-6e0e-4caf-9bd4-10e2a530bc1b",
        "cursor": {
          "ref": "c461c278-f677-4fe0-9985-d02679d23d43",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "67c19be3-ed46-4c98-9ec4-73d9a8994765"
        },
        "item": {
          "id": "2c023d9b-6e0e-4caf-9bd4-10e2a530bc1b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f013672f-60b0-479b-a3af-5908e1480b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f3193d-8c3a-4e39-b455-398747913bc9",
        "cursor": {
          "ref": "aae94e9c-29d3-4b41-8f96-9bfcf48cbd8b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5ee03ad0-2688-489c-a36d-5831f7801cce"
        },
        "item": {
          "id": "09f3193d-8c3a-4e39-b455-398747913bc9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4593baa-1148-40b0-9ec6-087f61283591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa791179-02c3-42a8-acf7-a048efa2f67e",
        "cursor": {
          "ref": "c844b795-2426-4538-9e17-e29c397c6d24",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68333a6e-3443-45ee-b867-c724efa6a2c7"
        },
        "item": {
          "id": "aa791179-02c3-42a8-acf7-a048efa2f67e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "58da28a7-ecdd-49a0-a2a4-57266c7998e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7adc4ae-fd0d-4815-9251-3af4895a9c92",
        "cursor": {
          "ref": "7cfd6633-e912-4346-9814-b28c201b41b1",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b18b5efb-ffc6-47b3-8137-d2e2272aee43"
        },
        "item": {
          "id": "f7adc4ae-fd0d-4815-9251-3af4895a9c92",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e3e5b5ec-c30f-4e02-9231-0942041f0ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e4c47e-1cc3-423a-817c-e1b2d1a7c07c",
        "cursor": {
          "ref": "d44c3e3c-66ca-4b1d-aebb-a681712fc176",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d0f4d284-7958-4ddf-b949-db85a8ca5e38"
        },
        "item": {
          "id": "e5e4c47e-1cc3-423a-817c-e1b2d1a7c07c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "93401769-ecf0-473a-bb92-6b2b622fa979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987d4bc7-b455-4017-a86f-c1792510c6c3",
        "cursor": {
          "ref": "49084f6b-6511-4455-b7dc-04942b2a1690",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cee0149a-72a4-4579-b6d9-0e3b52ba550a"
        },
        "item": {
          "id": "987d4bc7-b455-4017-a86f-c1792510c6c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "356c6821-7700-4ecc-abf9-9389d03c9399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b9207f-edb9-4fe9-aaeb-8b149e08a598",
        "cursor": {
          "ref": "c1fb5030-9d06-491d-83b3-986c3c60a503",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f49a099e-c14f-442e-9475-03eb8785058d"
        },
        "item": {
          "id": "d6b9207f-edb9-4fe9-aaeb-8b149e08a598",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bac5e87d-4649-4be5-8e7a-492ff4c9a87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b27c1ca-0f8e-4dda-975a-434169e493ab",
        "cursor": {
          "ref": "3ab7e1d7-ded5-4dc5-91dc-0fe20df94837",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "295366c7-17e0-4ef0-b03d-acf713451651"
        },
        "item": {
          "id": "5b27c1ca-0f8e-4dda-975a-434169e493ab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b4d23ce4-9c71-4ad5-9e7b-cce81f190608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1635375d-be55-4a48-bf0a-b3b8d0c3be40",
        "cursor": {
          "ref": "2b643fc9-f56b-416f-9256-0570d7cfa753",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3a3d638c-2ae4-488d-863e-0973040036c4"
        },
        "item": {
          "id": "1635375d-be55-4a48-bf0a-b3b8d0c3be40",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6f5005e3-7d97-4f32-8b69-b9c8ceb766de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac427d35-4716-4116-b3b7-8c9e7cff6ae3",
        "cursor": {
          "ref": "cd128b91-b321-4b6a-82d6-526e2dfda66e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "76c328f6-8f53-4a25-92ac-e72fc5ff80a8"
        },
        "item": {
          "id": "ac427d35-4716-4116-b3b7-8c9e7cff6ae3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c3a76987-9824-4183-b641-0082232d588d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eaa290-8f92-4e93-882a-f56424fe8f61",
        "cursor": {
          "ref": "20852863-b292-4408-8d23-c4af0d562607",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6331c15f-67cc-49ef-8784-52f67038eb7d"
        },
        "item": {
          "id": "a0eaa290-8f92-4e93-882a-f56424fe8f61",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aa6eee38-00e5-4941-a1f6-181e1d686fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a645e1a-9304-4419-88f8-b387280f74a1",
        "cursor": {
          "ref": "1368c303-78b1-4061-acb5-15e90cc00dd8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "33d59d44-ae47-4159-a2e3-44cd7c4dc204"
        },
        "item": {
          "id": "4a645e1a-9304-4419-88f8-b387280f74a1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "32aec344-02f0-4183-9470-4358ec2dcb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd43347f-2adc-4487-bf17-52eb3b74c868",
        "cursor": {
          "ref": "2eec2a72-99b8-402f-9a48-c4e8f1fd4f23",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cd4956b2-65b5-45ca-ad68-20ac0a73283b"
        },
        "item": {
          "id": "bd43347f-2adc-4487-bf17-52eb3b74c868",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4519d822-072b-4e66-87ab-1b71848ba6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35918d1f-eca7-4b3c-bce5-412c9566b6b2",
        "cursor": {
          "ref": "f931e900-f181-498b-b0f2-d9d37fd7acf5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34e132d6-22fc-410c-add3-4dac0a9cb07e"
        },
        "item": {
          "id": "35918d1f-eca7-4b3c-bce5-412c9566b6b2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f04375d6-bd9d-475a-8942-e392305fd312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c59c10f-97c7-41da-80fa-93884cff1851",
        "cursor": {
          "ref": "d14f89a9-f60f-42b6-8d3e-273e26cde1f5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2046483d-99f3-47a4-a8dd-8564b221e678"
        },
        "item": {
          "id": "8c59c10f-97c7-41da-80fa-93884cff1851",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dc3f8ae4-0dbb-4cdd-ae8b-9a78f35ae835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84a676b-dd52-4428-912a-1c412d459242",
        "cursor": {
          "ref": "4fb3bd7f-f130-44c1-af67-8431db8d6eb0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "261c9428-1fc8-4808-9a7b-6f20f4ca1371"
        },
        "item": {
          "id": "b84a676b-dd52-4428-912a-1c412d459242",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4c48ec7b-5ed4-4a94-ab12-331648fd7241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd98efc-e619-4aea-a482-ba4da4ac02f5",
        "cursor": {
          "ref": "31391474-e11d-43cd-b410-34205e62dc3b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a655122e-2073-4599-830d-c26bd336ffc6"
        },
        "item": {
          "id": "9bd98efc-e619-4aea-a482-ba4da4ac02f5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d3453a4-1745-4cdb-b9de-e81b983c809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fc17a8-35e5-4a3a-9622-303b613b073e",
        "cursor": {
          "ref": "f3f18c83-41e3-4e21-b980-49864c0cf75a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "06da5a5c-9696-4c75-87b1-78fd4bd1759d"
        },
        "item": {
          "id": "d1fc17a8-35e5-4a3a-9622-303b613b073e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5f8cf81a-b915-448d-b163-4c321d2a5c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4351cec5-e730-4edf-a1e3-4f7bef02eeb2",
        "cursor": {
          "ref": "077cceab-9f6d-4c18-9eb8-3ba7ba0d0666",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0b904806-09de-4f34-8f5c-a04c40ef23c9"
        },
        "item": {
          "id": "4351cec5-e730-4edf-a1e3-4f7bef02eeb2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ac06a039-934c-455e-a15f-f80824db1260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b516d-0891-4691-9a8e-817659850422",
        "cursor": {
          "ref": "e1b01a2c-8a83-4b21-b634-fa3583072fc1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6643bcbc-d25b-4b90-ae41-bfa538c08f20"
        },
        "item": {
          "id": "844b516d-0891-4691-9a8e-817659850422",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b7778326-d951-499b-8565-364e3b2a8c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6fc3cd-18d4-45a6-a5b5-a1a3cfcc112c",
        "cursor": {
          "ref": "8f744184-f394-4d50-bc16-dcb0baeed77e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "10139c51-713c-49b3-b547-d4a2653b91fc"
        },
        "item": {
          "id": "ff6fc3cd-18d4-45a6-a5b5-a1a3cfcc112c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "19ac68da-4615-4016-97fd-53601127f261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96397c9d-ede8-4b2a-8276-89f5901e22c7",
        "cursor": {
          "ref": "919e10e3-4368-41b4-9a14-32a5ee5d13f0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9ef7a832-9084-43c4-b596-dea52bce0e41"
        },
        "item": {
          "id": "96397c9d-ede8-4b2a-8276-89f5901e22c7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cae5581c-ccfe-44b7-ba9f-2bbd450893ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef037ec3-b7be-4e5f-8188-8c4838340110",
        "cursor": {
          "ref": "db5f2d54-f94b-43e6-ad12-a9fdfce9371b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "89cb60fd-e6cf-4c33-aaa0-78d3e8e47139"
        },
        "item": {
          "id": "ef037ec3-b7be-4e5f-8188-8c4838340110",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "861c380c-303c-449b-b742-00804bb7c852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077e1fd8-0c13-4467-bb1a-9b833f890dab",
        "cursor": {
          "ref": "1ce4bc7f-ddad-4589-9aaf-91c85ff28174",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bb45da96-a8dd-44eb-a4c4-710882cbb969"
        },
        "item": {
          "id": "077e1fd8-0c13-4467-bb1a-9b833f890dab",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fb401f56-b892-43a9-a343-3f4e1b1bd4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dc771c-c610-406e-93d8-24f3d430fd00",
        "cursor": {
          "ref": "ae187949-f873-4484-ac86-b1ddccb3aeb8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5e8e62ba-dd26-43d3-9992-a4581ccbabc1"
        },
        "item": {
          "id": "d0dc771c-c610-406e-93d8-24f3d430fd00",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "56e0c910-da2d-4156-bbf3-81aad351c284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dd1c8e-8753-4f93-ae4f-a39f9aec293f",
        "cursor": {
          "ref": "65ec8b16-7bb1-4326-b252-30269c0abe3f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac6ceb27-539d-46ac-857d-e94a6fd73a25"
        },
        "item": {
          "id": "51dd1c8e-8753-4f93-ae4f-a39f9aec293f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "91c390be-e4aa-45ed-ae12-4b4a957d8005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63518b1e-333e-4b07-9dd4-e732c9ee7fc0",
        "cursor": {
          "ref": "254ea521-514e-4d64-ae5d-432f3d69faa8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "17438dca-b159-463e-b646-450d6589715d"
        },
        "item": {
          "id": "63518b1e-333e-4b07-9dd4-e732c9ee7fc0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "af51f67a-c1c7-4e5e-9799-0bb3349b2de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "556894d7-c2d5-498b-a461-7ebfa3eaf3a9",
        "cursor": {
          "ref": "f5beab9d-e6f7-4506-966b-445288d16db9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8e3c3689-7ed6-4bba-8784-db39e52536fa"
        },
        "item": {
          "id": "556894d7-c2d5-498b-a461-7ebfa3eaf3a9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5315d081-4f14-470c-aa58-055e22f4e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "02cadcbc-7e64-479e-b385-526caf153ed8",
        "cursor": {
          "ref": "ea112e03-4264-4579-962c-5c35161b5803",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ddf8c268-8d3f-46c9-8dca-4bb30ebf024d"
        },
        "item": {
          "id": "02cadcbc-7e64-479e-b385-526caf153ed8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "622f5e2c-b3fc-4c94-b9fe-0c8ab50c2f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "410aa7ac-f23a-4e7f-90ea-885bc9b7b657",
        "cursor": {
          "ref": "c8c186d1-9fb7-44a9-9a7d-7b1798c6fc90",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d77d1c29-1282-4816-9e21-72572988adf8"
        },
        "item": {
          "id": "410aa7ac-f23a-4e7f-90ea-885bc9b7b657",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "49bb6854-745a-4ddf-9a3a-8113f7907f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c8a4a3aa-38a9-4395-ae0d-d95a1d27a2b0",
        "cursor": {
          "ref": "8ab6e900-d207-415a-9910-26a3ea43f34d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e151990e-3543-4005-aac8-bc82d72ef723"
        },
        "item": {
          "id": "c8a4a3aa-38a9-4395-ae0d-d95a1d27a2b0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ef62ba84-1ecf-485c-b5e7-640f78e3789b",
          "status": "Created",
          "code": 201,
          "responseTime": 12801,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b35427-a820-4df8-9a1d-62fa5521b245",
        "cursor": {
          "ref": "f8b19a59-3bbd-4bf2-8285-fa0055a0fca5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "26848eb4-44d1-4e00-b0fb-cd7918655274"
        },
        "item": {
          "id": "a8b35427-a820-4df8-9a1d-62fa5521b245",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f429ed8-041c-44b5-8567-2da57be4593a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8f33742a-2034-424b-ad1d-e028d0517c45",
        "cursor": {
          "ref": "14334d67-15ad-48d7-9be0-2d2182a51208",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "adb385ba-95e3-4d53-94f0-8c1ae3fe100e"
        },
        "item": {
          "id": "8f33742a-2034-424b-ad1d-e028d0517c45",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0349483f-2799-4b8f-bde1-8babb75cac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c7de1504-9b4d-4954-a11f-c700a33fff3c",
        "cursor": {
          "ref": "d814f7e9-69e5-4aa1-a868-0da72cc37b70",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "92c2fd15-f0a6-4b8d-9456-c7d9513ca719"
        },
        "item": {
          "id": "c7de1504-9b4d-4954-a11f-c700a33fff3c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3a864145-6b66-4cff-a855-75e903c8546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c1dc0d-bc8e-4f20-8f47-cb7a8ecbec8c",
        "cursor": {
          "ref": "c3093892-4ede-4841-916a-a35012997d93",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ca1470e8-83cb-40ac-8081-98b2602f3b2a"
        },
        "item": {
          "id": "f7c1dc0d-bc8e-4f20-8f47-cb7a8ecbec8c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "416c3ae7-8691-423d-8f61-d77acd51d64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35982b6-45ae-4c94-9ad6-67e4c140a814",
        "cursor": {
          "ref": "8a7dbc26-200c-447a-b023-fb21f7e01fa4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "085abfe1-63d7-435e-80d3-397fcd47769f"
        },
        "item": {
          "id": "d35982b6-45ae-4c94-9ad6-67e4c140a814",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1503d48c-3748-4d8d-84e6-e66303241c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724fb9ea-cd38-4787-a976-ad50c4d18efc",
        "cursor": {
          "ref": "1f55c3d5-6591-49b5-a66b-b51e5a3cb9b1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3617324d-f7db-4682-ac35-7b9126ededd6"
        },
        "item": {
          "id": "724fb9ea-cd38-4787-a976-ad50c4d18efc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "501c38e4-105a-49af-886e-b15c3214e9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b87c63-dc07-488c-92c8-808284942f63",
        "cursor": {
          "ref": "57539d7f-54dc-4267-997b-b7224f63c533",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f679e568-5cf7-4c47-90dc-24abb2ef56fa"
        },
        "item": {
          "id": "10b87c63-dc07-488c-92c8-808284942f63",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "205d4d3a-a3db-492f-9d0d-a1ee32bc435f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041daf41-7d8e-4dde-916e-ef877d8cbc1d",
        "cursor": {
          "ref": "c61a29c8-b353-4896-9aad-d6876313f35b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1e9052e4-fd40-4acb-aa56-c3f38ca29275"
        },
        "item": {
          "id": "041daf41-7d8e-4dde-916e-ef877d8cbc1d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f2fdc6cf-eb59-455c-8066-016021da45ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcef0b10-1a27-401f-ba0d-77a8aa48077c",
        "cursor": {
          "ref": "bf3a1e08-4d8d-4a2d-8e79-9afe258d4380",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "281e432d-5bcc-4586-9b83-b08f0f455e66"
        },
        "item": {
          "id": "fcef0b10-1a27-401f-ba0d-77a8aa48077c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b440b506-61e3-4c1e-8aee-30ef11f68ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8b2264-d7bc-4295-b634-cbfe9cc29242",
        "cursor": {
          "ref": "6688bfd4-658a-4f0f-b854-f7bcad1cef57",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f1309492-5ac3-4a75-b45a-d21152b9d261"
        },
        "item": {
          "id": "6d8b2264-d7bc-4295-b634-cbfe9cc29242",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ca17310c-d93d-4a68-97e6-3097d0b05f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa8bd44-d041-40a7-81cd-c13d15da80d8",
        "cursor": {
          "ref": "4f4a2473-c678-46f3-a5c2-c5e252398256",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6482fb43-e483-496c-8ee5-a97a08262cbd"
        },
        "item": {
          "id": "6fa8bd44-d041-40a7-81cd-c13d15da80d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "32d6e10d-158b-495c-b642-d0c8137151e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde28be0-7a93-4b96-b5d4-20bdf3857d45",
        "cursor": {
          "ref": "cfa91bac-3bd5-41c6-aa51-74963b597f98",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "73b60ef0-8ee4-4dc2-8e36-d488ef96d3c3"
        },
        "item": {
          "id": "cde28be0-7a93-4b96-b5d4-20bdf3857d45",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a2aafaf-493c-4670-849c-ccc6a88699ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea25ec4f-3083-4ad3-ba5d-7c489fcbb920",
        "cursor": {
          "ref": "3c22707a-bdd6-4a11-a66a-cb2f55f867f2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "54476ea6-10f8-4cfd-8f1b-fbf2dc1f4da9"
        },
        "item": {
          "id": "ea25ec4f-3083-4ad3-ba5d-7c489fcbb920",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3a13b66-ed61-4be7-899e-f925bcf33c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c80f9a-bde0-4fdb-99e9-dd17a934cca0",
        "cursor": {
          "ref": "ebf46e03-79bd-4fa9-8d53-56bb98ba54ac",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e61d7d4c-6938-4279-be7d-e459ac90f6d1"
        },
        "item": {
          "id": "87c80f9a-bde0-4fdb-99e9-dd17a934cca0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fbf864b9-b9fc-4aa6-8703-4b3942c3c45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8744d-276c-4e01-81cc-c1bf35a50958",
        "cursor": {
          "ref": "c14ffe8e-6993-4b93-aba9-5f18cd68e52c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fcbd2255-3fc7-4707-a7fe-7f4b6b106bb3"
        },
        "item": {
          "id": "13f8744d-276c-4e01-81cc-c1bf35a50958",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b0bf50c-6d17-4e00-9fba-15f9ecb869af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b3612e-1356-49c9-b4a2-59ba5d79f058",
        "cursor": {
          "ref": "d74f6dd8-af25-4ddf-94c0-47403e35b4d5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "641c42e6-164b-4d8d-b284-57c0e49ef177"
        },
        "item": {
          "id": "54b3612e-1356-49c9-b4a2-59ba5d79f058",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "200793fb-fa40-49ef-9a37-19d5b52eff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80474c14-b219-4755-83b6-a283b9a7b7bd",
        "cursor": {
          "ref": "947ba303-c94c-456d-bbe1-c62f1a46f90a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "80dd75fb-cf99-40d4-a388-ad39a81ce3db"
        },
        "item": {
          "id": "80474c14-b219-4755-83b6-a283b9a7b7bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a0afb9dc-a74c-47f0-bdd9-1ab5a1078fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61d4216-01c3-474b-96ad-b9883c0afef9",
        "cursor": {
          "ref": "e52f750b-3665-4008-a3ab-c11735222181",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "33fb83b5-1d2d-4fe1-9cb3-e36faf05e9dd"
        },
        "item": {
          "id": "e61d4216-01c3-474b-96ad-b9883c0afef9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "daeaa317-8a81-4864-933a-eeafa25cb53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111bdc4e-34eb-45d2-98ea-f4295d0676f5",
        "cursor": {
          "ref": "cd3ddbd8-740b-4c1f-a922-b4885c37b2af",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a2fd429b-d10f-40f3-aa38-1bc5a5b8603e"
        },
        "item": {
          "id": "111bdc4e-34eb-45d2-98ea-f4295d0676f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be87fed9-a2ca-43e5-b35c-a9f1a18ea6c5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "79f6b316-2990-445b-ae69-7a905001df02",
        "cursor": {
          "ref": "d098775d-44f5-457e-b78f-76ba26fc976f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2c6fb3e6-90c2-4fc8-83a4-b9e49ab80148"
        },
        "item": {
          "id": "79f6b316-2990-445b-ae69-7a905001df02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94f032dd-3e81-4248-bf0a-fb1f4beeaecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8c12b-7976-4f91-ad9f-fafd1a0c57c7",
        "cursor": {
          "ref": "7f298876-77fb-4c27-9b67-434810ee1bd3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "108026e1-354f-4c13-a8d1-6ca30f2f3ab2"
        },
        "item": {
          "id": "b5a8c12b-7976-4f91-ad9f-fafd1a0c57c7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "37fa8fd0-462a-456d-8a44-4c955a8fc754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfbc34b-f3f8-4aba-8d64-3b977095e905",
        "cursor": {
          "ref": "e01f47a8-a003-4fd0-9108-6acfafb60a92",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cd86dea6-a81f-43d3-ab93-01465a0f6348"
        },
        "item": {
          "id": "5cfbc34b-f3f8-4aba-8d64-3b977095e905",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1925c50-0704-407d-b2a9-b427622b9f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7f8b6e-02e0-46ed-a7d3-009ca9f17a9d",
        "cursor": {
          "ref": "cc5c536e-2efb-44ac-b8af-05f6365f42d2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb787cf1-473c-4609-8386-4d97052a97cc"
        },
        "item": {
          "id": "ed7f8b6e-02e0-46ed-a7d3-009ca9f17a9d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "47f7ee54-035d-4e1a-8aa4-ec0ef6e89fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91cac80-772b-400b-8acb-7554304c3e97",
        "cursor": {
          "ref": "9cfa255d-ead8-423a-984b-40a3ef1419cd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "374ef59b-a9e2-4b2f-9c80-514dd74947aa"
        },
        "item": {
          "id": "a91cac80-772b-400b-8acb-7554304c3e97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1444fd71-83d8-40ec-bccf-774aac68c3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd9bf02-ce55-40fc-a76a-abc233538099",
        "cursor": {
          "ref": "17319c2e-8cd5-4139-8c86-7930093c12fa",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0a403c63-3d22-46a1-9e19-a7115a81aa5c"
        },
        "item": {
          "id": "2fd9bf02-ce55-40fc-a76a-abc233538099",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5ad4c8e3-e95b-4c38-ad79-f3c4e88026d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536464a6-67f2-4f7e-96ea-0970990e03c4",
        "cursor": {
          "ref": "7def1534-dc74-4f61-bf2b-172fb66da146",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "45dbd1e9-6293-43c8-8093-f18c1897a0bd"
        },
        "item": {
          "id": "536464a6-67f2-4f7e-96ea-0970990e03c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "729e74be-185d-4dee-8ab6-030bccea462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c9a727-20dc-4b6b-8a5f-d981bddc6762",
        "cursor": {
          "ref": "89aac615-7a11-4308-ae4d-e8eaef50b6a8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "55c9fe69-55b5-4712-90b7-fa1cebec49f8"
        },
        "item": {
          "id": "94c9a727-20dc-4b6b-8a5f-d981bddc6762",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8d4b8941-a898-44d1-b7c9-1b65b5d6a427",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a0e657aa-b038-44c9-94c9-7fa606fd3089",
        "cursor": {
          "ref": "b1b92bf1-8fe8-46b2-b1ce-23afb9767eb6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "803fcc65-1db9-4de0-8d7e-17ddded94357"
        },
        "item": {
          "id": "a0e657aa-b038-44c9-94c9-7fa606fd3089",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a4b07f37-7ac2-47d5-a732-13b17b7e42a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a974ec-271d-4d22-a96c-ec98bcc161f1",
        "cursor": {
          "ref": "550ed5aa-f191-4ba7-9055-22e1c5b798f2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "73789c1d-3311-4aca-885e-c84d9d7a2e8b"
        },
        "item": {
          "id": "20a974ec-271d-4d22-a96c-ec98bcc161f1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "14a46162-d552-4c29-b290-72a65917818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8956934b-5f24-47d0-8757-fc5b61b7f8a8",
        "cursor": {
          "ref": "858a6fbb-e9d2-47c1-855b-83d319c43a4a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "360afd76-22ff-4a27-97d1-94a7621cafb1"
        },
        "item": {
          "id": "8956934b-5f24-47d0-8757-fc5b61b7f8a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c81e80a-75d5-4b28-afca-4193d5ca2f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdde11e8-eded-499b-bf9b-4a7a95fd06bf",
        "cursor": {
          "ref": "47fadb75-7048-4c3f-a21b-f5da779913b8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a3dcd3da-b9a0-44c5-89cb-3718f3fd8e5d"
        },
        "item": {
          "id": "fdde11e8-eded-499b-bf9b-4a7a95fd06bf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a7ad2acc-024c-4971-bba3-f23bbff75e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c012f19-a3a4-4e6f-99ca-2f5c761416c2",
        "cursor": {
          "ref": "0aeb8246-5633-4c17-aef4-319fe178f190",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "75871fc8-e75c-4716-b3b8-e41487a2460c"
        },
        "item": {
          "id": "6c012f19-a3a4-4e6f-99ca-2f5c761416c2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a3c7b91-4910-4091-aa24-f41f814ff9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d252e44e-bb95-411f-8798-11d3353a6a01",
        "cursor": {
          "ref": "0c08f8b4-7e68-4b43-b7c0-c8eff3712d37",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ee2300a6-45b3-470f-a2f0-801c3ea0beea"
        },
        "item": {
          "id": "d252e44e-bb95-411f-8798-11d3353a6a01",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a08b339c-3628-49d0-9990-839d1038c97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02e5332-131b-4406-ad53-7055e4fbcd48",
        "cursor": {
          "ref": "7ef5f548-effb-41c2-8fa2-4e17865729e5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e06fdb7f-9c8c-4d51-be5d-3791b5e6fc99"
        },
        "item": {
          "id": "c02e5332-131b-4406-ad53-7055e4fbcd48",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0342bdce-7d1a-4b95-8b84-ec791c7e5bda",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "348991a2-ecf2-4f7b-81e0-2dc5ae47d4db",
        "cursor": {
          "ref": "b40b7ae6-b0b5-48db-aead-4d95edf26a04",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8d7f760a-e0b2-49ad-8a62-a574396964c4"
        },
        "item": {
          "id": "348991a2-ecf2-4f7b-81e0-2dc5ae47d4db",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2922131f-1320-43fe-9e46-6c475cbd7182",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "1d5b7817-678e-44f4-a81f-025d5a22bd44",
        "cursor": {
          "ref": "040f4a8e-e76c-42c5-9b92-a7f9e94abd75",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec1ac786-70ca-4016-a0b7-414ce6033979"
        },
        "item": {
          "id": "1d5b7817-678e-44f4-a81f-025d5a22bd44",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a3146897-baac-4b58-ac05-300b9639c730",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "434c30df-d4f1-4270-bd87-a6b4dd8e8593",
        "cursor": {
          "ref": "95004d56-6a81-413d-8831-a58f449a278d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c0fa7d91-7f90-4198-83bb-59d3589d66b9"
        },
        "item": {
          "id": "434c30df-d4f1-4270-bd87-a6b4dd8e8593",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dfd36680-ad8a-4f6c-a51d-c2f49366dee5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "903267e5-c83d-4c27-afd4-5535fe9c8773",
        "cursor": {
          "ref": "bea5cf2e-24e2-4bb8-8a94-4bc7511f41dc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "66fbdecb-46bb-4bcb-9e1f-28c000670931"
        },
        "item": {
          "id": "903267e5-c83d-4c27-afd4-5535fe9c8773",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9f0aa706-9c76-470f-8443-2c4dfe9d2e93",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "74b1537b-ac8e-4e8f-a62b-eb9886bfa493",
        "cursor": {
          "ref": "d9187ddd-baa0-419d-8f7d-b5ba5df909d6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8f5ffe62-c04f-4d20-895a-fc1879e52c94"
        },
        "item": {
          "id": "74b1537b-ac8e-4e8f-a62b-eb9886bfa493",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eaf7c50c-b9c7-4b36-b21a-f6abce89f5eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "79d36c18-aaee-4bc7-85ff-6ac2a1341409",
        "cursor": {
          "ref": "49094665-cf7d-47bc-910e-751696e54128",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f1796f44-57ba-48f3-9ab4-b6acb3a25b79"
        },
        "item": {
          "id": "79d36c18-aaee-4bc7-85ff-6ac2a1341409",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b173502-0368-400b-975a-fe148cfa1c02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2534ade8-ae42-4394-be53-a452bb9512ca",
        "cursor": {
          "ref": "8fa8e6e8-82e9-4f29-8ad2-319497973c5e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6d92e61b-5100-41d9-9ef8-12d223dda264"
        },
        "item": {
          "id": "2534ade8-ae42-4394-be53-a452bb9512ca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1dc9f53c-eb93-4dab-85ec-337ecc936774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee27c97-0cea-4dc4-8b34-de9dbb62f0cf",
        "cursor": {
          "ref": "d523512d-a949-4869-aa47-d498ca608d74",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b640a3a6-8609-4d39-969f-512943062722"
        },
        "item": {
          "id": "aee27c97-0cea-4dc4-8b34-de9dbb62f0cf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3e749d27-b6a9-4837-af0d-c3de4b126e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c90ebfb-cf99-44a2-bd3b-c3e6969a2f47",
        "cursor": {
          "ref": "8c3b1e1a-831b-4961-882a-231440d1e940",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "657ee830-525c-4dfe-85f7-e1fac5d8e754"
        },
        "item": {
          "id": "4c90ebfb-cf99-44a2-bd3b-c3e6969a2f47",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9fbe831d-64e5-475b-95b5-0db8d0be1add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6617936-9805-4bbc-9765-8aa24dcbad2b",
        "cursor": {
          "ref": "db27ca7d-86e1-443a-a9c5-898396d88435",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "07003e69-a9fd-4709-be93-ff3fc4bfe9ed"
        },
        "item": {
          "id": "f6617936-9805-4bbc-9765-8aa24dcbad2b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8072c696-d736-46de-af05-a36f0f4e3990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efd544f-bd0f-427a-aecb-6a30080a8755",
        "cursor": {
          "ref": "638797c7-8a75-4536-87ab-cf8c1d335e94",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "23a18e6a-18d5-4748-9373-680a30df6b19"
        },
        "item": {
          "id": "9efd544f-bd0f-427a-aecb-6a30080a8755",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dafedb01-577a-4678-bd1a-8b3f91a7fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c13f7b-cdbb-4045-aad3-9ae519559844",
        "cursor": {
          "ref": "0b7ba830-8412-4ad9-ad61-60ae131fa63b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "36844236-50bf-464e-881d-5a51881cc9f1"
        },
        "item": {
          "id": "f9c13f7b-cdbb-4045-aad3-9ae519559844",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9e3b80e0-004a-4539-b2d3-1219c3695d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b89afec-990c-40db-8bda-bf0174d8fcda",
        "cursor": {
          "ref": "3682fb4d-0f68-4750-ad27-92597edd882a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "709c6555-e5c0-4d60-b6d2-e53394211ecf"
        },
        "item": {
          "id": "4b89afec-990c-40db-8bda-bf0174d8fcda",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ff34e6b-b6d5-4a0d-a11f-e445b99bf8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925f69fa-676e-4f64-9ddd-639c6d653bae",
        "cursor": {
          "ref": "e52e24e6-3e55-4e62-965a-0bebc5d2172e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ab355361-0717-4727-9ecc-e0ce3dde77c2"
        },
        "item": {
          "id": "925f69fa-676e-4f64-9ddd-639c6d653bae",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7304ee7d-f97c-4cfa-aa76-881c64d55d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd57b63-c984-4dfa-932d-24fb180dc281",
        "cursor": {
          "ref": "1526c49e-aaaf-44d9-b2a1-b39ae5b3c01c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40ec2546-8fbc-4cea-8629-e927a03c309d"
        },
        "item": {
          "id": "4dd57b63-c984-4dfa-932d-24fb180dc281",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9edd085d-592b-4142-a5a7-b9939f93bf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9beb6957-f2ab-4059-a8cd-b2d9295f9a09",
        "cursor": {
          "ref": "af86d071-e7c8-4835-bab4-263ca36d95a8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6241eb0e-71fd-44e0-8934-c73ad3c05827"
        },
        "item": {
          "id": "9beb6957-f2ab-4059-a8cd-b2d9295f9a09",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cfab199a-00e0-4b03-b133-767ef2df01b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849fb811-da30-4052-82db-af1aeb2ebcbc",
        "cursor": {
          "ref": "b82550a3-720d-492f-be98-08c3530e3c08",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ef2fd243-ed2d-4719-b9dd-b10b6253c3fc"
        },
        "item": {
          "id": "849fb811-da30-4052-82db-af1aeb2ebcbc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4ca849e7-bafd-4f45-9242-8443631ff3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff0c487-d367-49e7-b5ed-f487da1d1af5",
        "cursor": {
          "ref": "d3a4ea6c-a374-4f1f-a1f7-ed93d453ab55",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c342d77f-c523-422a-b787-16aa47507749"
        },
        "item": {
          "id": "4ff0c487-d367-49e7-b5ed-f487da1d1af5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "60fe10a0-08b1-4ced-ba52-4f84d0ec4c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc0fbba-3002-4401-bf7d-8ea03af47c54",
        "cursor": {
          "ref": "52d181e6-743a-4986-b929-083a81d84dc1",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2b5865bb-888f-4149-9e20-5d46a79673d1"
        },
        "item": {
          "id": "8bc0fbba-3002-4401-bf7d-8ea03af47c54",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8acc677d-4065-4f97-9309-f844fb86a633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8d5411-21a8-4c94-b9a9-aea0c9414ca0",
        "cursor": {
          "ref": "8ed46208-1214-4d57-933e-c5662f3044a5",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c0dad1d6-428f-4dc0-bcbb-4028cddd604a"
        },
        "item": {
          "id": "de8d5411-21a8-4c94-b9a9-aea0c9414ca0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "91faeae1-b54d-4ecc-ac7f-238787ea9dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed64015-564c-448b-9f79-cb02825a1ca5",
        "cursor": {
          "ref": "65713365-4881-4f6b-b9a7-04430525935c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fa34b41b-30d9-416f-9b10-b8fea4532c3f"
        },
        "item": {
          "id": "aed64015-564c-448b-9f79-cb02825a1ca5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d9aefe11-756f-4920-a8b2-e939eaae8e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125bb67b-d43f-4a54-8a5b-c33011faca35",
        "cursor": {
          "ref": "06eb9aa6-9c9e-4ef7-8e3c-a594494863b8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bbb63413-5db2-478d-a6ed-7b13788d9034"
        },
        "item": {
          "id": "125bb67b-d43f-4a54-8a5b-c33011faca35",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "19443dc8-c495-48e3-ab51-f86546b442b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0c69e0-917b-4c6c-a739-6a4f3776e341",
        "cursor": {
          "ref": "db45ca45-fc81-4d40-9278-5cca563b0ea6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "100f0a48-be81-4d76-a744-4a7e326527da"
        },
        "item": {
          "id": "7a0c69e0-917b-4c6c-a739-6a4f3776e341",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2b97f042-b98d-4931-a42f-d47f39b5f4f9",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "54564a42-3ed2-40a5-ae6a-83040e32b48b",
        "cursor": {
          "ref": "032fc18a-bee2-416c-a79d-a026ce0660ef",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "243b6645-aeb9-4337-bdf2-3d1c1781e08a"
        },
        "item": {
          "id": "54564a42-3ed2-40a5-ae6a-83040e32b48b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "efcba5b3-4c86-4975-9558-f64ea83b57c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34303f6f-3661-4d5d-aadd-ce0307136d25",
        "cursor": {
          "ref": "191f5f6b-0d0b-40ed-91de-e7fa9b579c03",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "051b8da2-47f8-4b33-888a-76caa563cbd2"
        },
        "item": {
          "id": "34303f6f-3661-4d5d-aadd-ce0307136d25",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "de114fcf-4578-4844-b4bc-f93a19ed6b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ed0753-9712-4410-bd2c-c856fcd9d0a0",
        "cursor": {
          "ref": "c6d2fd28-0104-44f6-8ac7-60d115525473",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9dd1642c-8d47-4ef9-89b2-cb84c7230396"
        },
        "item": {
          "id": "06ed0753-9712-4410-bd2c-c856fcd9d0a0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "50ac3eaf-c71b-423f-994d-b8568a6fed9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facb673c-b09a-4498-8fe3-8477dae9ed63",
        "cursor": {
          "ref": "5d69d835-b812-4679-ba0a-2c8a4fc2c98f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a8ecb1c2-c22a-429f-8dba-76a05d4c957a"
        },
        "item": {
          "id": "facb673c-b09a-4498-8fe3-8477dae9ed63",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4a6cc698-87e2-4fad-912b-05434962586f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd42dde-0310-45ff-aea1-90fc53cb322b",
        "cursor": {
          "ref": "a21bd757-dbbe-4b22-84aa-93312616a5fc",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0f1998bf-cf65-4183-b061-c03dd499b6d9"
        },
        "item": {
          "id": "6dd42dde-0310-45ff-aea1-90fc53cb322b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6e98ba77-601d-4a4b-b849-674e03f0a8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856aa653-416c-47e7-921c-44af3fc3b340",
        "cursor": {
          "ref": "b3518d4d-62db-4c8f-9fd6-71b2974b12eb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e7058b3-8543-4741-aaf0-3da34c71dec4"
        },
        "item": {
          "id": "856aa653-416c-47e7-921c-44af3fc3b340",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cdf22188-43a2-4ee2-b32e-abb94a973ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756e6353-7875-4429-8515-3527ee4565c4",
        "cursor": {
          "ref": "c6dfff69-1b20-42db-b5a3-df7789e70f5c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c570e807-32fc-41dd-90ab-556413a84633"
        },
        "item": {
          "id": "756e6353-7875-4429-8515-3527ee4565c4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e47e0313-7844-4c7e-86bb-f7ed3fcc1dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fda43f9-1340-49f8-a05b-834a13a7d697",
        "cursor": {
          "ref": "aabb312f-770c-41c0-aef5-0564d7b009a9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d1f3ebc6-7880-4caa-81f0-fd05ab66559c"
        },
        "item": {
          "id": "7fda43f9-1340-49f8-a05b-834a13a7d697",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "edadfce2-c351-4c64-b48b-1ec82ba95a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe7d379-ce94-4d7d-873c-91b45e51988d",
        "cursor": {
          "ref": "acc97d55-9628-4bf0-9511-461c0e96313c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "793c7412-443c-4416-b5b3-26f7f2348fc1"
        },
        "item": {
          "id": "efe7d379-ce94-4d7d-873c-91b45e51988d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a7af16ae-7cb9-4734-a787-0ce257c1c44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e611b17-6faa-4750-97bb-20cc049127e2",
        "cursor": {
          "ref": "fe4fb0a2-fdf6-48aa-816a-46f46e107219",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a78c5adf-bcf8-46d3-a43a-d50b3ff1cf55"
        },
        "item": {
          "id": "7e611b17-6faa-4750-97bb-20cc049127e2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4843aff-9a12-4f94-bb0e-a53d14db147e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51920b71-0f26-4cf3-a4f9-f4f7a49ace9d",
        "cursor": {
          "ref": "735b1ae0-df35-4373-9223-42c1db77006d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "af6d1232-64e2-4c72-b459-978bcd9c044a"
        },
        "item": {
          "id": "51920b71-0f26-4cf3-a4f9-f4f7a49ace9d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "75961bed-d73b-478e-aa19-3080ee564cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9802b6-f4eb-4cef-a634-15e21289867e",
        "cursor": {
          "ref": "50ef4884-7613-423a-b405-ed8dcc4a2a16",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c7356a9-83dd-472d-9df5-a184ccf96af5"
        },
        "item": {
          "id": "2a9802b6-f4eb-4cef-a634-15e21289867e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "efb7f441-9590-474c-b51c-d034a16f95af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03722c46-d4a1-4583-a1b2-7c3088a9ee0c",
        "cursor": {
          "ref": "cb92a319-727a-4bbc-83d3-120b567f6325",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d469bcf3-7c6a-4a62-addc-ffa2ff1e3838"
        },
        "item": {
          "id": "03722c46-d4a1-4583-a1b2-7c3088a9ee0c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "25f41e73-8dd5-4178-b198-910933918ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6fbdd3-9baa-4705-b9f7-4d4f5b4fc015",
        "cursor": {
          "ref": "71f4a4f2-48db-41c0-9d4b-d66235605b68",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c2c96773-f2f6-4227-8c7d-0a797d22cf0c"
        },
        "item": {
          "id": "3a6fbdd3-9baa-4705-b9f7-4d4f5b4fc015",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c0a1a700-2177-43a8-b77e-1ab5e093064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a077ec00-2bd4-41ad-8c3b-db964a171b50",
        "cursor": {
          "ref": "33ef614d-fad6-457a-b2c9-cf1e5a1a63e4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2cebaaa4-c3ff-46c6-b0a8-647982ccf913"
        },
        "item": {
          "id": "a077ec00-2bd4-41ad-8c3b-db964a171b50",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c0cdce94-40d7-4fe5-9b5d-4d638a882b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c860366-a936-416d-8f2e-d6b83c938900",
        "cursor": {
          "ref": "a5c3da36-e796-480d-ae53-06ad4b83fee0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd9d70db-12d2-4dab-8cce-2533168fe550"
        },
        "item": {
          "id": "0c860366-a936-416d-8f2e-d6b83c938900",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "02892543-7251-4f35-9224-ea299ca8b346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4cf308-d7d6-4be8-b192-10e347918dda",
        "cursor": {
          "ref": "23b51640-6e90-435a-97e0-9c44341fb188",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "680b2182-b7ca-4079-8b08-964713fcdee5"
        },
        "item": {
          "id": "db4cf308-d7d6-4be8-b192-10e347918dda",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bf4eaebc-127e-4616-8436-1548d8122b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded018db-825f-4bd7-967e-6de7ab855155",
        "cursor": {
          "ref": "7b56ef52-b4c9-43ac-8b18-5f48f038db63",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d8b9c43d-f0dd-4c50-a357-964dba1a175d"
        },
        "item": {
          "id": "ded018db-825f-4bd7-967e-6de7ab855155",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "431c7292-a502-43a0-aa19-4550152f8de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76be879f-d15d-442f-a080-bb9b3d3ba9fa",
        "cursor": {
          "ref": "d1df7897-7024-434b-8832-5a99997bea72",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "de88d4e8-fa9a-4680-ba8d-643c3380cf6c"
        },
        "item": {
          "id": "76be879f-d15d-442f-a080-bb9b3d3ba9fa",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0f334ec7-2b4c-4f82-9750-cd1b089ca8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b851e8e4-70d8-4542-b435-7e11f475c000",
        "cursor": {
          "ref": "7c429223-84de-42b1-9e36-9e88401dc696",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "82af1644-892b-44ee-8f75-b91826787a62"
        },
        "item": {
          "id": "b851e8e4-70d8-4542-b435-7e11f475c000",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "87725f64-0a09-4ea0-a495-9c76aa92a1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5072475c-5040-4ad5-83cf-b98e08bc7d5a",
        "cursor": {
          "ref": "be897523-10fe-4d5c-9119-91edc9fbe26d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0eb629e6-691a-4008-a063-c746429400d7"
        },
        "item": {
          "id": "5072475c-5040-4ad5-83cf-b98e08bc7d5a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e968bcaa-24fb-414d-af17-daf54f393970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa02470-af1d-4b1e-9e63-6f40afcd91f4",
        "cursor": {
          "ref": "a4049bbe-982e-4e76-94f2-38046913ccb1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d9e507ab-2637-4c99-b142-6065ef3920e6"
        },
        "item": {
          "id": "8aa02470-af1d-4b1e-9e63-6f40afcd91f4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c223f712-b4d3-4973-8281-51b1a504f872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d30dcde-b03d-4713-8f32-b6ba7de33266",
        "cursor": {
          "ref": "ffb72c68-6d52-449f-baa0-276656dba82b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bdb37e88-55e1-4dd9-870e-4d0b5be5ca83"
        },
        "item": {
          "id": "5d30dcde-b03d-4713-8f32-b6ba7de33266",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2f812e29-ebb8-499a-813e-ae8b0191b8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b545d5a-8c8f-430a-b5ec-7174b3b90e47",
        "cursor": {
          "ref": "7e32f7d9-e5c8-4cfb-b931-0c61eac8fcdf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ab1f6c26-2a74-4654-b6ef-6b6d8295b9a5"
        },
        "item": {
          "id": "0b545d5a-8c8f-430a-b5ec-7174b3b90e47",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "55faac4c-c4f9-4efa-ac4b-69863e187a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077325fe-9709-4de1-97a5-779a5ca45428",
        "cursor": {
          "ref": "9a4294a6-7df1-475f-9d27-ab3ada694353",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "242841bd-5b3a-4c10-af29-575596c9cb6f"
        },
        "item": {
          "id": "077325fe-9709-4de1-97a5-779a5ca45428",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f71549a8-591f-4aff-b480-57b87cc8acd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891ccaf7-3c62-48ec-bdc4-0fe64513ba56",
        "cursor": {
          "ref": "68a0f813-1b12-49fe-ac3e-ea20c922db5a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "057d2536-9ed5-43c4-8a3e-a2ffddbfa851"
        },
        "item": {
          "id": "891ccaf7-3c62-48ec-bdc4-0fe64513ba56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f85be7ee-dea3-46c3-936c-a221227ccfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea63cc0a-798d-4c7e-a701-2339c320600d",
        "cursor": {
          "ref": "1bc4f3ab-53b9-4712-918e-4d310cae0ebd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "38a2761c-6171-4795-b424-6a0e31693263"
        },
        "item": {
          "id": "ea63cc0a-798d-4c7e-a701-2339c320600d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6406bd4e-1547-4777-8496-796683e1fb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c242926-ce16-4069-ba38-3e35c3ddc201",
        "cursor": {
          "ref": "dd7ee390-1bae-4fae-8682-d5e98dad6ef7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9bf8a212-7734-40c2-ad0a-bdb52a1012e0"
        },
        "item": {
          "id": "5c242926-ce16-4069-ba38-3e35c3ddc201",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "03158245-8496-41c4-a6ed-d6cd8180f5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717dcc88-9697-4601-8be9-3f5a829ae2a7",
        "cursor": {
          "ref": "6f80b9b1-92c6-4593-a333-6f3c272f1392",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ccab1eb4-0c92-4b74-8a4a-47addef27a20"
        },
        "item": {
          "id": "717dcc88-9697-4601-8be9-3f5a829ae2a7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "083d06de-fd09-4da8-b6d7-4975f92b1619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4909d2c9-8d3d-43e0-af14-6bbca7ff79df",
        "cursor": {
          "ref": "3f0314d7-4d8b-4b75-8ebd-66847ebdc801",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "50f82426-8424-4b2b-850b-1b737a4e9657"
        },
        "item": {
          "id": "4909d2c9-8d3d-43e0-af14-6bbca7ff79df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "26f6486d-09f7-4aa5-8342-7deabed1ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dbf85c-4dc7-4276-a1a4-e06f0c514799",
        "cursor": {
          "ref": "04b4ee8a-e4c9-41b1-adb0-45477ae979f1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cca7b9de-f80a-415f-b446-63c7ac50a824"
        },
        "item": {
          "id": "49dbf85c-4dc7-4276-a1a4-e06f0c514799",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a36ca96c-78ab-4e68-b6fa-a9c40c974fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02edfc2e-aa99-42eb-bf49-f4ef0603c8ec",
        "cursor": {
          "ref": "23b4e543-c589-4bbe-878f-5ac19f02d396",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8af29eae-8d8c-468c-8855-e1f525d1daf1"
        },
        "item": {
          "id": "02edfc2e-aa99-42eb-bf49-f4ef0603c8ec",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "771c4c97-87e3-4e92-b2a9-f6d719f79d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1aa1e1-fbfc-4b20-8208-d6c549ef6e78",
        "cursor": {
          "ref": "e2931fd0-7565-4640-ac96-be0b6fc1f7e0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0223ed63-ee96-4141-b443-0bee18c00f60"
        },
        "item": {
          "id": "de1aa1e1-fbfc-4b20-8208-d6c549ef6e78",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9bd9909a-e73e-4bfc-b016-238afdf7f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9318bbc3-8bf8-4c54-8441-45d131b65850",
        "cursor": {
          "ref": "3f185688-a379-4eac-a8f2-87d49bc29069",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6e558980-faf3-41cc-a888-d869be65b67a"
        },
        "item": {
          "id": "9318bbc3-8bf8-4c54-8441-45d131b65850",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d8b17df5-14d0-489c-8de5-10a1227e373c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219793e7-8627-4c08-a4ca-27745e434c7b",
        "cursor": {
          "ref": "c5aa219b-7b1c-476f-88f4-49b0daedcf33",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b089f4ec-17cc-46cc-b6a3-1c06d7d58ae7"
        },
        "item": {
          "id": "219793e7-8627-4c08-a4ca-27745e434c7b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fa9d2bfe-8a4a-47d8-a17e-ae34b86f40fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ef37b-1a28-4162-abfc-12f42f9d5ea4",
        "cursor": {
          "ref": "c0ba058c-ecc9-49e0-8a95-ab9bc0b953d3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d9015376-e30f-43e1-834a-2400b1e3fc0b"
        },
        "item": {
          "id": "ec4ef37b-1a28-4162-abfc-12f42f9d5ea4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3236330f-20ea-47e7-8b9a-f659c4bc4af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeca06fa-28ac-4501-af7f-a3a5c98f8a2a",
        "cursor": {
          "ref": "c7e95c54-9098-47ff-adc4-ffae77cb7119",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "86ce2355-fa4e-4e6c-b608-a31a097e7be9"
        },
        "item": {
          "id": "eeca06fa-28ac-4501-af7f-a3a5c98f8a2a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a7883d54-db79-4ad4-b6de-f379928b084d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7cfdf0-2630-4768-9939-45938212513d",
        "cursor": {
          "ref": "d30b3a85-a7e6-49c7-8462-4a5552f1c4be",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "60be6037-9eb0-4a12-b921-f61cb668ec5f"
        },
        "item": {
          "id": "be7cfdf0-2630-4768-9939-45938212513d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f4e76ecb-4f2e-4148-9512-7c6b0337e37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fef2437-55de-469d-883d-c8653dadc7d6",
        "cursor": {
          "ref": "4b077004-3f9e-402b-8f84-04485641adcd",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e0c8cc16-9b2b-434c-800b-cf16d4ef91d9"
        },
        "item": {
          "id": "1fef2437-55de-469d-883d-c8653dadc7d6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9dc6b6cc-3fb8-47de-b81b-8244eba25c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52822bd0-39a7-4dc1-9421-bcc73e14aa9f",
        "cursor": {
          "ref": "c325f2eb-789d-49ed-9fc6-db6643e6e67d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be3600db-b33a-460a-bfc6-11b8426baef2"
        },
        "item": {
          "id": "52822bd0-39a7-4dc1-9421-bcc73e14aa9f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f6d6eb0d-1053-41b4-b98e-9952698fbf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c260d6-af6f-4245-9199-123b3409f710",
        "cursor": {
          "ref": "51304282-1278-4de0-bbed-e8660a187669",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cb6d2f33-610f-43bb-a567-8386d2ffcabd"
        },
        "item": {
          "id": "d4c260d6-af6f-4245-9199-123b3409f710",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dc7a5f51-a2b5-4744-9d5d-41e5167e537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87852b6a-1491-45e5-8dcf-14fed0c862d3",
        "cursor": {
          "ref": "ce0a4d54-c367-4553-b5c3-2fd18203c08c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d64eedcc-0ca7-4fc6-b4cd-c33b9eec0ad9"
        },
        "item": {
          "id": "87852b6a-1491-45e5-8dcf-14fed0c862d3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4edd4c4e-7b80-46a1-89e6-bee039486330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74185f9f-b932-4238-8fd0-86e2606f21e3",
        "cursor": {
          "ref": "7913ae6f-df82-488d-a1da-876bf159b9d9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6ea13323-1e1d-4e35-a807-a55b8f9c6e85"
        },
        "item": {
          "id": "74185f9f-b932-4238-8fd0-86e2606f21e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fcb768a3-e833-4c88-985d-080a7436cba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca48a1d1-3a5a-40c0-b639-e304556286a0",
        "cursor": {
          "ref": "eb967837-b2fa-474d-81ef-00bc6f25a9d9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b691b06e-a8fb-4b11-b27a-d0a3279e7c40"
        },
        "item": {
          "id": "ca48a1d1-3a5a-40c0-b639-e304556286a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9625a798-c2af-4c8c-a180-5c67b4bd73e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d316b1b0-df0f-43bd-b855-6702a35a62b7",
        "cursor": {
          "ref": "4feb6025-b94c-41dc-8436-1cb03a22e28c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f3062b5b-63ad-4705-8ebd-edc39abcb371"
        },
        "item": {
          "id": "d316b1b0-df0f-43bd-b855-6702a35a62b7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c44e861a-9bd8-40b5-acff-32f55fda64ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df393b2-b486-4160-bf48-cd3f42e7ddd8",
        "cursor": {
          "ref": "2a73f549-bf9a-4042-b98b-754c62fab932",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8e4d5c59-931d-46c7-872a-77000709c771"
        },
        "item": {
          "id": "9df393b2-b486-4160-bf48-cd3f42e7ddd8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5e25b59f-8968-4ebd-b5c9-b55b461fe828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12f1ca0-bc11-43d8-9913-33e1074c8ce4",
        "cursor": {
          "ref": "9d871b4c-d9eb-4c1a-85f0-a5e84e6d8f6f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dffe1aee-4272-4cab-a67f-b0964704fd7b"
        },
        "item": {
          "id": "b12f1ca0-bc11-43d8-9913-33e1074c8ce4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4da66865-d18f-4008-966f-21108bd17f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbee9c14-8686-4920-bb90-890d098eea97",
        "cursor": {
          "ref": "37c85a08-800a-4835-84d1-4196dd770afa",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "971a1e85-face-4ff7-b084-3ae778d5ca92"
        },
        "item": {
          "id": "fbee9c14-8686-4920-bb90-890d098eea97",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "47520595-0442-40fe-8a36-cce329db49ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f074afb7-d5e4-4fc0-81a8-394b8298e6d1",
        "cursor": {
          "ref": "e1f9b05c-8ea1-4e6f-9002-7f15d0e392a6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d338fcd0-3049-49e5-a6fb-01e64c758eb4"
        },
        "item": {
          "id": "f074afb7-d5e4-4fc0-81a8-394b8298e6d1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9dac89ad-afce-40a9-b60d-1cbac2b23dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d0a41c-1fd8-4a69-b4ab-5c3944dd6baf",
        "cursor": {
          "ref": "d6d4d0ce-54a6-4b2b-89d0-12ddc114095f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3dc4f2f8-37aa-454f-9f34-53fc9b864878"
        },
        "item": {
          "id": "c0d0a41c-1fd8-4a69-b4ab-5c3944dd6baf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d1b92663-dfd5-4212-b00d-0c48e6ffaf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2d7e43-e0ec-4bc7-9b9a-66ac14d7e795",
        "cursor": {
          "ref": "2367f6ac-c905-485a-8695-6b009eacb6a0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a5bf2928-e392-474b-bd21-74f560f65b6f"
        },
        "item": {
          "id": "7e2d7e43-e0ec-4bc7-9b9a-66ac14d7e795",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5e9b8607-b659-454f-b13d-743d4fb55a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a239059c-aaab-412f-8a83-4d0798cb5609",
        "cursor": {
          "ref": "8b2e2cdd-41b5-49b1-aaa7-45a56125f0af",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7590a9bb-dde7-47b0-8e8b-166bfb1ccb5d"
        },
        "item": {
          "id": "a239059c-aaab-412f-8a83-4d0798cb5609",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a1e71076-7c42-41d8-baff-2fceb2453c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d77267-400d-46c0-87a4-269ea220890a",
        "cursor": {
          "ref": "571b8180-c112-48f6-976a-5bd1fdda5ad4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "14b59eb4-450f-4f69-a348-df43c11b6c48"
        },
        "item": {
          "id": "36d77267-400d-46c0-87a4-269ea220890a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aea17bfd-9d27-443c-bf56-ec45a0a51d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85819bfc-c899-4720-b46a-94155ff8c6e7",
        "cursor": {
          "ref": "1d5996b2-0cbe-4c36-a0d0-966be346f2bd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "22913b4a-71f3-44e7-8fa8-e24413bdb929"
        },
        "item": {
          "id": "85819bfc-c899-4720-b46a-94155ff8c6e7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e03cdcf6-4c36-4768-94b8-7ebbf5527140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e37bfbc-1d20-4298-97d5-955017c844b2",
        "cursor": {
          "ref": "d4b503ba-172c-4b00-9925-4718d1ab41ab",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9dd30606-abbb-44ec-9ffb-153551cefb77"
        },
        "item": {
          "id": "5e37bfbc-1d20-4298-97d5-955017c844b2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6f2e4fa1-e61f-4a0a-9997-1b61e50fb7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb5636-8346-4234-9951-b785c950c53f",
        "cursor": {
          "ref": "454a5034-23d2-49c9-bc89-7228c8746845",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b48f3cb5-0fda-43dd-872a-bc2707d7d45e"
        },
        "item": {
          "id": "57fb5636-8346-4234-9951-b785c950c53f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6b3ed9e0-86fb-48b0-a2c2-c9a5d675463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253fb191-3cb3-4658-a370-04585c921298",
        "cursor": {
          "ref": "45ae0be7-68d5-4535-8967-3520300f570a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fdf5f460-5009-413f-9fd9-695dcab15423"
        },
        "item": {
          "id": "253fb191-3cb3-4658-a370-04585c921298",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34d283bf-f1ee-466a-88b5-5f7be82006e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab88384-9045-4f9e-b278-4b69801a709d",
        "cursor": {
          "ref": "523b0f6f-0a6c-4954-863c-45a5c5a84fbd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d4229181-8573-4679-9c6e-3ea360a4d26d"
        },
        "item": {
          "id": "cab88384-9045-4f9e-b278-4b69801a709d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dc974622-e85b-4516-b9ea-c1bea981dc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f351bb48-925a-4d33-bfc4-7521627f8d84",
        "cursor": {
          "ref": "b1d59d48-0a59-4995-b899-23e59afbd331",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6025c075-4d53-44f0-bdbb-5d05841306b9"
        },
        "item": {
          "id": "f351bb48-925a-4d33-bfc4-7521627f8d84",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b5e4bbb6-7e24-4bb7-a3ca-e4a41b8e5100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31e1063-a0e8-4fb5-8f42-ba4cf33a9084",
        "cursor": {
          "ref": "3c18bb40-b55a-4c15-829b-7d766e2c0461",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b035ffbc-c8d7-42b4-ad9d-167ef4e16b65"
        },
        "item": {
          "id": "e31e1063-a0e8-4fb5-8f42-ba4cf33a9084",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "026c6d37-6616-494c-a786-422cbf9f2172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4337805e-6dee-4ea2-a356-740f110cfb9b",
        "cursor": {
          "ref": "2b6bb2e5-b1c4-47f9-bb77-76208df6bed8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "56157b09-1ca7-4787-a206-e493637b1a34"
        },
        "item": {
          "id": "4337805e-6dee-4ea2-a356-740f110cfb9b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fcb23143-3e5e-4144-9c31-b803eb282886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91d0184-ab1e-4bef-ba9b-dc194ee3788a",
        "cursor": {
          "ref": "022ebb6b-24e6-499c-9cc9-f251241ed4ff",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "254732df-f8f3-4996-84c0-ca44eed3c3fd"
        },
        "item": {
          "id": "a91d0184-ab1e-4bef-ba9b-dc194ee3788a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "851a2700-9cd9-4bed-a475-b00d4218637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f477db-f9e7-4018-b5ba-6fc673bf2fbf",
        "cursor": {
          "ref": "94ce7ab2-ab6e-44d3-89e4-0fc7241d29ee",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a1d03fc0-f8c1-4801-b29d-f148c9dfb4ec"
        },
        "item": {
          "id": "b4f477db-f9e7-4018-b5ba-6fc673bf2fbf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ba4fe113-2be8-45fe-9226-dfe40ba3a392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63348358-59fe-4c2a-9b7a-d9d113eabad0",
        "cursor": {
          "ref": "2fa23873-0df9-44e3-b23a-f8e923ce2169",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fa360269-e4a0-4137-a9f2-d2259ec3862c"
        },
        "item": {
          "id": "63348358-59fe-4c2a-9b7a-d9d113eabad0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b4314b42-c3c9-43c5-9706-2ec33bd7c8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee6195b-3411-40c8-b5ad-fb77f663f27f",
        "cursor": {
          "ref": "380ea23f-db5f-4924-9aa2-6da18845f9be",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dfa469ec-0ca6-4255-853a-d03e9650212c"
        },
        "item": {
          "id": "9ee6195b-3411-40c8-b5ad-fb77f663f27f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5b1891f4-7dae-4a93-9311-ae245b612e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a35d99-04ae-4945-b99d-3879745932c3",
        "cursor": {
          "ref": "372d061d-1670-41ca-b23b-bf07bd695a13",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "330f3586-87c6-489f-9d6f-c65fa703c991"
        },
        "item": {
          "id": "e6a35d99-04ae-4945-b99d-3879745932c3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75e709b4-3b9f-4153-8956-554b52ba38b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7d8c7e-ee7e-4f3e-b38d-955791e9633c",
        "cursor": {
          "ref": "b806cf30-cd4f-44f3-bd0c-ceef750a0913",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "11fb83b9-aef5-4c74-8ccd-b2cdf7d95fc6"
        },
        "item": {
          "id": "5c7d8c7e-ee7e-4f3e-b38d-955791e9633c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "36163505-c5ba-4613-9d72-209660ed506f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82eb9894-5121-4ddd-a04d-b18078c9c34c",
        "cursor": {
          "ref": "2f63f614-bda2-4694-9253-b83370a50f75",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c79ff4fc-e81d-49da-9513-ecdd2fec4e26"
        },
        "item": {
          "id": "82eb9894-5121-4ddd-a04d-b18078c9c34c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9bf12cc4-c510-4ee9-a357-4cf2a1aae428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49dda39-72d4-4d5b-ba4d-a9aad10ff971",
        "cursor": {
          "ref": "f7be2d18-7ba1-4bea-b00f-43c1c7f31d42",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3808c018-52ea-4bbb-83b6-a17f73211070"
        },
        "item": {
          "id": "a49dda39-72d4-4d5b-ba4d-a9aad10ff971",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f6480de9-f367-47e2-9956-ecf7d3d9354a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7479490c-9bf2-4701-a3dc-171d9c3677cf",
        "cursor": {
          "ref": "77c630d7-fd08-4a3f-be97-59409721fdf9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "06146c6b-bbba-4510-91b9-5fc03bfe4a93"
        },
        "item": {
          "id": "7479490c-9bf2-4701-a3dc-171d9c3677cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4420ed22-cd34-4c8f-b4f1-e22aa8b21bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169462b3-c2e4-4d62-ad57-650ae89dae6f",
        "cursor": {
          "ref": "af66bc48-851f-4455-bbb6-2e98a29cd833",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "af3d9aeb-cf85-4395-aef2-063b22cff28b"
        },
        "item": {
          "id": "169462b3-c2e4-4d62-ad57-650ae89dae6f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "23da408c-6ee0-4002-bea5-04b2608e35d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184782e0-747b-478c-adbb-fb601fbebdfb",
        "cursor": {
          "ref": "d2f36021-17c6-43ec-9f7e-6050c8e17969",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3e7f309f-5a3a-4aca-a416-b6c875ee6d51"
        },
        "item": {
          "id": "184782e0-747b-478c-adbb-fb601fbebdfb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "00e4811a-1a6b-4408-876a-f1120f834db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b33af-d87d-470b-90ce-b12e444fc740",
        "cursor": {
          "ref": "57a023d4-a8df-48e4-9c45-ce679d7825b8",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aae1d22a-73a6-4e57-8747-d148915f307d"
        },
        "item": {
          "id": "3d2b33af-d87d-470b-90ce-b12e444fc740",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "962de7a5-66de-491f-922a-f857c98d97d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db195f6-9d0d-495e-9219-ce63c93b1510",
        "cursor": {
          "ref": "e3d83680-d221-40af-b999-bca7b3449952",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e586d41d-fa0a-4e51-8b82-c627e4adf949"
        },
        "item": {
          "id": "7db195f6-9d0d-495e-9219-ce63c93b1510",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8341ab67-e571-472a-a1fb-e4b9dc130606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7eed15-7313-4be4-8f18-964dbae8640d",
        "cursor": {
          "ref": "906cef05-3e85-4c86-ab67-0a4090b0b868",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d3ee7174-4396-4e02-be9c-f1b6b0ae7ccb"
        },
        "item": {
          "id": "9b7eed15-7313-4be4-8f18-964dbae8640d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9be06f87-0d5a-441c-9abc-1bed70b82701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8787cf7-13ba-4c94-a980-06b977b1af0a",
        "cursor": {
          "ref": "2880849e-3859-481b-b350-c7f737da06f7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e1a795e7-8e4a-41a3-bc08-8bc6c0f03f24"
        },
        "item": {
          "id": "b8787cf7-13ba-4c94-a980-06b977b1af0a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "81339e81-e3d7-4105-b84c-e14c36d79149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b717f718-364f-476d-8e7b-0d59e40c67cd",
        "cursor": {
          "ref": "12743dd8-91c4-4cc7-997c-ae3fa7933bf9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0e11d0ec-2dde-4e33-af53-2a7cd8a60d18"
        },
        "item": {
          "id": "b717f718-364f-476d-8e7b-0d59e40c67cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "852019b6-b68d-43f4-9b52-5f8025767116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec90a1af-2f10-4fbb-b86f-ac627027c385",
        "cursor": {
          "ref": "d7f03b8c-fc12-4f81-8d88-ce19100b43e5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3e08b7bb-6609-4f97-b001-51ebdf5d8d16"
        },
        "item": {
          "id": "ec90a1af-2f10-4fbb-b86f-ac627027c385",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1c4d7df3-e3d9-46b6-847b-70d6254965b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a3137-39d9-45a3-b3a4-aa8365d402c7",
        "cursor": {
          "ref": "18e771ba-e123-46d5-a2a9-e0238fdd2816",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "83b42321-738c-43c4-97d1-964caab4d98a"
        },
        "item": {
          "id": "7f3a3137-39d9-45a3-b3a4-aa8365d402c7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aae53e61-a99a-4a8b-a4ca-92245158aaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c00dde-1d51-4105-8a29-885eef4098e9",
        "cursor": {
          "ref": "3d2730a2-19f2-428f-ae41-1e958f716b13",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26e530d8-7307-4360-a957-013529431d87"
        },
        "item": {
          "id": "a7c00dde-1d51-4105-8a29-885eef4098e9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af09ce63-5852-45f2-bc48-cd1f6563adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5637fdb8-47d7-4e9e-9eba-c935dfc62edd",
        "cursor": {
          "ref": "8a572b5e-a6a7-4487-be02-1b77cc426017",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "99000bb9-bdb1-4321-ab5b-4c1f3311c439"
        },
        "item": {
          "id": "5637fdb8-47d7-4e9e-9eba-c935dfc62edd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3a0a71b-34e8-43ee-85b2-5b8940428008",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1430773-7e6e-41e6-9cf6-e8f581773ee3",
        "cursor": {
          "ref": "bddd500a-ed84-455c-80e3-c580ea912ef5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f5dd5587-5548-42dc-8b18-69d807c75b82"
        },
        "item": {
          "id": "c1430773-7e6e-41e6-9cf6-e8f581773ee3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9f2f3b1c-e43f-44f9-b611-5ee70a193f9c",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3124ea9-c01e-4bb7-be93-5c2c084550e7",
        "cursor": {
          "ref": "a24157ad-93af-4fb0-a7b9-1eac0b82de14",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6c92c4da-634a-48e6-9061-a5ff2571a4bd"
        },
        "item": {
          "id": "c3124ea9-c01e-4bb7-be93-5c2c084550e7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ec9bcc23-38d4-4622-8b43-d3886e06c2d3",
          "status": "OK",
          "code": 200,
          "responseTime": 2604,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "971d8682-d8e0-4506-a1d3-cf660965a477",
        "cursor": {
          "ref": "a4e0aab0-0fed-462b-b34c-39a51a4957ee",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a0ea3922-2f65-4228-b0e0-e078a657ddde"
        },
        "item": {
          "id": "971d8682-d8e0-4506-a1d3-cf660965a477",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5d1f7494-70af-456f-975c-87133895bbc4",
          "status": "OK",
          "code": 200,
          "responseTime": 2587,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae8d42e-68eb-48a0-8d41-b2170418c902",
        "cursor": {
          "ref": "a6c6b8bd-b681-4f4e-8288-940731723a7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8bae24b1-7a0e-47b3-b343-525a34ea87da"
        },
        "item": {
          "id": "fae8d42e-68eb-48a0-8d41-b2170418c902",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "760f0451-9889-4934-b2c2-6326391d9497",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae8d42e-68eb-48a0-8d41-b2170418c902",
        "cursor": {
          "ref": "a6c6b8bd-b681-4f4e-8288-940731723a7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8bae24b1-7a0e-47b3-b343-525a34ea87da"
        },
        "item": {
          "id": "fae8d42e-68eb-48a0-8d41-b2170418c902",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "760f0451-9889-4934-b2c2-6326391d9497",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cfd64c-bc25-4fe2-b7c0-1fa61326f7a8",
        "cursor": {
          "ref": "43052497-4b86-4e40-86a1-83a00663310e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fd95b1d6-37c2-4559-9cfa-4e2f8024f0a8"
        },
        "item": {
          "id": "d8cfd64c-bc25-4fe2-b7c0-1fa61326f7a8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c484338f-6ada-4f05-b9ce-3d815c5ff4db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98043646-7c09-4305-bf97-518f425c1331",
        "cursor": {
          "ref": "6a497a10-41f9-45f4-904f-859aaa6e3277",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "90c087da-c9e0-4950-9b78-a9b2e693b71c"
        },
        "item": {
          "id": "98043646-7c09-4305-bf97-518f425c1331",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f68e5d9d-0783-42cd-a174-4eb789978184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}