{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a80e1d02-0aef-479a-8fbc-08c9e931df9c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7178a61d-3d0c-4606-bdad-2b11b220906b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10293638-6391-48a6-bd0a-0b0161e37484",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38981897-c490-4b7e-89d2-9b0b289060a1"
                }
              }
            ]
          },
          {
            "id": "f1c9d19f-b080-467e-9a79-a064fdac5ff1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f7845f8-0fb6-41ec-b828-4769bcaca9e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "18c2c454-5fd7-4d2e-84f3-d3722c9683b8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f34878ac-8beb-4a93-b91e-1bd8d696c7fd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "222e1695-dd1a-4f65-a02c-6dac26b9aed8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4bdfba65-ba59-41db-853a-b5477e95e172",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6a4e47b-f35e-4ecf-8a26-1ca52807d109",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ba3eee6-ad91-4692-bdf5-222fe80fb4de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ca71eb4-929a-4530-b906-6b1b5f7e9fe3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f936fddd-8b19-4c00-8fa4-83be73e32541"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "957d70f8-04cb-4799-a262-13a63a783247",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59edcad3-0a22-4ade-ab45-417e78f3d9d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6d6b1d4-264d-4e32-b816-208ff7df3202",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fb504355-210e-4436-af98-260ffaa63b9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e7dbcf-441f-4da6-afa1-690448522c45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4a7ea1c-eb62-4e05-805b-f3b3605e82e4"
            }
          }
        ]
      },
      {
        "id": "c7947a7a-34fd-41bd-bbd5-1991332a0834",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fc5388d8-896e-4dd4-bb1a-553469920d76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11418dd8-169e-4710-a5f6-03ba1893724f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2714c828-fd8f-41a8-bb91-5e9b7ce60553",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c627852-c90e-4b68-9baa-4acb61f75297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d0e336-53d2-41a4-9224-33087001409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d356044-490b-4a81-aa5d-83a62bd791e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a213c6c7-ded8-4ee8-87e2-52582d52235b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b881c6b0-4e19-4b9d-a06e-9f140cbf7b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18de972e-facd-407a-9f8d-1272ad922ed7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c8e8ce-0a13-48dd-88d6-babe7d1b9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7f135d5-80c9-4c31-bf39-6e87c03e4ec7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9013a97f-e84b-41c5-ac09-4ec27ab0dd41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ce065dd-cc07-4949-a3c4-495f66bb0867",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cbc50a-7bd3-4727-af0d-7f97960824dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "872086e5-4fa5-47ff-86c1-a122646dab5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee60b38-874e-4cae-96d4-7879db361b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71763caf-dfe9-4abf-9e3a-20b7d3de1a7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cc3d0c14-9422-460c-8bf1-3e5ed4c6dec7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b9b434c-9512-4684-8deb-01a7f66e67f3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74e6a6ee-af42-4564-9790-4529350b5603",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e80c15d8-c6fd-4682-918c-96ffe7df90bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90b99b5a-ec84-4db9-bb00-b8e4ca0288e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f3362e7c-a8ca-4cbf-953b-4d8e841bc476"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "047f268a-b363-43e5-9fcf-c4d60c29c4fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3792dfb6-65ff-4a38-809d-49f7d6fdb823"
            }
          }
        ]
      },
      {
        "id": "53a23792-1915-4341-ab8d-bc6d2c24a0b0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bb1a3634-77c3-4a9e-bc7d-60506de9681b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c292a4e-d64f-4abb-ba29-0566812d2d02",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4323024f-73fe-4026-9edd-6aed3be59d23",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4e74d2-3897-496a-a813-93367e476f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5292716e-b05a-40e5-a842-f100f7de4d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32142867-3c80-489b-9888-155bd6f137e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bd8f819-56b3-46b7-a884-f44cd77d9051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0504d54-4288-4ae5-9df5-190884956bca",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98e642f-ddbd-4132-b59f-a785001c5f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc01e50-b372-4301-b0d5-05d14fd44ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1da00b-4e66-4583-b6d4-31101c2589e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8fd429-5c4f-42f6-a0a5-090d5ab307cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04a101a-4d1c-40b4-bc7a-61a954ef1be2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf618c-70ce-4617-935a-6c3f110ae1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1cc7f8-c742-4d93-b871-0c91749eea14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eedefaa-2769-49bd-869d-c2b374946988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "745293f2-dff8-4308-a1ab-dc166cb048fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c7d0a3-d11e-4435-b981-5fb546c4168b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9862e52-7643-4071-9afb-5e217d34e154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19ceb9e-56b9-4dcd-a49d-ea2ef9bb42d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4d33b8-4cce-4a33-b108-dab92cfaf577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33bb84a4-e766-4adc-abf8-e098b1985cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d842d0-2597-451a-9b60-7932878a4a98",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d34f494-bab2-4fb1-9404-2a71d90d4dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30115f48-fcdc-419c-b1cb-d37ef23622e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3ed919-942d-4eff-a7c3-4d4574d7437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce441e0-a63a-49e6-8c90-6810212c7830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66b6df3-8f9b-4d10-8ff5-9dd2c6dbba8a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17184511-c088-422e-8ee4-93eabae3bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e46fc0-b16f-4701-a439-b256943e669a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e71461a-6bee-490a-bc4d-06b8454bebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "968aea53-8776-45d5-a767-be5de7394116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0847fb90-7ba8-4fce-9ea0-9403fff1cd5c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fab401-ba87-4bda-975f-2b6b1708eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec14b7d-07cc-4fd9-8e99-39d268aad7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f70ab-ea9b-4ee8-ac99-46dd17e7f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b04a573-dc93-42f8-bfe0-02e8be863ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e696321-383f-4d4f-a738-84729a2ba888",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307181e1-dfcf-47a8-b01f-7fafd3c88a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87adf406-3f57-4a51-852f-dd91d68dacac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af8b9ce-4e88-443e-af61-3be2434d0046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf34ac9-9be7-4482-a8e9-7ae80c9507f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54140300-d8d9-4730-ac84-236bf7dbd8ca",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3b3523-d329-4cb6-9a12-117026543296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94258ec7-d540-4bbe-8fea-c2626be5709e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1be839c-af1c-44a6-9081-44132e87d23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed1e668-f0e9-450e-b64f-f2f54057b6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e93e75a-a1e9-479a-9c0e-4de79f11964a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce32d68b-4aed-4848-9dc7-5a1fc9797208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81263578-d8a6-4e16-9627-be2cda37dcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91970d9-b559-46b3-addc-7265a6d0fc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b595916-10e4-423b-9512-d9c13dde7b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094c67f3-b194-4444-a4fa-8ee9cc561be1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f25fca-24d9-4ee2-b11a-62ff06703dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58bacae-10a8-41bd-a244-0ac9755f85d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dbb920-1046-4938-9dd5-bf35a63ca323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2ab497a-4c15-47b8-af8b-19ee7fa59e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb930bbe-efe9-4959-8e9f-7047b3fd7854",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d0750e-1b3b-4644-8c27-a0405ea36e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1a1f27-85d5-47f1-865a-177b553f6707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd77d9a-97f9-409a-95e9-1a0f9257032d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91d6fd7c-443b-4f10-bc06-3ec2e6712f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed250e3-ca25-41c8-83f9-812b7289c087",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaaa1ab-6eb4-4084-b441-ad9505f76309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e47d31-44bb-4cb1-bfa7-a3ea0c0561a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a2e894-c14d-4a87-960c-d5ef7429a626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0c0c35a-1da7-48f0-b2d3-0629d0c27e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c1e96e-2f7a-472e-ac80-f23a58d4b5ef",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff1adcb-d0b1-4c02-93c4-ddfa135e8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726b0759-4bf0-4c3e-a95c-7eb3637cd1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24aa351-7c1f-439f-84f7-c51618dd8f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f987edb-3dd9-4387-bd64-8872874303f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4dbf2e-df3a-4ad1-ae76-c666d2135233",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09ee12c-1cb1-4387-9621-6701a6bfae84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7029a81e-4f36-49c6-bb4a-ddf08ff3f3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bd6af6-9f41-453c-955d-a4867a92dc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d81278bc-f030-4747-81bc-f27fa65e1924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a7b9a9-75cf-4eb3-abf4-d117e7aeb261",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323f88c9-8682-4ff2-9830-3db624b82e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a7455d-4122-406c-8060-310cd4db007c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6182a7f-b124-49e0-a0e7-9bc0f6d7b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bfa59d-d3cc-4e88-b115-e41bd0d0c620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386651d0-fde4-4a1e-80ab-5eb3a12ca1ad",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec7ad7f-9ab1-408d-a18d-d5f0e4cdf55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5995aee6-b0d2-4616-81d5-fd537d22174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffc31c1-b9c7-4b9d-9015-48b11a8f64d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73fdbbbb-21fb-4f54-b062-ef08dd986c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fed4d7-5504-4332-893e-62d2ea24fcb3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca77b7d-bca3-470c-828a-76aac7eed9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e89c783-1803-4e97-84de-633063021d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5d4368-17e1-49b5-a2dc-eb612c569ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07a21ca-9094-4b8a-a07d-4a6beed73dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ed2768-42f9-4aa2-a23d-8e06a2093d40",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94818402-7685-415b-8cf6-11f093649271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ee58b4-85fe-4983-8f4c-73720da1003e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95b5bff-c9ed-4bfe-a0db-5165b2fe9082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc14c9dd-96c2-4280-83e9-e0c24e0aaf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6845b322-9658-4499-89f1-ce83ffa0b696",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e73885-a322-4179-82c0-ef2fec11c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259d9b2b-76d6-4c47-8a26-fe8f27cf9a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074ca67a-7b1c-498e-9d8c-e1349aff5d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "404c6cc6-816e-4267-8755-26cb32f869b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d050852-12f4-4ea7-a3f0-3b7e3c580b71",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4dbdeb-d0bc-49f3-947b-b61e08b4c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95ccbf2-c763-41e5-ac4f-eb9987aefb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1018a5e-d7e2-452d-af3a-a7701e63829d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48224606-ad7c-4445-a26c-b587f8e98bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df7e10a-5ef9-4924-b3a0-0b003bb3d17e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169dc0bd-1457-40b4-8852-e071bba16080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05382d7c-42eb-42c8-bf08-e925817fa232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa59f9-0950-47de-af60-73c95495acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c9f3d4-f57c-4553-9bc5-ff7fc82b858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18009c9e-44bf-4461-b2b2-3966d1170162",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d6f2e6-fac6-4a90-8195-a116e014201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4550b861-9a89-4ddd-93b1-b8e6d4ffa17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b989040-7bc9-43c1-8d92-71ce5edcc5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eadbd3-622a-4911-a5a8-d9cab370d44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5736ee0-c1f4-4a02-adab-fa47c55d45a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dda3e7-6be4-43c5-afe0-5cc7705f0dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c915a864-bbca-4783-8c0f-92b3fb6a6608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb999e92-7826-4c50-9a86-accf5d34f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56010402-2bba-482a-8292-9a44f3933d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b5a5f8-feb4-420f-bd0d-5756917724b3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23959488-f5b7-4a04-8440-0a7f1efbe015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bd4cfc-166c-4971-a9b4-bff6002f07de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834bf465-ead8-4a84-829a-b9fa8609ac94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f585045c-bbc0-456b-9194-8879572d28b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccd9774-47fe-41cd-aef5-9db3335db177",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e065ab90-c2be-49b9-bf7c-aa35c3de332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f347151-aa96-44e6-bbe8-8d4daebf3255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb5cc76-438e-443d-9456-2882f1c6abc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e56104-6e42-480b-a527-9fb52450b49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd28dac-f7f5-4e7c-aa5f-89578db61b50",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ce17bd-e117-4c1a-9495-43607f856b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab38eaad-53a2-4946-99eb-9506aa536ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2648d1d-951e-4b5e-8845-e18e819d5ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfc45c4-5d7e-454e-9e5d-cbaffa55fec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e9e63f-d181-4087-952f-63a00a9f838e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb0a136-f713-40bc-9cff-099bcb775b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041253f3-fe34-42f9-b85c-28d12f5dd0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00635307-f17e-448c-91bb-c13ae2e49fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "362c4a78-6baa-485a-8e34-0fedbb7c09ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9391ad-51b2-4bb2-b6e8-6da9f0a09877",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe2c960-5f05-4112-b38d-d58d19e60ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babcb6b4-468f-4cd1-b13a-4f951aa29fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856b7def-5d7e-44f2-a289-3ad24a0d2937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d63f191-fe56-468a-8c6a-b865c5230b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2ebe20-fbf7-4ab4-b9a4-c55392c47878",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7069bbf5-7fbb-4c34-83c9-6154045b1441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc1e1b7-f15f-4629-959c-763be7ace78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a68183-d5b0-436f-bab1-1f9fd2516d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b21ef83-26b4-4584-b139-9b316d013879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c24566b-7f6f-4a01-be08-6c000f589fcb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27006b55-7a8b-4f7d-b058-7a9b0b46fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1d9772-6410-4ab1-9e2d-698d0835de50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec61601-b9d8-4673-a399-269270a9ea97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca4045f-a589-454f-a924-7550d956a66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e9909-3616-46e5-865f-e185a60e3d2b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d6bb7-87f9-4abc-9bba-5dcdcc993ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b545bb09-b1b3-4089-a743-fbb0d49ee76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9adeb88-7a41-4a0f-bad9-56ec7382338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44aaea61-f604-4371-8fb0-bb5e9b12dd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe824896-9134-473c-a022-6344b76ac4e4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ad4ab6-392b-4317-8cbf-49d1a2e9eca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80a7f17-88a9-4162-99d6-73ad859b7aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5de090-650a-4fe4-8113-45542ac04588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2389bc22-4cd1-45ae-bc9e-5c7ba758c535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ad4177-d23f-4527-bba5-86332cc7ce8f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09bcd32-9c58-4927-b674-ce074a3f2f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558ac0f9-e1b2-462f-acc8-6aa164bbe52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8058c9a-356c-4f6e-8640-e2f3b1baf455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91c2d61-2aea-457d-b8d0-eb51f549a9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b03734-9134-4b5e-b42c-a3ec47ea5422",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f82d08f-1824-4d20-806d-6b93c3f97703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd20082a-8c1a-45a6-8e6d-e97f28757ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963a0edc-9a46-4e20-8b1f-beca629b8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "093b8a8f-42c8-4580-bf44-cfe97ea5cc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd90ab6-6581-484c-9ace-195fe2a39ef7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7605893f-3aa6-46d6-92df-c847deeb8763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de7163c7-fe0f-4027-a8d3-d58722811052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab9368a-1a27-4ef5-a8dc-02c79778f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07aec0de-cb27-4dc0-b68b-3a0263ec4bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21104bc-12ed-4f2e-9ba4-cd2ad2dad0a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dfe568-7d6a-4ee9-b5e5-e74a40257c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa787c2-9bd2-4108-b487-7a83260558f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df28dfe9-5885-4d66-8fc8-cf950e2c822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1125339b-ce7b-454f-ab44-516727ca80c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722d3a77-d230-4895-9a4a-f3fafe868e42",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc95e94-e311-4f8b-b67d-9cca3f02045e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d337f9-a2ee-4aab-a925-aba3ebc04251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c5e73b-d991-4df8-808d-0905291d7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3df697-78b0-4d64-abe3-04f128d8d1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0b0c92-17a2-4319-a325-2003478bfe72",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3a955b-be7e-4d29-a9ba-c1754834651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2e186d-e474-4796-b460-4bd69b7a22c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eefc501-3756-44b1-988c-21d76e778ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7130224-e9f1-4f03-b92c-96ce107b2469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f61a2-de04-47bf-b858-2f4f4715262a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a92e65-d30d-4130-8b28-7cefffd6dd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0741ab64-191b-48b4-ac48-c05fea93ae04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57853c6b-2d83-4c03-9ddb-8bce18eefb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d05e14ff-9836-474b-ac87-542f6cdbe0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53a0b6d-6eb6-4b9d-9a5d-7ccde3966155",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdfea76-18cc-42a6-ae84-0a73e3981a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555336b0-7b3f-43db-8936-a915fc028073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682e0e73-ba1c-4ac7-80a8-309c4ea9476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "273a4223-3667-4263-befa-cb7255d25624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5908a8-52d3-44d2-aa8c-2b7872f72781",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472bde35-37c6-4461-a3ca-d97490b63695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684b596c-6fba-4204-a5f0-afed18ba83ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ff830f-b107-4bc8-98bf-472d5b675bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7638c981-5be7-4a5c-8592-46be3accecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21483584-7415-41c4-b5f5-3c8094ccb317",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca59c49-f193-4a69-ac1b-6ffa0e1962ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca580a3e-5e2b-41bb-9cde-95e70553354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49798a18-95a5-4ab4-afa9-545f9b1ee2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "58165a7a-b04c-4850-90bd-fd15b00b83e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ac513e-6fbb-4a65-b522-d6b90124c2f0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0037eef0-f380-44fd-94e5-f5ba9515a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d80ec6-60a8-48df-834a-e806736f43b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f8d3a1-1cfe-4641-8b44-bce3f9d2f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "699c659f-5552-4d72-a9db-2bc8bf10e6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb23e531-44d2-4c96-bf15-1a24a53802f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003e651f-d889-4c30-ba9c-9f682a02b39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25751948-0c28-4bcb-b634-03607ab5e285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c982446-69a0-49ed-a496-955343810cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f09923-87d8-417c-94ee-099e20c0bca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ba2ecd-e926-4a9f-aad6-27b9f5e7f2b4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffa5632-0b30-4364-9255-90a4ec571b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274d66f1-fcb3-4af8-9313-edfffa2de8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fda4025-8207-4253-b5aa-3ec21b4bac05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8592a39e-f968-4d8c-9d44-701f7d59679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a8ad7d-6602-48cb-90a4-860a3c8dc664",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037832d6-0b5c-456e-979f-68080b2468f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a4c108-ddfc-451d-b35c-ec2a90876470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcc052e-3d39-4d49-a6c9-5d3fca8e68b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88da221f-8459-4c2e-91da-a070eb7f9a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71f9618-0fbd-443f-bc10-76da2e51bee8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d0181f-4f1e-4ef1-aa8d-7521f168cc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106bc8f4-3e4c-42b1-b115-9e0f32a9d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173c1f12-b20b-478e-860f-344ad09f53a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14d429b-abcd-436b-a2bd-e10b88eb0f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b33d3a-83b1-48bd-ad36-d30e887343e0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f1f6be-ff1e-4a72-be08-ae2a2bedd025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6979fa-f000-4033-9113-cb18990cc0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd1c5f9-2b1a-40ee-a8f7-2b09879b3027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4856a43f-5253-4b38-95c4-85c8ac921c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935a5810-ed21-4294-ba8e-9de2e6be54f4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1e86ce-bedb-4243-9d2c-03dc877e66ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f02cbe-a2ca-416d-b0cd-012a98a97222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afccec4b-3f8f-4e57-8d1e-8e9921aacd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5983c162-6cd6-470d-bdd6-afa152dd61d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354e7b71-36d3-444d-b18d-536c6a9daa2f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ce1811-87e5-4702-a651-aa7239bbd90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a6d177-f8c5-4741-bf41-478b44b06445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8a7d46-e2c0-4372-8b89-e53742bb2a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c10bd1-a3cd-4ec7-b86e-2ac1abe1243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df69b4af-b0c7-41d2-825e-0e13b69acb60",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e2efa2-4a71-4bb7-bdc7-878b5da62296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c91cd4-f09b-4877-9269-68ff16bce602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b92745-b357-44f5-941f-8c6047395347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a43da4-844a-4d84-ad02-9b6288cacb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0a82b5-99a5-4986-a668-2f71f7e33581",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4108f2-a425-423b-8d57-2e8808de1d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33c92c7-ac55-4f8a-ac10-f72161be520f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c0ebeb-e5fb-4ca0-b725-9e8326118436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7e41c3-cf02-4be4-9e05-27b9aebf1412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b8f3d5-d192-4c29-9c4f-01be5be27eff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f198eee-1ba6-4700-b40c-dd9b6145dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ed681c-e64b-4052-8b26-f9554b882e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4649d4eb-702b-4084-9d98-7dc27ebf2535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c54d8e-756b-4e5b-962d-5328be717367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95720645-9f97-4d82-b505-ca9c37baf679",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d70f89-5cfe-4450-8f3e-35501889eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae526be8-aa33-45ce-917c-552f60a5f61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9210b418-911f-4699-a6c9-8485b3efd2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79273a7-6293-40d9-b2f7-b759717d8e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5893c97e-b280-450c-8428-99ff8b1e8fb4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae9ccce-e237-4a29-b8dc-22768117c614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a52615c-a4b6-4969-b64a-8cf28ec24403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6624633-6068-4dd9-b7a1-0faf2065bf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "97ee76d3-d966-4a8e-a6ec-472bb05e2cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eabdb96-7653-4dab-b7f1-d5731ac3a543",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e714d1f4-bd03-4a93-a1d5-2544c6eadec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67edb1e8-85bd-4da3-8fbe-bd61e4f1ec71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359e986c-06fc-4340-912b-f8604edc5d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "769e2103-0d3f-4635-a91a-4732f7bab81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b55bd2-60b9-47a3-bb71-0bbe98754f54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8600fa7-c9b7-425f-b0da-a2175f5f7464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afa9799-d195-45da-9f4b-6162ede05ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b75a91d-6534-4e5b-a57b-186268f43041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5102b1c0-fe95-4e67-bc77-81701a68f5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a307ebf2-b4e4-451f-bda3-7bbe288ce327",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde2ee5e-271b-43e4-9eb7-1eeed373f603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d33e38-0b86-4925-80e1-e3afa3de01c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827ba5c3-78db-4883-a34a-5abedecdabf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9092d87e-b780-4a09-9471-097599c7d7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71b8d1e-139e-4414-bb9d-d2dd8f1b058a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501a931d-0370-4ea3-bc57-3484174d5331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8729eb95-ad4f-43e8-b58f-7cc3d433b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b450db-f824-4a10-8cb7-bbc80c1b9f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8d5226-d2c3-4310-86a1-48d6945ee6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85344c66-3dd6-41f9-846e-fa4bd3e4b5cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4849da6b-e98b-400f-8d84-8e45e78c8cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52fc6cf-cf9f-44e9-be48-7de59cb02a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71902065-1103-410a-96e4-400e05c0f08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca8501e-9416-4222-8bf1-28d50456f6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8f3220-f989-4c14-b00b-936009971991",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70587e2-32e5-4144-8e8c-f56a1fb7aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f087e8-377a-44b0-aedb-3e2f2ecfab76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0c59d8-03c4-4008-b116-53d3e63bc282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9c75df-cc34-4fc7-adc8-1d129ed80cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113072a-b9cd-4dd4-9b85-d209a14e96df",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3a494e-32e5-404d-b936-f48e5ded4495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4f28fa-67ec-4df8-b481-c434cbd2fb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51fd4a9-cb02-4c7d-b9b5-7169a3c29057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d7deed-6486-45ba-b081-5ba35be07c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1499137f-75de-4695-a43a-3b294b658924",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc676ade-61bc-4597-a52f-f1f2443359b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1826c217-ef0f-40e4-a047-c87120ebf56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5546725d-bc3e-43d0-a8af-c97c6c57b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ba3258-2578-4c08-997b-e2a9b3c63d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9f674b-b019-432b-9d50-56db067f26ea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7607605e-ffca-4ca7-9a07-463a96a446bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf54b30a-f4e7-48fe-8312-3608b82c6c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bbf629-666b-4a48-baf2-70ad019012ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdfe75f-684c-4d86-8859-8abc0bbdbf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe23365-f165-499d-9e91-68c72a87c184",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654701ee-0bee-4e35-aba6-5fca8e0940f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aabaf3e-db29-413a-8bf7-6f56f50b7874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2d2502-9fbc-4bc0-adab-26e424bc4a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e612aef-67d8-4796-ad42-c1bcfff5fa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8d5d99-2006-4ed1-86e9-b2c2d65d2f05",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fe6856-3252-4778-b992-93cd61e2d565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0b064d-f52a-4412-a355-9fa38ae52d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620f861a-1fa5-42a8-8db4-db5a1a2e8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f188e8-df93-4499-9fe2-8091bd8923e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092df2da-5426-4845-8a21-9a181dab7389",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576dc46f-8c05-4394-b88c-42d21714f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e8c1fa-bc7e-4258-8d65-de490bf4474c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d5080-b934-4026-99b8-d9ffc7e5dd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "33332e25-584f-4656-affa-3b669b0339c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9632efde-5c85-450a-ad48-4b021f4bda1a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0190bdf6-96f8-471c-b2c7-ba1526d6b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee295ccb-3eca-42f9-af52-19f4059d3a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd8f48-01fd-421a-b88f-e38cf21b606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a6ceec-c1c6-49ff-8755-bcb6f48452e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be3d14-0396-466a-ba5b-8af8dfe1c5d1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb0a450-3fa1-4b8c-9da5-53cbb3f10310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c32fd4-86b8-481b-820d-89dccc449a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ade83e-f35e-4f59-b518-b08cf9fc1ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c289209a-6c78-4f2d-9159-287c2d20c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf909e9-df41-4df9-a5fb-c4932d58377c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8befffe8-3d20-4417-bb54-c16ca61bed3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556ebd33-c50a-49cc-bbb5-4ffca6076f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d06e9f-429f-46f3-9d88-647c46f1732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "914485d6-911f-473e-a190-98188c7b57d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f760189-fcf6-413c-9864-b5ed2d67ace2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e51c34-4660-4ffb-a366-37e59b88d20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4b4aaa-f81c-432f-b23d-4c548ce8b514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3a1c98-41f1-4b4f-bc5d-d69b51654c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89a252d-bfb5-4fb5-bdc5-1c9c147be81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9af9efc-e94d-4f14-9bbd-bd87deecc370",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23822ec-2f44-4c32-8738-acca03f90630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5665ca48-df98-4a7b-8584-e8d96e1b6801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89d526b-e45c-41ca-b64e-ccd07e58490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74447f34-2c8e-41ea-bb15-72edb9a22575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb7793-331c-484c-8f07-2311213896e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de596f49-034e-4ad7-86b5-d399fbe0e937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c6e28a-32d7-4dd1-9508-a791c2e7935a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a44621-5090-455d-be7d-a31fbfdc1777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "702dac98-f0ba-4e8e-9d6f-9c55eaf57135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7932a0e-03e3-41c7-80b1-bb5c677494da",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f204e0-db8e-4a93-857a-bce2f85583b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c02283-c5a1-45a1-9fa4-7cd449764ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e625b128-d3ce-423e-b715-89fa16dc1b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05e1c97-0984-4da1-939d-b993ca93f2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa8bda3-360f-4533-bfc6-6357fef4760c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db440066-5f4b-41a9-aaf1-583a13971420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5dab6b-0d31-48b4-9f15-7b5170147eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655f977d-1c41-4270-a339-b8d745fcceb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f716eb5b-6eb3-4a84-a731-dd23ea72a622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce933a5-48c0-470e-aa70-763572a0c935",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad93cc60-b778-4a44-ba17-2ce177ce85ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffc2e2d-cf2e-46be-8d00-5db1c2baabbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94849358-84b4-414a-a59d-524cfba90408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9da749-3070-442d-b3de-48541ead3952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9170c3ce-940e-4bf9-940f-b8718613ef7b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067df3a-82d6-44de-bed1-211d7bc27b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fbb719-0931-4032-82af-a3ffb2dac7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3eec36-3fd8-4259-a9f4-35407834a806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a937f3-6a08-4368-92eb-9d9c5cf3dd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b3761f-866b-4224-be83-9bba43df7ff7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36b3aa2-c6ed-46a4-a90d-012f8d65a100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386219b1-85de-4ffd-b53a-5bb09afed128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c8b463-e879-413d-8df6-38b86f2ae063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58c94c65-a5a3-4c5f-975a-4c0d0fd2c2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ac6e12-80f0-42d9-8a60-a9cfafe0631e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247feb1e-1a02-4b37-af93-a393cb76d800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e5c34b-99b2-4e3b-95c6-d228d8eee912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064eeb89-ec38-44f4-91ef-37ceb54b6f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df95fc9c-b823-4183-8f03-7777347905cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eb5569-63e1-4823-a215-b1cae0af77b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2933564-96a4-4e20-a012-47df8c6c087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d2698a-cfdd-485f-be84-6ff27ceccaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be7dbb-f03f-4dee-befe-d43ac38a4941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b54c21-6fa3-4a11-8c24-e74752b60d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8c5f67-40ee-407e-8c2c-b677960b735c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856e4ead-826e-439f-ab14-73c6065f450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9799b573-8205-4cce-94f3-8b78e3cef25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c651ab86-94b5-49c6-9d0d-197f7e5a3274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "036e1ce0-ba83-47e7-8f90-292d4df3c92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e12084a-7045-4e97-a111-e8ef5e078794",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea2ab9d-7ef2-432e-9052-4ae6dce7ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e83a6b-62d4-493c-9501-65dd097b6292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cce8f30-7497-4c81-a8c9-de027fa8a525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8073e47a-4688-4479-8780-070bd948e97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae053ea-ac01-4802-9ef5-71494d2d2044",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1768064-cd11-4168-8432-d3ab31ca3e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be46365-4a94-446a-a95c-0a06940ce653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1087c5b4-b6bd-45a3-b3aa-e816ec6c353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811c5b21-9221-4f53-a4ea-8cb3b1d45776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70164576-d045-4a1d-8d07-558cdfd0e1f6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b06a8c-7b3e-4152-b3ff-ccd0a0f78e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12e150c-f2cc-4fc4-ae9c-107b4467bb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2836e9-4515-47f3-8acf-895f6cae0810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "479ec9ad-6c2c-4109-aee3-a8086a69d332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e4bb7-fcf3-45e9-b27f-b7faa0fa4b69",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89222bc-4598-4a3a-ba4c-9e0004cdf7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3ec829-76dd-4ea2-a2c7-f5667d332444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb443ce1-88bd-4d10-8494-a2f97921deb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d0756d-01cb-49cf-80b6-dc55a9f7d97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe65ece-c364-4892-9030-a21bb3987817",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbef6b1a-7605-4742-a8df-d9ff846a0348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41ccf0d-0b5e-453a-a58f-1872069f0b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38be8a47-25a5-4424-b728-b36e9dec601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6124a8f-8f31-4dcb-965a-ca828f51955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee0b9e-9c98-4ee0-b14b-ac6216b9ef80",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88e3789-32fa-4577-953b-aca21f681c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318719e-3025-4329-a934-0074605ecb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f9ee4c-26d1-41f7-9ca3-4c1e326cfcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5b774d-1ee2-4f24-a425-871b3a850990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac10372-e2e2-4e0d-9770-ae1f2a821833",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b135d78d-d46b-4b0f-9d27-c7f35e91e35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49b160b-2c39-4f86-8f25-c7f3bb448931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45da52b-afda-4d82-be1b-ef18ad28c628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5897b225-3ade-43a4-9740-04e19ee8de22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad702c8-5ea7-443b-baa2-e5f924ca7e35",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6399b3-4dbb-4491-99ef-bf4f184fa66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a3de90-e864-4944-923c-f5e8c87aa09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd53d3f4-a210-407c-bc16-0f14faf61eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "400418d8-5b84-40bb-b504-c055d522e289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d38953-add4-48bd-9120-3fc34b41e9ea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc18c4c-a2c7-4a7c-b866-2eb6f7b8d943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6660c84a-a3aa-479b-b5a4-553257626686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc51e61-9dd8-45fa-bbe0-dc661ae76286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3836d5fa-66dc-4796-9174-ab0c28470620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04245458-54ec-44b0-91ca-7b1a7c8cf709",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e7874b-9394-4ec9-a2d9-bb79902b91cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9f12c431-710d-4e35-981d-4288fe14251c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73451c5a-cba2-4c61-a9ec-a0e57941e78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0d0a54-9612-4179-b2b2-64af7927fca5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b63b3772-5ddc-4b3b-b883-677b3594af80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e1d2fd4-a23d-4006-9093-1e5c93a7a38c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254c7f27-1534-4a85-a11b-5eef2d5e4cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9d3da11-54de-4424-8e66-5b7e2445dada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f542bf9-6989-4749-b4c5-00f3b988f27e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d403ad1-ae30-4194-a558-ce406a9dcdac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa09d1a9-e8ea-459f-b6d6-cbf67774e72c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "398e20cc-b68d-48ea-a710-3e06f2548415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "072735bd-b39f-4cae-b919-6e37cf36c707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9652905a-b9af-4322-b08e-bc9d58e62189"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fab5f1f2-215b-4d3c-a3bc-10fcd9b46367",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37aba33c-4274-44a2-b5ca-4ba9b4603edc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "47d6313f-a172-4e61-815d-184b61733774",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93cfc3eb-ba83-4af5-b784-2e52f1cbdc0b"
                }
              }
            ]
          },
          {
            "id": "8a10437f-daba-4b4e-951a-b3fc140e55d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9dcb9b41-0d9e-415a-8c63-5849db9d6e3a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c779a544-0e56-40cd-b109-4a81e738bb8b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8122f27-9250-48e8-9095-c84895654de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23b4105e-e1e7-4930-ac3e-296d8388a983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6e63ae-3fd6-4440-95bf-99a2f95a3058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba3ae36-0dc5-43f3-b883-9609d57cdce3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89302f23-d62e-40c1-9977-19cb2d3d56ab",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c23e4e5-103a-4b68-bc68-e13f1e7568ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0d3f867-85b6-44ca-9904-4abbb27827e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d16e8af5-2857-40fd-b19b-c4c94f031a0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "648586ca-9da1-45ce-8d1f-4794ab426358"
                    }
                  }
                ]
              },
              {
                "id": "9cf738d6-75a0-4ab7-8aa3-8127ee48cbc6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7932e2d-22dc-4b2d-80fb-06a1db05889d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23170cd8-0ade-453d-b7d5-c91191a1c468"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "912b580f-9677-4fe7-853f-97bd1e42b49a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a1a3b17-3aba-4006-9652-7ea66764d288"
                    }
                  }
                ]
              },
              {
                "id": "eb6412a1-1dc8-4d70-ba9d-696d822f41c4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a752555-ab98-425b-be3b-fb1cf2d3f4b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80ad50e5-1742-4584-8fa1-517d407d942e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f0e8f93-d2ac-46c2-9c3a-de171b3f7439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17aff80d-e755-43ed-99fb-4765030435b0"
                    }
                  }
                ]
              },
              {
                "id": "6666bd93-186d-4bee-8b34-918abfc3a967",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "facff281-e740-4dfd-8267-51b94f6850ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44576c8f-3a86-4fb4-b009-66ae7d31a898"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51a64a8b-8058-4cd5-bfbb-974232fe626d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "77574fb5-d5cc-4e2c-9b4f-e0477319e14f"
                    }
                  }
                ]
              },
              {
                "id": "dd651926-4790-4692-9a43-de7b7ec9848a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fb0c3bc-4ef2-4a1c-bba7-04f9d14903de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcd3467b-27e4-49c7-9ffd-eff7939583f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dc58fa0-13a3-4467-b8b8-7d6c237dfbcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7ed5c478-ac34-4521-a7c3-a754df6d4197"
                    }
                  }
                ]
              },
              {
                "id": "7128b480-d18b-42ad-9b03-012ffbebd7bd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "023a323a-d4e5-4c6d-b916-237113531113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9711dd7d-9c26-485b-8864-2bdc67becaa5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2b543e4-8d30-40ec-b2d2-abdcc6391ba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec0e9c84-fde0-48ac-a3f2-4c3db09a456e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca27c9e6-16cf-43d9-baf1-745b88ca2f4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c853ff84-bbc2-4faa-b6ec-00d2925b0fb9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4868c813-14c1-4f52-9cfd-54fd54bbeed4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82f91468-288d-4427-800b-f4bff93f1560"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff63d714-90db-4877-ab30-947a443671c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc39ef18-389b-412d-8be5-951bb80a3108"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e146e6cc-220e-4578-8413-cbef52d27867",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7a40dc4-0aa6-47d4-8fbb-426ea3b9b18c"
            }
          }
        ]
      },
      {
        "id": "aff96906-d12e-437b-91ff-337645923dbe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "05ea7167-62d4-482b-b446-aa69b3cd2a28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20c34ddd-58e5-4027-9d25-e6b0a66f495c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49d4aaa3-a860-489a-99f7-a5497ad8c5af",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9080fcbe-7b5b-4441-aada-94a26b655d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c98dca6-8511-4724-ada2-91bdef5b47d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e58cc5e-2e2b-4cb5-becc-1fc08f25332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f4d1ad-8029-4fce-bcf0-a149731da5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7022278-73a2-4144-9477-ee213af6d219",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d8f64-2bbf-4755-8ded-2152a3a45ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e47955-ba86-4305-8b86-1e0f0f5aa45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e6e1d-3cda-48cc-8edb-d24a961baabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38439616-cc64-4dfb-b9ec-ce44a6b50f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47ab19d-e2fe-4c8e-9db6-55eb0aeb3990",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae850abe-a5a6-492a-88c0-5143fb015369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3259b722-9835-4bb3-b611-68ee6a1ddbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be0594-39cc-4efe-b5ab-94c7e9528c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19709227-ff8b-41a6-98bf-1b4983ed40f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdcce8d-b0d2-47d2-9266-367978da26d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bc68d3-ce7d-4d63-8380-d0caf14e8e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3db7ab-3d5d-4f71-9131-e04d989992f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582b5ac-f757-4552-b0d9-34d283f5769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b873a7-5efb-4961-b11a-df2cc43255fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92d1324-15a7-4439-8c7e-2990d8d6a7b6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126d67c5-ebe9-4812-9685-d9662d853ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1dc8c0-bfb7-4927-9825-02de2eaed083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12591bc-eaeb-42f8-be34-f782037e7393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1b17b6-5e41-47a2-aa27-b1e14dc16cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77371927-28bc-48c6-841a-a308bea8a128",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3b8181-438f-42e1-bb46-97cc69732960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd97ca1e-aa77-4529-873a-b8cf49239941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ba1289-e33f-4512-8ff1-91dc4a235bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff826cf9-2f10-4f10-a498-ce472970ceee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b0db70-445a-4168-94c1-2a252ecc144a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a9b36d-15d9-414e-bf72-a9630c1101f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d1a1fe-24b1-4e34-89c0-40751ea7dea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ee9c27-e5c9-4988-8507-efcaa8c0cde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "db87a44e-5b53-4f08-8068-26f4f98ee951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bf6e65-1054-4012-a85c-f3407d86ea41",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eb3f8a-5834-45d1-946c-26cb2fc575b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c98af9d-0e6c-4f76-bcb9-02e71c97179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a47b8a0-2777-4760-9593-94105c9a549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec1fa4e-1b2a-4e64-a154-82011797e2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8c6965-2538-40ca-9c91-f9510cdcf079",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eb55fe-f888-4e8d-8356-ad4b546a692c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a431ea-bf8f-4ee7-b5e3-36735d44f02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63bed32-ed01-4af5-87b6-465e5503ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c053e85-9e44-41de-ae20-d9ff5f23e02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57acc99e-48d1-4de5-aa85-e77db6cc06e5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101af312-bed6-4485-bdeb-21c7c0d04f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c116d1c5-851a-4a09-b8db-a7a184684917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32e617c-3cb1-4cc0-8a72-198d83b1dd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13019e4-1117-4d1f-b664-f3748875aa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf21c772-d96a-4ae5-80b0-438440aa212c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62feca07-f194-4baf-a646-12f308508e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da081762-4952-42ee-addd-65b6e3cdb6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63e5dd0-82a2-4b96-be8a-0f01e41ce47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e37940c4-b78f-4f23-9836-08bf919c99b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f85cfd-39f0-4d50-a9ba-460fabdea0b8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9232343d-d9fb-4c0f-b979-298cb5f9a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c196d6-0e9a-439f-a068-84e9c5bd5c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abff070e-bf13-4a88-83e8-389c9595b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41bfff86-91ff-4506-a9fa-94f5ea0690db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5787af32-a901-424c-b042-a50d5e8d6c86",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aa89f1-da1f-495f-b3ba-5a01d38df575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44a84b0-f0d5-46eb-afe1-d6136273a7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4a146-fecc-4c7d-b51c-638f92a07d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cffd0906-7370-4d06-9314-eef1b4a9f630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de24e1a-582d-476d-b036-14c0ea2a99c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea3fb90-bd84-4bbe-88ec-69eac1dde787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2cbd33-eef4-4911-aeb2-f78406808f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c44306f-021c-4209-94bb-852404653741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "322a7500-1190-47b0-9c02-f14094596752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58919f0-d97a-4943-bed1-435767f75bd9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37375279-47a8-430d-9985-b9e6f5d7818d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3873bc-1c9f-404a-bcae-40c36f735b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f005b9-d932-4aea-9025-6fe4b7b7a328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de665e8a-12fd-4ed5-a99f-825ce7e67da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12495594-e41f-4456-a05b-468640d56ebd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f238041-ed86-4307-84e3-dc40eafcddba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2039d3c1-b56b-408d-9534-21b79f5a6344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65124448-e909-4205-95f9-2bb17146af89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a59cf5d-a19e-4080-be6b-860956a7b20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785d3ed2-04fc-4c15-b6a0-9812f68a2778",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9a66a9-9492-4657-8cd5-2b75810a0131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e89b320-c403-4844-bf4f-779ece06336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cb6bfd-0948-41ac-b588-e8d833c9c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f38ebe1-42c5-4653-8882-86b0ac99b398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eedad9-37f0-4a4f-9fbd-2ecc7c99bd3e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130d4309-b332-4b66-98c9-ced134398432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e19fa83-5583-4332-8590-f143d8035eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7f4311-ad8b-496f-9699-9423b359626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7a6cd7-7a46-4814-a906-161e1692a834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd14aa2-76b0-4a73-92f0-0825461b6fdb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6855f737-2eb6-4fad-bf5a-2c29dec51445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a417ad26-e2f3-4b06-8892-bbb5258a52f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a77b52-4b60-4ad6-b294-64440c13f0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5330ded1-b05e-42cd-a601-5a7f368388c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c651810-aa4f-4df0-83e8-e5a8a18cd5c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4c3b7c-2d81-4468-b6a0-66409b503145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403758ec-feb4-443c-afd8-409e8529519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fb23bd-79c7-4899-9528-c7c489b6cd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83120a99-38e1-4b32-b63f-41ae729f659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de37556-9873-48bf-ac9d-01214489690b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5662b432-c197-4406-9ac3-5df73e8e012f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5d3366-e686-4105-8dec-eb3df7d4fc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5865f264-2335-4367-b26f-42916e768594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0832b6bf-3c16-4b87-b706-296931fb7d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf7ea0-c1c2-4f3d-a2c6-ffcada7ee03a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15ef2d7-fcf0-40ea-8016-8654ed7921bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bf1c48-16fd-4b50-8a63-24988ed922bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d1652a-fa16-416e-b5c3-864f147ee320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d4aac2-e82e-420c-b613-98e40c1a7999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e308d731-69e2-4818-bbf6-fa6cc809987f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d351d8bb-e62c-4dd0-8097-6e8a02493406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e446c75-f563-4b69-af40-e51fd306f2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12373ef4-2069-4014-bd3b-a046224c0ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ede2ed-7d74-4eb6-a40e-7f79f4dafe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837c0add-7597-4d50-a63c-f50a51651482",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4656bf0e-0eba-4027-ad5d-90547b27afa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b8617c-95fb-498f-bd4f-f3e578fda96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dd6286-56cd-411c-9aa9-1ed70b4e6d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9e8947-9895-43f1-a3c6-b00014f9a354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1723ee-f20c-47cf-a89e-8d721ca06ff4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7676e0b4-6976-4ae3-be03-b6c98dd57080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53eb8432-fb22-4e68-b528-c93b058104d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6718616c-75e5-421c-9010-bc06adca629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c6d0b3-eaaf-4d11-aa6a-1f5a1fee3865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed09015b-b746-48ea-a059-9eafac3d8333",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3476b8-0311-49b1-a0c4-8e3f2bddd32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244ac328-1a59-40e2-a042-a883bd8f7a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04c42f0-92b7-4a4a-b26a-4ff2c3e39480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab1dcfa-b1f2-47b5-a28d-3b522884bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a7a509-f7db-4020-bd64-aef5e873152b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161ce438-6bbf-4e31-a421-f705832bf1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f840f93-adf5-40f1-94fd-1dd401c3407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4041a4a5-5cfa-49ba-8c44-df6827575364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c67eac8-18c1-4993-a5e3-e791e3fb27c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27df4aca-89fa-42b8-9d9d-daef806c8bd1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85efcfd-b58b-40b4-98c5-c30a61e17f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7973bd12-af89-4174-85e3-7ed01a9a9b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754ee630-5303-4955-8408-e8f7c3ded5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66d9bf7-cfc5-4649-abe0-daa8c213891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af928aed-4b6a-4d46-be9b-2f6173995e51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23e6344-ab09-429b-88d6-77dfacbd52ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813df329-1a5a-40dc-a586-80ab612cc28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a8e39-98c3-4698-8aea-f8f5ca230d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "300d79a1-f5f4-4284-812e-3bea96b86fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da910217-5bec-46e1-9e19-c32552f786f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12699af4-ddf8-4434-83e0-c9d5c4808ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d73227-d35e-4749-903f-31d0f4321e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0930a0c-573f-4b1c-82e6-8c28aa8258d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea765cd5-7256-4e2b-9de6-09433bf5c55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be00ccf-6289-49f5-95aa-0c9d967a3cda",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fd6f60-0432-4258-9c21-64fbabf4fe56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e524db4-dd37-4c1c-be4e-6928f9e1b1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a9b2e5-e531-4781-ad19-701058462647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c607fc-2034-4d7e-bcd0-1d7b67413640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a460caf4-2ff2-491e-b365-468d42b8ec4b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036dd978-71e3-4d86-831f-41bd551b24ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ab1409-8c59-4140-9183-00833c5f7a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033553c7-5cb3-472d-9906-74a104448493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc6fe3c-cb80-43ad-b8db-908ab14f4619"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b6fc00cf-508e-4a9f-91f8-b0c36a577c89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7508607c-4cc9-464f-ab44-01bd621a9a98",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a95a23e-4f36-4c99-9ad1-36ecd8865aa4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "14498c5e-0515-4599-a503-ddb321c80dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aa3778-88d2-419c-950d-65d35c7cc802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b175dd45-dedf-43e4-b0df-3343ba256398"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cbcc422-742a-4732-b0e5-d7b0421082b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e5e7c43-8c3f-4646-a0c0-e47259df9b83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0fa733f-c8f6-432f-8c6b-c2d2b4471b42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea668758-b217-4de4-aae0-0a95118d0b2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd9b7340-feb0-4e07-9a45-93cf43b8e2cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "698bb245-8ce0-4cde-9a83-f93f447a97b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34a22e42-74a9-4560-ae9e-6d46b4641662",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "552b2910-4065-4f41-8f31-e62108f13574"
            }
          }
        ]
      },
      {
        "id": "bb352148-2241-4840-b3b8-a18793eb4ba9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "422db4a4-3f3f-403a-b12e-029f13236f7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3293c734-e512-457b-a286-a96e7953cbf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c477c28-8668-4b96-8827-870b2ee189b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6579ee43-5300-4ffd-a1f8-263c0f3a3797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29ebbac-bfae-421b-ae52-db1d51c49dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b442a4-ddd3-496d-81cf-4d6478d785b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d588ca-356e-4bf9-b700-60325ad8c959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabaa812-1dac-434a-b035-3cf1b1e8d533",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109c5aaf-a1f1-4496-acff-6a4e601ac367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b5e7ab-3d91-4c9f-ae60-7f8bb6f28bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b165772-f6c9-4e92-b5e8-87fd7f6188a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e562a8f4-1eac-459d-a220-5d574aa6d77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6b4789-c232-46e2-9723-c34a64c188d8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a9003-319f-4dc5-aee3-74d36328d00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f70f6c-1c5f-4b21-a4eb-3cfb56c1c8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92127af-129a-42d1-9e3b-4cb009d78608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3bcda3-a1fa-4f0e-8a07-39feb693b866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b08afe7-25a3-4d65-b147-70efc6741802",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ad1e92-11d8-42b6-b895-f16e25d43bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffce3caf-815a-4870-a6ca-19c756717869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce0a38d-4f65-438a-a7e7-c8db21a16fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "889185f0-7439-40a2-b1ed-282f026d2864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02949811-1419-462d-b171-22015e6a72cb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b801a4-138e-4008-9ab6-1dcda799e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c502f832-8089-4913-aee0-23a1d4bdf046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25825e2-de7b-4232-a2f5-78747eadd71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd195ed-75dd-483e-b104-e6a256b8119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4872475e-3e28-4736-9ce7-59d243f3b271",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ced999-17b9-4190-a1f5-059b3e67d9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8538f7-93d0-45ea-b3f5-fbcaec6d5967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e175c-f714-48a7-8808-0c18778f5f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "436fdab0-20b8-4651-8912-cb0af77dc5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90a3e8-5add-4605-a21c-025d72211374",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e32a73-5af0-4d9f-a22f-939d409d2be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf1f5b1-c9f0-42d7-ade0-b7a05e394605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4237bacd-31cf-4e0e-bd2f-8832fc055aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c497026e-58c1-48f3-857d-46121fcb23f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8534f0-6110-4a3c-aafe-fd89f25621a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e609c6-dc81-4f04-b5a6-4cad91e8b98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f435c7d-6a85-4b7f-b3a5-ddca3bfb8c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345fdbd7-56f7-44bd-ad4f-9bb8e2bb6d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af315f54-0410-44e2-99f4-229ad6978e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31884721-84fa-43bc-b849-271235eeb057",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b0141d-c630-4afb-91de-01db04d599ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e9b054-c126-4ac6-92de-e4764d53792e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff036776-28ed-451a-a995-fce192f1122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1262dbe5-508e-4702-a2d9-80e3325879b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a20021e-5d15-407e-8417-711c0d6c27f7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90f818e-3dc2-406e-9421-e55712255b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f85e8bb-92f4-4fab-bd64-b8e1b87f0dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae563b9-3641-43da-ae04-7983f599d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d423a482-4599-4e41-bc9a-316d46cd7472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72863712-d370-43fc-8b01-976842b47d63",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8810f677-c63e-4e02-9ac3-2a896b211743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ff7f8b-e972-4824-9c59-a182cc8f72b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac629e5-f420-4a42-b5b9-3da47994c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf9cede-bd98-43b2-9b88-e8bc3af6649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d728ddc2-046f-478c-b73b-56a7517472aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e6378d-e1d5-4015-81fb-276ac447b5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02db46e8-4067-4a39-82b7-cd04cf7a0730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8be7e9-a8cd-4e0f-9aa7-d547819b47c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6acd5f57-bc28-485e-bace-ab56ad647f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2cc5a2-664a-475e-b55e-5d3a3708cf5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e639eecb-1837-4854-bdf9-f2018f6f30e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b65041a-e973-4cfb-858f-9047d238e21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd110d3-6be9-4910-8ea9-6058617bbdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "463955be-3d2d-4829-a111-e561c5b8939b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb6a494-ef49-4937-907a-402564c9e8bd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3806d0-b89e-4efc-a7d2-43a362b56efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdb4f16-5840-4ef8-a71a-c329dbadc7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cebc8f-a9b8-4b56-9330-83c0f5f73337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85597f7-5b5d-4856-81b0-1ecc49435219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d17f50f-e92d-4a96-a19f-274d2b0cbfec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24500e11-9d3d-4720-8595-fbb1218980cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a785d2a8-25a1-455c-a13b-2d65c08d9ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a9900e-242f-4da2-b3ff-1a85fc541238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9a66be-6c49-48b2-b9ce-c519e3e7a1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b8847c-dd31-4255-a120-1cb1ce91d035",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dbfe71-59c9-496f-8fbd-39f6eaf46e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bab70bb-2fb4-4f49-9ca4-5bf96f06dcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a50aff3-d448-45b0-a3c8-ba4f9091d453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a63349-5708-4348-8471-56468b7f2f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5abc2a-5104-4fdc-9d2f-534d841952fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680d44a5-173c-4cb2-8eea-a09aa0ee51d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8529b6-05bd-4550-8e9b-6e3130fd8dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead18a05-afed-49ba-a535-943ba939c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d544a0c3-9b2b-466f-aaef-f1eb12030d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da98acd3-9e45-4209-91c8-6473fe756f5d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41665961-d9e4-45f3-b251-5a7791bc95e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7702cdc1-2726-48a7-9804-e036768f1093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffda52d3-5793-4cf0-b259-bacf33df19cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87252f79-34e0-4b98-8368-fb0a66be5338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f013c7-c94c-4f0b-bef9-48bac06e0817",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49e9129-e881-44f9-8ece-524422cd9a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed7c377-b2df-47ea-8bcf-00c88c0d79f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109e08d9-99ee-4830-be21-925c3387487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43933e02-7a0e-4765-8d44-88ad1f8a694c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50b8123-4d72-4e3f-a031-324f167827de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21a3cdc-ece9-42e6-a74b-9c4976a9d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa3cceb-ee63-4d28-af19-64751118fc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf70b51d-2906-484e-a42f-ec8eafb387da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40521aa6-6255-4945-a9b3-8617f6c6f37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7ac2b9-c67e-4902-9002-063497d69086",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232664bb-ae45-412c-97ed-8663fdf82e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb0c745-d646-4078-976d-b4c1fc0db895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6728d1c-152b-4e2d-b312-fb6ddf253515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b521538-6323-4818-906f-95ed4591fc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cd4971-cde4-4721-a718-8523396973b3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe9eee3-0a8a-472b-aa30-1b9959ac7483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca97b393-9d5b-4cfa-992f-0a0080348684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cf4a2d-24fd-4d25-bf2b-452da59feba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f620e309-bceb-487d-a202-e5fdd5c9bf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fc5ab6-47ac-4c25-ab62-6376bf46f810",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796fd37f-0cea-47fc-b8ad-1370b9e54ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684779e2-0dba-4b40-a4eb-a770bc6fb12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb7b9c9-ff08-4152-8668-b8eea4d02300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5fdc8d-1df2-4e68-bb33-314d40065221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83ea8b-0941-49e2-848a-0a9fc6f15ec0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3e98b9-02a4-406d-9f89-798eff0112ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2220567b-fb0b-4caf-9d50-3f4a6a60cd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841a3056-f5df-4bf1-8109-dc5121aac28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ae2aa2-70f4-4de7-85a6-71211ca929d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abc7e49-67fd-4468-9aea-1979b2a3af56",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0b8795-2b9a-486d-89e3-8d2787a33948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35f4bb9-3cd2-4217-8a95-4304cd4328f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee636d9a-28e3-4485-825c-a1911a2d914a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ae020f-fcc4-437c-a3cb-c7dd3cea5ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13919539-e40d-4159-90ac-d4641aed2806",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867b418a-b3ae-4c93-809b-bb8805b30162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973a02f5-7625-4a1f-95f9-566f0ae3ac3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6183cd48-fca0-4872-9ff0-783d16b57c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6bcbf7-ea54-4819-acf1-2d8f98d768a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c28b3aa-9c6e-4802-9842-8b891a7edacb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9c3148-9fc6-4826-9a2b-bcadbc10ce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534fd805-2a11-4b21-9472-b38abdd96a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66cf0ad-5554-496c-8335-f65fb7839169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21c947c-3a24-44f2-be49-327cb6930422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f1ca77-30fe-45dd-b7d0-c6bbbbfbe21e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cc161e-dca4-4a29-baa0-cd39c85a4506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abcdfcf-3e71-4873-b89d-3b25304bd981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da6b734-9faf-476f-b911-dabd4e2cfb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0434d3e-2636-4875-88e7-645d6b8f60e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2268a82d-b34f-459e-aa69-1978d0a10e84",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3fdd89-831c-4fa8-a97b-ab37effe827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8ad80d-c1b9-47cd-8793-e1a2f4b494c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52207745-35d2-44c7-a559-80d374192007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27580a03-1224-402d-a234-c44974aca618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822a31a9-7fbf-40b4-b698-527e27817261",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350bffc0-f1a5-4892-b3e7-25167c53630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf609750-ffc1-42f2-8d43-b92e1e448468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f7c12c-3a44-4e60-80f6-2cab74866626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd15bddf-059b-4629-a2f7-88e9ef189a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10c6078-d487-4fb9-bd86-4faae3d67792",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34286775-cffc-4e93-bd6c-ed3bdb9ffd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4528b5-19d9-485a-b1bb-b33f47597dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd716564-f7a9-4f97-93e7-f76dd27a58bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49bde9d5-6d84-424a-b52c-46b8d704259f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879732cd-ba35-4cd8-9c49-423c31d93ef7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752876fe-507b-45bc-aafd-59fc2bd717fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa165f79-0ab7-408d-88ac-646d6edc7199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdaf97a-6676-4250-afc1-1b9c360409a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b075cda6-2cb6-476c-ad3b-bfef324fd8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a23a79-d315-4889-8724-3f7c6d90dfa4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa500db3-5ec7-4e60-bf16-5cc7e9278efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db05019b-daa3-47fe-80d4-d7d7f554171e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c80c3fb-0b7d-413c-84b2-51d0e242288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19141d5f-2127-4680-ae18-92d9ac875cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff2dd0-d141-463d-97fd-5f69e62185a3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409c2549-355a-47d8-b499-a5190549aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4fc87d-f6ac-4e01-98c3-195d60cab6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b569c9-40da-4bef-ab65-065bfbc44cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5071d4-77c7-496c-a029-b65e1c4301a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0bb066-5362-41e1-8e6f-7a02992d9354",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453ebc03-39bf-44e7-828a-80d0ae69fe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742ebc20-840b-4b64-9dfa-3399d44541c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a0d3d3-1db0-4762-84c2-bc99d3025c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c964c4d-66dd-4fb5-a75f-921c201d951f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5824e8-b0d3-4517-a2a5-4689c7e0ac57",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90993941-b878-4be4-9ed3-88cc8364a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32c03d7-3c34-4f75-92c4-9cb40362c96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54a06f9-6ebf-4bc5-8d9d-ca2ad96a869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ec5149-13be-4bf5-b405-576a360778dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5df710-93f5-4698-b68c-e5dd1ee2fefc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcde632-48d9-4f58-b65d-9fd4663cb0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b4314b-a2fd-4130-8a14-020fedbf0f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3037e9-ec20-4284-aff6-2fc20e57a513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfd720f-4be8-4861-b669-cfde63207d74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39ceadf2-1658-408c-9a2e-4255824c9611",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f0fa50c-a2f3-4150-933b-bf83cf5bcc91",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6635b0-eb00-4500-9371-eeb0d4f358e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1899c7d5-e1f1-4d12-9277-b4a284b10258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815653d2-f4bd-4af6-9a3e-b3b38b751162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "973b7cc2-a71a-4687-9ebd-21bebbb4c9e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbbd5f6d-6c02-416a-8159-277be7cd9a5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa7a407d-ac3b-4117-8af6-1d050e15b046"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3350d0a0-f1fc-42ad-8df7-cf374bf7bfa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956d83e8-c344-480b-a9b1-060d80e34c97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d16731e4-e7e8-46b0-882f-a018c1ade5b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2dbbb2e4-f0aa-4a3b-acef-5e070cc73a84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a0387ec-0f01-43fc-abd4-c2a8e5bcdd86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "898d6113-0088-4981-ad1e-d98ba0da893d"
            }
          }
        ]
      },
      {
        "id": "dcac829e-8d16-4005-8c25-07f8d39719c8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2f000df0-3e4b-4cca-bce3-7c679cc1b6f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8c64546-314c-48fa-83b4-df957078e9e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81bffb25-33af-4a4e-989d-ca62a853da23",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab329b7-9d9c-4975-a877-3a6cea4e4116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b0ad44-2ff9-45ce-abb9-85cba2a32a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d4e3e0-8d3a-4f3a-996e-72cf5cbd2516",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffcb9b3-3d58-4f9a-8719-59fa41c08a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d55bd0-1c78-4176-b547-5818ee7cbb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb90bbb5-ed1d-462c-a2f3-d36d1e7c0a56",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfac03bf-1ddd-46c6-8945-cd815305db0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5806c9-0668-4fc3-bb30-7c0e297803c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c8bfba-73a2-4c90-a973-41d88570ec05",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122f02b8-136e-4c8a-b91e-352e01547667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3d414d-b5f9-4528-a6d4-7c0567380e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56821e5b-6b32-4220-9fd6-049d30962edb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c55d59-4a6f-42a0-bf80-35e8c2cae5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b43375-82e4-4993-b389-66a17537de75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0630ff8-dd2c-45a7-ad2c-67c9e73bf82f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd821ac-5860-4962-881b-70b0edbb58f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ca8b60-1c94-4759-81a0-028d0118a8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae55c813-08e9-495b-adfa-5769176d8cba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a8672-da56-40bf-b3af-95dfa2a08284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553109c3-a50a-4686-aaf6-df75c53318c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b8ec0-bc63-4dd3-a336-ce2d4d33784e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e66ba7-5578-4e49-afdc-96b8e7f2eb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ead8ad-f7bc-4212-847a-8aabd8458895",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b88a4c0-6cc1-40d8-b4b8-70ec8c9f920d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33623219-6932-4ddc-b6c0-53c9d3a508e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc14db-fc0f-4ccf-9802-a5ef202d2d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c277506-c9ca-4b38-80f9-189847009033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1296b27-7c14-470e-84cd-d43953f02907",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33206bd4-96aa-480f-936d-4c2a756820da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76df4ba8-cdd7-4c4f-a1d0-b5b6fcfc4f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaaa402-248e-4f59-bb9b-14841569cb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e91b02-4bbe-4dd5-8e82-c51c60984222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86852b78-aa66-4901-a773-b54bea6481f6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef14fa2c-d50e-4187-9acf-90fb673233d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae6f6f9-f5c8-4aeb-a1ff-3a9e47efadba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c4397d-fc5c-4e7b-813e-0b421c662efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b1fcde-a86e-45c0-b027-f099cb57661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5a7999-e347-47a3-986b-435b39fa62b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea89204-5bb3-49dc-a86c-5a6cf4106351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7bf9c2-4965-46ff-97c7-68ab99d6edcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c20637e-dd50-4393-a542-1241af470426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2050b3af-3eea-4934-8eaf-02f79dbeb8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31e89e2-de1f-4716-894c-6f3fba1ce1eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a881baba-6570-42b0-844e-b08d00df0205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f54419-7761-45e2-94d7-a081c1e0411a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d01a636-86fb-4d7c-bc16-6479fcb652af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5978b6c-3f1a-4949-8664-fe323368c7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2dec71-380f-477f-9ca8-f8b000f75b07",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d0785-f3c4-4224-8599-df8b000bb851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e739ff-2efe-465b-8bbc-47cbd2669725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5239e3d-2a11-47e6-8811-4fe617e8b3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a547bcbc-247a-4f2a-875f-4cdd81f2c312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afca7b43-f99b-4e0a-b705-b05ccd3a8f73",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7590f69-8197-430b-a3ed-dde8784d91aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9035cd1d-cc9b-4347-bb68-ed67594a5e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5908c0db-0c87-4414-9371-87feaaa952a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c54535-5a46-45c0-9327-43770e6bcb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37c13b0-fbf4-43dd-98a6-7c46b960e5d0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1634592-aa24-47c6-b818-485cfc804a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77dadab3-44bd-4a88-b1e9-54e2991b47dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c98fbc5-e7d1-49dc-b77a-2bf96a2006ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c5a01d-2626-4a2e-8da8-dd0787ae7088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff00822-9bf6-46d1-9123-0dec4a3f33f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1d29a9-8e33-4813-a9f8-8efe24079164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ec8aa4-1f8a-4feb-99a0-6e3f34595093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e225d27-6c17-4d12-9e3e-b92231e05233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a053d4-e365-456e-9a6c-ab8216a23426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87770f2-30bb-4056-8ba6-1786973dc634",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720596ff-fcdb-44a3-b6bd-c63a1a24867b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98adce11-6307-4198-80f8-9756775171aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133dd902-a6a9-403b-9b52-790dc8457da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1decc1b8-35f6-4352-9fb6-9966ef02e6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce68577e-4992-4ffe-8a8e-82eaa41227f9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd06e1bd-8038-458f-ac49-43c4d8f84d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ba7083-1b6a-45ac-899e-c105a821b934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ac3168-d56e-4082-b48c-9210a24b9212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306d2a66-02a6-44b5-b3b4-cd93d237b93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37788902-31e2-46b8-9930-8aafdf89e8fc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a4775b-c560-4683-9f31-8772de5a1843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fff5d9-46a9-431f-b90a-400bbbc20530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6902d9-9187-4292-b1d0-c9b037d32ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807f50f1-aec7-48a0-bb17-574553b71263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577bc913-5695-41d6-89d2-62d9d8369bcd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a93ddc-7351-46d6-9a1c-32bb3281c035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae717829-6a9f-4386-aa60-e52b05e88445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a6e21-b583-487d-b47d-a23b58c33e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64312391-8a38-409f-bcc9-12f234f057bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77298fe1-af9f-4c8a-b9b2-7e6e6d446056",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1de3ac-efa7-48a5-bc74-8b55014b1006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb03d79-8446-4af5-af89-9eb0dc5d5691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5329d638-3c4c-43de-9e09-d5b6a22cd52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86227efe-ce45-486d-a55f-d9eeb5cb5ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16dd774-d837-4b23-8fc2-3c77e3f14cd3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73722eb5-fe2d-4fe2-b2c7-89acd85495c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78aeeb86-4f94-4f50-876c-e42731ec66dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc775a3-5f55-4c8c-8508-a476d71cee9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c99c689-7d1d-49ca-b71f-a2658aca9377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8377fc1-171f-4fbb-93e8-f6b3ec386aa1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfa0e77-2f4d-414a-84d9-3ade66802cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0ea6b2-eaa3-4f85-8f70-83c4563b5bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c457b23-c8f8-4196-b4fa-128a0fda47c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c13db-81df-4973-b8ff-c4cd6a71c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad286ee-f778-4592-a5fd-c0c8c3806088",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7d5c9f-8257-4a76-b94d-9ff1f08a8031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7200a20a-adb7-4362-bbd4-cd37feed0604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965ad010-83f9-42f1-9bda-416bfd1f4f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b365784d-5cc6-4d6e-90fd-43539cf7185d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baabc91-1ed0-4b11-a960-62a0615fbaab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d7f9e0-19d9-4ca0-b7e0-587ed75c4168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24a10be-5580-484e-a7b0-6f97471f814f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635977d7-e366-48f0-8937-10d8c8d502ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958d6039-0749-4445-9a0a-04634f993783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c71910c-a895-42fb-963f-fd34d0a3be3a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a625708-f739-4a72-9ff4-7f232bd6b19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301dc8c1-e601-4a44-ab81-222226f0af86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf83ae0-95db-4413-b04e-4ba5db85c781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db7b90d-3bbd-4919-af0c-1e80cb1a234b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35bc6f8-53d0-42c6-a43a-4431d7efcc22",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140b30ab-ab80-4021-ae26-904567297dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca8e82a-5f5c-4a4d-9515-f39c4dc312be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636a4335-0751-46df-9ed5-a971366f6fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c83fab8-ba93-4669-a099-5c84b7371f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cca124-98f6-47f6-a222-48c7029091ec",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165ad76a-4035-4d5f-adfb-6209262d21dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ad3594-afd0-4c34-bdfa-014f486c8d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1c495b-d777-4c34-9591-dd0a743df622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f2bc4c-411a-4565-8245-1fbfec41bbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b779b60-10d8-4490-8616-3413f405518a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a247b6df-64f5-4796-956b-4f286535d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf361044-f42d-419b-973d-c811258534cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e60cb3-27eb-4e06-828f-c7b518255202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429d2341-c721-42a3-a0e4-34fffef6f5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c07102-7012-422b-984c-c89d5fe4a140",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e72cc5-47c7-484a-a393-e72d0985dead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c66db9-564f-41c1-8f9f-263e95e6fe61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138e22bc-8f3b-41d1-8269-11db1422a682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4f5342-b683-4530-a994-35c76179f5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b8f80b-9157-4ba2-844b-864766dcdc7e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6571b66c-6e58-40b1-960c-2c02f5ad262d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b367f19d-c79c-4cc5-8ba6-a5903dd201e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670ce618-2d9b-4e97-a978-8a46caad1114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b96c56-9367-4b32-9c1f-9aaf4ff2dd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdd4229-dc86-40fc-8e1c-ed03c890f417",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f0117e-15a3-4c48-9439-bbe79a9ffce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b842ac-0bb1-448c-a260-fbeea1e626ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7b0674-45d6-4dc8-ab18-6124f3a54c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e43376f-7675-49ff-bca8-9ffcc42748de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526dd432-a22f-4c9f-b721-c24147b6a6d3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cf08ea-9d44-45a5-8843-f6252c151438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1144fa36-e990-4ef3-8420-0bd1bbd1fa80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93de4037-c802-4b2d-9c55-a0349d145827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd09eb-2ce8-44c8-bca7-6264ac3fbfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed1666-72a4-46fa-ac49-1650a16f422f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8a8ee7-7062-4538-990d-dad8f23e4d83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2515d16f-935a-4333-b9e6-f271571bac8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f304934-d713-4ba0-8810-e5890845e159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d34a17-fa27-4bbf-84a1-e46e121712e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06ec718-b0df-4c47-a77a-89e9c44d8c53",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146f3daa-12c3-4ef4-b35b-220e7c2de2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12e4512-447a-4450-b050-89a9dd4d7551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6070b78-b599-4b17-88ba-6898275c3aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c40b6d8-755e-4c78-9a67-7d0203d391e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222e925f-80be-4a77-8b7a-b7e9c0fe8c82",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03759577-5a81-4d9f-a161-8c86ca6f2ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92b0bfe-8925-474a-8dfc-80984337be3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7c567-2e98-4758-832b-17a3d7d7f03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0207af-16b9-4b35-9fde-769c455a1fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a6b2ec-60f4-4453-86a9-aedf24bb432e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33883d04-eea2-445d-903e-ba23ffc9b246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e307141-0d96-4b66-bb17-581610d752e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cb376a-4145-4c7a-a0c0-12a4a408943b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad62654-d2c5-4e87-9b7e-5eb33602dd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458bdc41-f7d1-45ed-9e37-f4541da4338f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f7c6bc-0e48-47b2-ad41-79283d879a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351719cb-c8ae-4c65-b78b-497ee089ccc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25da4ad-5d2c-40e1-9fc4-27063a648ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06ccf78-7a65-463d-b65b-e228ce85e286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e089a9-6130-41e8-8bd5-0d2d0d05c055",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa76dfa1-2cc5-43bd-b6cd-522aa779d47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc1d8fd-723c-45f0-9487-69842ffb47fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7319632d-35ec-4257-9e59-f9f171bae9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cac7a3c-6fea-49c1-823a-f599af3763c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8a8fa5-f5f6-427e-a1e9-8e9e5d9165af",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d547b9bd-8c77-49f2-9e70-3c00af0e7e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753b50da-41bb-4f87-92d8-08c9392f03f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77083cda-2ea2-40d0-98ab-48a1ab67a46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab74288-518e-4a53-b777-9b0ec55ca2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7994e208-0011-422a-a036-27c4241b2a2a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35fc1ce-f138-4d19-a5d3-2c78c1acf398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c5ef91-16e1-4798-bb02-b9156aae7947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7361c07-3285-4c2b-a012-8af380dab764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ec5aab-9d96-4702-a0f1-9307da772d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7046b34-c354-4b61-b4d4-5293184fadcd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd59114-da2c-405e-ae6d-4c4e0c63d364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fd1215-a1fc-43d8-ae0f-489d1568644e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524c8891-a8a3-4ebd-a783-3a93c2089f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f66daff-1a3c-4519-8787-c67eb5b2eaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e85b6e8-17a6-4c01-b281-ff233668b1ea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf64c6-aecc-4230-8b04-390ae8feea01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edf15c8-9690-4607-8509-e2b757cfd4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2114fb78-d066-4e0d-a2e1-d65abeeb0d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4011617-eff2-4ca5-86e3-8f6c610677cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0912800e-2206-493e-b055-19e173d53b21",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986bea94-ddf1-45b7-b028-a7537fa2697e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296d7aee-3b20-409f-b0d7-9b1feffa48bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5598e5-7981-4e15-9e10-708d64a1f60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7210fd-4268-49e1-841b-eb66c4eb7d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dee1b9-a73c-43ed-9f29-0c5a4b42c015",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5805fcb7-5836-4b21-a8bd-1d68e539dd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a084b2d8-287a-43af-871e-e4733279d09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6637c58-6c22-496f-b7ca-9b1985c50f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219c6bd4-9156-496b-a2ab-e14103760f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4eae4a-e8d3-47a9-9bda-43b9ed4779b6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fa8b6f-f122-4afa-a8e3-6d3096decf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba968af9-7f6d-43ab-bcf8-bf85f5658ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ad61d6-fbaa-4dfe-8e64-f3685916650c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81f847b-ea57-438e-a2b0-064adf963685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa79fc1-2a74-4864-a200-0931e6bdc12c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae7cf99-f6c3-4300-b4e1-4025918a3e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f215085-86ce-4955-9843-ce33c840860b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e78e7bb-a571-4c24-9228-c0c0c38d6a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a81aa5-0038-4db5-8a10-fbfa323a54de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42907ec-8795-47ac-a8ba-e207f41587dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f21313-ee95-4c37-a0d8-e89316d011b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc42f9fa-4711-46a5-a647-78a76ba24d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c012ab8-4ff2-4c52-a8c5-472c97da9a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdf1cd8-292b-48b4-8832-b88dd4f7fa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b0c7f1-b7b0-4545-93f3-934891217747",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9208eaab-7f43-4e31-bb1e-01a6192add4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10beabc-2f63-4739-91c5-c3b1b49990e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c576ab-827f-40da-b973-0018786a17e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52271a39-21e3-4999-a587-876a46498956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e272a6-f927-454e-a6ec-2e37c806772f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575b20bb-e71b-417a-9a0d-4e598495e8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae94c643-5c96-4b9a-8c2a-8fd5d5ec1405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e1b5d0-ae49-43ca-8a9c-44d3cfcfac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbd3017-1c6e-44ef-8ca8-9a2c73c7f20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1dc857-de3a-40a0-96f3-bbbb4f43a80b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd63e16-fd43-405a-bd05-df4aa9b349ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa39ad9d-b40d-4510-9020-b7f97e27674d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52225da7-bdf5-4acf-acbc-cd6479874426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525ff970-7910-4a47-b9c3-420c65f38138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0128fb-a7fe-4221-a1d8-eb00f56c0bd2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122c876c-c457-45ec-88c2-3092027dc7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888c57ec-43fc-46d6-89c9-9537e5642256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2e2b1a-8a25-4048-8454-749bb30c4917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c594e89a-091c-4be2-b5de-5a7b01951ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bed8e0-d064-4592-9c77-ae978156bf2d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cf0ca6-c9c7-41ca-a89f-a5b66d791b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accfaa4a-89b3-4c49-b0ea-42c4b5fa2bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b26fbe-5bab-4174-a85a-9faeeb6a301a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb71cdf-83cc-4afe-8936-583b76ea6d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d938c1-f9bc-405b-a593-09d2501349b2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220664e7-8fdf-4e17-b47e-c1bcc064f5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27331c74-f07c-4682-822e-a316a05921fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a54afc-5fff-42ec-b45e-e8a948e187f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af87354-8135-4353-ac4b-2619b9b99c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fccf784-4751-4df9-8b66-00b90f070a4f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c417d71-5c9a-4433-a0d2-cf8ecccefeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108e74eb-20be-41f6-a6b2-f39bda71a91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306167c7-4894-48e3-8f7b-4f7003de7ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37956bc1-6f83-48b4-8702-77eecf9b2b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda6c438-372d-49c9-9043-5d13eec5d18d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9964f2-5e51-4123-a0f7-5ea17a2a7f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0a70ce-0d3b-40c8-a501-a7ae9c3ea2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5689c05c-28b6-409d-85e2-05f8c78c2a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedfb417-6519-44f8-8902-c1b819a9ea0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a61865-e0dc-4eea-a7f9-7d402cb3e0c0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682237aa-6bc2-435f-b05c-dd644a003b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd46816-9bbf-48d9-9a30-baac8081c4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cef0d7-3955-4afa-bb7a-006529e5f86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b806e625-3dda-473f-b1eb-d66b7ade7e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e863d178-668c-49fc-a454-c3361211b4c8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df82c5a-8a95-453b-ab24-f190b3e236a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21db87a-6e3c-4afe-ad55-5c91d67664e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07203318-c404-46fd-9f8a-51b023ec5412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b219edbf-4eec-43bd-bf1c-b95fb6caf129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5458adc5-c6d9-436a-908b-7c8ace16d684",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9f1d4f-7b40-448b-a19e-572d015dcb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4dc51c-eca9-4cf1-9173-bdf75d7b89dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5f2ff2-cf86-4325-86e1-d4c19ac403ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a002eb-c1ed-499a-8910-a51fb600be60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5018cdf4-44dd-4eac-9f36-9b50a1996cd2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626312f3-9753-4c86-ab19-47d61d99e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074e9051-4050-4710-a91b-00c49a652bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907e6431-f18f-4965-b425-91fb0c777132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2037d2bf-3221-4f19-be2a-9d02b2cc4bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7567f323-5271-42e8-8e03-fa0ff8629d40",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86b0dfc-46c1-4f3f-ad4f-868b8dbd95c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09d5a5e-cbf9-446d-a876-9f77c337ff83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24360ad-e336-4c1f-a265-2d439692ca1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9c6ff1-607f-4c83-9041-1b5b29c9aa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e623540e-0102-4a5a-8fdf-fbbc0b6c290a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56206b98-98e0-4cc0-abe4-846594b5c444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60edb41d-83be-42d2-a1aa-cc2aca61f655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cfd593-dc70-44ec-b0fe-c0b377f27644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c952fd33-b872-4be5-b16e-ae8a4f57f11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3591d8d3-cd2b-4bdb-99be-53b2f7afbd9a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2bba22-f78e-4dbd-87d2-158c6cb7aebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22b50c2-d6f8-470b-8f15-8b34009245cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b9ae9a-7aea-499f-96e9-34630c9bf38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48897e25-c5fb-49a8-bed4-aebb34408d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcf40b6-8622-4f40-9baf-cd5e9ed9b167",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b766f8-a42e-44e3-bbfa-37a6a4a9e403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b8042f-2e17-4461-9dea-1513f419e7a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa12504a-402e-4638-80d4-33eb04eabb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc88ebb-cf62-42a8-8e35-cd21711146a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac9b384-85b0-4ff8-8d0c-e5c40d5f0e69",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6f392f-ce85-4cc1-ac24-ce2f4baed004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c2078a-c600-4f07-bc02-b6b1231363ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee891a7-403a-411c-a8e6-f2b4d336284e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd6f91-67cb-4e73-86d1-eb14062c9368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091f4e2f-1cda-44a8-947e-046df5f25136",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9395c64a-9b79-4e1d-8e9e-873b7c4b6520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c9b5a56-3b45-4f5c-9396-92b4c7d1ffe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b755551-7fe5-4da9-842e-bfbdc7fe8729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be4b825-bc35-40d0-8024-0985e0563d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd982ea7-8db2-4d30-8e57-7fa53bdc84c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb1a5c4-bbd1-4d5a-9d80-90af01650c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c203943c-e054-48ac-aa92-715564d2b65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58294b4e-c9a6-4c10-8dcb-56eafaf7ddb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69afca91-1046-4540-ac9c-1d846fcec604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996deff5-aa69-4bb3-8574-a5f857835432",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2ddcff-aa79-4be6-96fc-cca9e8b0419a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352aca32-e190-403b-b059-b94f117fb765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c8d30c-055b-4181-a023-336871bcf95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37e6239-7981-4e12-ab5f-703e982336ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade2617-adb9-4016-98f6-fc8ffe7c1f60",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6822266a-fc8c-4f23-b5ae-0bedeeb21636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be1a556-f026-4349-8cbb-1607a8d30a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ea1c51-0e15-46ca-99bb-e30a18ff1eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13615a05-f266-437c-81b5-429533d70e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a742b50-1642-441e-b672-91d2fb6ac451",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126bdd2a-79ab-47f9-961c-116d13d22ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0ff89e-cc03-4b62-81a8-5762b4e5e963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3db936-d092-46a0-a825-dd84b05df799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878d1290-4207-42a9-a3c7-3e5bb546a12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bff89ef-c4cf-47c7-ab40-e2d291573a2c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a22278a-ec14-4e64-94e9-7f334dae0458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db3cf55-fcce-4a70-9831-33d5184f4b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220af606-0f29-4642-912f-6bbe5ec32438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c763b3c-3774-4a13-bc0e-581e1dd8e332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6207e725-a069-4688-875b-229000d2843d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69495ea-2666-433f-b9f3-b8fa9452276d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e649adf-3f47-4d05-98ff-7495697f8d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc91c66-2d47-4003-8424-04618e5c0b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99185966-e8d2-46b3-8d0a-df71a495665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5a5e9e-5ee1-4a3d-ad11-c6afbca80ee3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d75597-0437-40c7-8f60-7a0f3b7c59a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c0159f-f944-453e-ba9d-69f0bc4ce883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a096dc-f8ce-42ee-b6c9-cda2abdfa458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a26ea2-2be8-49b3-a714-ed9bf09574ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79be4927-e972-4e35-8729-add513072cb8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b09bba-d7b4-477e-bb58-a64122255cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae711863-e298-4666-8f2a-11b1446c2da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda59656-cdb6-4a61-959c-272b70d342d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd97967-3186-40af-bc7e-a48910d6fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1699128a-0619-4a52-a45d-c001f71b1b7c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47d1cf0-4132-496e-80ce-e57e5dc83972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381d5189-65e1-4e92-a92a-86668a76e61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b8fc31-f361-4f20-ab73-d82d9aae6497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c1f9e8-88b1-44dd-97b3-b05bcd68e1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdfec75-080a-4fff-9832-66b148f21664",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f882042-aeb3-4f60-9208-d360ecc00263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86cfab3-e69b-4c0c-bf74-d4721ffb03bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2279617-bd82-4c3d-b7fd-fb99edde85b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ff32c0-a8ba-4aec-97ba-964a9640a70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521e76ef-b932-4139-a8f5-f928f633956a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e9b50b-6ae1-4a5b-80a9-ebef987a4db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da91a363-2b98-4b9e-b67b-c5bf32670f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1399351e-71f4-4d20-b4e0-1ceec366f4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52afb040-8ab8-41bc-b00d-26d8f18e62f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acaf2f1-1d47-43f5-ba7d-07bc19700599",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89adde6d-2b93-456e-8362-85785bf2ec86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c2c292-876e-48d3-9a84-1b98366c721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df80e5b-1dfb-4654-a294-ca71393c129e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f718b1e1-49ee-4eca-8ef3-fbeebabe5d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e73e42-ad82-42cc-b49b-dc53a1ad0047",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7288a89-18f2-4e14-984a-f4658b41a1d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9ca3ef-3755-408b-86ef-092395bdcf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7421af1-1cbd-48a9-beec-266b9a2709a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53b5026-bb36-4267-abe8-07c1ae0f261c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c005672-006f-4309-bb21-60fb709b53ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1afbf6-36a0-4599-b97a-7a518abfe57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac6faf9-ee86-47d9-a290-e42ee3e526a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdfa205-8e79-4098-9d0b-e9ea04d0461b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcac1f64-5844-440f-8ebe-061f1bbd9c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e5dfa4-b330-4e80-88c3-938442710a9e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa23708-ead2-46dc-9212-3614e3335a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fbea4d-6a91-4f53-9c22-c99e5e0622f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5001523c-d49d-40d4-91f9-007fb3470527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57b9e2f-9abc-4bea-b02f-d0694c128b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b94f94-386c-477b-9f35-7e27e9c0fb6b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1045a326-a91d-4622-a533-076ed02f0786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e89f90-ead8-47a9-8d7f-cd45c79cc902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca67b08-25d2-481e-9c94-929cab3dfb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea5c94f-61e8-4124-923a-87531213b217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44afc919-fa84-4e70-99d5-e79af205d315",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee24c5b5-fdef-4e02-b077-e1aa8a04e82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a467311-d0d6-4394-ac54-c5b2dde455a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0d9b5-fe08-4df6-b7d2-6589c2675f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb91b5d-0ea4-4677-baa7-ef22d8a69b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea7af18-ceba-40f4-a67b-abad0f6ea151",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b551fc-23d2-467e-b7a5-02ef3404c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b008cd-c820-4e7a-a18b-48e6b30b2214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe597d-457b-4561-8f44-86db706930a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37189e2-461f-45a4-9ddf-81d616d11832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5bd889-d9f6-45f8-9a04-d4e1d54f111a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a0c22b-0846-4b0f-97ae-125a8e44201e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc0ea91-dba6-4ed4-9087-cad249763ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dafb3e2-5db5-4be7-baf6-e4075cda5c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef87df6e-70f4-43df-92fe-8d222780420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ce49a-47b5-4e28-8898-ecc3690f8e04",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93441840-7df5-4970-bb5f-fc667579892f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ed698a-6eeb-4a17-b522-0e32b1053019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c01be6e-adaf-447d-9b79-9771b1888c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2feb7af5-7eaf-4029-9bb5-20ee749b84af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e9edb0-1518-48bf-941a-477c107103a6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd787c42-a6b7-45ba-9831-f82ebbc7389e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6115284-f4a9-4a73-bfce-2b07454c78cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7dc280-4cd5-413e-91c6-1dbccfa3ec3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a846a1a-7cc3-47c9-b1fd-54555210dd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9228a1bb-c666-4513-b38f-b4867a8fd678",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acc416b-9055-4696-aa4b-1d50d2886c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59933bd-3d23-4f63-97c9-5b243d03e981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80a9b1e-b9bb-455d-9269-5150427ea6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc8c384-f815-4e37-a980-bf83f2333252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6514453b-f9dd-49c8-b920-f552c991bde6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1977300c-808a-4494-a285-7117c38d3520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9a484b-0b4d-4ae7-be6d-68ffc1fd0751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8da48a-e6b6-4590-8dcd-403fd2e59688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd483ac-37cc-4529-ac64-209cf33391fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5166aac-b804-44c4-98b3-28ca85199c12",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cae29a3-6dc1-4116-96fe-7c2a2faaade1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a73331-24b2-4577-83ed-db59fecfd5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ed1ff8-c64c-471f-b24e-201a31132d15",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d3df98-f4ab-4a3a-b431-7c58205b871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8bd23e-5b3d-4684-bd93-ded6ee5e3aae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a59fdf3-6da2-4b79-b2d5-35e11ff33420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b2a2873-a2cc-4b0a-87d1-06e915331524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d50b643-54ba-4b3f-bf68-4d29234ea98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b57e315-fe1c-494e-8260-1edb2a3f9e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09ff1fc-26f0-458c-965a-963ad5d3638d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4005a34-1452-4dba-8a1b-445ac3a44d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef963535-ff0f-4ce7-bde3-30a07706da06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82439aa3-cbf4-4f69-b71e-4419496d958d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190beec2-033e-4359-b121-b6731e1a2dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52430490-83a2-4ebb-b51b-3dd4c38a7dcb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a055aca3-acb9-4ae3-81c7-ac3ec4c6d737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feba12bb-5c8c-4cd7-b1cc-c68a7ab3c693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb78eb9-4ea9-40d0-899a-c2d3ed2585db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f4a393-161a-496d-ba8b-6f4e6eac36fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d752eff-bf7a-4fef-b7f4-3b1362552e83",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6e4668-8cd9-47bc-b5cc-8965c486457c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dba02bf-ff15-4248-864e-76d709289564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d908ffab-48cc-40df-a92d-112ad338122c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a83605-cc75-422b-9067-95a158ccb58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8423fd-94c1-4e18-a475-62dab088c610",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb1a4d8-4169-440f-b910-83196fabcd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8bbf7f2-ad25-4688-8424-727148db3ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14895ae0-159b-4bed-a73c-b27a4f72e2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55f558a-65ce-4d33-bcc2-dadacbbf0830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaebd08-1826-4f28-8ad1-eb91d7f0d988",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb3552d-badc-4b73-81e8-5f97dd9632bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234be6e3-aea3-4973-a340-089e0879ebb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f468f621-6857-423a-97f4-3f5d3b187ae1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031ecd3a-adb3-47a2-b87c-358ec038fd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbfcae2-69cd-4dc7-8ebe-196777bc23c5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff63ba0-8d19-4c56-8ed6-e9424a98b74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a49c94-961b-4f3c-8139-095385e6a243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4556678-dd2b-4425-bce7-91de4f4b3355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ebfefe-17df-4fcc-987f-257d43a643b1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79894c30-a35a-45ce-9d69-ba7a0fb04cb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c11eb6c8-29ee-42c0-9dab-e0c47af75261"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5ec9d55-16d7-4888-aeb6-831ab813bcc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b95a623a-a704-4ef4-8123-f4fb2e1bda35"
                    }
                  }
                ]
              },
              {
                "id": "b517a553-39a5-4602-967b-9a3ac412b406",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbedbbce-be85-415b-839c-961752592e31",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fead03ed-4a10-4eb4-b33b-d8f29c4574ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1838e99b-122d-42f6-af84-4251cbc70d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908eb697-e162-4cba-b107-88ac6919bbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "124a73cb-54d0-4dfa-94ab-98376d9f6c64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1c9b5fc-6da4-43f8-acde-9c708b205e88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5f018c-4f7d-45dc-9392-84b4694224be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fce22797-f75d-4334-9b59-e06a10fb0200",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9614172c-69ca-4190-9619-bc0a1355e7b4"
                    }
                  }
                ]
              },
              {
                "id": "cef6a36b-0f16-47d4-842b-6d8b4c334151",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fb407d8d-b461-4e21-b56b-358ee32bded6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808eee1f-90be-4978-a014-b36e42b53949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ee736bf0-bb1e-4099-a53e-d4e3a1b43ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2a3174-4826-4a45-bddc-ccc23ea25aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbcdba0-eb83-4077-82f2-a9259317e802"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc741db8-b47b-4f4b-a36f-ad5ce78a0c9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c90e6cc-d89c-4414-b547-388d8e10d958",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08eb8f91-4f8e-4d33-a3b6-1e7f351a1e14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7a46954b-d2fa-49f9-b6d8-d43edff0fd15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1cbb1ff-d479-4035-8d0e-40e64d3eb844",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b80f2fe-788f-455c-bcf4-72b3d1996f28"
                    }
                  }
                ]
              },
              {
                "id": "c49bb40c-32ac-4354-918a-85fdc5eaed8e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba82ba7-9e1e-4b31-999c-c04652b15986",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bd0cd260-9665-4659-8c8b-12229f2ad69a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a31ead04-3b98-4434-8c71-4c6055aa0c57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d602871b-5316-4082-98a5-6c22d550ebe1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "148458b2-4d15-4f1f-8e34-9eb8e19aa9a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1ab721fe-678e-40e1-821b-8c12e50ed2c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06a9370f-8046-4881-845a-322ab4bae4f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9927e57-5872-40f2-bc4d-e0eb886f6ba2"
            }
          }
        ]
      },
      {
        "id": "e0c6328f-5c01-49b1-9310-de53cbf5d43a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "329e69f6-fa7b-4384-a479-5f013962016e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ae9d452-acdd-49e6-9582-ed885b1ec190",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb715269-77bf-4697-b9db-caa315c34c65",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff1d6e-3446-4e1c-9844-476cb3519bc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b4d071f1-9463-4a77-9c33-c89f7ca43c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2998d2e-ee25-4dc4-ac07-403d7767e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67c9ad5d-7a4d-4801-91c5-ceebb58e638d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5376eeb9-f193-4883-88bb-8259e1571280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5229d9f3-c6a1-4476-a5ee-792c04c8a3dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f7af258-0e32-486c-8956-22cd51803aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4810d3a9-be26-4701-9ba8-ff7499555860"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21cc5273-d0be-4536-ad93-0fc68c95070a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d64eda5e-35fe-4a71-be54-e85eefb9f4a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39b03751-eabb-46a3-bb01-1ec88239f96e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a662119-e9c4-4b07-9c6c-567ae72c81bb"
            }
          }
        ]
      },
      {
        "id": "806ad93c-247e-4493-b55b-6d36fa59b5c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "675c57d5-0238-4aa4-a5f1-315df9c1db62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "541a7f4b-e1e9-4ac3-b4ea-294dcbb99442",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fde2784c-0be3-4322-9e8a-aa0609eb08fb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcea424a-7b53-4cd6-bf84-d9c9bae8d912",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd286b4-9861-4d63-b936-11152707eb28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823a128d-fdf9-4efb-8b02-0b13f4802646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d44b642f-1f73-4ec6-837b-7efa8e317d83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65503991-b527-47b2-ad27-d70c41b35d1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c31e0a50-6060-4ec8-be58-fe2638d10e4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ead34d-af3c-4309-8d3d-44b4a07a136f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f90a25e4-a110-4ec9-92b4-d4f69e16f1d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95934dac-451d-4eae-9592-55569d7aea88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98cb65f9-aaf4-4c68-9802-6969a437a6cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5559737-ec3a-43d3-a6ef-de2320bc5c62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fa6362c-fa90-47d0-8d61-c11a51bd6664"
            }
          }
        ]
      },
      {
        "id": "b7d8cb70-2924-42c8-b75e-14e002ea49a7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e5b5dda2-d6d3-4c17-9058-b9c91f01822e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73441366-fcba-4dd5-9d2b-1112920fb034",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e5960bd-3d6b-4361-9878-13af061de107",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3f9225-3a01-4148-9120-bc37e30ef88c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92b34137-68c5-4ef6-8c82-ddea227514f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78340f3c-bb40-46fc-aa0d-e5513bc64021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7daf780-33cd-402b-81bd-9894a1f7d4a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f70d07ff-796d-474f-819e-21cf02719b83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f3dfd40-d69c-46af-a4bd-887a5bb69f2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f50743c-76c1-45c9-be56-b9724cf5ff37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbe077e6-4daf-4f3a-be01-ca17330ae39d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "476cfd72-d863-40fe-a9aa-a88f8bc82e53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5fce077-b5cd-4b7d-b174-dfc4bdcdfe59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2e1e7ee-7184-4e42-ae93-d00099c54959",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4eeae3e-4163-4912-8899-9eb0a43ce1bb"
            }
          }
        ]
      },
      {
        "id": "d9526b13-386c-4864-a83d-0460aa0c0bac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e95bc6e-50d9-47ad-adab-2346492516b1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cba3c578-1530-4eb8-a2b5-167bb865f578",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7cae1a68-fce9-4bc6-8b68-490a9a670433",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baf19bc0-aee8-44df-ac3a-af7d9245ec30",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0475cba3-4f1f-42f8-9770-dcb6fb0801f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 110.93684210526315,
      "responseMin": 9,
      "responseMax": 7805,
      "responseSd": 517.6099488697791,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708130014664,
      "completed": 1708130055419
    },
    "executions": [
      {
        "id": "7178a61d-3d0c-4606-bdad-2b11b220906b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c828b9d3-6e46-4b4e-b565-5d294ad2d87a",
          "httpRequestId": "70e827fa-9393-4bc8-9149-8304f69bcad5"
        },
        "item": {
          "id": "7178a61d-3d0c-4606-bdad-2b11b220906b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7308cced-55ab-4b02-a968-643ba4db928e",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "f1c9d19f-b080-467e-9a79-a064fdac5ff1",
        "cursor": {
          "ref": "05f48656-6936-4365-9029-290711484e33",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "91a63c00-933c-448e-818a-13f9e8c9a4d9"
        },
        "item": {
          "id": "f1c9d19f-b080-467e-9a79-a064fdac5ff1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0f968467-3fbe-4eea-b57f-b38b11587840",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4bdfba65-ba59-41db-853a-b5477e95e172",
        "cursor": {
          "ref": "533be8a2-eada-4505-8d60-f0980a9d4add",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "705e0f08-131a-468e-8176-b0e01583b054"
        },
        "item": {
          "id": "4bdfba65-ba59-41db-853a-b5477e95e172",
          "name": "did_json"
        },
        "response": {
          "id": "980cf50a-ec63-4fc2-a9f7-30b12f6135b6",
          "status": "OK",
          "code": 200,
          "responseTime": 302,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714c828-fd8f-41a8-bb91-5e9b7ce60553",
        "cursor": {
          "ref": "11660e87-c7e7-47b1-a02f-2feeba0e6e78",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "573f017d-1055-4447-b0a2-84623f66001c"
        },
        "item": {
          "id": "2714c828-fd8f-41a8-bb91-5e9b7ce60553",
          "name": "did:invalid"
        },
        "response": {
          "id": "89832e59-9bde-4760-bf6b-9a3c0480e496",
          "status": "Not Found",
          "code": 404,
          "responseTime": 410,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714c828-fd8f-41a8-bb91-5e9b7ce60553",
        "cursor": {
          "ref": "11660e87-c7e7-47b1-a02f-2feeba0e6e78",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "573f017d-1055-4447-b0a2-84623f66001c"
        },
        "item": {
          "id": "2714c828-fd8f-41a8-bb91-5e9b7ce60553",
          "name": "did:invalid"
        },
        "response": {
          "id": "89832e59-9bde-4760-bf6b-9a3c0480e496",
          "status": "Not Found",
          "code": 404,
          "responseTime": 410,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d356044-490b-4a81-aa5d-83a62bd791e0",
        "cursor": {
          "ref": "e2f003af-a774-4587-a1ff-4a14a743b73a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "47d7cba6-e611-45fa-ab6d-e751f950b6fa"
        },
        "item": {
          "id": "0d356044-490b-4a81-aa5d-83a62bd791e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6cc2149a-ddef-4770-8d9a-bcf44b87773c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de972e-facd-407a-9f8d-1272ad922ed7",
        "cursor": {
          "ref": "d0fea335-5e7a-4976-82e5-1c35bb132f81",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1efa89ea-7317-4a16-bf5a-952724bf0feb"
        },
        "item": {
          "id": "18de972e-facd-407a-9f8d-1272ad922ed7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d1c46a80-963c-4bb6-b53d-6dbab079557e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce065dd-cc07-4949-a3c4-495f66bb0867",
        "cursor": {
          "ref": "3db515cb-cf0d-418d-90ec-3ac71c36906b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8fe6372d-4581-4407-8a05-9469c23ac790"
        },
        "item": {
          "id": "7ce065dd-cc07-4949-a3c4-495f66bb0867",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "13be5ed9-5ba7-44f3-b07a-f41df853682a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b434c-9512-4684-8deb-01a7f66e67f3",
        "cursor": {
          "ref": "1e3e1fba-fbc6-422e-84a9-e40bc837d3d0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0bf5707-edd4-4446-8cf5-10b93e7815fd"
        },
        "item": {
          "id": "6b9b434c-9512-4684-8deb-01a7f66e67f3",
          "name": "identifiers"
        },
        "response": {
          "id": "fb19147b-848d-49ed-a453-a76e379f4f24",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4323024f-73fe-4026-9edd-6aed3be59d23",
        "cursor": {
          "ref": "90c7450e-06cc-4011-b0ed-73c9a918dca1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a3c7e285-e800-4914-af2f-d4ba3bfd3fad"
        },
        "item": {
          "id": "4323024f-73fe-4026-9edd-6aed3be59d23",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7bcb25f0-aef1-49c7-b508-5fc3ce8cfc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0504d54-4288-4ae5-9df5-190884956bca",
        "cursor": {
          "ref": "50f8086f-d45a-46d1-9261-d42a8778bf49",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a1d7bef-5ba7-494a-b6d1-85d34faaa6fa"
        },
        "item": {
          "id": "b0504d54-4288-4ae5-9df5-190884956bca",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f21d4a99-c329-4af8-bb1c-7c8e9a9ea299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04a101a-4d1c-40b4-bc7a-61a954ef1be2",
        "cursor": {
          "ref": "2db2b3cc-d871-459a-ba75-4b42e7f30cb8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bfeeb5fb-123f-4bc0-b9ed-70bde3f83c76"
        },
        "item": {
          "id": "e04a101a-4d1c-40b4-bc7a-61a954ef1be2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7e514772-7623-4ecc-8190-3fce5f640118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c7d0a3-d11e-4435-b981-5fb546c4168b",
        "cursor": {
          "ref": "1d098f68-ba9c-4cfc-96ff-8fcd10c3adc4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c6e347b0-36c5-48be-8038-cd45c0a610a2"
        },
        "item": {
          "id": "27c7d0a3-d11e-4435-b981-5fb546c4168b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "75e3c6ae-a985-4d1f-bd2a-e2c1d8cb0f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d842d0-2597-451a-9b60-7932878a4a98",
        "cursor": {
          "ref": "0b5c4ec5-04ab-4d11-88ad-48cb39645607",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2a040caf-dbff-4e19-bebf-bb4bb3694eed"
        },
        "item": {
          "id": "66d842d0-2597-451a-9b60-7932878a4a98",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a37aa5af-1da7-41e1-8716-a935c083a2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66b6df3-8f9b-4d10-8ff5-9dd2c6dbba8a",
        "cursor": {
          "ref": "882f40d6-55cd-49bf-b374-aed34da958f9",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "821181ac-7dcc-40b8-8d2e-caf6869c8203"
        },
        "item": {
          "id": "b66b6df3-8f9b-4d10-8ff5-9dd2c6dbba8a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d18ba720-1877-4708-872b-f7b006d6f19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0847fb90-7ba8-4fce-9ea0-9403fff1cd5c",
        "cursor": {
          "ref": "17f8577d-b36e-4c6c-8b3d-f634801a6cbd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "869280e7-4c9e-4470-b0ce-908e050e7dba"
        },
        "item": {
          "id": "0847fb90-7ba8-4fce-9ea0-9403fff1cd5c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "249cbe78-9b48-486d-a3d9-b413675c1df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e696321-383f-4d4f-a738-84729a2ba888",
        "cursor": {
          "ref": "4c927a14-95a3-48c0-a06f-09032062422e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a141f080-0e17-4ae3-921f-e450f5cf442b"
        },
        "item": {
          "id": "9e696321-383f-4d4f-a738-84729a2ba888",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "539af63d-6e3f-447b-9841-767f97c5308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54140300-d8d9-4730-ac84-236bf7dbd8ca",
        "cursor": {
          "ref": "930ce847-f756-4707-8063-0156028a63c6",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6bd7ba5a-369e-4190-8bff-d97d96f38787"
        },
        "item": {
          "id": "54140300-d8d9-4730-ac84-236bf7dbd8ca",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f4ebcd75-22fa-4572-8ab5-fc9862d8d0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e93e75a-a1e9-479a-9c0e-4de79f11964a",
        "cursor": {
          "ref": "c8c6260d-bb6a-4d8f-bff4-9530db72d6bd",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2ea26b28-5781-45c6-a465-317e1ab16cbd"
        },
        "item": {
          "id": "5e93e75a-a1e9-479a-9c0e-4de79f11964a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a3f5d33d-566f-49dd-b4ac-9bd4325a29a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094c67f3-b194-4444-a4fa-8ee9cc561be1",
        "cursor": {
          "ref": "7386598b-add6-41ac-aa18-fa1dffd4f36f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "74e36954-088c-4088-b678-a822b8e1e24f"
        },
        "item": {
          "id": "094c67f3-b194-4444-a4fa-8ee9cc561be1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5fdcfc51-3f61-42f0-941c-eac1df1df83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb930bbe-efe9-4959-8e9f-7047b3fd7854",
        "cursor": {
          "ref": "b488b71c-35c8-4e83-a3a9-17d675b331a7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a3972df5-a8f7-44f7-a19a-d5d927f311f1"
        },
        "item": {
          "id": "fb930bbe-efe9-4959-8e9f-7047b3fd7854",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "690e1f6a-f6b4-4d0b-8722-9549d6a66a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed250e3-ca25-41c8-83f9-812b7289c087",
        "cursor": {
          "ref": "426f9ee0-a369-493d-b32c-4cce810a612e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "688ec65c-3a06-4a61-aef1-8d7fec9ec515"
        },
        "item": {
          "id": "3ed250e3-ca25-41c8-83f9-812b7289c087",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "acbe3816-3791-4196-9054-197e25ffa2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c1e96e-2f7a-472e-ac80-f23a58d4b5ef",
        "cursor": {
          "ref": "b472882b-6d9b-4c93-ab6b-1779e8a3aa65",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0ca8c9c7-2edc-4dd9-87d6-7edac79a95e5"
        },
        "item": {
          "id": "33c1e96e-2f7a-472e-ac80-f23a58d4b5ef",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d6d381d1-46bd-49a0-abbb-1462e84ec921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4dbf2e-df3a-4ad1-ae76-c666d2135233",
        "cursor": {
          "ref": "10379b27-2ffb-4855-8fb5-6ae9a9bd6080",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "46e8ddf3-78f6-4771-b099-87979d535bc5"
        },
        "item": {
          "id": "4c4dbf2e-df3a-4ad1-ae76-c666d2135233",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e35e8ded-50c9-450b-80f4-66fde10f2750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a7b9a9-75cf-4eb3-abf4-d117e7aeb261",
        "cursor": {
          "ref": "70fe1da9-6435-47c8-9f37-1bab8adfe9d0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d689a9b-3760-405d-9cc0-642c52b6bf74"
        },
        "item": {
          "id": "a9a7b9a9-75cf-4eb3-abf4-d117e7aeb261",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f655e0a4-b999-4ce1-bfe3-304d384ccbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386651d0-fde4-4a1e-80ab-5eb3a12ca1ad",
        "cursor": {
          "ref": "b8c4d52c-e0dd-47d4-b752-1121fd75654c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "09d39a08-0d35-41f6-a54e-45a142a69dd9"
        },
        "item": {
          "id": "386651d0-fde4-4a1e-80ab-5eb3a12ca1ad",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5bb2de63-09f4-41a9-867d-231b50363404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fed4d7-5504-4332-893e-62d2ea24fcb3",
        "cursor": {
          "ref": "2da69e60-93f4-4669-a86a-9ecc81f8a8ea",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f69bd568-93f6-44db-b164-f085de3eb037"
        },
        "item": {
          "id": "a2fed4d7-5504-4332-893e-62d2ea24fcb3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c8ec3287-5101-475b-99c7-614bc800141a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ed2768-42f9-4aa2-a23d-8e06a2093d40",
        "cursor": {
          "ref": "e78c0405-8e0c-4aaa-9e0d-2d286b3da0f2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2d7968f8-cc68-4574-bd6d-f715bade0a19"
        },
        "item": {
          "id": "a6ed2768-42f9-4aa2-a23d-8e06a2093d40",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ee60baba-fdc2-4a82-8934-84accb7fea91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6845b322-9658-4499-89f1-ce83ffa0b696",
        "cursor": {
          "ref": "a7332039-3771-481a-818a-19ec053ee20c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c1cbf8db-4b24-4b3f-b8d9-c41d0fe5c4c5"
        },
        "item": {
          "id": "6845b322-9658-4499-89f1-ce83ffa0b696",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f5b13b24-6ecd-4390-bf57-df90f032bffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d050852-12f4-4ea7-a3f0-3b7e3c580b71",
        "cursor": {
          "ref": "4fec653b-6393-4f31-bfba-dd8eaf517182",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4bb9adc0-7e73-406b-b7aa-179a78c377c3"
        },
        "item": {
          "id": "0d050852-12f4-4ea7-a3f0-3b7e3c580b71",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "af7a4f68-8432-479e-aa20-8572f43b0ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df7e10a-5ef9-4924-b3a0-0b003bb3d17e",
        "cursor": {
          "ref": "af6b6114-ad5a-4236-9d73-52d81dcae19e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a4a94686-1af2-4943-b639-951856de2ca8"
        },
        "item": {
          "id": "1df7e10a-5ef9-4924-b3a0-0b003bb3d17e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ad2c163-8a68-4daf-b486-84fb3a959c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18009c9e-44bf-4461-b2b2-3966d1170162",
        "cursor": {
          "ref": "87bb2944-27ee-4122-bef4-05127edbc584",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ecc0028f-f166-41d3-b692-fd0fc3966fff"
        },
        "item": {
          "id": "18009c9e-44bf-4461-b2b2-3966d1170162",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b60bdfc8-af3b-45a3-813e-92b7b7f93afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5736ee0-c1f4-4a02-adab-fa47c55d45a5",
        "cursor": {
          "ref": "95e07e2d-1a66-4b74-914b-fc9bb3107cdc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a96f2bee-28ac-4051-a42b-d0ed01cca65c"
        },
        "item": {
          "id": "b5736ee0-c1f4-4a02-adab-fa47c55d45a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fd9c7ab3-5306-4781-b52d-5eadbfa6e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b5a5f8-feb4-420f-bd0d-5756917724b3",
        "cursor": {
          "ref": "a0854825-a542-46b8-ac4a-a4edfe5a1d1d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de1674fd-e25a-47fd-ae33-24fcaf25b330"
        },
        "item": {
          "id": "74b5a5f8-feb4-420f-bd0d-5756917724b3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4dff57fa-b75c-48f0-a5b7-45ccf06a2fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccd9774-47fe-41cd-aef5-9db3335db177",
        "cursor": {
          "ref": "62c940b8-dcd3-4e9c-9b49-5fbe8d514ee9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d8c434c5-0fd2-461b-84ee-fa4e6981782a"
        },
        "item": {
          "id": "dccd9774-47fe-41cd-aef5-9db3335db177",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "96a3d2d5-8694-4862-bc38-768e676a92d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd28dac-f7f5-4e7c-aa5f-89578db61b50",
        "cursor": {
          "ref": "033c262e-df50-4baa-8b4a-fb4853290bc0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2ae9f60b-a0da-4a01-98e6-e2f6dba1d8cc"
        },
        "item": {
          "id": "cbd28dac-f7f5-4e7c-aa5f-89578db61b50",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "03ce4e6e-2b41-4eaa-a622-8eab3bb65aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e9e63f-d181-4087-952f-63a00a9f838e",
        "cursor": {
          "ref": "8a772025-9f9e-4dba-b484-8be1642d45b5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "564a6fc5-0a46-49f2-bc89-6fe7ec4486ad"
        },
        "item": {
          "id": "e8e9e63f-d181-4087-952f-63a00a9f838e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c0326ca3-1c9a-474d-a350-f5605fe9df33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9391ad-51b2-4bb2-b6e8-6da9f0a09877",
        "cursor": {
          "ref": "7c82e6ba-ece1-435f-9c0f-a5bfb8e5d0b7",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e3bbe9f8-e740-442b-a4c3-4fdabb7faaa1"
        },
        "item": {
          "id": "ec9391ad-51b2-4bb2-b6e8-6da9f0a09877",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ce06542c-ec57-4587-bc26-2579d3b22740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2ebe20-fbf7-4ab4-b9a4-c55392c47878",
        "cursor": {
          "ref": "3d8052fa-e9d4-4e1e-b083-0e22baaecf64",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ea498a96-4e41-4bc1-90d2-4f307c473d17"
        },
        "item": {
          "id": "1a2ebe20-fbf7-4ab4-b9a4-c55392c47878",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bd9bcc2a-e091-43bc-a9cf-92c12790bd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c24566b-7f6f-4a01-be08-6c000f589fcb",
        "cursor": {
          "ref": "595253cc-e6a1-4baa-8ef0-9ecc05ad7f85",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "88188368-a655-4b64-a6ce-e1c7e2305a45"
        },
        "item": {
          "id": "1c24566b-7f6f-4a01-be08-6c000f589fcb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e445f945-bcbf-42e5-84fb-1b89f8b26e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e9909-3616-46e5-865f-e185a60e3d2b",
        "cursor": {
          "ref": "3309ef0f-07ed-485a-84fb-fe4ddf8dafdf",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ca485e45-b59a-4720-a35e-9ca7aed66901"
        },
        "item": {
          "id": "a48e9909-3616-46e5-865f-e185a60e3d2b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3156c7cb-f791-4a48-b42b-584ea652baa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe824896-9134-473c-a022-6344b76ac4e4",
        "cursor": {
          "ref": "776de2cc-bf1c-48a3-a6e1-2854b279e151",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e5b1d9f5-91ff-4939-87b8-51a76a867f9c"
        },
        "item": {
          "id": "fe824896-9134-473c-a022-6344b76ac4e4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1ff2456-9ab0-406a-af30-3ba8ab04ac94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ad4177-d23f-4527-bba5-86332cc7ce8f",
        "cursor": {
          "ref": "0e11f739-5ea7-4971-ba48-f8f4079e6fdc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d3d5f63b-fece-4c0a-8e70-bdf79ebdf666"
        },
        "item": {
          "id": "32ad4177-d23f-4527-bba5-86332cc7ce8f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fa605d7c-038c-4e66-bb7a-921d9548da09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b03734-9134-4b5e-b42c-a3ec47ea5422",
        "cursor": {
          "ref": "dd0e4126-e1f3-4686-91c1-985959b2ff67",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fa4dc30f-f053-47d0-b450-ed81935b3039"
        },
        "item": {
          "id": "23b03734-9134-4b5e-b42c-a3ec47ea5422",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3504aeb6-3594-46e6-8208-d9476ab8ee00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd90ab6-6581-484c-9ace-195fe2a39ef7",
        "cursor": {
          "ref": "e0d42ac7-bb1c-4940-ab07-a22fae7a25ca",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b53bd634-ed8f-4396-b821-042966715992"
        },
        "item": {
          "id": "1dd90ab6-6581-484c-9ace-195fe2a39ef7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e73f91b2-407d-473f-9198-7f9a86bc7c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21104bc-12ed-4f2e-9ba4-cd2ad2dad0a8",
        "cursor": {
          "ref": "ad796660-d1a9-4308-a81a-09bdf034b80d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "661e9488-1969-486b-be65-35aab96327ce"
        },
        "item": {
          "id": "d21104bc-12ed-4f2e-9ba4-cd2ad2dad0a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a9c565c5-67cd-40d3-90c5-0af62421ec63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722d3a77-d230-4895-9a4a-f3fafe868e42",
        "cursor": {
          "ref": "c237db1b-6219-4967-9f95-fd898412420a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7e41aec6-aa59-4b9a-ae38-bddb773e46a5"
        },
        "item": {
          "id": "722d3a77-d230-4895-9a4a-f3fafe868e42",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d6b04819-39b0-40d2-8b4d-0cce49953928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0b0c92-17a2-4319-a325-2003478bfe72",
        "cursor": {
          "ref": "1d6944d3-207f-4877-9707-91910589237c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3eb65a7d-1b42-47ba-8677-d08a4d794baf"
        },
        "item": {
          "id": "7a0b0c92-17a2-4319-a325-2003478bfe72",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d3bbd57c-fa88-4154-a32c-f77e33d92f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f61a2-de04-47bf-b858-2f4f4715262a",
        "cursor": {
          "ref": "4b674bdf-6cd3-4742-b832-11ae98f5ba66",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dba1213c-3f21-4d47-8d98-e17d0e814eec"
        },
        "item": {
          "id": "650f61a2-de04-47bf-b858-2f4f4715262a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5cb3567b-8fe5-4c5e-a751-e9e48e595ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53a0b6d-6eb6-4b9d-9a5d-7ccde3966155",
        "cursor": {
          "ref": "fb4eac98-da4b-45e7-9f71-44bf53e047cf",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8819835b-746e-4e49-bfc0-6c8aa3724f48"
        },
        "item": {
          "id": "b53a0b6d-6eb6-4b9d-9a5d-7ccde3966155",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4817ea84-f3ee-46b2-a92e-3d1cab919018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5908a8-52d3-44d2-aa8c-2b7872f72781",
        "cursor": {
          "ref": "81eb27b4-992b-4f03-b304-28fc5cccfd88",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "74a25769-4203-4680-8025-ff7d25cdd09a"
        },
        "item": {
          "id": "cf5908a8-52d3-44d2-aa8c-2b7872f72781",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9e26356f-bbdb-415b-aa36-f365290566ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21483584-7415-41c4-b5f5-3c8094ccb317",
        "cursor": {
          "ref": "50a2da28-07cf-4d66-9275-11d8edcf617e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "66169bb7-7bbe-4c18-9e57-8995f5a55cff"
        },
        "item": {
          "id": "21483584-7415-41c4-b5f5-3c8094ccb317",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2976b68e-bd3b-4b1a-b7a5-6b5dac5e2be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ac513e-6fbb-4a65-b522-d6b90124c2f0",
        "cursor": {
          "ref": "3f7e3aaf-8065-4ee9-97a6-6cf23df4d1ca",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2f6267f2-f32b-42f4-ba06-47b734abcadc"
        },
        "item": {
          "id": "d7ac513e-6fbb-4a65-b522-d6b90124c2f0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "935d9b41-cbd9-408b-aef3-4fd78d8490fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb23e531-44d2-4c96-bf15-1a24a53802f9",
        "cursor": {
          "ref": "53e1e505-db1c-4bc9-8420-f7a3207e37c9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b0df7093-a6a4-4b73-826c-057019ce6003"
        },
        "item": {
          "id": "bb23e531-44d2-4c96-bf15-1a24a53802f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "69e6b152-da9f-4229-a814-9c7ab5198f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ba2ecd-e926-4a9f-aad6-27b9f5e7f2b4",
        "cursor": {
          "ref": "d8ebaaca-480d-494c-bc61-6581569f5fdd",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c947aba9-ff9f-4268-a8c3-1b6cbd4c2e37"
        },
        "item": {
          "id": "a6ba2ecd-e926-4a9f-aad6-27b9f5e7f2b4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1fc85517-c62a-40c7-9805-d8213b6bfa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a8ad7d-6602-48cb-90a4-860a3c8dc664",
        "cursor": {
          "ref": "eb46d9e3-55d5-4905-afaa-6c770346c429",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3a15c5da-ebee-4366-8f3b-8d2d506e7ad1"
        },
        "item": {
          "id": "64a8ad7d-6602-48cb-90a4-860a3c8dc664",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bf1314eb-ff3c-44ff-8850-ab95042fc18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71f9618-0fbd-443f-bc10-76da2e51bee8",
        "cursor": {
          "ref": "1a280e52-1b95-4b48-b40a-352d6526004e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c962676c-ded7-4b53-ac3d-61fb8f5ba8e5"
        },
        "item": {
          "id": "d71f9618-0fbd-443f-bc10-76da2e51bee8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "28c461cb-2c88-4a6a-8032-d11dd40981cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b33d3a-83b1-48bd-ad36-d30e887343e0",
        "cursor": {
          "ref": "6887fcb5-3dbc-4019-8737-e2d5d9bf61c3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "75067cd5-acb1-463a-a80c-3f13003525b2"
        },
        "item": {
          "id": "44b33d3a-83b1-48bd-ad36-d30e887343e0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "42920b25-5843-406c-9acb-d8f117713e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935a5810-ed21-4294-ba8e-9de2e6be54f4",
        "cursor": {
          "ref": "91d61c7f-ba22-4fc8-ac98-fb21a1dd084d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0e357d8e-2616-4b04-85c2-23870b2fb3c0"
        },
        "item": {
          "id": "935a5810-ed21-4294-ba8e-9de2e6be54f4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "16ca930f-0689-46f2-9911-205d66e48f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354e7b71-36d3-444d-b18d-536c6a9daa2f",
        "cursor": {
          "ref": "a2732daf-d4cc-4e0b-9ee0-9b174b66c984",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "237a7cc7-a5b4-4eab-90a6-1ba643fe8b0f"
        },
        "item": {
          "id": "354e7b71-36d3-444d-b18d-536c6a9daa2f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a43de9fa-9919-4bbf-8c02-376098c3e7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df69b4af-b0c7-41d2-825e-0e13b69acb60",
        "cursor": {
          "ref": "391ff869-07b2-4041-b205-7a3ec8bbb4ae",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "88c1494f-cba0-47bb-a80b-3a5c71ce1e38"
        },
        "item": {
          "id": "df69b4af-b0c7-41d2-825e-0e13b69acb60",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "acfb680b-fb63-4cf1-b193-244fb0578480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0a82b5-99a5-4986-a668-2f71f7e33581",
        "cursor": {
          "ref": "5ad1908b-d811-4c05-8f1e-155102304c3a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7421b791-a3e4-49c6-87bf-ee9348c475e6"
        },
        "item": {
          "id": "7a0a82b5-99a5-4986-a668-2f71f7e33581",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b9365bf2-9273-4e18-8201-35781a3976d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b8f3d5-d192-4c29-9c4f-01be5be27eff",
        "cursor": {
          "ref": "78a1daed-1457-4c68-a0d8-9c6b1ba31d1a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "78b4bdab-ea70-4eb2-9a38-7ec94d5113f8"
        },
        "item": {
          "id": "a0b8f3d5-d192-4c29-9c4f-01be5be27eff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9fe337c8-5f6c-4a3d-981e-7df0a8ba5a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95720645-9f97-4d82-b505-ca9c37baf679",
        "cursor": {
          "ref": "44191cc6-9c01-4b9c-b948-3eb462f011fb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "744a900e-b107-40ad-8761-a4a06b8d0a64"
        },
        "item": {
          "id": "95720645-9f97-4d82-b505-ca9c37baf679",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "69b7d2df-adba-460c-8cba-6500da66f165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5893c97e-b280-450c-8428-99ff8b1e8fb4",
        "cursor": {
          "ref": "c48b77f5-f34a-4b2a-b035-ccb36306dbd4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b70b05d7-5d70-49a0-97a5-e5fd061a3a36"
        },
        "item": {
          "id": "5893c97e-b280-450c-8428-99ff8b1e8fb4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef630ce6-75df-423c-ae7b-36aaa57f6092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eabdb96-7653-4dab-b7f1-d5731ac3a543",
        "cursor": {
          "ref": "42f88958-e8e9-447b-bb34-51dad15b2ebd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c41cd09c-d6af-4c29-9b17-ab906811f3c7"
        },
        "item": {
          "id": "5eabdb96-7653-4dab-b7f1-d5731ac3a543",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6cec07fc-d1da-4e67-ad7a-d62a6d67c124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b55bd2-60b9-47a3-bb71-0bbe98754f54",
        "cursor": {
          "ref": "58b001e2-8fa0-475b-9209-662f2da534a2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "00f4b34e-b69e-4842-b63b-569ce1110efa"
        },
        "item": {
          "id": "00b55bd2-60b9-47a3-bb71-0bbe98754f54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d213967a-0411-4df6-ab73-980f67f93a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a307ebf2-b4e4-451f-bda3-7bbe288ce327",
        "cursor": {
          "ref": "26934a1c-f48b-4877-9e36-0e3e40384363",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a61607ad-08b3-401a-88be-f8a909353f9e"
        },
        "item": {
          "id": "a307ebf2-b4e4-451f-bda3-7bbe288ce327",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a9cad526-bdf6-498a-9bc7-f9bbcb59a354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71b8d1e-139e-4414-bb9d-d2dd8f1b058a",
        "cursor": {
          "ref": "0876ea4c-0ccf-46cc-9d94-63ecf6573145",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "84760485-bc6a-49e8-be4d-a06ff214ce20"
        },
        "item": {
          "id": "b71b8d1e-139e-4414-bb9d-d2dd8f1b058a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ad34062c-368b-479a-aee0-2f357a165783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85344c66-3dd6-41f9-846e-fa4bd3e4b5cb",
        "cursor": {
          "ref": "49eeb0fa-d879-4d28-aac1-007c03524bf9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "051ecb11-621a-4d03-8c49-90801e238f04"
        },
        "item": {
          "id": "85344c66-3dd6-41f9-846e-fa4bd3e4b5cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "134c7586-51f9-47a4-abec-bd6b6739d977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8f3220-f989-4c14-b00b-936009971991",
        "cursor": {
          "ref": "6f5d78f6-32f2-4809-930f-eb06bce6dfc3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9a91bcf2-0424-4620-8136-12e30cd98169"
        },
        "item": {
          "id": "eb8f3220-f989-4c14-b00b-936009971991",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "68957bdf-8523-4062-91f5-11bdd1188a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113072a-b9cd-4dd4-9b85-d209a14e96df",
        "cursor": {
          "ref": "475ae8a4-6c01-44d6-8a9a-8eebf17f189a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ce5b6560-f81c-4020-874f-79be83eec842"
        },
        "item": {
          "id": "8113072a-b9cd-4dd4-9b85-d209a14e96df",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "60547ea3-b1ac-490c-bdb1-0df406468a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1499137f-75de-4695-a43a-3b294b658924",
        "cursor": {
          "ref": "07319151-122b-41f1-b140-e1886b1e43ba",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7b3f5259-b0c8-4660-b95b-7457c972e184"
        },
        "item": {
          "id": "1499137f-75de-4695-a43a-3b294b658924",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "72c27d2a-5b8f-4809-8f67-cc1b30d4c2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9f674b-b019-432b-9d50-56db067f26ea",
        "cursor": {
          "ref": "236a2028-1f88-478f-8773-9d3823963f90",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "143fbb1f-b683-4083-b928-b28100f7a190"
        },
        "item": {
          "id": "ae9f674b-b019-432b-9d50-56db067f26ea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "64b5fc15-f9ba-41f8-b4f7-f8a55869339d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe23365-f165-499d-9e91-68c72a87c184",
        "cursor": {
          "ref": "e3cbe2cb-db37-4bf0-bea9-21428eae68d9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1a9d7799-4778-4b53-a9da-ec4eb486ebd4"
        },
        "item": {
          "id": "7fe23365-f165-499d-9e91-68c72a87c184",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0bee030e-34a5-4e7c-b9fe-53ca8090d503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8d5d99-2006-4ed1-86e9-b2c2d65d2f05",
        "cursor": {
          "ref": "6b29b9d8-e0c5-4630-aea6-94b9a3498945",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6cb5a870-24d2-4b63-8c4f-39056ec1a9e6"
        },
        "item": {
          "id": "fc8d5d99-2006-4ed1-86e9-b2c2d65d2f05",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "edf64edc-9c8f-413b-904d-5b2992b4152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092df2da-5426-4845-8a21-9a181dab7389",
        "cursor": {
          "ref": "41801e59-cf63-4b69-ba15-73f346da20cc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1ef3d3b7-9ffb-433b-aa08-d9db8912f727"
        },
        "item": {
          "id": "092df2da-5426-4845-8a21-9a181dab7389",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "01f603ad-c480-42b5-bfdd-48c6a4377a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9632efde-5c85-450a-ad48-4b021f4bda1a",
        "cursor": {
          "ref": "4057ba20-8d07-4741-814e-3869dd14c701",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f0c44da-fcac-4c5e-9d84-312fb10b5d93"
        },
        "item": {
          "id": "9632efde-5c85-450a-ad48-4b021f4bda1a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8c8cad8d-fa79-4f16-904b-a6695308239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be3d14-0396-466a-ba5b-8af8dfe1c5d1",
        "cursor": {
          "ref": "3b2380e1-5840-4718-93c3-286dd6561bea",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2bf447e4-eaef-4157-8ef9-0f1032075c46"
        },
        "item": {
          "id": "67be3d14-0396-466a-ba5b-8af8dfe1c5d1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9da7cb3d-5c83-4753-9266-dfcea82c1e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf909e9-df41-4df9-a5fb-c4932d58377c",
        "cursor": {
          "ref": "fdf73dc8-e3cf-4438-9917-7f028cf39877",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46b1d30f-e1e5-4331-9df4-4173f62efb52"
        },
        "item": {
          "id": "aaf909e9-df41-4df9-a5fb-c4932d58377c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0e24edf3-4742-4afa-b8b4-de6751c36262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f760189-fcf6-413c-9864-b5ed2d67ace2",
        "cursor": {
          "ref": "c69fab77-d170-4d50-8d21-7e2106c1ce9f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "03744d5e-c466-4454-9623-aadfa0925e85"
        },
        "item": {
          "id": "2f760189-fcf6-413c-9864-b5ed2d67ace2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "83c2394e-4eff-4692-bb82-c2d235bce7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9af9efc-e94d-4f14-9bbd-bd87deecc370",
        "cursor": {
          "ref": "10de1e90-3953-4700-a993-daa7917b5caf",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d8254815-b7b5-49a8-81cd-92e9769b025a"
        },
        "item": {
          "id": "c9af9efc-e94d-4f14-9bbd-bd87deecc370",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fbf573fb-a564-4ba6-b272-7ec0ba12f30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb7793-331c-484c-8f07-2311213896e2",
        "cursor": {
          "ref": "5500f2b0-e47c-410d-8731-e8f74bdd0045",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "090659e9-cc8b-43cf-99b2-59f6b45b61e8"
        },
        "item": {
          "id": "1bcb7793-331c-484c-8f07-2311213896e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "77a059c0-1da5-4f88-ae19-a4a43964f9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7932a0e-03e3-41c7-80b1-bb5c677494da",
        "cursor": {
          "ref": "ac019be6-482d-4a51-b8d1-ebcb0fbe2a03",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "40e7530a-1ea4-4778-bc4a-131136f8d758"
        },
        "item": {
          "id": "d7932a0e-03e3-41c7-80b1-bb5c677494da",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f90d696b-5012-4e8d-9533-6ad22fe02d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa8bda3-360f-4533-bfc6-6357fef4760c",
        "cursor": {
          "ref": "b974d7eb-e5eb-4fe2-a032-52af031ffd49",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eea7225f-ec56-494b-bf05-826a30cb2c87"
        },
        "item": {
          "id": "4fa8bda3-360f-4533-bfc6-6357fef4760c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "da6f4168-cb33-4732-8dc7-4394817d22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce933a5-48c0-470e-aa70-763572a0c935",
        "cursor": {
          "ref": "5aeda19b-ecd0-42a6-a1ce-eb4c62a4e3d1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "68bd224e-54c0-457f-a0b5-a96a7746b57f"
        },
        "item": {
          "id": "bce933a5-48c0-470e-aa70-763572a0c935",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a7b09733-152c-4a37-9d9b-ac4c3c2deba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9170c3ce-940e-4bf9-940f-b8718613ef7b",
        "cursor": {
          "ref": "23cbcafe-41b7-4db7-962a-8b59bc323644",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fcfa70ef-8aca-4e7b-9662-bd50878380b1"
        },
        "item": {
          "id": "9170c3ce-940e-4bf9-940f-b8718613ef7b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6f035b61-c77d-4952-b767-0a98e1c55bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b3761f-866b-4224-be83-9bba43df7ff7",
        "cursor": {
          "ref": "b704827e-246b-4b02-b7bd-3fc74089e276",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "906060cd-e843-42fb-8948-5effcd0477e0"
        },
        "item": {
          "id": "d9b3761f-866b-4224-be83-9bba43df7ff7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0f6cc1c4-32c8-4453-806d-c2dbb959edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac6e12-80f0-42d9-8a60-a9cfafe0631e",
        "cursor": {
          "ref": "22cda295-c119-4388-8b9a-ed5047cfb90a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "33518d74-b84e-4846-86af-2724560fc768"
        },
        "item": {
          "id": "f8ac6e12-80f0-42d9-8a60-a9cfafe0631e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d64fc3c2-3209-4d04-af02-3177e8c1810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eb5569-63e1-4823-a215-b1cae0af77b4",
        "cursor": {
          "ref": "bc512634-a155-4463-9118-01d92783cd69",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6e8d046a-524b-4483-b8c7-64c9e431d245"
        },
        "item": {
          "id": "25eb5569-63e1-4823-a215-b1cae0af77b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7f9ce849-e3dc-4873-9894-bfaf1c57bc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8c5f67-40ee-407e-8c2c-b677960b735c",
        "cursor": {
          "ref": "be5b947c-ea4a-4bd1-9c77-fe7ae27a5979",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "888ba902-eb39-4851-8be2-e8d873c4c18a"
        },
        "item": {
          "id": "5a8c5f67-40ee-407e-8c2c-b677960b735c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a7c78e26-befe-4f68-a430-9898e2a16825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e12084a-7045-4e97-a111-e8ef5e078794",
        "cursor": {
          "ref": "c2f43f79-0b2e-409c-af48-c01fc6fe4c88",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "243e244d-0e3e-4523-a96b-49393781275a"
        },
        "item": {
          "id": "9e12084a-7045-4e97-a111-e8ef5e078794",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b3b197e5-972b-42d9-bd95-80cbed97092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae053ea-ac01-4802-9ef5-71494d2d2044",
        "cursor": {
          "ref": "e178c6eb-778c-4889-9e4e-1dfdde29ec4a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a0a061f0-ec9a-4a2a-b095-fc5e23a54436"
        },
        "item": {
          "id": "6ae053ea-ac01-4802-9ef5-71494d2d2044",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48e0eef0-546c-4dbc-b750-4f87db35a4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70164576-d045-4a1d-8d07-558cdfd0e1f6",
        "cursor": {
          "ref": "88875572-6fab-4a5c-a251-1c31499de44e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c1b71ce4-d7cd-4a9d-b0d5-e71397a1f696"
        },
        "item": {
          "id": "70164576-d045-4a1d-8d07-558cdfd0e1f6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ca923ad8-eb80-4a05-93d5-b51f10b33eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e4bb7-fcf3-45e9-b27f-b7faa0fa4b69",
        "cursor": {
          "ref": "fbacd773-f1b9-4db0-9f6d-c269fd1ade3f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "caccb737-92ff-486b-a58e-dfd84e230754"
        },
        "item": {
          "id": "409e4bb7-fcf3-45e9-b27f-b7faa0fa4b69",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "351a361c-8856-4ee1-b2c2-b5fd28776c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe65ece-c364-4892-9030-a21bb3987817",
        "cursor": {
          "ref": "3313fcdc-1bdb-4fcb-a190-f1c7e7fcdb43",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d283d82e-d3c0-4d9c-8580-ed81c5dc318c"
        },
        "item": {
          "id": "8fe65ece-c364-4892-9030-a21bb3987817",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8118e9c1-49ed-41bb-bc0d-8ea065c41274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee0b9e-9c98-4ee0-b14b-ac6216b9ef80",
        "cursor": {
          "ref": "a5123221-16a8-4dd5-8bf7-31baa1556c27",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0c697956-6aa8-4e13-9b50-215b0fb8ef30"
        },
        "item": {
          "id": "a6ee0b9e-9c98-4ee0-b14b-ac6216b9ef80",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1b34812b-cc56-446b-9526-72023bcc5a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac10372-e2e2-4e0d-9770-ae1f2a821833",
        "cursor": {
          "ref": "802f03e9-c426-4b8a-bdd8-9e674b7e1983",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6c7c69d7-b187-4e41-b3a9-12d6fd22fc61"
        },
        "item": {
          "id": "dac10372-e2e2-4e0d-9770-ae1f2a821833",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "df2d8d3c-f374-4ff2-a0ff-cdbbd4f99dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad702c8-5ea7-443b-baa2-e5f924ca7e35",
        "cursor": {
          "ref": "ad79195b-9b83-497a-bf99-0c772dac49eb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9fdc3814-8256-4bdb-a969-708069346094"
        },
        "item": {
          "id": "4ad702c8-5ea7-443b-baa2-e5f924ca7e35",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b3c43dd6-2197-4782-8a5c-f7d754f6e1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d38953-add4-48bd-9120-3fc34b41e9ea",
        "cursor": {
          "ref": "0b78a2e3-b94b-4d90-aef3-f49b00d14f4d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e52f42f6-bdbd-480c-9384-5222ae13da9f"
        },
        "item": {
          "id": "88d38953-add4-48bd-9120-3fc34b41e9ea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "74eb530f-f90e-464a-9a5a-bcdd9a5c8be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04245458-54ec-44b0-91ca-7b1a7c8cf709",
        "cursor": {
          "ref": "8245a390-1fe0-414c-b96d-c0e47db11a5b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a2359be6-5e1f-4162-9f63-ec4f5964959d"
        },
        "item": {
          "id": "04245458-54ec-44b0-91ca-7b1a7c8cf709",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "49c27ec9-db8e-4605-9a0a-5bb95f369969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1d2fd4-a23d-4006-9093-1e5c93a7a38c",
        "cursor": {
          "ref": "20bdffd8-ddcb-4eef-a785-969d171c0251",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9afe2c13-919d-45ed-a444-1c72c3376577"
        },
        "item": {
          "id": "6e1d2fd4-a23d-4006-9093-1e5c93a7a38c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a60d654-fbf5-4966-8e28-57831000c62e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c779a544-0e56-40cd-b109-4a81e738bb8b",
        "cursor": {
          "ref": "101a4a0e-a72d-4ee6-b475-bdee229b7963",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a92e744a-5f79-45eb-b5a0-5711fbbb251a"
        },
        "item": {
          "id": "c779a544-0e56-40cd-b109-4a81e738bb8b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a83f3fec-f515-487b-9f78-53e94867f3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "89302f23-d62e-40c1-9977-19cb2d3d56ab",
        "cursor": {
          "ref": "0e0420c9-44fa-4fdf-82ff-f1ef5e285b06",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "43f551b3-6944-47e5-80b5-14d3d21cc625"
        },
        "item": {
          "id": "89302f23-d62e-40c1-9977-19cb2d3d56ab",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e1a0e246-f27e-4ebf-89a8-7bb61ba93e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9cf738d6-75a0-4ab7-8aa3-8127ee48cbc6",
        "cursor": {
          "ref": "f42719d8-8583-4f24-8845-0d52ea086fdd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1d4fb8e2-2be9-43e2-b1a9-824032ba8c14"
        },
        "item": {
          "id": "9cf738d6-75a0-4ab7-8aa3-8127ee48cbc6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8cd258b5-80a6-48d1-8a1c-c8f28624464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "eb6412a1-1dc8-4d70-ba9d-696d822f41c4",
        "cursor": {
          "ref": "ab629ea3-ad63-4631-8552-d0cb08ccdfb9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "06326323-a9c2-4135-b6c1-dbe211255dbb"
        },
        "item": {
          "id": "eb6412a1-1dc8-4d70-ba9d-696d822f41c4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3c328831-57ba-4699-9fbf-21e8ce79cee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6666bd93-186d-4bee-8b34-918abfc3a967",
        "cursor": {
          "ref": "7f97fc9a-623e-45ac-aa34-0d4a1899e6b6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bf88760a-036f-4097-9647-fe6dd8e2e7f7"
        },
        "item": {
          "id": "6666bd93-186d-4bee-8b34-918abfc3a967",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "52da7571-4e1a-4cdd-981a-0f4308bc1bea",
          "status": "Created",
          "code": 201,
          "responseTime": 7805,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd651926-4790-4692-9a43-de7b7ec9848a",
        "cursor": {
          "ref": "d09c03b5-ae21-4ea0-8eb7-81ca1ca8cd47",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "add0f2ef-13b0-413e-99d8-532cf24a0d02"
        },
        "item": {
          "id": "dd651926-4790-4692-9a43-de7b7ec9848a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34de4b4e-1ec4-4627-9996-07dba0873dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7128b480-d18b-42ad-9b03-012ffbebd7bd",
        "cursor": {
          "ref": "a3cd09dd-62aa-4b8a-a83d-04325cd1ed8c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "93eb1671-8e46-40bc-b573-72c3b16974da"
        },
        "item": {
          "id": "7128b480-d18b-42ad-9b03-012ffbebd7bd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "53bf6b6a-35ca-4414-ae0b-f62011b9a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "49d4aaa3-a860-489a-99f7-a5497ad8c5af",
        "cursor": {
          "ref": "a7d8d3b6-72fd-42b2-8b1f-01ececf30c39",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "15f3b872-1a27-4a3d-82cd-de1009332fae"
        },
        "item": {
          "id": "49d4aaa3-a860-489a-99f7-a5497ad8c5af",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a51f9b0-add5-4a29-8e98-126eb6b83892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7022278-73a2-4144-9477-ee213af6d219",
        "cursor": {
          "ref": "da78171b-beaa-4413-973e-3db21687e81e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "af1dfdd1-08a5-46d6-a24a-f3d8c43013db"
        },
        "item": {
          "id": "b7022278-73a2-4144-9477-ee213af6d219",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "09decc30-37cc-4372-9abe-107263b5156b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ab19d-e2fe-4c8e-9db6-55eb0aeb3990",
        "cursor": {
          "ref": "b15c218a-876a-4ec3-96f3-c71eafeeaad1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fc662e31-d702-4ea7-8de2-53ae2443b17b"
        },
        "item": {
          "id": "e47ab19d-e2fe-4c8e-9db6-55eb0aeb3990",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "061b9e74-1e79-4d91-a1dc-ea40e2a534c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdcce8d-b0d2-47d2-9266-367978da26d0",
        "cursor": {
          "ref": "b2cfcee3-0c58-4bb2-903e-c8a2e4107581",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ec455569-6f30-4d96-9e93-99d2e5b694ae"
        },
        "item": {
          "id": "1bdcce8d-b0d2-47d2-9266-367978da26d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3b369ee-7c82-41ae-9753-e1d137baff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92d1324-15a7-4439-8c7e-2990d8d6a7b6",
        "cursor": {
          "ref": "f376b6a8-304d-4113-bbdb-d535529f786e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4db356eb-ea3a-4bb0-870e-b9f75c3dfe15"
        },
        "item": {
          "id": "f92d1324-15a7-4439-8c7e-2990d8d6a7b6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1cf4d8ed-afdf-4089-879b-23ade889f358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77371927-28bc-48c6-841a-a308bea8a128",
        "cursor": {
          "ref": "6fc4e366-3619-4c47-8ce1-be5e9a1a3150",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "22b38b50-cf3b-4413-a07c-004f46e589fb"
        },
        "item": {
          "id": "77371927-28bc-48c6-841a-a308bea8a128",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "993467e5-1399-4914-9660-b9ac5a10a454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b0db70-445a-4168-94c1-2a252ecc144a",
        "cursor": {
          "ref": "db71f8d9-089d-4031-b1bf-6ae2e33076d2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9265f99f-37cc-46f0-96ef-89e7534a0084"
        },
        "item": {
          "id": "48b0db70-445a-4168-94c1-2a252ecc144a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d7ad09e3-2d02-43d2-a6dc-4eb7d87f3272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf6e65-1054-4012-a85c-f3407d86ea41",
        "cursor": {
          "ref": "bbfe8d09-bdfd-4582-b214-ec9fd0aa1a5f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a1e04e48-2464-4339-925b-c680564f2d70"
        },
        "item": {
          "id": "a6bf6e65-1054-4012-a85c-f3407d86ea41",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5759edbb-bb6f-4d79-95c3-78caeb7585ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8c6965-2538-40ca-9c91-f9510cdcf079",
        "cursor": {
          "ref": "95ae4afd-c421-4328-b385-04cd57a58099",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3dfa85e3-d713-4b87-98aa-91be67390e66"
        },
        "item": {
          "id": "2a8c6965-2538-40ca-9c91-f9510cdcf079",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "825438ce-e9fe-424b-86fe-2fa32b508528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57acc99e-48d1-4de5-aa85-e77db6cc06e5",
        "cursor": {
          "ref": "67c92153-9703-4140-b10f-9bc815ee42ee",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "28f38164-1f0d-4010-b645-5a17f5391fce"
        },
        "item": {
          "id": "57acc99e-48d1-4de5-aa85-e77db6cc06e5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4415acb3-f0cb-45c2-8fcd-aef5fcced16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf21c772-d96a-4ae5-80b0-438440aa212c",
        "cursor": {
          "ref": "464b3ebe-2bdb-481e-b7f9-646611b9e6ef",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6c7c7d8b-d9cc-42bf-8917-e480d0b793dc"
        },
        "item": {
          "id": "cf21c772-d96a-4ae5-80b0-438440aa212c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "355125c5-bc64-40b7-ac42-06c9de228e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f85cfd-39f0-4d50-a9ba-460fabdea0b8",
        "cursor": {
          "ref": "006237a8-743e-4d87-a4d2-6ac1ce3b610f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3190d0f4-b670-48df-a320-fae444c57fc6"
        },
        "item": {
          "id": "39f85cfd-39f0-4d50-a9ba-460fabdea0b8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f2b2425b-7a6b-457c-8f9f-d74d36b5063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5787af32-a901-424c-b042-a50d5e8d6c86",
        "cursor": {
          "ref": "9ba03958-5d1d-45f3-bc88-9642791734dc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d9a1c92b-20b0-46f9-9259-fc09f1a03128"
        },
        "item": {
          "id": "5787af32-a901-424c-b042-a50d5e8d6c86",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cb0b8b71-9854-4b07-a313-05a67641ab05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de24e1a-582d-476d-b036-14c0ea2a99c1",
        "cursor": {
          "ref": "c6eb8096-d04e-4691-b3a4-f9c67a1d91d4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "079c147d-592d-4457-a242-728762439eab"
        },
        "item": {
          "id": "6de24e1a-582d-476d-b036-14c0ea2a99c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa1f1193-9daa-4e3d-8a56-3213f7792935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58919f0-d97a-4943-bed1-435767f75bd9",
        "cursor": {
          "ref": "2b058f7a-da61-4bd5-bb62-70f2bd4259ea",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a5eddc20-21c8-4e11-aad2-5aee5d8911ee"
        },
        "item": {
          "id": "c58919f0-d97a-4943-bed1-435767f75bd9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "57d1862d-ffd6-4f80-bef0-fcfe57e85dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12495594-e41f-4456-a05b-468640d56ebd",
        "cursor": {
          "ref": "0d98b7dc-801d-4e08-912c-bacec856ad36",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "976c8975-6c0c-48c9-a134-e67da7bd12b5"
        },
        "item": {
          "id": "12495594-e41f-4456-a05b-468640d56ebd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43137aa9-7c9a-45b1-a31f-a1e5d1f7033f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785d3ed2-04fc-4c15-b6a0-9812f68a2778",
        "cursor": {
          "ref": "5e9d91bd-5aec-4ff3-b416-f719901d05dd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9aae3f7c-f88d-4712-b95f-ebb350d40c90"
        },
        "item": {
          "id": "785d3ed2-04fc-4c15-b6a0-9812f68a2778",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9bde2948-7de1-4cac-a280-9ab22e4314b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "59eedad9-37f0-4a4f-9fbd-2ecc7c99bd3e",
        "cursor": {
          "ref": "234489e0-9136-4815-b4ab-94b910d4bb3d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62178208-3f37-4dfc-ac38-3ba5de1e6cad"
        },
        "item": {
          "id": "59eedad9-37f0-4a4f-9fbd-2ecc7c99bd3e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a747f8ff-edc1-4171-85ce-0f70d6248551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd14aa2-76b0-4a73-92f0-0825461b6fdb",
        "cursor": {
          "ref": "83094e3b-c07b-4139-b4a6-e40289127295",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6645df0d-a920-4b56-ac70-dda5a39c0e02"
        },
        "item": {
          "id": "fbd14aa2-76b0-4a73-92f0-0825461b6fdb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ca6750f-df43-439b-9057-4d14720674c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c651810-aa4f-4df0-83e8-e5a8a18cd5c5",
        "cursor": {
          "ref": "c8c496eb-29ff-4d80-bd8a-e0ec2f4eda05",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fd0b10ca-61df-4123-818f-afaf18e3f3de"
        },
        "item": {
          "id": "6c651810-aa4f-4df0-83e8-e5a8a18cd5c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a039e9de-8227-4868-8303-eecb47c195c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de37556-9873-48bf-ac9d-01214489690b",
        "cursor": {
          "ref": "3a17618e-b185-4253-84b5-58548c85c1b7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6dd988bd-ce5d-40a4-b68c-c37c559b8b25"
        },
        "item": {
          "id": "0de37556-9873-48bf-ac9d-01214489690b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "afd415fd-8b57-4332-a77e-e1687b16bcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf7ea0-c1c2-4f3d-a2c6-ffcada7ee03a",
        "cursor": {
          "ref": "f283aefb-0beb-489b-923f-066c889bc40c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "25301b86-543a-44d8-a0ee-154e0fd8cdd7"
        },
        "item": {
          "id": "d2cf7ea0-c1c2-4f3d-a2c6-ffcada7ee03a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0336e948-8457-4f3f-9844-e84ff4ff65a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e308d731-69e2-4818-bbf6-fa6cc809987f",
        "cursor": {
          "ref": "34ac29a7-5a28-42a3-9bb0-0e9979d2d2cf",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "33d3e1cc-54bb-49d4-996e-5f8b5f69aae8"
        },
        "item": {
          "id": "e308d731-69e2-4818-bbf6-fa6cc809987f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa251b04-60de-43f5-a075-0f687e6bdf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837c0add-7597-4d50-a63c-f50a51651482",
        "cursor": {
          "ref": "abbd1f97-4b5d-45af-a918-4f67389c8c2a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b1ad1322-4a67-4da4-95e8-c343637de551"
        },
        "item": {
          "id": "837c0add-7597-4d50-a63c-f50a51651482",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b195afb1-b861-49f0-a6bf-96cb88e39c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1723ee-f20c-47cf-a89e-8d721ca06ff4",
        "cursor": {
          "ref": "0badca6d-74b1-45e1-b184-57c9808195f8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ccbea406-0ef9-4069-8a86-0983e6ac38fc"
        },
        "item": {
          "id": "6a1723ee-f20c-47cf-a89e-8d721ca06ff4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eaf0b509-75a8-478a-9843-0eda38ed96bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 82,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ed09015b-b746-48ea-a059-9eafac3d8333",
        "cursor": {
          "ref": "e6c41071-3a81-43e6-a5a8-3fcbb511c5fa",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5a227bb9-d95a-432e-b15d-c94b2a828793"
        },
        "item": {
          "id": "ed09015b-b746-48ea-a059-9eafac3d8333",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9d7468c-1136-4e5f-b140-27e5fe2f376a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a7a509-f7db-4020-bd64-aef5e873152b",
        "cursor": {
          "ref": "d34b00df-1e59-4b43-983d-81472c0102c2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9b76424c-9632-4520-aef0-2a13ff084952"
        },
        "item": {
          "id": "32a7a509-f7db-4020-bd64-aef5e873152b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "32531f9c-cebd-40ea-ac77-192c0aaecbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27df4aca-89fa-42b8-9d9d-daef806c8bd1",
        "cursor": {
          "ref": "5995d7ea-1027-4e4e-a185-29c2204d42db",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1711a1f5-211d-4111-b587-67cf0473b274"
        },
        "item": {
          "id": "27df4aca-89fa-42b8-9d9d-daef806c8bd1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d8d0c661-0758-47fd-944b-37a27d528449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af928aed-4b6a-4d46-be9b-2f6173995e51",
        "cursor": {
          "ref": "5bb091ca-cd3f-4c95-9053-38f469ecf207",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e575c843-12ed-4f1a-ab4c-4936256fff99"
        },
        "item": {
          "id": "af928aed-4b6a-4d46-be9b-2f6173995e51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a40863c-a64c-46df-9ecc-60875872923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da910217-5bec-46e1-9e19-c32552f786f4",
        "cursor": {
          "ref": "b3221bed-8617-4c2f-bd4a-be4cfaaf3da1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "831ac081-e9fa-43a4-84d8-01139a35a3f5"
        },
        "item": {
          "id": "da910217-5bec-46e1-9e19-c32552f786f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cc0298a0-2199-40c5-82c1-1f11bc0ca2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be00ccf-6289-49f5-95aa-0c9d967a3cda",
        "cursor": {
          "ref": "8985e4ea-bcab-445a-afec-918198053efa",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0e860c70-c5f2-46ad-9337-2087ba726afa"
        },
        "item": {
          "id": "8be00ccf-6289-49f5-95aa-0c9d967a3cda",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ad812b97-c6d3-4e8b-a74b-aa1abee9c962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a460caf4-2ff2-491e-b365-468d42b8ec4b",
        "cursor": {
          "ref": "56693cd3-4a10-4761-9340-4dd888caab8c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b597b5d4-e702-4dd3-ab2c-dc2f6d3fe60b"
        },
        "item": {
          "id": "a460caf4-2ff2-491e-b365-468d42b8ec4b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "49573467-d3c1-4ea4-9351-99df31a761ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7508607c-4cc9-464f-ab44-01bd621a9a98",
        "cursor": {
          "ref": "8be103bd-679b-4dce-a8b7-9d375d6ca0e6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c17cb47e-f8e7-44b0-9429-08f1d966021f"
        },
        "item": {
          "id": "7508607c-4cc9-464f-ab44-01bd621a9a98",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d320f74-7e6d-4eaa-8c72-c25407951a69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c477c28-8668-4b96-8827-870b2ee189b9",
        "cursor": {
          "ref": "bac32bbf-9323-4fbe-90c2-b2a2c603b792",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "764822a9-8baf-4371-ad17-160894b3cca1"
        },
        "item": {
          "id": "1c477c28-8668-4b96-8827-870b2ee189b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b6d14922-ab9f-42db-a42f-a998942f3bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabaa812-1dac-434a-b035-3cf1b1e8d533",
        "cursor": {
          "ref": "ebdc61b1-fb19-4939-9f93-3b2922fd341f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "846368ea-2dc8-4da6-a15f-9f563dfff425"
        },
        "item": {
          "id": "eabaa812-1dac-434a-b035-3cf1b1e8d533",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "34678723-9fbb-4548-8bbe-9db083123b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6b4789-c232-46e2-9723-c34a64c188d8",
        "cursor": {
          "ref": "0f4844ec-a05d-4cd3-982c-e99a6dccde66",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "43a6ae36-b7f0-4c13-a2a1-6a3fbe5b7b58"
        },
        "item": {
          "id": "0b6b4789-c232-46e2-9723-c34a64c188d8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "978f5898-6f67-4b3c-afc2-66f3773b1ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b08afe7-25a3-4d65-b147-70efc6741802",
        "cursor": {
          "ref": "8e42d169-9d47-4b6d-8c5d-c2dd1c227708",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4dddac54-c626-419b-aa8a-1decca3a4b0a"
        },
        "item": {
          "id": "0b08afe7-25a3-4d65-b147-70efc6741802",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73ed7aee-8a09-4b15-8525-53ed1193df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02949811-1419-462d-b171-22015e6a72cb",
        "cursor": {
          "ref": "40c7eaf2-1d06-4a86-86bc-499ca394b057",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "01571a16-6be8-4ed1-8a87-ae1d9f9b0011"
        },
        "item": {
          "id": "02949811-1419-462d-b171-22015e6a72cb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d9aac8e6-94e7-42b5-b042-29177ad078d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4872475e-3e28-4736-9ce7-59d243f3b271",
        "cursor": {
          "ref": "2655760f-5e9d-4436-bfcc-f3b95ef6b994",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3c3c9e97-69d3-4f67-8eaa-e8f89ac3178c"
        },
        "item": {
          "id": "4872475e-3e28-4736-9ce7-59d243f3b271",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "34622cf9-d1e1-4bbb-9c5c-a3d40e76d0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90a3e8-5add-4605-a21c-025d72211374",
        "cursor": {
          "ref": "9cb6b811-8f54-4d13-b494-b7f145c1761d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ddb6dca6-35f7-4024-afbc-133455350f58"
        },
        "item": {
          "id": "3f90a3e8-5add-4605-a21c-025d72211374",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f05da22-68cf-4b6b-820f-aadc4f204008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8534f0-6110-4a3c-aafe-fd89f25621a6",
        "cursor": {
          "ref": "ea645cc9-c8ea-4f54-966c-73dd609d94f2",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c39b20ca-9c83-43d5-8cdd-af8d2af97416"
        },
        "item": {
          "id": "db8534f0-6110-4a3c-aafe-fd89f25621a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c088df71-5f2a-4102-b7f0-2f6051eb75db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31884721-84fa-43bc-b849-271235eeb057",
        "cursor": {
          "ref": "2563ad0a-8053-4f77-b8a8-ad43a7e65335",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "92c17b38-71f5-49b1-a6bd-7453b0c96f80"
        },
        "item": {
          "id": "31884721-84fa-43bc-b849-271235eeb057",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "440fff6b-64c3-44ac-9968-d378b3fb6376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a20021e-5d15-407e-8417-711c0d6c27f7",
        "cursor": {
          "ref": "1383a1db-a91e-431f-a190-c29b127cbf0b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "279f49dd-e6b3-4a43-906c-c1c49f93536e"
        },
        "item": {
          "id": "3a20021e-5d15-407e-8417-711c0d6c27f7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "651b106f-cf18-4d08-adce-20ba357c0a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72863712-d370-43fc-8b01-976842b47d63",
        "cursor": {
          "ref": "834c4b89-5295-40a0-a5d6-2d6e0b16f18b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6e93a55c-b3f3-4b3c-aef1-35fe930a8166"
        },
        "item": {
          "id": "72863712-d370-43fc-8b01-976842b47d63",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "61f0518e-72ee-493f-a21f-576b45d21626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d728ddc2-046f-478c-b73b-56a7517472aa",
        "cursor": {
          "ref": "0c3e663f-f732-45cc-b73d-1835dbf471f6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "14da8098-a07a-4c16-92b3-2a81b2abef71"
        },
        "item": {
          "id": "d728ddc2-046f-478c-b73b-56a7517472aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d56fee5-407e-4571-a3bd-f9aaf129e0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2cc5a2-664a-475e-b55e-5d3a3708cf5a",
        "cursor": {
          "ref": "9e2567ee-3491-4df4-a650-43fe900e37cf",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8b3d7e72-aa77-4578-9bdd-b1a243d54f50"
        },
        "item": {
          "id": "3c2cc5a2-664a-475e-b55e-5d3a3708cf5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "887ac8cd-8f3d-4700-9ee9-6c6fb3cd250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb6a494-ef49-4937-907a-402564c9e8bd",
        "cursor": {
          "ref": "28512821-6b19-4b0b-a2dc-19c983dc01f7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb6cbb2f-322e-4672-b26d-d414e755b24d"
        },
        "item": {
          "id": "ecb6a494-ef49-4937-907a-402564c9e8bd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "726545f9-e0d1-4957-a92e-ed1499aea36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d17f50f-e92d-4a96-a19f-274d2b0cbfec",
        "cursor": {
          "ref": "d70372dc-6e62-40e5-8e05-66a98719b485",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7bb8a5db-8974-47eb-b3d9-10ae57c086a3"
        },
        "item": {
          "id": "7d17f50f-e92d-4a96-a19f-274d2b0cbfec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4a5c20a8-bd76-4a2d-aa34-69eef43dd3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b8847c-dd31-4255-a120-1cb1ce91d035",
        "cursor": {
          "ref": "e8980167-470e-46b2-8d4b-0317d2544288",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c9de81c3-37fd-4fb6-a1c2-d54bc291c241"
        },
        "item": {
          "id": "39b8847c-dd31-4255-a120-1cb1ce91d035",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cac374b9-7949-4c35-9e90-4a65ee500911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5abc2a-5104-4fdc-9d2f-534d841952fa",
        "cursor": {
          "ref": "628c59af-3e87-429a-b670-79ddd6c581f9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "800ec962-6fc5-4bea-97d5-7d65a1c188ac"
        },
        "item": {
          "id": "7f5abc2a-5104-4fdc-9d2f-534d841952fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6293ea14-86a5-4427-bc57-569c3eb20503",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "da98acd3-9e45-4209-91c8-6473fe756f5d",
        "cursor": {
          "ref": "2cdd6ebd-2316-4f69-95e7-12942096ae4a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c9a17987-52eb-4af0-8954-cb7018456de4"
        },
        "item": {
          "id": "da98acd3-9e45-4209-91c8-6473fe756f5d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92a88f0d-f622-434d-849d-923988a163b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f013c7-c94c-4f0b-bef9-48bac06e0817",
        "cursor": {
          "ref": "07a5ec30-c52a-4308-a841-7a381e7195ef",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "270866df-991b-4e6c-9200-086ff51c78c9"
        },
        "item": {
          "id": "32f013c7-c94c-4f0b-bef9-48bac06e0817",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3575ea90-5d3a-46b4-8d84-78bca9bd68a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50b8123-4d72-4e3f-a031-324f167827de",
        "cursor": {
          "ref": "c06ecf5a-58a7-4688-927b-979ec8a4debc",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "149a740f-bd2e-4873-a3c6-cabd517df26e"
        },
        "item": {
          "id": "d50b8123-4d72-4e3f-a031-324f167827de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a326c96-a50d-408a-87e4-7ee2d41663ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7ac2b9-c67e-4902-9002-063497d69086",
        "cursor": {
          "ref": "ae1ad4de-bf75-4d33-a528-035f19a64b8a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7cf6e983-c76f-41c2-b946-b15244da22ed"
        },
        "item": {
          "id": "de7ac2b9-c67e-4902-9002-063497d69086",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c08339f8-43d1-4a1c-989c-dc4172fcd8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cd4971-cde4-4721-a718-8523396973b3",
        "cursor": {
          "ref": "fe05e85d-4e94-4b2c-9da1-94893b73bcf7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4886dea2-d069-4af2-95ab-eb3f068aef65"
        },
        "item": {
          "id": "05cd4971-cde4-4721-a718-8523396973b3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "015b07b3-da26-42b5-b46c-1456f537b942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fc5ab6-47ac-4c25-ab62-6376bf46f810",
        "cursor": {
          "ref": "21c1594d-60cb-4c90-b68c-26f88086ac1f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f1f3d653-24c6-4f32-b4e7-3b2ca3bfc998"
        },
        "item": {
          "id": "62fc5ab6-47ac-4c25-ab62-6376bf46f810",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6029f1c3-014a-4992-bab9-1a9e0c051f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83ea8b-0941-49e2-848a-0a9fc6f15ec0",
        "cursor": {
          "ref": "795ffeed-0602-45b6-b3ae-4e84a9c6de0b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "64dd87ba-4eaf-4fc2-9d1e-f5cfea76f123"
        },
        "item": {
          "id": "6a83ea8b-0941-49e2-848a-0a9fc6f15ec0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "752406a7-2ca8-48a4-bbcd-13e975de9ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abc7e49-67fd-4468-9aea-1979b2a3af56",
        "cursor": {
          "ref": "7fa9e332-a206-4d43-a12c-85b789de5ec0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1a99a4c1-4705-468b-8b08-3b457e8f2451"
        },
        "item": {
          "id": "6abc7e49-67fd-4468-9aea-1979b2a3af56",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3b077f2b-00af-46ee-b40a-5559503e1641",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "13919539-e40d-4159-90ac-d4641aed2806",
        "cursor": {
          "ref": "f53d262b-4d64-48aa-9039-16294fc16691",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5e2d2230-6578-4483-ae72-034100285355"
        },
        "item": {
          "id": "13919539-e40d-4159-90ac-d4641aed2806",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d0225c2-afbc-4c53-856c-46ccd8aa3e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c28b3aa-9c6e-4802-9842-8b891a7edacb",
        "cursor": {
          "ref": "2dc43381-9e84-4957-9739-0405215ebf77",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4e786af1-2084-4ee3-a08d-97b2d713ff2f"
        },
        "item": {
          "id": "5c28b3aa-9c6e-4802-9842-8b891a7edacb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ff5893a-3c14-454b-afe3-2dede4958fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f1ca77-30fe-45dd-b7d0-c6bbbbfbe21e",
        "cursor": {
          "ref": "5d8ea251-1958-4d4b-b33a-46cc9a1e0420",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a9699bf5-60fc-4e0a-9d58-16fc2a99dcea"
        },
        "item": {
          "id": "41f1ca77-30fe-45dd-b7d0-c6bbbbfbe21e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "55d1f2f6-0d3a-403f-ac46-daea9d847815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2268a82d-b34f-459e-aa69-1978d0a10e84",
        "cursor": {
          "ref": "c547a1b6-20b3-4d30-b086-23585c3dc195",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8190c6e0-2034-4a65-818a-5c5ab0dd0720"
        },
        "item": {
          "id": "2268a82d-b34f-459e-aa69-1978d0a10e84",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4e271c63-44d9-4f76-b144-1dfb60a2dcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822a31a9-7fbf-40b4-b698-527e27817261",
        "cursor": {
          "ref": "2fdf7b48-6a42-4186-8859-c613e793bf4a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "28c2862d-8c02-45eb-a026-5f1f53130517"
        },
        "item": {
          "id": "822a31a9-7fbf-40b4-b698-527e27817261",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4df9e3ce-bc48-4ac7-8b10-ec56fc6ebf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10c6078-d487-4fb9-bd86-4faae3d67792",
        "cursor": {
          "ref": "5805f51f-7c38-49d8-af61-2f2a2f13b835",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3dedc45d-1712-4fe1-a762-4e5456f9385a"
        },
        "item": {
          "id": "b10c6078-d487-4fb9-bd86-4faae3d67792",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3115c3b7-2919-47cb-99d7-05357356fa9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879732cd-ba35-4cd8-9c49-423c31d93ef7",
        "cursor": {
          "ref": "48237ca4-5a48-4451-8d0d-a7cdd7135cf5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e6c4f208-3b17-43be-80b9-ceec4c52ea1e"
        },
        "item": {
          "id": "879732cd-ba35-4cd8-9c49-423c31d93ef7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "02d71595-f675-4baf-9a6c-ea4a95e7df3e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "25a23a79-d315-4889-8724-3f7c6d90dfa4",
        "cursor": {
          "ref": "20fe5b3f-c334-478e-bb03-00bfe2d2c134",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fe7945a7-12d9-4f20-8f37-5b90c33545e3"
        },
        "item": {
          "id": "25a23a79-d315-4889-8724-3f7c6d90dfa4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9224c84a-c91f-4301-8d13-ac7dc2f8a766",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "d0ff2dd0-d141-463d-97fd-5f69e62185a3",
        "cursor": {
          "ref": "90d5d3e9-f80f-41e0-bd5b-9be8e90ee5d3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d81214b2-f9cb-454d-bc56-a9e4cdc11be6"
        },
        "item": {
          "id": "d0ff2dd0-d141-463d-97fd-5f69e62185a3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9e90a0ff-c4f1-41d7-b2d8-8fcf8340db95",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "bb0bb066-5362-41e1-8e6f-7a02992d9354",
        "cursor": {
          "ref": "2772c282-8b0c-4754-b14d-80ac355c80eb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "381621d8-1593-41d4-a5bc-12af627d9824"
        },
        "item": {
          "id": "bb0bb066-5362-41e1-8e6f-7a02992d9354",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "27e6ac5a-2f2b-468a-92d9-b37b675127f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "fd5824e8-b0d3-4517-a2a5-4689c7e0ac57",
        "cursor": {
          "ref": "f93d260d-c058-4a9a-83a1-7d1e580a29e6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "133e427b-693d-45af-be70-7dc98e5f7c29"
        },
        "item": {
          "id": "fd5824e8-b0d3-4517-a2a5-4689c7e0ac57",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "354513c4-5ad0-4762-b5a5-b59840100515",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "fc5df710-93f5-4698-b68c-e5dd1ee2fefc",
        "cursor": {
          "ref": "559f9816-9dff-44b5-a6c7-b93865ccd526",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fa3932d7-6835-4b2b-8568-a59c4ad08a7a"
        },
        "item": {
          "id": "fc5df710-93f5-4698-b68c-e5dd1ee2fefc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3927de6f-c5d9-4a41-8870-785f581abded",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "1f0fa50c-a2f3-4150-933b-bf83cf5bcc91",
        "cursor": {
          "ref": "38acf3ae-da10-40cb-bf4b-49f6b401a502",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d6f4fe0c-0a92-45fe-8e31-be5ea99c5134"
        },
        "item": {
          "id": "1f0fa50c-a2f3-4150-933b-bf83cf5bcc91",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "111cae71-40bd-452c-a6a3-6936dd6d3770",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bffb25-33af-4a4e-989d-ca62a853da23",
        "cursor": {
          "ref": "20148657-7ed2-48d2-9964-ceca86b20265",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4a00888a-0690-42a1-ab83-ed3c158bf196"
        },
        "item": {
          "id": "81bffb25-33af-4a4e-989d-ca62a853da23",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7e94956-e540-4e51-b42f-6dd09e2c9d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d4e3e0-8d3a-4f3a-996e-72cf5cbd2516",
        "cursor": {
          "ref": "bee295d7-baca-49ad-949f-2f3bbffb85f2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5ac01652-829e-484d-ba3a-f6db266c2262"
        },
        "item": {
          "id": "09d4e3e0-8d3a-4f3a-996e-72cf5cbd2516",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ddd08084-404d-4b69-befb-055cd47f8145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb90bbb5-ed1d-462c-a2f3-d36d1e7c0a56",
        "cursor": {
          "ref": "66c1966e-a844-42da-8930-1240335115a6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "515eb553-41ed-48f1-b820-46c9a16d1d18"
        },
        "item": {
          "id": "eb90bbb5-ed1d-462c-a2f3-d36d1e7c0a56",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "809611b9-d83c-4ac6-8837-75ae19bf0db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c8bfba-73a2-4c90-a973-41d88570ec05",
        "cursor": {
          "ref": "9a12e542-6f15-463b-a6e5-b98001f3c7fb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3faa4d9e-f158-4b18-81a6-ac5e16af7429"
        },
        "item": {
          "id": "90c8bfba-73a2-4c90-a973-41d88570ec05",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf86f19e-756a-4880-a6cb-9e861bc9fa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56821e5b-6b32-4220-9fd6-049d30962edb",
        "cursor": {
          "ref": "30d3022f-cb9d-473b-938c-e8ed20b00a8f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3f5f92de-a5ff-44b0-897e-dd6439814ba9"
        },
        "item": {
          "id": "56821e5b-6b32-4220-9fd6-049d30962edb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a618221c-daed-4a3d-b46c-ee048f782611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0630ff8-dd2c-45a7-ad2c-67c9e73bf82f",
        "cursor": {
          "ref": "73591d0d-c446-48b6-80ed-9ddda3e98c9c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b5613587-77a4-41ea-8bf0-57369c854df1"
        },
        "item": {
          "id": "d0630ff8-dd2c-45a7-ad2c-67c9e73bf82f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5240cd3-945c-4289-9650-dec5561c76ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae55c813-08e9-495b-adfa-5769176d8cba",
        "cursor": {
          "ref": "99df0500-f067-4d42-9d8d-b0b97e159b36",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b7f68b25-c8f3-46cb-ab5f-84acea35db16"
        },
        "item": {
          "id": "ae55c813-08e9-495b-adfa-5769176d8cba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d41ae1f-f766-40a1-88df-9bb0dd7291c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ead8ad-f7bc-4212-847a-8aabd8458895",
        "cursor": {
          "ref": "f4545c5a-14eb-442d-abcf-9951728f5e74",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a2f84c77-1702-4894-b9dc-c1545df21d4d"
        },
        "item": {
          "id": "33ead8ad-f7bc-4212-847a-8aabd8458895",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "328621d2-03b9-4bc4-89c9-c5732f069faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1296b27-7c14-470e-84cd-d43953f02907",
        "cursor": {
          "ref": "d7e972c4-42ef-4e2f-94c9-f3a22c9d2056",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e0027b0-dbb0-4411-aa38-92c450a217df"
        },
        "item": {
          "id": "a1296b27-7c14-470e-84cd-d43953f02907",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "feba8606-144f-4032-9e4d-cbcd3f5303e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86852b78-aa66-4901-a773-b54bea6481f6",
        "cursor": {
          "ref": "5a3343cc-3328-4ff5-8ba1-65f275ac0ddd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a3e6b95d-bb20-4115-a7a1-452f4ab64366"
        },
        "item": {
          "id": "86852b78-aa66-4901-a773-b54bea6481f6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2518efc0-77af-4c31-a442-3a2f9f2b945c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5a7999-e347-47a3-986b-435b39fa62b0",
        "cursor": {
          "ref": "8cef3e50-3de4-43c9-a7f1-5606df1d75dc",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a650483-dbf1-4ecf-9ea8-3061010211b8"
        },
        "item": {
          "id": "4e5a7999-e347-47a3-986b-435b39fa62b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e7436375-1c43-4512-8389-cb358cbeed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31e89e2-de1f-4716-894c-6f3fba1ce1eb",
        "cursor": {
          "ref": "b876d18a-b50f-4c35-91ac-d93ad85f56ed",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "30f869c2-a31b-4ae7-9ccb-42d555ccd7a6"
        },
        "item": {
          "id": "e31e89e2-de1f-4716-894c-6f3fba1ce1eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7aa74902-06bb-4815-a894-a56a3a88d43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2dec71-380f-477f-9ca8-f8b000f75b07",
        "cursor": {
          "ref": "47a5aef1-5a5f-462a-92a9-dd77025975d7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4c51430a-47b1-4b9e-8b0b-fb3416cf8e97"
        },
        "item": {
          "id": "5a2dec71-380f-477f-9ca8-f8b000f75b07",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ad525277-1d19-4162-b8d0-2177538074c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afca7b43-f99b-4e0a-b705-b05ccd3a8f73",
        "cursor": {
          "ref": "655bae1f-1383-4b9d-9b9e-c0d0954dded8",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f739abcb-9006-4501-a51a-b0bfd1521f4e"
        },
        "item": {
          "id": "afca7b43-f99b-4e0a-b705-b05ccd3a8f73",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9cf5d41f-6031-41c4-bf15-66847d70e6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37c13b0-fbf4-43dd-98a6-7c46b960e5d0",
        "cursor": {
          "ref": "2a20b4d2-b92d-44bd-8cf0-1d02d681eb76",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ba299180-8564-49fd-96b8-fcb2fe3e3391"
        },
        "item": {
          "id": "f37c13b0-fbf4-43dd-98a6-7c46b960e5d0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e80d2937-65df-41a7-a6b1-ca1ae6cf03ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff00822-9bf6-46d1-9123-0dec4a3f33f9",
        "cursor": {
          "ref": "a11a23d7-b742-460d-ba74-efb6139c6051",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d348ea49-c0d5-470b-a5f8-4e0c53ef0121"
        },
        "item": {
          "id": "8ff00822-9bf6-46d1-9123-0dec4a3f33f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "45f8c6d6-3f14-4041-bc74-6bd3a447b12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87770f2-30bb-4056-8ba6-1786973dc634",
        "cursor": {
          "ref": "d2266e58-a469-490d-9a18-8ec8ff76ba36",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "042df47c-fa36-4ce1-8755-4c4e79325ef2"
        },
        "item": {
          "id": "c87770f2-30bb-4056-8ba6-1786973dc634",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0b46b8a5-972f-4ecb-894f-d3d5093ec3ba",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ce68577e-4992-4ffe-8a8e-82eaa41227f9",
        "cursor": {
          "ref": "75fc4d7f-926d-4cf2-a583-382a1ea69b5c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "74c892e0-e7c4-44b1-88c7-f5e1470154b3"
        },
        "item": {
          "id": "ce68577e-4992-4ffe-8a8e-82eaa41227f9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4c305652-f3f8-4fb5-9a5a-c0a73a21aaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37788902-31e2-46b8-9930-8aafdf89e8fc",
        "cursor": {
          "ref": "fa048475-7a5e-41da-9902-40f71e4a3967",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3a1bfef1-b149-419a-91ad-6b548ac597d0"
        },
        "item": {
          "id": "37788902-31e2-46b8-9930-8aafdf89e8fc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "18a56e65-2bd3-47d7-8008-7a8cc666319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577bc913-5695-41d6-89d2-62d9d8369bcd",
        "cursor": {
          "ref": "02bd9763-77d9-4a12-8081-246e65754fdf",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "37e0915e-6cdc-43da-b0ec-b7dd037a108f"
        },
        "item": {
          "id": "577bc913-5695-41d6-89d2-62d9d8369bcd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c9986db4-a34f-4f04-9e4f-6106a978018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77298fe1-af9f-4c8a-b9b2-7e6e6d446056",
        "cursor": {
          "ref": "dd085fa6-b2fd-48e4-be15-cf78dd5f468a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "602f7775-ad6a-4d5f-8b64-ef5af61d8502"
        },
        "item": {
          "id": "77298fe1-af9f-4c8a-b9b2-7e6e6d446056",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "34be3df6-b62d-43ad-8e1a-d43cacc3f378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16dd774-d837-4b23-8fc2-3c77e3f14cd3",
        "cursor": {
          "ref": "85c40e33-bd20-4b67-993e-d68b863230cc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d4415fce-3e68-44c6-970f-18343ab2ee2a"
        },
        "item": {
          "id": "f16dd774-d837-4b23-8fc2-3c77e3f14cd3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "08cf7e53-4d56-449b-a577-dc3120c98974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8377fc1-171f-4fbb-93e8-f6b3ec386aa1",
        "cursor": {
          "ref": "48c9af28-55a3-463f-93ae-250280191d84",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "79557bec-a28e-4df4-a7c0-8c3b353d83b8"
        },
        "item": {
          "id": "c8377fc1-171f-4fbb-93e8-f6b3ec386aa1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "de9a667f-f765-423c-a99e-fb8bba12492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad286ee-f778-4592-a5fd-c0c8c3806088",
        "cursor": {
          "ref": "e7173ecc-c54e-4ea7-89a7-5982de2e7694",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "52be7a42-2f2d-417e-b5ea-26ac34ab3f22"
        },
        "item": {
          "id": "6ad286ee-f778-4592-a5fd-c0c8c3806088",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f7ffff8b-c08a-4466-94f4-6b87e41e7455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baabc91-1ed0-4b11-a960-62a0615fbaab",
        "cursor": {
          "ref": "30862828-c594-4f12-9e88-01bb94c26e16",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6584896e-d60b-43b5-b652-10eb5f86d188"
        },
        "item": {
          "id": "5baabc91-1ed0-4b11-a960-62a0615fbaab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dacab723-dd2b-4dc9-9f76-d098cdd2a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c71910c-a895-42fb-963f-fd34d0a3be3a",
        "cursor": {
          "ref": "a90b84dd-d915-4f6b-b1b4-c4f21323a8ef",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f717998f-0517-42bc-8c36-81a38654fabd"
        },
        "item": {
          "id": "4c71910c-a895-42fb-963f-fd34d0a3be3a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "63ccd709-618e-4311-bf3d-1774f2b421ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35bc6f8-53d0-42c6-a43a-4431d7efcc22",
        "cursor": {
          "ref": "fe3efecc-0063-481d-a29b-9197b88d2e20",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01c2601d-2fb9-47f9-a476-6397b651bf2f"
        },
        "item": {
          "id": "e35bc6f8-53d0-42c6-a43a-4431d7efcc22",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8ca97511-0167-44d7-87a1-8f2051694dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cca124-98f6-47f6-a222-48c7029091ec",
        "cursor": {
          "ref": "7efa9922-cf71-4bc1-bd7e-4569651ab37f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2b86b899-6283-4b8d-9e2d-5b37e3cdb1d4"
        },
        "item": {
          "id": "02cca124-98f6-47f6-a222-48c7029091ec",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5babdee9-8f95-4108-bcb7-8296f831f714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b779b60-10d8-4490-8616-3413f405518a",
        "cursor": {
          "ref": "14df8328-1990-477a-a1af-ef9af66d2b44",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aec7d12b-98f7-4e91-bccf-ff0eaaaf0b0a"
        },
        "item": {
          "id": "6b779b60-10d8-4490-8616-3413f405518a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e81252ba-afd2-4976-997f-7ba922f30b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c07102-7012-422b-984c-c89d5fe4a140",
        "cursor": {
          "ref": "a0577fc4-ed4b-419b-83a7-3385db09cfa4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7401654f-d151-4052-a1f7-eb260591f8db"
        },
        "item": {
          "id": "56c07102-7012-422b-984c-c89d5fe4a140",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1e1df4b-c4ba-49a6-b4c1-1ec5531c501c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b8f80b-9157-4ba2-844b-864766dcdc7e",
        "cursor": {
          "ref": "3ed37c47-ac94-4281-845c-9ce66e5fd0b2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7081b2b1-6e60-4c6c-8e67-b2ede65a14b3"
        },
        "item": {
          "id": "82b8f80b-9157-4ba2-844b-864766dcdc7e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7bebdf2a-93b9-4b4f-b240-8c9b94d7db3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdd4229-dc86-40fc-8e1c-ed03c890f417",
        "cursor": {
          "ref": "f4c34971-25be-4ccd-8d46-0f4d11896d2d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "022f8d60-fd71-4b42-b716-dea56a927fde"
        },
        "item": {
          "id": "1fdd4229-dc86-40fc-8e1c-ed03c890f417",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c55a3473-3ad3-4da9-911b-cd59bb1bc0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526dd432-a22f-4c9f-b721-c24147b6a6d3",
        "cursor": {
          "ref": "2b54d293-791c-4f12-9717-a85d5221915c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb126b58-5084-46a5-946c-b40b1c27e63e"
        },
        "item": {
          "id": "526dd432-a22f-4c9f-b721-c24147b6a6d3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8713c196-a765-41f4-8ff7-9138e598a67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed1666-72a4-46fa-ac49-1650a16f422f",
        "cursor": {
          "ref": "a24478ed-e4b3-4ca0-93df-f2abdc481d95",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f0089f99-a12d-4a2e-a454-e27c6595167b"
        },
        "item": {
          "id": "3aed1666-72a4-46fa-ac49-1650a16f422f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7f552125-e2b4-4ad1-bbef-069755c8d810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06ec718-b0df-4c47-a77a-89e9c44d8c53",
        "cursor": {
          "ref": "dce00dd7-e6b8-47ee-9de1-c447c0b4de78",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d9807a8a-8354-405b-a435-bfb261a8f4db"
        },
        "item": {
          "id": "e06ec718-b0df-4c47-a77a-89e9c44d8c53",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b8e23dca-a8e7-4bcb-b201-a363cdd507bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222e925f-80be-4a77-8b7a-b7e9c0fe8c82",
        "cursor": {
          "ref": "8944ed88-fb23-4d39-a6e5-9ba0d09ff34d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a0217cfc-b5cd-4637-b2c6-d748f6296b58"
        },
        "item": {
          "id": "222e925f-80be-4a77-8b7a-b7e9c0fe8c82",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5d96c1a2-b049-496e-b1e1-4a8801e315c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a6b2ec-60f4-4453-86a9-aedf24bb432e",
        "cursor": {
          "ref": "c52855ff-064a-4581-b1e8-be6c13ca0e81",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "234123f5-4090-4f24-99dd-ad326796bf41"
        },
        "item": {
          "id": "46a6b2ec-60f4-4453-86a9-aedf24bb432e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ac6a34e9-faac-4b04-84dd-0c17916d5845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458bdc41-f7d1-45ed-9e37-f4541da4338f",
        "cursor": {
          "ref": "901cd202-2cc1-4048-be16-f04ab4362d64",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f2afeef-bf3a-4d8f-b42f-550e7be81104"
        },
        "item": {
          "id": "458bdc41-f7d1-45ed-9e37-f4541da4338f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5ece0ab0-d9c9-4c86-80ed-f7612afeb3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e089a9-6130-41e8-8bd5-0d2d0d05c055",
        "cursor": {
          "ref": "cc454205-198b-407b-ab9f-f14eb5630412",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8132ec7c-4e76-4035-881c-d822e686b938"
        },
        "item": {
          "id": "06e089a9-6130-41e8-8bd5-0d2d0d05c055",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3861b482-41b1-4c83-8ec3-6bd7fb3b7033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8a8fa5-f5f6-427e-a1e9-8e9e5d9165af",
        "cursor": {
          "ref": "f3956abf-074f-4f0b-93bd-7f08271cf5bc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e64ff81-7b85-435b-a540-7740e4db439c"
        },
        "item": {
          "id": "1f8a8fa5-f5f6-427e-a1e9-8e9e5d9165af",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c7c147e8-ea8a-4a57-b365-98daa45fc53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7994e208-0011-422a-a036-27c4241b2a2a",
        "cursor": {
          "ref": "e9c3dbdc-6e27-40b6-b519-52fd47817e73",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3f83d98c-36d8-4779-8cbc-eb894ab29ac8"
        },
        "item": {
          "id": "7994e208-0011-422a-a036-27c4241b2a2a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a2254230-1c7d-4b4b-b854-825705b1246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7046b34-c354-4b61-b4d4-5293184fadcd",
        "cursor": {
          "ref": "963435a0-463a-43b8-9001-43cbe082a839",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "490633bb-7f54-440e-84a8-9ad32d795596"
        },
        "item": {
          "id": "e7046b34-c354-4b61-b4d4-5293184fadcd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9f3be0d5-514b-4b0f-a8c6-558b1faf66be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e85b6e8-17a6-4c01-b281-ff233668b1ea",
        "cursor": {
          "ref": "4a70282e-e77b-4cc2-acbe-7b26926637e0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5663c727-eefa-4911-a3d5-bba2b3ab4cae"
        },
        "item": {
          "id": "4e85b6e8-17a6-4c01-b281-ff233668b1ea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "032e8bf8-1b4a-46b2-804c-31ad6a2bc872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0912800e-2206-493e-b055-19e173d53b21",
        "cursor": {
          "ref": "fd8477f2-2f52-4951-9bb9-9d72cb39368d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5bad6dee-e3ec-4451-b47e-da72d69e654c"
        },
        "item": {
          "id": "0912800e-2206-493e-b055-19e173d53b21",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fe9b61e9-cbe7-413b-bbfd-28022823739b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dee1b9-a73c-43ed-9f29-0c5a4b42c015",
        "cursor": {
          "ref": "5d305670-2786-4ba5-b06b-1e7b685e9aeb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bd87f3ef-6196-495e-a7b4-f584a9da59b9"
        },
        "item": {
          "id": "a7dee1b9-a73c-43ed-9f29-0c5a4b42c015",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "946672c8-c579-46c8-9462-fd7b92698a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4eae4a-e8d3-47a9-9bda-43b9ed4779b6",
        "cursor": {
          "ref": "dd09a453-7311-40b6-82c7-35b819e40b0b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1cee4c88-896d-47dc-a7e8-0900ede10b6e"
        },
        "item": {
          "id": "7a4eae4a-e8d3-47a9-9bda-43b9ed4779b6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e18b692-80ae-47a6-bf6b-8f1c34035095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa79fc1-2a74-4864-a200-0931e6bdc12c",
        "cursor": {
          "ref": "238364c2-6860-4fd0-9e41-36ff36b003fc",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6558f88b-20ca-441f-b89f-b58d00a6cac3"
        },
        "item": {
          "id": "3fa79fc1-2a74-4864-a200-0931e6bdc12c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6e35644c-001c-4742-a64d-982308fb544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42907ec-8795-47ac-a8ba-e207f41587dd",
        "cursor": {
          "ref": "5e25fd04-1713-4987-9434-d8f67a2f0257",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cd175dd8-eced-4932-87f8-62cbc1d9abef"
        },
        "item": {
          "id": "d42907ec-8795-47ac-a8ba-e207f41587dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c477f83f-5fb8-4ba0-b4bb-e706107faea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b0c7f1-b7b0-4545-93f3-934891217747",
        "cursor": {
          "ref": "8598f72e-a831-4ca1-a56e-8e090e2fafd3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4afa5a65-0f49-436f-9d3d-b02191db5706"
        },
        "item": {
          "id": "e3b0c7f1-b7b0-4545-93f3-934891217747",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "805c5d77-3165-4949-9d92-99afb8047b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e272a6-f927-454e-a6ec-2e37c806772f",
        "cursor": {
          "ref": "1e9262f3-3b9f-4d0c-aec2-3fe179cfd38b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2bf09636-7b1e-4e94-a9db-41cd241283c0"
        },
        "item": {
          "id": "00e272a6-f927-454e-a6ec-2e37c806772f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "90280938-a00a-4c0d-9325-d3ec76b18c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1dc857-de3a-40a0-96f3-bbbb4f43a80b",
        "cursor": {
          "ref": "485fb733-3a71-470b-8dc4-f109848bc0a4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9e53d201-9a87-4a61-a987-accac751e0bf"
        },
        "item": {
          "id": "0a1dc857-de3a-40a0-96f3-bbbb4f43a80b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0e38a313-dad8-4d3b-9257-b35a10cb9815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0128fb-a7fe-4221-a1d8-eb00f56c0bd2",
        "cursor": {
          "ref": "9799db95-0f78-4b21-8e5b-3dcfdd7c4541",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "177b26b9-dbb2-4995-9a02-8fa0874804c0"
        },
        "item": {
          "id": "8f0128fb-a7fe-4221-a1d8-eb00f56c0bd2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f121ed37-80ad-4d82-80a8-d651e17027ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bed8e0-d064-4592-9c77-ae978156bf2d",
        "cursor": {
          "ref": "395da52b-52ac-4ea1-8f7a-ccc8ad12cdb4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e9e3f142-2e89-480e-91b2-acea80adbc0d"
        },
        "item": {
          "id": "c8bed8e0-d064-4592-9c77-ae978156bf2d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8d915664-9fdf-42f0-a66e-7a93620df73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d938c1-f9bc-405b-a593-09d2501349b2",
        "cursor": {
          "ref": "43dba7a1-ac56-45ed-a903-1394369813e6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ec55699b-a80f-4758-9928-0eaeba8b6cdf"
        },
        "item": {
          "id": "11d938c1-f9bc-405b-a593-09d2501349b2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6724d6ad-e476-4552-b21d-40fdda2104df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fccf784-4751-4df9-8b66-00b90f070a4f",
        "cursor": {
          "ref": "085f100e-46a2-4f26-984e-70c377c2612d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7f69bde3-a7bb-46fd-a107-e2192b5a48d6"
        },
        "item": {
          "id": "0fccf784-4751-4df9-8b66-00b90f070a4f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f8bbd16e-59e5-4e87-80d0-a8408c0a3838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda6c438-372d-49c9-9043-5d13eec5d18d",
        "cursor": {
          "ref": "116f6746-a2ef-4767-9423-3158757c8dcd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "12265d53-0c45-41d5-80d9-ea7876ba3577"
        },
        "item": {
          "id": "bda6c438-372d-49c9-9043-5d13eec5d18d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "255e2b9a-676d-4510-ba66-18878726f0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a61865-e0dc-4eea-a7f9-7d402cb3e0c0",
        "cursor": {
          "ref": "8d80d3df-f12d-448f-86b6-3c2f36fa4c64",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ac5a0376-6af1-430d-a1b1-2bc64589e12d"
        },
        "item": {
          "id": "32a61865-e0dc-4eea-a7f9-7d402cb3e0c0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "95483ce8-b12f-4d87-a489-dabc19b48c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e863d178-668c-49fc-a454-c3361211b4c8",
        "cursor": {
          "ref": "c0d9ba1e-0190-4afc-a846-efff0d134b5b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f25d30d4-bb17-4460-9cc0-acf0722dd174"
        },
        "item": {
          "id": "e863d178-668c-49fc-a454-c3361211b4c8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ba2f7180-0c28-4c8d-957c-d71d8a67612b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5458adc5-c6d9-436a-908b-7c8ace16d684",
        "cursor": {
          "ref": "54f3b0b9-02fc-468e-9880-76796fa6a27d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b7328862-9554-4905-9cba-d923e92daf6b"
        },
        "item": {
          "id": "5458adc5-c6d9-436a-908b-7c8ace16d684",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6e86bb06-d666-4a27-ab95-135443acf14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5018cdf4-44dd-4eac-9f36-9b50a1996cd2",
        "cursor": {
          "ref": "83318cb3-bbfa-47c5-9f6a-8dfd1f4941d2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c5e786d2-6308-47a5-82a1-4199da7782bf"
        },
        "item": {
          "id": "5018cdf4-44dd-4eac-9f36-9b50a1996cd2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a215cc5b-c54d-4296-a4f7-27acc819e151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7567f323-5271-42e8-8e03-fa0ff8629d40",
        "cursor": {
          "ref": "dd09295f-e7fb-4ec8-ac24-bf7a0b47798a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bc37ff54-0086-474e-a166-c713987aac9a"
        },
        "item": {
          "id": "7567f323-5271-42e8-8e03-fa0ff8629d40",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3b281a47-132e-4528-94b4-c16d3323b034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e623540e-0102-4a5a-8fdf-fbbc0b6c290a",
        "cursor": {
          "ref": "e0238418-7921-4c91-bb6a-7af316b5c854",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "01195877-bda8-4283-9bf7-b4f51477ecb4"
        },
        "item": {
          "id": "e623540e-0102-4a5a-8fdf-fbbc0b6c290a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d3b2581d-2ab6-4d9b-9775-12bcbd53c0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3591d8d3-cd2b-4bdb-99be-53b2f7afbd9a",
        "cursor": {
          "ref": "18796a94-e5e1-40bc-844e-f748bf893fed",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "59de8335-2bf0-4af3-944e-0ac0e9e4ef14"
        },
        "item": {
          "id": "3591d8d3-cd2b-4bdb-99be-53b2f7afbd9a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c81cb040-b678-4cee-ae3c-35ddc70e3d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf40b6-8622-4f40-9baf-cd5e9ed9b167",
        "cursor": {
          "ref": "48f9493d-5b78-462f-9d06-2cd0de22f603",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "306e9205-097f-494d-b5b8-8b91e5f7e070"
        },
        "item": {
          "id": "0bcf40b6-8622-4f40-9baf-cd5e9ed9b167",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "104b8cc4-da47-4c73-ae43-f33674cadea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac9b384-85b0-4ff8-8d0c-e5c40d5f0e69",
        "cursor": {
          "ref": "f2fe31be-6850-4e90-9c46-caffb62c5013",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fc922d66-4924-4793-96e7-5f31f9e6ee7e"
        },
        "item": {
          "id": "3ac9b384-85b0-4ff8-8d0c-e5c40d5f0e69",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b6189ea0-7d28-4bb3-af7a-967fa78364a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091f4e2f-1cda-44a8-947e-046df5f25136",
        "cursor": {
          "ref": "17e72146-0aab-4a7f-b7cf-e376ea5c33aa",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a38e7252-92a0-4e0e-93ae-5069d3d047fa"
        },
        "item": {
          "id": "091f4e2f-1cda-44a8-947e-046df5f25136",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8746877c-f053-4a8f-be01-cf6c0da8790d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd982ea7-8db2-4d30-8e57-7fa53bdc84c6",
        "cursor": {
          "ref": "5258558a-a6db-46e8-912f-700152825cdd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8f32236d-071b-421d-aa6a-698be9b982da"
        },
        "item": {
          "id": "cd982ea7-8db2-4d30-8e57-7fa53bdc84c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8e3f20ae-7426-49cc-90f3-33de32022b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996deff5-aa69-4bb3-8574-a5f857835432",
        "cursor": {
          "ref": "17cd357a-3762-466f-8817-1561fd002b7f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b7139938-efc9-4eeb-a136-f755eb66f117"
        },
        "item": {
          "id": "996deff5-aa69-4bb3-8574-a5f857835432",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "79caae71-fa77-49fe-a770-ac24f830eb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade2617-adb9-4016-98f6-fc8ffe7c1f60",
        "cursor": {
          "ref": "7d2d0b5d-9fdf-412f-a254-e9af8c9cb97d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3bd78285-858a-4c9f-bc47-56aa5713cad2"
        },
        "item": {
          "id": "bade2617-adb9-4016-98f6-fc8ffe7c1f60",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bb722cd4-edb1-4c78-85ea-0f7c6661f73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a742b50-1642-441e-b672-91d2fb6ac451",
        "cursor": {
          "ref": "2970fd1e-0614-4c90-905f-3cca5de8b377",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bc7ebaf5-2d77-4fb2-9d05-0557aeb64332"
        },
        "item": {
          "id": "4a742b50-1642-441e-b672-91d2fb6ac451",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fefd93e8-bb30-4c99-a160-da81d8f3d369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bff89ef-c4cf-47c7-ab40-e2d291573a2c",
        "cursor": {
          "ref": "617ef6d5-bdae-4412-bfba-1b804edb33d9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "92afb142-dc98-4603-8fce-2413d3554818"
        },
        "item": {
          "id": "9bff89ef-c4cf-47c7-ab40-e2d291573a2c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "64ca4229-d369-4d43-8639-dea88453d185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6207e725-a069-4688-875b-229000d2843d",
        "cursor": {
          "ref": "4b50c29f-633e-4cd6-af58-9f0583f21331",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4b48bf6d-83ef-42c0-87e8-117df5b90315"
        },
        "item": {
          "id": "6207e725-a069-4688-875b-229000d2843d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dbd55389-5244-4ca5-ab3e-fba2ae294d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5a5e9e-5ee1-4a3d-ad11-c6afbca80ee3",
        "cursor": {
          "ref": "fbd42289-5aac-476e-8fb1-9512a7f53085",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "89286d91-58cc-46d5-bae4-8b61e18e882e"
        },
        "item": {
          "id": "8e5a5e9e-5ee1-4a3d-ad11-c6afbca80ee3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1a7d839d-eac0-426e-bc7d-e03845d199f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79be4927-e972-4e35-8729-add513072cb8",
        "cursor": {
          "ref": "f1a1f66a-6448-4ee0-a7f6-ace194e41ed7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "10b8a7fe-fd34-4c5c-aa0d-6b7130e09a17"
        },
        "item": {
          "id": "79be4927-e972-4e35-8729-add513072cb8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fee0b911-f470-4870-85e4-e916b5f1e4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1699128a-0619-4a52-a45d-c001f71b1b7c",
        "cursor": {
          "ref": "f7611f9e-d051-4f79-9dfc-d72b542f7814",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "045c53ec-a73e-4a98-913e-440d11772142"
        },
        "item": {
          "id": "1699128a-0619-4a52-a45d-c001f71b1b7c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bf831aab-45b6-4c78-bcd1-caf77c909d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdfec75-080a-4fff-9832-66b148f21664",
        "cursor": {
          "ref": "cff1788d-c826-413b-afd7-a6075835af8e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "919beca0-7fb2-447b-8345-af284ec60394"
        },
        "item": {
          "id": "cbdfec75-080a-4fff-9832-66b148f21664",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "678e9c4a-0893-487b-802b-faeb3f8b6664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521e76ef-b932-4139-a8f5-f928f633956a",
        "cursor": {
          "ref": "6a2f135c-a1e4-4e9b-b516-d383f5fd397a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "180ce04f-f2f0-46c8-a074-f3517b3b2b65"
        },
        "item": {
          "id": "521e76ef-b932-4139-a8f5-f928f633956a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "75ee8d4e-b3d6-4625-aa9c-3dff4e1f6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acaf2f1-1d47-43f5-ba7d-07bc19700599",
        "cursor": {
          "ref": "bd5394d0-3709-435b-93c0-357140ac3227",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1fed272a-5283-4a4a-aac4-e7795aaa0078"
        },
        "item": {
          "id": "3acaf2f1-1d47-43f5-ba7d-07bc19700599",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "55ca4e64-9e75-470b-965a-7def6dc9704d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e73e42-ad82-42cc-b49b-dc53a1ad0047",
        "cursor": {
          "ref": "541bb6c4-79f5-4a01-a270-27b3b809fe08",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4158628f-802e-47fd-896b-3a54fba5a128"
        },
        "item": {
          "id": "b2e73e42-ad82-42cc-b49b-dc53a1ad0047",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "54004cdd-2f83-4552-b905-0d1cddcb2198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c005672-006f-4309-bb21-60fb709b53ab",
        "cursor": {
          "ref": "6a1407d1-11f5-4f3a-ba18-a11b467c081c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bb201036-792c-41d1-ae47-efb7927c04a9"
        },
        "item": {
          "id": "0c005672-006f-4309-bb21-60fb709b53ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3bce3e1b-fb07-40e8-b60c-e3d12cca0b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e5dfa4-b330-4e80-88c3-938442710a9e",
        "cursor": {
          "ref": "0951997c-1c7f-4fa0-a4e2-73420dd995f3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "63ec5f69-548c-4bfe-908c-9f2191fe1ef9"
        },
        "item": {
          "id": "a2e5dfa4-b330-4e80-88c3-938442710a9e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8295f19e-7a50-4af3-b110-7b69cc73d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b94f94-386c-477b-9f35-7e27e9c0fb6b",
        "cursor": {
          "ref": "e0a0f319-cdb6-400d-951b-844dd24dda9b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a739f809-89a4-4614-9ffb-641213a211a3"
        },
        "item": {
          "id": "c8b94f94-386c-477b-9f35-7e27e9c0fb6b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "964906ff-652d-450b-a033-33dc37d156c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44afc919-fa84-4e70-99d5-e79af205d315",
        "cursor": {
          "ref": "26d1c540-c9c1-4f93-b692-26afc870e511",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4c527283-bece-4265-a375-5d6c4e71f9ff"
        },
        "item": {
          "id": "44afc919-fa84-4e70-99d5-e79af205d315",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d03557a8-92c0-44d3-8560-3e9639acea1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea7af18-ceba-40f4-a67b-abad0f6ea151",
        "cursor": {
          "ref": "6d19339d-97ca-4057-baff-746ea44d3639",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f99b1a0e-5678-4f6e-bfe0-55a4dc1413de"
        },
        "item": {
          "id": "9ea7af18-ceba-40f4-a67b-abad0f6ea151",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0073ff94-cdee-4fe4-9895-0261f59481d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5bd889-d9f6-45f8-9a04-d4e1d54f111a",
        "cursor": {
          "ref": "3ad07cc0-2cab-491a-ad64-f091cdefbe9c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b3e74d44-4554-4f4b-827b-9d5d45cc4f2f"
        },
        "item": {
          "id": "ff5bd889-d9f6-45f8-9a04-d4e1d54f111a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "21e2a873-566a-4919-9e3e-6d7df25d352b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ce49a-47b5-4e28-8898-ecc3690f8e04",
        "cursor": {
          "ref": "d660c9cb-bdde-4181-9df8-37c1b7be9151",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "73bd31b6-760b-454d-bbb0-c009cdb9e981"
        },
        "item": {
          "id": "5b3ce49a-47b5-4e28-8898-ecc3690f8e04",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "12567bea-2846-4770-afd2-2b13bdadb080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e9edb0-1518-48bf-941a-477c107103a6",
        "cursor": {
          "ref": "7d5d809c-0719-476e-9d74-c785fb933bbf",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f3d5a002-595d-4184-9709-3a8c1cfc0447"
        },
        "item": {
          "id": "45e9edb0-1518-48bf-941a-477c107103a6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8918e933-981a-4f53-b6f0-12fa73cd2ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9228a1bb-c666-4513-b38f-b4867a8fd678",
        "cursor": {
          "ref": "75b2adcf-6275-4b6f-9f64-af358a006a7c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6d92cc06-a393-48c8-a0df-a200275ef9a9"
        },
        "item": {
          "id": "9228a1bb-c666-4513-b38f-b4867a8fd678",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4790aa0d-ac79-419c-8fbc-678cbf373324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514453b-f9dd-49c8-b920-f552c991bde6",
        "cursor": {
          "ref": "bd0be2b8-54f3-4ef1-a262-725df6683ac1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "72c2a781-e2ca-4cac-99ae-38f9bfc61afa"
        },
        "item": {
          "id": "6514453b-f9dd-49c8-b920-f552c991bde6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "11b3d5e4-007e-4965-8ad2-939e8e07f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5166aac-b804-44c4-98b3-28ca85199c12",
        "cursor": {
          "ref": "503292ba-d989-41e3-87a8-1ba73b16f883",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f48b7c66-087a-4c3e-9536-d14ea85f35e1"
        },
        "item": {
          "id": "f5166aac-b804-44c4-98b3-28ca85199c12",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e7647160-7bd9-49e8-827f-11f1951e4e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8bd23e-5b3d-4684-bd93-ded6ee5e3aae",
        "cursor": {
          "ref": "112c5c78-fcd5-4785-9370-237202c1a38a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0c21f60f-ddd0-4703-9b48-c9d950cf54b1"
        },
        "item": {
          "id": "2b8bd23e-5b3d-4684-bd93-ded6ee5e3aae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "87c207e5-26c8-4a92-8c22-c10ab3eedf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09ff1fc-26f0-458c-965a-963ad5d3638d",
        "cursor": {
          "ref": "928db393-c106-4aad-95be-05da19d91506",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3ca155e7-dad1-473a-afca-27884158468f"
        },
        "item": {
          "id": "b09ff1fc-26f0-458c-965a-963ad5d3638d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "33a949e3-9ee5-4a30-879e-abf36f994e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52430490-83a2-4ebb-b51b-3dd4c38a7dcb",
        "cursor": {
          "ref": "326ef0bf-cefe-418c-a475-be9371297664",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "979e2cb7-1275-4d0d-9d49-83312f79c26b"
        },
        "item": {
          "id": "52430490-83a2-4ebb-b51b-3dd4c38a7dcb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "997c13b8-53b8-49ea-9c4c-1e7a3a1842d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d752eff-bf7a-4fef-b7f4-3b1362552e83",
        "cursor": {
          "ref": "bd72b82b-d573-49ab-b244-f77b862ac425",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d23bd82b-3c02-4bb9-9abc-187a1b027286"
        },
        "item": {
          "id": "8d752eff-bf7a-4fef-b7f4-3b1362552e83",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b026542e-c8f4-440e-8c02-612a5d164d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8423fd-94c1-4e18-a475-62dab088c610",
        "cursor": {
          "ref": "cd1240f2-f60f-48b9-81ed-fe12775762ab",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d92038ba-b4f9-45fe-b8bd-3864592f5e52"
        },
        "item": {
          "id": "6d8423fd-94c1-4e18-a475-62dab088c610",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "de2b20be-b662-40e6-b37c-c92d2c89f8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaebd08-1826-4f28-8ad1-eb91d7f0d988",
        "cursor": {
          "ref": "8bcf6c5b-bdcc-4aa3-9c63-eba457e831be",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d3b625df-61fd-47ae-9116-d5fec4653a9d"
        },
        "item": {
          "id": "afaebd08-1826-4f28-8ad1-eb91d7f0d988",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a67a070a-f626-4b4b-a588-294bc9c0996f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbfcae2-69cd-4dc7-8ebe-196777bc23c5",
        "cursor": {
          "ref": "4131dc35-0957-4a26-a4e0-6e124e5fb005",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "980250a5-cb86-4aa3-b909-e6e6cacf56e2"
        },
        "item": {
          "id": "8dbfcae2-69cd-4dc7-8ebe-196777bc23c5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2213eba1-0583-4730-9240-21c3a9485bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbedbbce-be85-415b-839c-961752592e31",
        "cursor": {
          "ref": "d80cadbf-3415-4a53-aecc-ee06fded126c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fe9d7014-a833-4171-8530-a512260964e3"
        },
        "item": {
          "id": "dbedbbce-be85-415b-839c-961752592e31",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1106cdf3-8f34-4615-a298-06b9eb456332",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb407d8d-b461-4e21-b56b-358ee32bded6",
        "cursor": {
          "ref": "9468ddb2-6440-4312-aab6-cfbd8d4118c5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "efc4a037-672c-4d48-9f45-bcd6b5a2b5b6"
        },
        "item": {
          "id": "fb407d8d-b461-4e21-b56b-358ee32bded6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "66e7d0e0-5904-4958-a49c-176fc11fe135",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c90e6cc-d89c-4414-b547-388d8e10d958",
        "cursor": {
          "ref": "30fc4ad0-e0ef-4ac6-af02-d19e57d20ef4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fe07edb4-587f-4586-9498-91eee161086d"
        },
        "item": {
          "id": "9c90e6cc-d89c-4414-b547-388d8e10d958",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d3a99443-913c-4f5a-a172-74f5bec8ea5c",
          "status": "OK",
          "code": 200,
          "responseTime": 2905,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49bb40c-32ac-4354-918a-85fdc5eaed8e",
        "cursor": {
          "ref": "916f0254-78e2-4074-857d-13839e662516",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "81845ac7-15ad-4697-b7f5-3d26021548ed"
        },
        "item": {
          "id": "c49bb40c-32ac-4354-918a-85fdc5eaed8e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "77b3ca27-3545-4a53-af58-8a16be025da8",
          "status": "OK",
          "code": 200,
          "responseTime": 2630,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb715269-77bf-4697-b9db-caa315c34c65",
        "cursor": {
          "ref": "64397e6d-d139-4f1c-b9eb-02a9715c73e0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "309cbfbb-1cc2-40ab-af7d-5ae476b1d303"
        },
        "item": {
          "id": "cb715269-77bf-4697-b9db-caa315c34c65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d08a71dd-5fa8-46a9-8541-9173e8926700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb715269-77bf-4697-b9db-caa315c34c65",
        "cursor": {
          "ref": "64397e6d-d139-4f1c-b9eb-02a9715c73e0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "309cbfbb-1cc2-40ab-af7d-5ae476b1d303"
        },
        "item": {
          "id": "cb715269-77bf-4697-b9db-caa315c34c65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d08a71dd-5fa8-46a9-8541-9173e8926700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde2784c-0be3-4322-9e8a-aa0609eb08fb",
        "cursor": {
          "ref": "211ca3de-6700-4878-abb5-30b54341332a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1a68d7f0-1dc0-4f35-93e8-5a3c54863947"
        },
        "item": {
          "id": "fde2784c-0be3-4322-9e8a-aa0609eb08fb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "61c67f37-e5ea-4b4a-a3bc-b88754f72d90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5960bd-3d6b-4361-9878-13af061de107",
        "cursor": {
          "ref": "e7f1a8ac-2f16-4858-a127-1a3be9ab06cf",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "53aaaa33-4e6e-45ea-949c-0839ef4973b5"
        },
        "item": {
          "id": "5e5960bd-3d6b-4361-9878-13af061de107",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5a527c92-5313-4ab0-b933-d84fbb03076b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}