{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "757d8910-4d7f-47a0-bc48-f7124ce8338a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a98c9701-3d4c-45ee-917a-57f54527cdfe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54234ca2-01e0-431d-a688-f545f26c8336",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f8c59e-c437-44d8-acb7-5cc7075f2ad8"
                }
              }
            ]
          },
          {
            "id": "fd916c5c-6e49-45dc-a858-35647c152f68",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6db5d98d-be20-4c85-9029-0bbd7c1e55d5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "159d3e54-9013-4e91-8666-c29adcf82795"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ce9c06c5-c0a6-48a5-8097-b2a487fe5d55",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "824a0286-ed55-4ae4-a3f7-74052a40c985",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d267f94-6ebb-49bd-832e-3190d05abf29",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e110279-fec0-4446-b96b-ad7dcac08197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d070949-7225-4672-b28c-c01bc0ef7ad2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "379d9a16-dc54-4c01-a01c-79c1a64f300b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fb95314-44ac-4092-a06e-8fba4a07ac89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "658c1dba-616d-421b-96c9-bf5637c2d135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0447a81a-61ce-40df-8b89-5c981f3566b3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62230263-86b3-4577-b638-836306640b45",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dc8c6bfa-cf23-44ea-b6a9-73abe720e2a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc479c2f-1141-4b2c-826d-4703a83d92c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e115621-07e8-49f8-9516-f5aec8df4327"
            }
          }
        ]
      },
      {
        "id": "23130172-47c6-455f-9e74-b11a0f3e2256",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "01ec55c2-6432-41ab-8167-60f955f13c3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8e9a35f-35d0-4df5-aad2-b5f4a0773da6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e789eaf2-c588-4c84-b268-cf4e56ade0a2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d04b5af-656b-457b-8cef-0f2f3ba01316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67089a71-abd2-4e55-9756-b07e5885aef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e4df9e-fc46-4a94-ada6-a60c7094bd7c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b499a6-130a-4b5a-9e0b-3bc90254673f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36e985f3-0604-4f33-ac90-50f49ee662e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62e3839-a8ee-4ad5-8c27-3761e17caf5f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99795270-b8e5-45cb-a849-007664247812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a10c49b8-4659-4c78-9740-31ecdbd7eefd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "773d8853-dbf2-42fa-ac0e-5851d0ab0e72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57ed8af5-52c0-4a63-afc7-3253d034a288",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc31cf3-856e-40d9-97b2-512976b0fdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86fd145d-7635-4b8b-981c-c15bc6474fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f674c-b762-4f89-af95-96d2d89909ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548a987d-fe86-40d9-8adb-087a76d14c8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "687f4ec8-7d90-4546-bb52-8c6bcd8d7719",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba0d1f9a-6004-4c9f-9ecf-16e162c4102c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c295e9aa-c6a8-4f9a-8681-44925cf2f9c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1a97cc8d-3e83-41e7-a583-47400dba78b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1c6f8f8-0790-4680-a3ea-11f78e4f0a5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "81de2d19-f024-4c17-aa29-1a55b787a39b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c49c132-eeb5-4cd5-9036-2710c43e5a0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55d27722-c2e1-4e01-9212-40f96c41cfe4"
            }
          }
        ]
      },
      {
        "id": "653fbdb1-9823-4d25-a4c2-9e01796f39a7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b36373ef-3e51-49b2-a459-bd6337c09e85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac4ade07-820f-4fc4-bc86-ea3a570626a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "076c44e0-e606-4e4b-87a5-a7807ade3243",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2148fd58-97e2-4dd9-8f9a-e4758236079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0f7e4b-d722-430e-bd19-0824e9c01f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8207d27-26c9-47ca-8b80-1336470a21c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ca0fe3a-be09-4aea-81ea-48f6a393304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88449fc-f61e-4115-a4e5-d133d3f1460d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5d4db8-b062-47ba-a57c-1cdeb2333335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf7c2ad-5160-46ef-a56d-83741ab2ed9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b539ad9-00ff-4f79-8a4c-33b7cfe0534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "251af1d2-93f1-429e-a351-6b156ed55649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0332d942-3349-417d-9615-c711527e6907",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c18ac4-1bcb-4f85-a826-926979427293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d1bd86-67ed-4cfd-8c06-6ffa4141d472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1afc46e-03da-4d2b-b2bd-a0dbf02fd2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f579e001-7fb0-4576-95d7-181493728d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c45894b-a180-4be1-9958-bda1a81d3d63",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c68840-012b-4f29-b5c8-f299babaed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59de264f-198c-4fae-a7d0-73756c8b3882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a57d18-0633-4198-96a7-ebf9662463e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eec95620-15b1-4f44-80b7-577f206fe1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204af352-c864-4638-8354-41510bd5da76",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c39ec-4d06-4f2b-82d7-c80329d1e691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0229a3b-53d0-484b-aa2b-0399383091a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf6af7d-55dd-4415-8fb1-dedc52c1b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "698279ef-c6c9-498e-8ff7-287be9dd0d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69078ac-e62d-4441-a910-daf08fa4a3b5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4955adc-662e-4f10-a428-daa092685d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99974e16-0e04-4dc9-9b78-7aed053c294b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f189a78-5c78-4205-a7e8-4929e7f9a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bed26a1-e993-481a-bd7b-d4b3df57e89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d907cbc6-3ec9-43b3-abf2-38475b97fc1d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a94b03d-208a-4947-ba25-1066f3bdd541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171f80e3-561a-4d50-893a-1163f2e27cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57022a9-e309-402d-b9b8-52eae3dc4705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70dab979-e1be-4772-8cbe-e5810a71ac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f1f29d-f0cd-482d-a978-b61590ad36ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c6e146-18c6-41b5-92d0-c37b1857daf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b48e416-f752-4ffa-bbf1-8175d6b34975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a843e6ec-1da3-4351-b67a-45c5740d6cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d181788c-6b5e-4aaa-9b9a-1f2aee0ce9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d6cc78-346f-4bc3-b47e-40e6d3621969",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b19aa8-d4fc-4d77-bdcc-38b2350b39e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d312ba0-e3bc-48d2-8077-faa15e13fa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945d84d0-fe70-4dbc-8ce8-69084042f56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fa7aa5c-0629-49d3-8a86-63e2d6147476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3465cfb0-ef44-45b3-8712-fd64898d153d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aca817-d432-4491-a318-e533e37cfe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ed4344-7804-4e75-907b-8d904696ccdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3996e4b-098d-4419-9505-f7a98cd0cc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b9cc4c1-09f6-44e4-8aef-5ac8cab63c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f01724-92b3-4c71-a105-aa00ec92871b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbc31f4-0d13-4685-83e9-a85ced385f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda40232-bde7-48a2-9ca4-6e5bfe65d284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d140293-ca57-4b7c-9494-c261bc4581b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52556e3-1d2a-414f-a6b2-bfaa557206fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257b7237-7147-4b94-a899-a534ba3aa1e7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdc2d6e-7bb7-424d-b134-d7eed746fa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b4572c-1c88-42b7-97cc-c555ed519777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c667fa7-869a-4023-90b4-38b20bda8e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd451cd-4adf-49ee-b653-b08291ae3fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db35598-8290-4bf6-a6c6-fc5637977cea",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f85e1-662c-4be3-ade3-0a40d3d9b9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4833d43f-b2a0-4320-bd38-e12eb26cc167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a97482c-a641-48bb-b31d-484be7913a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e830469-0edb-4d85-89d4-c1b56f8b6d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11f5270-b1c7-4857-b89b-f5e6573aba18",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c944c45a-8b39-4a55-9500-a491a5d764e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d9ba6a-eb11-4d43-80e3-862233cd2abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bd892a-e3dd-4e86-b137-4a7a9bc429dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a83ee56b-0536-4f40-8889-736f2a972dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e750112-0ad6-4340-8c47-a2a3aa4fc950",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bbe276-0608-476a-b5ef-35f346c9b058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9748c448-1d55-4f73-ada0-86d1ae8673cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db2e959-f122-4ac7-acd5-d26e6c6e6cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8170f761-75ac-4287-b3a3-16e148ab0881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997d3af6-a3eb-4832-8325-babb7da1544d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8decf409-0118-4c5f-8a13-0723c744987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa6f543-6b04-42b1-a68d-4076c85fb047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dd75de-d761-4eba-a0bf-eb7891bda5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03f63778-43e8-4942-9eab-3ef98d93b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff0f45e-c0fc-41e6-b773-d0e82212245f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f506326-d7e3-453d-bdb2-81044704fa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babb7e33-044a-418c-8252-f24f24ddd1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7896e8-a650-403c-8338-25681d45bbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf74e82e-54f5-4b17-b629-7615349dce69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8a7967-a5d6-46e8-b130-b5046c658a29",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0029b6c-b47b-4a1c-add7-eac3aef2e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf2fcd7-6fa4-42df-9637-8f887dd33422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233e518d-671f-404b-b694-305f2b4cefd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "15ee91a8-935a-4392-955a-23a0af117810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fcf4a4-7dba-4b38-a03d-da81e6d00796",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa947a7a-abf5-4969-8fcd-7016697f0ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7570f589-50c8-4a18-96f8-180a11d65e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17236ac3-ff5f-4083-b502-3bf783572fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56da847e-ae87-4398-a602-57372a55fe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9c956b-8955-4dae-9d77-9d117bfb76e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c509306-b6bb-42f8-86ba-89aaae002ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919e8e9f-b07c-4322-9a11-65d7c77ee778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d8a465-341e-4bcd-8b3a-076c8a419018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "622cfca7-1a5a-4154-8b00-24c68d4a9e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2002680f-cb1f-46fc-96a7-f92e52027b06",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b448f7b-ff22-4aad-a69a-f146a51a979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d991b92-d4cf-4c80-af61-7baa0528e227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3147c87-1d54-4e00-b49d-5546473e90ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e88441-2224-4a6e-83db-00c6a391883a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c73ac9-94dd-4a43-891a-2d1db6e08270",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7723a8b-6678-466c-91d6-2984755fba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d680197-596e-42f3-bf45-ae2520608448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125bae8b-270a-47e0-9dc8-7528924ba9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d779e315-df7e-4ae5-8032-8532ce7d6437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c077b2c-db70-42c7-85b4-ad53ffe6380f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9372de-abb1-4aa9-9c14-0057d18e8176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b3fcb5-d44f-4028-96e6-5ae2e49c4f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1cb3b1-9168-4bc1-9337-c32ff2898fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5babc40-27b2-4b1d-9773-c55291d6efda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d152086-7e1c-49ef-b877-478b2d85dd4c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d60591-eb22-488f-a591-de15be6082e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7bc466-095c-426f-b7aa-bd4851bc7d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81780198-256f-4801-a98f-316ce2b40436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5483a156-67a7-43e6-a3ff-f384ab5373d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eac6cb-fa23-4565-8897-4801816b4081",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46de540-4c35-4c3d-9a90-00220dc9a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c746d5-d95d-44e3-831f-88cdfa74be8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4f6f6d-89a8-429b-9a93-ab469a7b0dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbe97ae-f03d-4b70-90fd-fc500546c4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6ca39c-9734-4394-ad3c-7699494523ab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d5b5e7-319b-4fc0-96e2-ca6dbb02ee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9998d8b-2709-417f-8cba-806458885426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecebd1d-9618-4f2e-aca2-5cfbb7625f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75943b22-7f6e-4482-bc80-f45a6d40eb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121777fe-2a7d-4c97-be76-c7286271a4d5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f031b9-4762-4986-8305-e45de44f7c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4b721f-642f-4464-85ef-948afccb7307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a87fa04-2094-4a0c-b0cc-12f3ee8e692a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5ef52d-964d-4d8f-ab99-0c13c75228b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2217bf02-5d79-4692-908b-a5700423e772",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4fc354-0156-498d-b312-22dad2c0e7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973d481a-6308-4097-a5be-ef3d7b9ba3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f91fee8-4ac5-43b9-80f3-38d1551e852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28970fda-963a-4de6-ad2d-fc47538a6b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcb0908-5386-43b8-8910-6777c0baa95f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe735c5-e0d3-475b-bc72-fc534ee4b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99a753e-615c-42f5-836e-c132d6e22465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8c41b5-4396-4585-adca-4676eda56c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b94e155-36a6-46ee-ad9c-660cf36123dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3d0e76-7f5f-4c2c-9cd4-4dcd1abef442",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c1ca6-1e72-4f9c-97d8-9a3efb22f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddc6be9-3183-44fd-ba3f-f052ddb4eefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3685182b-b70c-4a30-83de-4bf7c15d5826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d322c37b-31c2-4d7f-8a2b-c4bc5f2c8b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a53ee-41ca-405b-9115-1c6a12d04654",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e36231-e8fa-4ae1-9240-9a136a03cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b76977e-b9e7-4d6f-8a82-dbdff92a854f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48444cc5-cd55-436d-adbe-4d1a3803e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b900bf9d-2c65-478b-85d7-25e4c6fd5873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea692eaf-6aa4-48f5-a8a5-b3fa8dd179eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f77d33-f12f-42f1-bdc0-9f4b3baa6f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e0be63-4086-4447-8e13-d5727d056f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad79eef-fda5-435f-80dd-8d3c24ff0d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a25b5610-86af-4b75-bca3-d2bcadd632a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e35273-0e15-433e-84e2-5cb38964706e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623e67ec-37ea-4eb4-90fe-763a594e4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937ae2c7-534c-44b1-9f71-a4285d71df10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380a74d6-1e0c-46e8-9040-1eb440a792ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f230f6-48f7-4ab0-9e75-b2ca54b58df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f683ae2-71eb-41bb-bb5a-77b1bccee70f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5986f079-4537-442a-bf5b-aefb6d0daa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ff5b84-9897-45cb-82f7-4346de1646f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f93395-7e9b-4148-82ce-067bcd2d68ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "247d2c31-9dce-4a61-90c1-f429a0acf70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e30b1a-2e00-4ac9-afba-4098e6aa1008",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823be75e-0ebe-4897-8045-ee46e986a6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cec8885-3e38-473d-9c9a-dccfad8b8a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351f29b9-bd89-43d1-a1d7-b4d2013bcc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "81d1b180-cba3-4a53-b121-aa69d7e88a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5987e1-3f5d-4ff3-8030-352fc9de2406",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ab9f5-dcc2-4a55-9a9d-a537a7ff4045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d39ba59f-3f8f-4132-9895-67de0807c81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8c1f29-7c0a-4e02-a456-e69f995baf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1de4a2e-3d9c-466e-ba7f-f7333384147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc6d55e-f877-4e04-8d8c-d0d6d0a9570e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51063325-1cde-44fc-8aae-378b2c51e796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab3bc4a-6071-4381-bb86-23a2ae31ac71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fde7347-babf-4652-80cf-27d89d0562d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "094f4b0b-0b7e-460d-99b8-4315b7b1fedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c302121-67ba-43a4-a979-23b1612c736f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47d8f0b-3039-4bac-8d23-525a7c29f4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2ec084-63f2-42a1-a6e9-6a8fc1894a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1ff98f-1b9a-42f1-bf3a-2cfb67b51fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e55b1d4b-cf90-48fe-9118-70724172268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f4e938-cfdc-4f47-8167-da32e3a60160",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85be0f9-d15e-4b94-ab72-da8c29144daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcc73ba-9ef5-4ad7-af4a-0fd65b27829c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb24e390-5cbf-4408-8fae-52cf17f07d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d806bced-f9af-4dc2-b399-455a297244c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b7fbe0-8a5f-4762-b58b-b5a98a514d0f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b4cd55-9135-4b09-bb5e-00a4a2bfdd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39af8a8-50af-478e-8933-b1237baba018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20ba579-bdb0-4778-95c0-4b5fd8cbd839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5781fbc1-0cf6-46b7-beac-1839c893c020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c24009-2274-4786-91d7-078ba966425a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa14c0b-2600-4f9d-9d36-5077036af3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941c6076-d2e3-4822-a0c2-71a50e92803a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262bfad1-f400-4aef-874e-46bd7158742e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed102ffa-e668-489f-a51a-9b0650fcd814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f62e5c-3806-4a0a-9f1e-40c9a7874d66",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f27ec8-a965-4126-8e30-1d89a8a3018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ccd8a1-8b2d-4874-8a70-116aa7a16b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a8808-b8ec-4855-bff0-80d84638fe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "63bd9b6d-3133-4b34-8c06-8f5c5f2e4e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cebabe8-7d2c-4fbd-bae1-af9d1e52d4f0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5063f70-7ea2-4ec3-8943-3e7dbf59f0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105abe9f-2427-44a1-b5a3-eb050eace471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db0a7eb-c581-441c-a8fa-bc9dae8cf05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb8a88e-df7e-4540-8e03-9ba86b6fb08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1060d66-713f-400e-8282-6f83793f72b4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b889bc3a-290f-4024-a382-e373e30e8862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb69f349-ed60-4bf9-816d-18bdeb0c530f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afdb1af-ad34-48b5-815e-d59ae5468fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ec4c23-c0b7-4b33-8d87-0848a8af3990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968e7409-22c9-4d73-8dd7-2862c7f10fd7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56efdcbf-aa0a-4571-ac54-33d66d927498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e403e925-296e-4446-b18e-ffc604cfff93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5662b2e-16a7-4739-acf4-ea4c3e8ae1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75334ac6-1a6b-4b48-a815-2de7b62412e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bc2e77-7db2-4989-b2f2-1ec320279afd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cc2328-f715-4c3f-8342-fc9a61ad35d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a82c1f-8d06-431c-bd4f-b987e6358119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e0013a-bbf6-4e86-9dcb-38bb5d974bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d9ef14-d646-4dd3-8b7c-5648cea65df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc66efed-ee58-45c1-8d06-8159e8a97294",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc542f8-ae3d-4270-a165-eb04827152aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9568cb-4db9-44a4-b6c3-87ba6c435426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2128df62-fce1-4e5e-a486-887fe86cdbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c753663-636b-446b-a5e4-0b910748181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fb35f7-557b-4abc-ab60-e033e0446c75",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d143f3-8d71-4325-a823-699b359f79a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edb3bb3-26c7-4e8a-8f7b-ad775655a0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977beced-975f-44ce-9bd6-88bba4560247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a930fb9-0aa2-45e8-bbe1-9db04e53269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c881d5-fa10-4fc3-9234-a42c9009b305",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c93bd6-3310-4e13-a5bf-7cd91092d2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b567c55-9881-4cbf-8f05-dbeb8a815f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bde3bef-b86d-4962-b168-a9149fb41c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd325a44-2b79-4381-91cc-24b6a98c534f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762a5353-79af-475a-ad3e-cc66ccadf01b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0acc261-e52b-4ed1-be03-abc5d7a5aecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3f4027-2208-413c-91f6-b94ed857ba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed01f8c6-f601-4032-9403-497e4c8c95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9764b61-c37e-4f2a-9cd5-7d426862025c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1387f6a-4151-4f4b-b00a-9599d10e7c50",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc41b26-9b17-4256-a486-acafbfdc671e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab0c385-6eac-4852-a4b8-51713a2c324b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf9952-00fb-4bf3-9eec-d4748fb18cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "757b2ab8-1d6a-476e-bc3c-bf8af14a909b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3243ccf5-a504-4e58-ae5e-2c3235237997",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c812d9b-1c12-48e3-b6a5-d3ff17b717a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e47bacf-88c7-4e78-a49a-fc9dc8e48a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246fc0b8-9b46-4faa-ad52-8f1a5e554178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f272b425-6973-4018-8248-aca53b4d7d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374de827-936e-40a4-95b7-8abf05cd9246",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb3c553-8043-44f6-b23e-323b7e1aa5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4e73e2-2e9a-4bee-8555-2aa81370e274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae89eae-6add-4c2d-880c-21a4a76f9414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c896d57f-7953-4868-a254-59ddfe925c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c26c107-0944-4d8b-92fa-b20975b5d621",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372071b6-e8a2-4f54-ab85-17ae7ac94e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf86b14-97dc-4ea7-8758-b340476b40ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92f6dfe-37c5-4f45-b4b1-72675038e8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c710f368-13f3-41d6-a8b8-fc50bd48045b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dedd90-b50c-4ff0-abd7-f67e96f14550",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957b30e2-c0d0-4356-9a38-135f9892c96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f190d30-61b9-4632-afdb-1a9b5080ec31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d63766-fde4-4478-8ba9-e041af6c0ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "196bb97c-d2e6-4bb8-83e9-1d2b9233624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0110b6ff-2f83-4f54-8f86-89cba020f3cc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a829af6-e636-4cf2-adee-49e56635e6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67b1145-dea0-4a09-ad38-cab49f21aad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af58b3eb-cd68-43ef-9aa2-64d20be14923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ddae5029-96c4-4f74-95b8-35ab85dc089c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093b2126-c86d-427c-8809-2f4e6b710901",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b903efb0-0636-45ab-807b-68e8b047688b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daeea0c6-aded-4046-9c09-209030eb1c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b127c801-a35f-4cb3-a07d-e97aa4e8ad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a140a6-3ae2-4b5a-ac3b-90ee91d8dcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205644ee-0652-4192-b967-ffa50c29edff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d3685b-40e3-4a1d-843c-37e9522b8cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3f1c1d-ee6d-4fe5-bd58-2841784baa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fe4149-c747-4120-af1c-44c1a61c0253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a19e51-d653-4aee-9078-391f59c60082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d448de2e-4ab5-4de3-82dd-db63d2c74701",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4571f6d-4f41-4ad1-8755-7c43c7e44323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f015c271-cc2e-4e49-b1f7-d4d8fc3195be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99351573-0102-4864-9d6a-19b0040c775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce730f0e-1c64-4c3d-8a62-28ad1b0af2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a660a7-07e1-4b3d-a01c-cbb068767e83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca04733-05a8-47bd-9fa3-88849e6f391e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d981dd18-068c-427f-903a-8f74b09a71dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df340f90-a62d-4094-9f3f-d556539f1da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f17f99c4-c74a-4088-94a0-5defd144df74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74572782-8ce6-4b2a-bbc1-9bc2a3683f52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2741e6ad-1956-42b2-babc-c225b7e01c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2db7396-f1a2-4a12-98c6-325ab8249ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760e5d5e-5629-4bf8-a4ef-789b517b0dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8514b8fa-1d85-4a70-a53d-1a74bfc090eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1464abe-b13d-49ec-999d-97e327ba9e46",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6130fcc-670d-4b01-b0d1-a473e3783d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36223f75-d16d-4d6b-8e2d-8433f929bd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418b98cd-be6f-488b-bf26-3dd2ddba7985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e4a467-82d0-45ab-acd0-f7240b25463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c11e9-9b70-4894-acad-8f219080f4a6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2994a52b-c941-4de1-b072-c52fe9745df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc4286a-5dc5-4d98-a243-9b927935ed96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ca5500-a4e2-4b63-8f1f-094d1e94de9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb26d4db-efcb-4a8b-8403-7d37c74aa25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b96878-1fec-4913-b30a-d748437cf7a4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7388c4-758e-4f3a-9df9-71e5c5f95052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7012f0-7bfb-4426-b9f3-3ec43df34a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4921d909-8fad-482d-9d47-6d4ba0634628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2b2f6a-0b5f-47db-9fb8-41db85a124c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cca15e-24bf-4c85-809d-580916b31d7c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d02cb-5614-46a7-b12b-cc03ed67d0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be02e29-a5b3-46da-a6f0-5ac7df9f032a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740ee08-15f5-4162-abc3-481131e955fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34734b84-438a-4248-bda1-bf9ba2c13752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e2bf32-080c-44a8-8821-426366a14669",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c603c5f-33a6-4571-bbb9-af3071f0317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689262f4-98a9-4889-a76c-8bb163b6b5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154c5612-69bb-47a2-bac9-75ce04b519c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc98486-a12f-4590-a509-79a983fc7a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7280499b-584e-4417-a181-42c3cf13a0c0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfae0c87-32ac-47f5-b3ac-2759d8fa5666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b1c24d-5742-4af0-83ee-832d876cde84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8642012-0618-40f7-a7ba-be43d4422568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfae159e-da97-4559-9f4c-266dc37369bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578dfc4-c903-4f29-8946-e6de3f3f5371",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dad6d2-a27e-4cba-9d79-ff8d29359897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca70eca8-8783-4828-974d-cddb7ec2302e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eb6c87-35ca-498e-bbfc-65b9a663ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e397a3b-a378-4d92-ae25-41bce2f23a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d67f890-5fb9-4e54-bfd2-94f3b957cf60",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1561f45d-5a6c-4e08-a757-f052e45ce98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6fae5e-73e5-44bf-b4c5-fc617c2a8a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4a1fff-0b19-42a5-b35f-c67dc8cb349a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8670e64b-de2d-4429-a08c-b2f8720ebf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14d7c23-de9c-4936-89c5-9cb4d63a459b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad56f025-a609-411a-b38b-c4f582f6f47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3e7951-c774-4bfa-91b4-2d2087c9ba86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b45443-c747-40a7-b047-bcccb2f8ba8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "042acffa-b62b-4e49-8353-0fa60c27c5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eeabd5-a30d-42bd-9313-b80da4f91de5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af59aa-3afb-4dd2-9413-bf055af39b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf5da6a-c03b-4370-86b2-3f35706ab2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3926fc43-8479-4d95-a4a6-dca6d9688ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c9e04c-9469-4d1e-b9a4-9f7292c667de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8846c5-d972-4ff0-88f1-a153705306b0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfdbc21-ce0b-46a5-aedc-2d17f2a0511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17afc6ca-da9c-48f4-9b7c-f69e94f95f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a8d4d0-3cfc-4079-bfde-0a6fadf58f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "527b35c8-af61-46bd-8de4-92fe9f0963bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40354740-97e9-444a-a664-0280e334bbc8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfb8efe-677b-403a-9acf-7eff302ac198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2f54bf-f1b1-4815-9e37-66ec223ac9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fbb5b6-8d97-435f-92e4-d36dbf49b85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d2875b-09f2-46f8-a2bb-87ff8d99dd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783328e1-de51-403b-b903-8a2d93e49e57",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4feb63c-ff27-4a1a-a3e0-24ab18e8a85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b1cfdc-a792-4578-9f4d-4eab939e6847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad6dc18-684f-4bc1-8ffc-07a51989e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f45a4a0-8880-4b61-b631-22949e5122ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151b537b-f86e-4a29-bc2c-b892156c64f6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa7306b-dd8a-4446-b5b5-ce1f2182d120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973fa33b-248e-4a63-9806-4649fddb7f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf1d33-b092-4e0b-9e0a-6e2f67570d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64955d1-65c4-4d1d-bfaf-99eeed201faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cff0ca-3f7d-4ac9-a4e3-c8c9b9e06bdb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efede23b-5158-4d9f-b5a1-7bd6abe0c6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b6ead9-5150-4871-af90-6f714d829c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a71d1b-e0b9-4450-bb60-b0d145d4a977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64dae0be-2e7d-4df9-b143-c3a361f634a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a630081a-2a42-473b-99b4-51342a788109",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9519392d-7a09-4eac-9ce6-38aae1baa52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b51e94c-171d-4106-a59d-1623b53f1b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53983a4f-55a7-4980-a13f-88dd7cbe2d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0804dc0-1d7e-4cd5-ab3d-9a963b5c2a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24cca2c-3182-4d82-a7f5-96851dc2263e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b86c8f0-dfa9-418a-8f3f-3fd7249b0730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3f039e-3695-4ec2-8c07-0b09db17961f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cc5719-559f-4063-9148-e96e0296b38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4052c62f-524e-40f5-b3c8-1b1b414ab4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14bad3-cc2d-444a-8c9c-38aa87e38df1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddcbdd5-481c-4db9-8dc7-09604041a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ad1c51-f677-4443-9536-c322e787b059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ab6ad8-565c-49ec-80c8-3783fba67ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e329d34-2c21-4ce0-a71a-afa02ea1afec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b546ad48-69d9-4beb-bf93-409b16724e7a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cd3d28-d319-4d8e-b7bc-ca1c9873e1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73136d9-fff9-4664-b583-de661203e95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e386e50c-f379-4df5-9d8d-1cd48acd216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d29ccfa4-560d-410b-bf28-69555d108996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28795ba3-42a7-4589-8223-070e174cb97c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a967f38-32a4-4a76-be32-23667bbd58ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a23d80-b898-4154-8997-dd3c104f3cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023cf2c5-6521-4b16-a6d6-e88084969389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02285f7-2b90-4830-a11c-237d6afec12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05268a23-ef8c-45fd-b43b-1a26450b5b8e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9725c4-3896-4dda-a3fd-a5f988974d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cde88b-2b80-4859-8fbc-7334fe4ebfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cc436d-e504-4cec-bc50-bc1aaec14436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d59fe4d-0324-4acb-a616-b959f753c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a914b6-ccdd-48e2-bc18-9970a7fb044b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dd8a66-c0ca-4b0b-a2b6-c7e3e2e7f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd6ce41-6e4a-4c64-803b-a343350e72d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3956e3-3582-4541-a2b7-79d21bed8f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be58d8f-d84a-4774-8b14-c1243022e44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02af4971-31a5-4f9e-97cc-027203c5cd4d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47047798-f77f-4229-8868-07e2ed75beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7d0c2b-2753-4975-9558-524112620069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bd2da4-c59c-4dd8-ab65-49552d05b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21baa947-7fc9-41ec-84d9-6d778c71d87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30603aec-e7a7-401c-b905-9f89aa6c8039",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33caeef-4382-4376-b93c-4e0e21de4193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec7872f-4add-4526-a280-94e7f7637bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2204af-5f79-4a87-9aba-f5fbf879795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f526ff99-d4ab-42df-b30d-7265d923248d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba2c4b3-51c2-48b6-badd-20c852eccda7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0615230c-9f88-4b6d-bc17-34f2b45da6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa97d614-0f42-4e5d-8b8c-003817445db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dfec8a-fb73-4ea4-8adf-8b532aa41c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94e2c1ac-0a1f-4e83-aa70-8b3942e1bc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2d4ee0-16a8-4758-974d-9e278bd46fc5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03ebd1-0c68-42e0-9382-1ba5c43a0cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ca1bae-83a0-4a70-b999-1dd9455396d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0f8245-8f97-4343-8e3b-dbf9b3381619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c7d6ae-3a78-4773-aeb5-85625d983ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778c1376-f096-4de1-be05-79d71c9b3334",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bf2394-ab61-425d-a4d8-cc2455c8ed3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb3d573-a811-47ed-89e5-91f75f49b2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a3c23e-4ef3-4adb-963f-829f7867cb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8345f599-ccee-4967-8d48-b8187a4006a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a3db70-2931-4923-994e-dc7ad9d5f21c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712aa9fe-01d3-4397-9bf5-cc6083fd3864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87127c30-b158-46e7-b326-fadaf606100a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ad9b57-4fc5-4d16-955c-6f996c5ce085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19574933-6a41-4d92-908c-b656c5a0aa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2701772-f106-46b2-8f15-510b0d88295e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619efb0e-671f-4157-af4d-3a1d830dd191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46589611-5954-48e8-bfa3-eaab85061692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307fccba-de9e-45b5-a2e2-c0c2ecfebe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fef1346f-ddf3-43e2-8505-cd00a5bc63cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c86b035-56d5-4c02-8106-e046d53cc27b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055eb98e-dcb5-461a-b44f-d4160f807e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82056f48-d876-447e-89b2-12e9a7003290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634df6b1-a7af-4436-bbcc-607a4b10df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a597035a-5e9c-4012-9d14-2deaf652e519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a631c91b-81a2-4972-99e6-2bcd01189d8e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606facf8-9c8b-4416-976c-05d6ff59a28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b038726-9e57-4d6f-aa46-0d599f9a95ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327c3dde-6eca-4c8a-bc6e-cb527bd8d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c15baf5-4cc3-4462-993a-528c5c4d9e5d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "282f01b1-8bd1-422d-8527-e4d814f168c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6f59a48-77f8-4358-8beb-37c1bc4ba711",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9da6fd-1236-4f5d-a7e7-0aa41626b207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99851818-b77e-4141-a803-f0d01df29579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72e18cd-0a72-42de-abe2-2481f231491a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e035f768-f300-4fbd-a74c-12c35e4fb0fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68bfa738-8ad0-4c12-a746-146fd9645215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd49712e-a958-43b3-910a-9e954db92590"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbc55454-bb0e-4e57-8a9b-612f60bf21d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09ccfb27-743b-4155-a92e-869ee62fd20c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba4b2d00-0433-4dab-8359-cdb6c434e228",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14b53cd6-9ba5-49f6-8d41-d173f4eee6cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "549e8aeb-ca70-423b-b1f1-4dc26ff38b48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aad84984-293b-47d1-a64a-de98bbe9e6b4"
                }
              }
            ]
          },
          {
            "id": "8fb76953-a8a8-45a4-8b23-9665be286313",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5e11083-8de7-4c54-8f08-d34168d9eb69",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0b9de99b-64cb-4499-8563-8a6aca4f7094",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6068195d-8769-4d2d-86d4-39c34809c588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3cf1e1da-e9ec-4f6e-af6f-56a8b74e0dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05622176-14b3-4818-9734-b3ba6e8d5ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2446ba9-bf80-4136-8516-7c9ea7500aab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e52622d-9c6c-4748-ba8b-52fe531d02c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59ddb25e-a6cc-46b2-ab5b-851562e7ac77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0f0dc0c-d156-4353-849e-f21181b0544e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ae5162f-f791-4bdd-88f1-183c094fd234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f004d196-87ae-4035-919f-62333507f768"
                    }
                  }
                ]
              },
              {
                "id": "3377ef99-a81f-4299-9ea8-ee2f1cd39715",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90c9c007-4f5b-4a87-bf4a-b86170b41b8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cfffe9d-f1ed-46bb-af5d-05ddbbef69f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7075efe4-fd6a-4bcb-9e17-70b06355915b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "216f7939-beae-458c-9b40-8eb418dc1b7c"
                    }
                  }
                ]
              },
              {
                "id": "56946a7c-99a5-4666-897a-b85c443d1e27",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d715b6e-7388-41bd-85e2-00344c9558ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04c816db-80e3-4481-99df-2df3afc96447"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5c888c1-46c1-469f-85bc-b5554d7d07af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "774f1fb1-c168-44a3-be9b-b8b7303b10fd"
                    }
                  }
                ]
              },
              {
                "id": "10c9de9e-35f7-4166-ac81-7f73b52f1441",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e75a241f-2f1e-4fec-a005-9f8246685be2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84338730-044d-4d66-93f1-6d3f0b5920e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0013664b-b4dd-478e-9246-7aba5a5dba83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "462f3a0e-cb07-4294-87cc-f05649b6bc83"
                    }
                  }
                ]
              },
              {
                "id": "9349c030-8b80-4808-acf6-23dfd3e11a44",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dc35038-40ad-42cc-b77e-411fcc2aa335",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "668f85a6-7d06-45e0-a319-663544a31167"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c45b07b4-77c0-4fbf-b17c-b70a11d90d01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6be4baeb-505e-4af6-af36-97dc6c994f9a"
                    }
                  }
                ]
              },
              {
                "id": "d26d9c57-dfef-400e-98d8-1a611bb397b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "792e6c1c-cffb-4c20-a120-8a196e45ab5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd9752b9-0d5c-466a-b130-98a7ae508561"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f48838-1c76-4f52-985d-605dc5541d90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "748318b3-eb8c-4519-af73-4072bf7b5247"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb837064-f1a0-4f6c-8b49-46cc92932166",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e5ac87b-eaae-49da-8acd-ae24628c0f6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35a0925f-002f-489b-9128-64339bce5598",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0587bdb-8f9a-45b0-ba38-8420060093b6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e833da93-157d-4cbc-9ea8-9d7c5ab72249",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aee21328-8dcf-4a35-8927-c4b16930d635"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c7b7cbf-8e08-4752-8039-330cea05b677",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "065c00c2-1864-4a0f-8eb4-9107d0cf1244"
            }
          }
        ]
      },
      {
        "id": "632d1315-f6ed-42df-858a-8df6caeebf37",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1efd36f7-3e1e-4dd3-a5ed-065bd6dfb563",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7f69d44-dc97-48df-b54f-4483049a73c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8bb3f5eb-5d26-4891-8c18-4bb5671f1ace",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eb7026-90e1-4766-b976-bae5cb51b405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f89e6d3-f7f6-4ef0-a5f5-525bb43c9b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61dac79-4293-4701-8bd5-a2f357156059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7df122-3e36-4b41-8d8d-2324721414ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebd6f7b-db14-4603-902b-bd21373fbcf8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f339fc45-2644-4b43-9791-5bf85eee1b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8954cd5-0b98-42bc-bccb-a1125245fddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96449f0e-5e24-4a34-86c6-26e461f67f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16bcbad-73fc-4762-919f-44b99b8c5833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f53fa55-cdd5-4c74-9ab7-5150edda6c88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb2bdf-03f8-44b2-8df6-81b93ce8fbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b50c96-fba0-452e-9d75-ea04782d0158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af77714-f5c7-4459-92ac-796f3142eac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "333ddf5e-267c-40d3-a70e-d105b1bda078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c67cf-b532-4b1f-8a55-2474d9f5d170",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4d2ff7-4c8c-48b2-91a4-a8f320b0e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13050493-41b7-4fcd-82dc-ee2d02720819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d95423-496e-48b6-82bd-324df89ba2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe41c1dc-59c5-4200-9360-7ec62fbe862b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46140d91-f60d-4477-b7b7-43a6f33228df",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4117aff0-dfb9-4244-9936-03f3ef87f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4c39fc-2a67-44b7-a72e-23928aeac930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc372b72-0ba0-4a50-b159-c274f4091123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2aad9f-1ece-40f6-b820-13f079c5fa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4d3395-ad75-4884-a728-53ff8dac150f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ea3921-a64b-4ef3-8cb4-e8707e61873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21fdb2c-97d0-4452-a5b3-bb2175835dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea67082-0aa5-4080-8dbc-3a86cd3c17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5aef444-dde0-446a-a6cb-0981e58f179e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33a90f-eda4-451c-81aa-2e8f581eb12f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffe7d16-81ee-4e52-96e5-d9cf99a44659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0d2013-baa5-464b-997e-3d98b62e5534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c366e70-d365-4c75-bfbd-99bc141611e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfa03cf-5c6f-4919-9f96-d917fa175bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc9895-a376-4c1f-8bb7-01e4ed5547e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15066c68-3291-4886-a9f2-f24a72d7b2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9a3c94-1736-45ab-90fa-965ba060febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f32cf5-1b23-491c-85ef-11c210b06906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdce5bd-ab4e-4d46-96ce-2f8944db3e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab2a9bb-760c-46f5-bb7f-6308e3ba0605",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee48743-94cd-40ac-a939-128eb0feb193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8c3e34-e466-40ae-a4d4-707acee8c5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b79130c-ddf7-4b09-9bad-69648487df69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97123f32-1067-4c12-bd81-a49d70ba73da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cab79a-4249-425b-b8d9-62ef94d9e630",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a02f45-5bd0-4fb3-ac37-a6c1b0f7f9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0c771e-1f1d-4f5b-811e-68457192a694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca88556a-55c5-4883-920d-1ae03fc931c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "496f7bb6-d2fa-488e-a754-f99755b28f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e0dd0-9c13-4eae-b779-ef1b61689194",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d999e5-d39f-4976-9313-5e80f4da6a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91c2cb3-bc92-4b9a-824f-cb1e7dd17352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694beaed-69e2-46b8-ab94-7fa27c0b70ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6eac7d-b412-4706-adab-7d4796bbe562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb722fa0-d1b0-4062-b5b8-7c65af9a4d84",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cc1c8b-02e5-46b7-8801-4a4118e2ca9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea59c19e-b39e-4704-a5e2-26e4cf165139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746c455-0c2d-4a14-80f1-3bbb4307f46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c80d4e6-f5aa-4a84-93a7-996a9a55729c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572d6628-1927-4b65-958b-139c373b5fd2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f9e474-a872-4b2a-ac95-d66ae1e18b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2f1eee-b1af-4734-bf4f-8dcd4ffc6a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0315ec-839e-4329-8036-85e756f4b731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcd87dd-189b-44b0-b4c0-2b0d24667791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a87b11-72aa-481f-9c0c-aa5c55aa14ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea10dd04-3b34-4e28-a283-b21966e22a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a24f58-1c39-46ce-b70a-8e67fd4e6b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037bdcfe-faa2-43eb-872d-ddb97d9012bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22556590-fcbf-4f08-a7e8-a5c03cd2f557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f95f5f-c913-412a-a69c-6d3f5caaaac1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5017af22-5b3b-4f63-85cc-2d517d8df29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde24630-30a0-4b23-9dae-f1b5fddd7467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7997e7-f387-412c-927d-4f9bcb943b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e92d53d-7cbf-4cc6-bc3c-ff6d75ac3e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c970a1-46c4-476f-b999-22c3c98d0c74",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ecab3d-9fba-4edd-a47b-d25cc467f8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a09ce8-6129-475f-b082-a3e6bbe3828e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31b8678-f7aa-4bcb-8838-6acc1f77df5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "302b3536-d354-42dd-b4cf-bd2afe78168a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c99f93-743c-433b-b74a-25373d59054a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae4a46a-4166-40e8-82c7-63bbe734e6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edee7ad6-b709-42f6-90a1-117aa00ecffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958c319a-e880-4753-a4b7-6c73874c4af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b094d73f-af17-4a5e-b004-96b923ed2c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4222eab6-cea8-4bbb-a4da-aac6bf88b436",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069f189b-6de5-401b-baea-a31ad8c479f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adba5f4-8df8-4f1a-b1b6-effb3459fa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b6fc2a-607c-452c-8b30-09569ffd61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b83189-d385-4953-973d-551d9a200938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a3bd0e-b09a-4649-a912-9e7ac157776b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23385455-d876-40b3-a994-9fd556796c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbee85f-b34d-453d-9309-2e0cc25429c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2db146-4660-42c5-b68a-25d075d6078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "661d85de-efae-45ee-b27f-ff1932db8de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0764f8-a557-41c8-b947-e806d7dffc23",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9962e62a-9b3b-4001-98b8-95a23ae0374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d521f470-bf93-40f7-9f90-92185dbaaf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e87e5-3c4b-40d0-9b6d-97dbd5163748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a24141aa-437d-457f-b0f9-bacee11adccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8248f49-019f-4328-8c32-2912b7830ca9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74824534-c050-49fa-a86e-7fde7a227926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d6a941-6d34-4763-ac8d-bc101166a2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b7b7b2-01c1-4daf-a13a-7dfe656c0cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4e0100-6f5b-4f66-94f5-a00cd06654c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddd8c3d-af2e-402d-abd2-b4996bebcd97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65544420-2e6c-4870-9248-1a7185aff525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58003e9-1346-43d0-9141-96318c499a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c697275b-afa7-4001-982c-3d7f70fe26cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ba5d82-6c8a-4398-abd1-6d2c5c17876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a023e808-bb7f-437e-b071-dc934d4f30c9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb874c0c-8974-499f-a31a-9ea838756628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a06e7e-57a6-4a9c-8a42-227291f90588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814c87c1-c375-4125-969a-22d1234b5c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a3e99f-0eff-4e71-8980-16ad3b87454b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6fab4b-1300-4789-9b0d-11161dc8693d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72203e0a-119f-4042-8723-376bd72bf595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef043af-d4f1-4192-a823-02e12646981d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9464fcf8-1319-4632-a9fd-93285363f897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9c3783-4fb8-4663-a652-a9ab09ef79a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61df323-ad74-4211-8ace-1a99ce5bd741",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05c072d-c3ba-42d2-a1c2-bb1e9ebae74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d71475-a1a4-400b-a5e4-3974d92fba2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba5216-b0d1-43a4-85f5-37727f8e7488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f577020-5f4a-4107-af4d-1097f3dbc08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a629508-9a98-4f91-935d-0f8e1794b5f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97470f86-46e1-465e-9402-032747d4cc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81868756-60a6-41b9-8919-bb33c85a592a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bcac50-75f9-43fd-9672-a3b354f32ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a6997a-36d1-4eec-9573-3b8bb5e95d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4913da2-054c-4d3d-8a80-a4c442194515",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32313e6-2c0b-44fe-91b7-c590e07e3581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9e425f-72a1-446b-8dc7-2ef25577f9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e704221-69de-46a3-befb-aa1213480d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce1ddd3-f7b3-48e4-aa7e-8695cf4151b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad03258-6b14-495f-b831-880dba474fff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6a35eb-018a-4ca7-b31f-a35b1c686561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fac226f-4117-4319-b7dc-cd22548537ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a523fcbd-c304-4292-b79d-cc07a6c3a4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6974c5d1-48af-4b23-a810-8a810e399d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7761c38-649d-4007-89a1-733f1c080fff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912ecb31-494e-4ffe-afa2-f02ee8e8f5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2caf511d-5aa8-4c54-8b72-62e4a1adacbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c3ae9b-6ea1-4b10-bbb2-dd48751528bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22838ff4-1ad4-4ac3-9be6-c96dc0ecccc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1d3bac-8f37-4723-adaa-a05da8d28a1c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66a725a-8c27-4a48-b1a8-1c2eaf122556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebb1a9f-944e-41d2-aa4b-dddfa8cc3953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a940497d-9c3d-4d28-8a1c-2ed8495808f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7ef8a0-1187-4709-aabb-625a3ae15c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4953cc4-231b-4efb-ace9-14d0165c18fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c28f53-9fe8-4c8e-bcdf-860bb59d20c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e86cc6c-e5c0-4d2e-918b-fedb91aeca09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68282802-3bb0-43ae-bb6f-cc871019428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ebb2fd-78dd-4896-9b57-18ad90d6415f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c69713-8f4e-4326-8120-bdbdebf1475d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bede96-7146-4723-ab37-80ee8e54aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7451ffe6-b9b2-44e1-af16-42a35457aadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893c338e-8d7b-4db8-b3f5-000dabf97b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "195fe685-6be4-4490-bd6f-b1e1aa999397"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b776a284-c5fa-4db7-ab65-9213a3e23aeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf08c679-1555-4b15-bef8-f05fc93edba1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03171da6-c3bf-4fab-b2cd-976bcbea64fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a94097ed-92bb-473c-bd08-665b7210afce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15687d9f-0c08-439d-b828-8fa7c31b07da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3131dd0b-1b77-4c5c-8cfa-7c55a7eb05d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94dd873b-78e1-496f-9eb3-014885a3e769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcd6ce00-5843-4f1f-9bc8-04edb27ab1f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "155c93b9-f04a-4a18-85fa-29a4779f539e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca603a91-56e1-4ba6-97fd-9e761429d3d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db0dcb63-07f7-4926-ae26-605a7cfdcad9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfc9ec40-18da-4766-be2b-5ee83a0c0ba7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66742eed-cd56-4371-bb39-2adfd666efb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05cc5d52-a696-4245-97cb-15a07c7de7ff"
            }
          }
        ]
      },
      {
        "id": "d8aedf0d-d779-47ba-b819-85962d5b329d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5bf5ad41-dd3c-48c0-ac9a-35f95251b8ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4eae2aef-e47f-4de5-b0a8-070304925d9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfab7763-f5b1-4686-a7c2-1a5500da10fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782db91b-f4f9-45fd-aa05-45802ed142d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4958d43-fcfe-424a-8df8-6967ebbc972d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9a97e0-c15e-4bdf-845b-612dccdd0623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9366a86d-2b08-4a01-96bd-fc4b07f6f661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6c42da-3331-4ba9-a962-88370ecb8a4f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d813fe55-d9c2-4401-84e8-c5ccaaa2c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e24d00-a4c4-48db-ada7-09bf53dd4cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e21795d-b735-4422-8e14-7378b5fc637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "711bd39c-ff61-4835-91f2-02f1bb6092ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9915fc3-3029-44f1-af63-e60e6bb4d52b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3605261f-6f64-4310-bfcf-74c83087ed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6ac65f-2a4f-47dd-af50-6cedff666048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab4f68-260d-4719-8026-95ce9cf449ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc94a182-79d4-45a1-9299-a3209955a015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e959fe3a-210a-454b-8fe7-1e4f068ef9f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aae029-37a5-4c4c-9028-f1405356546d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3068e80-2e0a-4e7d-ad3b-e01d350bfaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663221dd-5af7-41ff-970f-fb11241b2d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80de7870-2468-4f51-b22b-10d205929f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8238a84-f580-44f0-8432-a8371a1d9d18",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715f38ce-8a5b-4a4e-9fc2-cfda59960f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cedeed-13c4-4df6-bc67-a326b6e3e9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac89641f-99b9-4245-afb0-1d686d31b6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b8ddcc-425c-4ab4-ba79-1480bee3193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9804da6a-7896-4c94-87fd-7d862faa63bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddc19ed-cc1d-411e-bf29-679d70e039c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23046ab6-6875-478d-a1db-dabf118ce958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab99bde-2c5e-4f69-a498-bf897f89fd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f67eb942-f2cb-4652-bf48-e237329a2b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee02116c-39d6-4de2-bf69-c1781865dad5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0859cb-0510-47ed-8782-f94d4c7ce825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe648f0-130c-4d4d-a881-44664ac25ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c518482-bfae-4a8e-ad3c-9b0213082e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1579ca54-585d-4f0b-99b8-0b3238639936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fa2a3c-05f2-4fbe-bdb3-ba87d06adf88",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6b5219-7ef3-4d47-818d-fae26b61b7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5f4c83-b7f2-4bb8-a1b1-e7a0262c1b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b474477b-d8cb-4bc4-90a3-fcfa2d94b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0350d2e-b1aa-47d4-b02b-2104d028908b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d8f618-6dfb-456a-8a34-ff4c91dfae33",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fa555d-ee69-4193-9563-3a6362592e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e03041-9951-4e4a-94c0-600b9d51a1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9cf884-9fac-44a9-a2ec-ed5382e90c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62f2686b-114b-49d8-a248-cdd0162e690b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f420c-eb98-4644-9c6f-7a01ec4cf141",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a004ebaf-940c-410c-a25b-51113c375d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eef325-e42b-44e0-922a-9c8445662c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f824676f-0c89-44a4-ac4e-060e33936c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd8d9b1-f3df-4ea8-b78f-a2e15bf20d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00777073-02c0-4127-9aff-5240a5789982",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013fdc8-71a5-4cb9-a125-0913ae0fb8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7eda0d4-7d8b-4331-83e6-c47f2c613709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d30774-7fb8-4950-8281-00a1a8c35e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2737c04-651b-42be-be20-6d087df0e162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473afd2a-150b-45a6-ba94-bd2a262df3f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d159e104-1a08-4594-92f0-1317a1aef482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a07a298-dd38-410c-9aa6-a9ed6bea11d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f73ad3-bc43-4b43-bb49-238e34a80b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a751ae3d-ccc3-4e8b-836c-c730bbb6e955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169bb009-4eba-4721-a2cd-77c8b4806db1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5ea797-47d3-4386-b0bd-fd4cf4df3ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb9c9c1-096d-4c7e-aba8-cb325cb0d555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bceca82c-0c29-4b48-9e7c-b75cfd8495b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c312dd3-a32f-4e3d-8caf-9152c0e65c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a0e9a-444d-442a-99ed-59301c77f5de",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906b0471-c52c-477e-a240-07a61e39e309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe6ef53-44e0-4438-9327-6fdbdc9af120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6fe392-4f28-4c76-a3f7-d869c2dc2b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b415d5-45d6-4903-ac7e-5b649290e0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ab08d1-fb0d-4e45-8535-b5e4045254eb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c05841-6f17-43f9-90ad-276803242c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d071eb-213d-4722-b991-e5bff2aec224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987bc19e-adef-4301-b1ea-c50eaaeb12f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc932b3d-0243-4963-b40a-71e3237b54a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a96ae78-54e4-453b-9d07-e6dd3dc219fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94c7de-f86c-490b-9e2f-d5179897aaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddb2f3a-ebc9-43aa-9090-856528f67a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30473da-794a-4328-b964-26d8d02ffb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7db44bd-a3bb-425c-97d0-8cc4911c87b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cf4197-41cf-4de7-8a5e-194d3c50f3ef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbaa1bd-1fe2-4f6a-9ef2-605b1b251ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8219ffc7-6deb-4915-a836-b982a54106c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b562a95d-9ecb-4ff0-bb18-c9f4dbaac920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "94562bd9-4c62-4013-844b-cd99cecde5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4f824c-e2a6-4024-9b04-b6797f71c721",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c7e6d7-2ab9-475b-966c-2aceb28c88bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d17bc42-07f4-4050-930c-2f7ad3bf286e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de1c47d-99a5-442c-942e-d77b21d590c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "169bdc74-95c0-4840-8a7c-d10ad4329130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae904b0b-333b-43e7-bf71-2b394172001f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68285b9-6bc5-4bbc-946d-7bb0b9269a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b994cb-64ae-4d0e-9027-5c2a13ae8a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653a40b2-e3eb-41d7-9ebc-7145a6713226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c1139d-dd50-4649-8e85-4b95108dfd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dc136f-c165-4ef0-b8a2-78a126a3c9b6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b418a-8602-4505-8049-a8c4c0c2f601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8c5c26-1aa5-4e4a-a26d-1d2808672ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a946b-d2ad-4fbd-b457-155754404af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9db57de-1fd6-4edd-8a9b-2df8ba08290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81be999-c629-4115-8ea9-f2bcfb3a7694",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afe90b5-8637-4269-889f-019ac6bdde5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647aad14-62f1-421b-be1f-f57683972f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a536730-92dc-4bcd-8712-b4d3503753ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3aaeff-0831-4850-b32c-484464f55237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2755094-b276-4164-973f-ec580925b2ea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d24caf-1bb7-49b7-bf2b-1d6e04d5674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134afa11-f198-496e-8d12-b25587666ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aea959-942b-49b8-9bce-51f88c5a3f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01547662-b5da-461c-aaad-19252b4d1f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e203b5-c860-492d-a360-4ad1dcab1c1a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fab928-3ea8-4421-a4eb-912f60c56576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef9c26f-6083-4bd0-8a6d-3cc3bbd1d06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fc1aa5-3d5d-4562-8ae7-4006d323a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "520136fc-3f5f-4dba-9bb6-8902fd494963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ae6ac3-f7e5-4f6c-be71-6c9a79f3e115",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924868dc-ecc4-4819-90ed-307d304edc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbea61c9-56ca-4866-920e-027bd5255903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342006b8-ca83-4a42-966a-88e41bf89717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2074b989-7142-44e8-9bec-bc9fa1a181ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e3b47-d6d6-4f0c-9d84-f2b0569f68b0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08660d7-538b-4c10-a13e-452c55e192b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6140a2e-8306-40c8-a3d3-50e15638023a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac0df51-101a-4aa6-a5d5-12e75b090d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "830980f8-6847-43b6-a58c-bfd2fa291092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26ea995-fd92-4c10-9790-a9f777159ac8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d76ab9-7710-432e-8701-edad80f78475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2bb7f8-5a84-4769-ab47-1b10509f09a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2045d4c8-1b83-43fd-8b6f-113844564c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694731c0-f202-4688-b7e9-f00228f020e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020cf4f3-152c-4f31-8c93-488f3219ea4e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72519d80-0a34-47c9-a180-97ecb4dbf0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21daeaa7-d678-4ca6-a901-eb8a0b54fb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d99ed83-6bcc-4afa-a35c-d223e7702665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf2f010-f0c4-49b6-923a-d6f36ca88606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be779fc4-6aed-44f0-9a72-8a8bf3d71de2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df086119-bd36-4002-b575-e34a8f6ff46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb06760f-9e12-4812-8712-bab7d8062472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8249fc7d-c92d-4153-a6c2-57691298b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a62104-baa7-4ea9-b9b0-c15c8a5e7678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5660456c-ffcd-48d5-ba41-49583ba886f8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6ed324-c6ee-4a8a-8ba9-5a0c57dc2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3c0c00-7039-40e3-92e1-21823eae99c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0872cb2a-d9e6-4479-9ed6-3e5b2dcaec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da965a5-fa58-49fa-b080-fe41a447cd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f6676b-d9b2-4777-a6ec-35c2da9eba2a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3764987d-1dcb-4115-a8a3-6b871942281a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30ac805-0bfd-43b1-8e9c-746554c145b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d594b5-4fc2-49da-aa92-079d2ecb2d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1a48de-96f1-4c4f-94ee-4eee1d222d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291f7369-15b1-4a73-b921-680a3c9e16e2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9595e930-178e-40a3-80c7-bc1a08e13609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc0b685-46f9-4323-a5d4-727b421699d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec787fe1-e60b-4946-bcac-1e9fd296af55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c015f6b-ae16-458d-84ab-59b79cc99bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ff88d2-4bc6-4388-9e63-a98c98010589",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1337007e-7ccb-4a3c-9b72-21587c8a4b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24f90f9-c7ef-4ff5-b311-98af2f1b0673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fe95f1-0764-4584-aac5-8caf6dba8555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a996e37-4b14-4c37-beff-c2b4431821ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ffac82-d3d1-4d61-93cf-438657acff1a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d5313-8668-4cf8-a4b0-90665f60a4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926d4d2c-d07d-4601-9a59-2b7fb26f7bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cd1601-17ce-4201-b4af-44abd793e07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ffbeb2-07d3-4738-99eb-2656ff172c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cf5ebd-4975-42c1-af3a-a843d956c7e3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0af25-f310-4be3-b83b-b2af8b5a564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659a7ede-e425-410f-8731-c179e47ddb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610ed42c-74e2-4ebd-899f-3742dd4091b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69c82298-0250-4ae8-95c7-a9b69e8367b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c5ff5-edb5-4428-9a73-bf3f4b86af78",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f908eb-abdb-418d-a40a-c7ddfbb42519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00c0c66-4cf4-4ad9-8dc0-adde5f7859b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4ea07e-125b-4eac-b92f-7dab40829ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70450f2-29c8-4e27-9939-39e781043e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb03820-6e55-4d7f-ac54-1c7607b23161",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bb7e0e-45be-4dda-a938-4321caf10a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb96514-51e4-4090-957b-373da1b14374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28677d6-77ac-4615-a4e6-e82b00f615a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b16e4d7-cc16-4e16-a276-0101fa9f4976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897aba7-d1a7-4806-ac1a-2eaf1a1d5949",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6d42a8-a536-4fe9-8276-ea6b5af63ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bba8af-81e3-429e-ae07-b0fd4e28621b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0f3263-e39d-4c05-8ab6-a90545277f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3210ff6c-3580-48a5-b87f-f6d900c16535"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fe0050b-b4f7-4da8-88e1-5feb2ad85ea7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3c876d9-c03f-414f-8726-58f55222838e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef95a2fe-ce62-45c0-9664-cd62e0d4e714",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ef1301-b5bc-4c56-bc0d-5ae7b5d23348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21f6092-7e0c-42d1-b5e0-00f2b5a7e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44955804-9c67-4c69-bb8f-f03d30e6f8ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae5f2d4f-23df-4f90-b1b4-6adf5e9455ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f1d39d0-b91f-44df-89dd-fa694d600e55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bd445bb-010c-4e7d-bea9-35417149590a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98e5895c-faff-46ed-9718-7480479b5a61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6f61c79-17d0-4830-84a7-59ff95e47e1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "792f822c-5a30-4e8d-b5ce-8bf277444fd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7faa0828-61dc-431d-8b15-81e1ac7c5861",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7824d83d-85f2-47e6-91e4-e946156a25ae"
            }
          }
        ]
      },
      {
        "id": "dbb9a0d6-feef-4c54-97cf-9c59c5433349",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "523b3663-a9e2-4bf9-a381-6c3c02f7c48c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c3f7c76-f363-4f10-a1b2-16843037f2eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a911fef6-a7e7-450f-9cfa-bf53cb78d3f1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d1145d-6a89-4e00-a5ad-90d1d5fe87c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603d69af-cf76-47b2-aad1-480ae982679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cb1ece-0481-4887-9032-cf546e414097",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25fed49-c116-496a-ab7f-4f4a169ef9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81170edd-3ebb-4415-9377-73beb073e8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baee7a64-735e-4141-9470-82b257f001a2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a93045d-1000-4cf5-8a3e-280dc3ae49d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb418e12-eb21-41f0-95ad-06811646180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfbc882-3185-46d3-b016-6718162f8d08",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe5eca8-ad0e-40e3-ad7d-51ac1b506540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4cf716-915f-47d9-9423-ced140f8f396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927923b6-0673-42b8-9b82-83a97ab815c4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b243e4ba-7f6b-46f5-adc3-2d118757d4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba78bbc-0e85-427b-9c74-0dd318b72269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1f3f12-ee5b-45ac-b33e-855a56169307",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2802582-c5f9-416e-b233-f81d1579bdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd673388-cd4e-4d31-a18f-bbc00d9dc750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd102910-7f24-4f39-b77f-67acbb30ec06",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b716b9c-672b-4495-8134-ee58c66178fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffec65e-9e05-4b02-be12-18c1003ad013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f172d9-f2ea-4daa-92cb-c9b6e791d970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cd112f-17c5-4fc1-9b43-6fe37c8bedff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc72b409-80e2-41f9-8f62-2e2ba68c7999",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d06949-5ae3-4e08-81c6-3d8d4f920ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d85cd9a-cf4f-4dea-98b7-3a34d0308538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cc6234-5f3b-4fe3-ab75-d76f267a49fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650a01bd-5f58-472d-95e2-6383920b4aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ae851f-154c-4883-b9c5-8a97516a17b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf1ce06-7589-4b43-be14-714ae524465f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f3acb5-3fe1-46f0-ab60-adce5a0d2e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f28f6c-563d-4195-b8ca-7493de4a3f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0a97b9-38db-4ed3-8831-dad26c57e33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21089e0c-2241-44e1-bcba-c8c0e9dbacb0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08c4d2b-5850-4733-984e-1c69b61ddb1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aff52fc-bbbc-4a7a-8f75-41db56ce60a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acde188e-6a56-48ee-8025-59fbcb53acc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e45b42-fb26-4697-ad46-281e9f198962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c0d23c-cc1a-4e4e-b35c-90b40f27a0ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad21aa87-40e6-4ec7-9450-ef4deac5f6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5e0c63-91cb-4a6c-9feb-eb2d1a3ed737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a55073-4678-46d8-8ab2-ecb3172bfaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5ffb4-6126-43a0-83c3-234761b26fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2475992d-e3c5-42a8-82c6-aa39f8c50697",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d3601-54b3-4950-8f9d-c1156700562a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d115a31c-c7a3-4fbb-93f9-ef911c37ac9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7dca00-7d25-4498-9dac-2edf9398472c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2af21d-ee3f-4453-b90b-7113a2ecd0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52daffac-ef45-46a9-b8f2-1cad354c165b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d645c501-a994-4264-95ca-e692f0546d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91333ff-5f67-4070-b4b0-3547cb646dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f05b578-42f6-4b95-815e-0dae7a3876c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7148d4b6-fd0d-40ff-8caf-412cfd7915be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccd3bd6-aee7-49e5-b08b-72562b77b10d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8ed119-d9ff-4787-92d6-96b3e58820bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3229af77-437a-4b7c-8838-4d515cfe4061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001c592f-e96d-4d0e-ae1d-b7f0cc935c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ca9ba6-2f7e-4d8a-9a3d-6e5f8f4bb9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac8cee-4826-44c9-b946-e53387806e8e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017278ae-3dec-4125-bb98-944e56b2e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea3cc29b-2808-4c44-81ff-b70cfeea57f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3677b5c0-e391-4421-94d2-e2f6631e812f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a269537-3352-4b6b-935c-d9e9022a5cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0641b8d-aefa-4b4c-8084-b05b42915028",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d34be0-5e8a-46a4-9eaa-288c655eeb3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115079fd-a0c6-49bc-8a1a-32b8f24552b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5123e489-20bf-4095-ac30-3d9fba938e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffd0851-c3b2-400f-a126-0e1bc26f3da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f9121d-93e1-4a33-a644-91ee04bf6e03",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3031040a-2759-491a-9c21-fac12d0c1435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8cf7d6-60c3-434a-bb8e-e0083fa5561e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9de858-f4f1-4f21-92de-91a12c208aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6b1a94-cb73-4f68-9992-28e7e176bc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfcc228-86e7-4cb4-a081-d3548c0b34e4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d8cd57-1343-4d63-80b5-5eb1561d40e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b35dae-f546-4360-9106-7ac3bf90cf93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1658ace-ac46-46f4-8f0f-7db753cc04e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3ba470-78d1-4e34-9971-3cdbc0efb901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ca07b9-1381-4d99-9462-80abf36340e8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa165a1-a495-4c54-91a3-bc381ae34dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2640ad8-f292-484e-92b3-a7a81711b1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b620ed-9726-4d5e-8462-19e67a40bc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68598ad7-34ce-47be-9d4e-266038e0378c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9a255-527d-43b5-8685-e7a8f6fd224f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab66170-e16e-438b-8497-f99121a5b99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cd02b9-ee23-478e-bb89-d2cb5619c11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108bdfb8-3415-4313-a001-8e672e38c149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c09e08a-ec57-4d4c-b22a-31268376db0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91f2970-b9fc-42ab-8816-c94600be162d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c79a0f-66ad-4d8c-8b77-ab959e7006df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c505bdb1-0373-4a67-8eeb-5e7d7439fae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4c9cbb-8cb8-4331-af49-61cdfaee65d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaedb09-dc16-4107-8e58-76cba44bf0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9149b7db-6953-47f2-912f-b1d513aa9583",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3158682-4a20-4fb0-b1ad-b79304bca3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de6a70a-554a-4886-8fe6-2ff9b27b8e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb2d5e7-0f17-4c4b-9a58-85b0b1dfd4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58627ff-595b-4f7e-8578-44f75a86f679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6414d1f-64b4-4fb5-a210-e45b3b4c7cc1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a22eed-5281-4524-a07b-68a6a28224f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbef2582-2f3e-4155-9cfd-56af95571f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b51783-fe1d-4c20-8dd4-0830ba806f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43449f00-7211-4905-80d6-c250671b211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e94b41-b300-423a-b677-e239ca1e5dca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241fe7de-eeac-43aa-bfdf-5b0c1c1ed2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d00be2-cf6b-46f7-a038-8e840fbe0697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e9bbea-7a43-4511-a58c-16c75ac2deca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6453254e-113f-4562-bf49-f01d7b77f0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02929242-522d-4503-8113-7e349bde2643",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ab8ef8-4aae-45f5-a671-cab3ff1d7e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664a2c40-7053-4359-a4d1-acefc4dbdafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6cf200-3f87-4869-9290-7a404c14d9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdde7f68-a4d3-4ee5-bd66-9671928156ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1af4e30-904d-48e1-8048-b2d106444adb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9824f3af-c9dc-4657-93b1-299a753dd5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33807e4c-f1af-4abb-9e22-d0aca404a77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7903f4-452f-4658-a1ae-bcc21052dbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e935a5d-02f6-40a4-ad0a-e66464cc3b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a64f4c5-3d62-4cc2-8732-04484465226b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4831fc06-5f2c-4383-8c3f-3bd83917b98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37d6d6f-6f5b-480f-a45e-e358300e27d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e1db0c-a98a-4fd3-9f98-437a18890f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa548814-90c2-4872-b73e-f9a05479fa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13df676e-e0d5-47bb-8a12-d31056fdb11d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1455846-d40e-42bb-8335-7f861b05b896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed19f6e-c00c-4161-aaea-13c48d82fe63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba09dd7-a0b3-4f26-82e3-a99c587add71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732c0283-e635-4530-896d-29d8bf3718f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7989b80-a78f-4d7a-a608-88cc655e4553",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4d084a-d10e-4af7-bafc-531c5b1924bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529eb568-b014-43d6-a73f-08f4e3cf0507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4698a042-2f4a-436e-80eb-38375e6818eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee219c4-0643-4286-bc0b-5a0f6fcca84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a72916-77b8-4e3a-b9a9-a8cfd0ca8f83",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2da3083-95fc-4d24-8aea-ad822f939c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896ab38e-c721-4109-b162-aa00b68adff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2979c7-d4ab-4738-88af-5bf72331eb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9585d10f-1c27-43a0-904e-2aa28afefd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3f0861-a586-4bc7-837f-d0fa0b96c722",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df665e2b-1efc-463b-aec3-ca093bb97e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d9164c-eec5-4ba0-aeab-8c427d5825b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c235c9c7-8f52-4c60-82ad-772cf46f4430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41da6f0-b607-4ec2-b892-7773fdeeaa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e7c6f9-ac7f-4d8a-9834-a16c59cfb22a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e895b05d-bb79-4d5e-aea3-56bb8b0e7bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4c6dc9-866e-4f5b-acde-c8b0e6cff155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f242372-4a44-42b4-9bc1-66d234a17804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7c95bd-54bf-40e7-ad9d-675567802e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b1c688-3215-41e9-95cb-268263d9614c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bb4f30-17ff-44d2-95ec-53239881eca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5514efa-4c1b-4a1b-9940-bd2e22b07685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c07ff3-db2e-4e34-9868-ffeab37de9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66be49bb-87ca-4c18-b60c-55672c3be278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955e49a5-8bc4-4de2-80d6-86feb9d50712",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c63efeb-3aa8-4210-b3fe-27aafc095148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50c978e-8e94-40e8-a291-6cd53dbe8d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e56534-7bd1-40eb-9955-07725a13f1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f728990-c71b-4da4-aad9-7fe8d04d5051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19a1827-44b3-4b79-86ec-594fb4b8a7ea",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33229854-4cc8-42f7-b13c-861854d1accf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de879b96-04e0-4285-9e91-50181f2fbbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af44dbc-5d71-4c09-ba6b-6bfdcfc4fece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f93b5d-30d2-45ab-a1da-0b4e8f0f1727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e6a60e-348a-4c17-92ba-0a10fbf08856",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393c816-aad3-455e-9ad5-61af9118765d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b49b617-bce4-4c39-a2a4-0888f7b1b30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb221cb-dd96-43c9-9c9c-1d72451d90fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbed783-64a2-40ad-bde2-33e9a64445cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9257469-1b04-4614-9bec-6155e1a7bbd0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd8265b-1afe-4956-9a97-b63e8ad30120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583548a2-989f-404e-92d6-d205b38fdd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cdfe5e-75aa-4cd4-bbf3-6042ad28ccc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413c8b89-3097-4658-9603-97dcc35a201b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44c900f-6d7f-44d3-9179-eba9b81e1aea",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55c8ad1-f8ce-4a59-a503-b88bda76d778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2276414d-36ca-42a1-ad10-505ecce4d0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28e5c4e-b59b-4adf-8e1a-1f1b7aae2c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e12667-c86f-4e0b-b70c-e2ab909648cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a351626-5153-4a87-a962-e5624a1b3a76",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c43870-1123-4fcc-ad09-062e0f48dedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccc5a23-d92a-4b7d-b218-e69b1985fc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a7a463-59d9-43ee-8d49-144bf15bc6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4532d009-2cf0-4dc3-8641-8cfadd3e8b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc63874a-998f-4688-b110-7a05ce05fb8f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a95356d-9424-4b34-9aa1-0f9ae978e08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3d885b-9fb7-46ed-856f-4ebd8e2a97a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6845966-34f9-4b21-a86a-948d7ed33df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620b453a-f47d-4c78-a9ac-1e2d2e61113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e6c3b2-fffb-4511-ba24-dfb861e5b855",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639933e6-74bd-41c9-8a11-525d2fe4c3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8697cbd-0b46-4d5d-80eb-b9007c0a0d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba312258-0768-4c44-9d71-c4ede11e5989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563c4612-a039-4099-91d8-8906e7c32ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970f6896-64f7-4e9f-a515-6f83f75bb734",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e936e01d-20f1-4009-818e-8a7bb065e301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5fcd25-8c6e-4710-a442-06974673e349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c720a9a-3603-472d-a699-cd4bcdf114fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70c7266-977c-4262-a84e-acb4d7819721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c992d216-6527-4dbc-bb5a-a7323ae1e94c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a5c6fb-b6fd-4f74-926f-6452693424cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c107ccfa-84d5-4f7d-b00f-49395d6da508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1740498-991e-4d72-98b1-185428761bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848bc5a6-ec6a-4c4a-92a0-7022e2f9d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9567f1f1-5435-4e9d-8847-fe6dd5cb7887",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc91ad9-dab0-48d9-a851-b468ca3fba5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4494c674-b7a8-4dcf-b938-eaa845e2551c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dd0e36-f25a-4ee0-9714-f631d2b88407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913f9bfd-0f5a-4080-9d47-44958b53354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3813bfeb-cc0d-4f18-aedb-c556247be23f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efae54a-4785-4cf8-9b7f-f814fcde5f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2001bb4-d66a-4b17-acdd-a19ba21c72bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6107d3d-33e0-4648-a2fc-fe2321928739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145eca7c-06fc-44e3-9167-e905c681ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5fa01d-d00d-48bf-9902-96236f2c59b7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc80f8de-a577-4cc8-936c-a22fd620f385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ae142f-0c4c-4096-8122-1895d309f891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d048b-a3c1-41d9-9eae-9d06ccdddb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4ce182-89db-403b-af4f-731a6becdfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1218df-a3ee-4ce3-b558-fd9fe1404e07",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f821943c-09d6-4610-bbea-29cda9018e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a8bb0b-d5f0-4bbd-85c8-3d7891cdbb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6feffb5c-3162-419e-a4d8-84d1fc773ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42025bb7-fa9a-43fc-96ef-557f55acebc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b382b3-fa48-497d-8779-ba536daa22b7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943a256a-6491-45bf-9910-989100ebe5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a74300-aae2-4960-be67-729b50e01a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f2c3cc-b667-41d8-8fbe-ea92d1e6c2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab17ad7-d160-4cc3-8997-9cf4d7f43605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db219e3f-6adc-451b-96a8-2fb6f33b0dee",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e030ac-e628-430a-9105-4a099d1db36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aefe573-c748-47b3-9cba-377bbe630069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fd0620-8b73-437d-85c0-7df3e148bc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a38458-8de3-4663-ae68-b33e68c03f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfe624d-45cd-47d8-af76-8e9e93ebec09",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921b3cbd-9d06-45c2-b372-be7d87a174ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea5682d-7086-49eb-998f-d112374a6bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dff6b75-fb20-472f-9b31-5b7bf2cbe180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a9f23c-e301-4f15-9ad1-1088a42fd5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b700349a-95c8-432e-94ce-a020bad16213",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b323d2-8073-425a-87f4-98076ce1b494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249e6f7f-6d7b-4334-a675-d833a9b2665b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7ba4ea-580c-4a04-a8c6-04cb8ede0098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d3937-e385-460a-9949-38d08f035aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456786fa-ddb5-4208-ad57-38683efd70bb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4959b05-e930-4825-aa6a-244d7598508d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e0ff4c-4e2a-4776-a430-5a023462fc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d0e691-334e-41eb-9f65-9f2b3deb48da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef439a9-b707-458c-995b-2fa2f17c549a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba43431-e477-434f-b186-da050e9910bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3998d29a-83ac-427f-ad52-2048cb1ba59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d17e14a-527d-4e85-82d2-c4279516e27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd6e74f-41c0-4da6-a4cc-c060ad9b5939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f06df3-08b6-45e5-9cb0-dc45303d91a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d644c8-a2ee-41f5-863d-690758eeb860",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7228d16b-4a51-497b-bd5f-a0842c2c2bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb4ef79-5806-4022-a4e4-181e60534196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289e09da-9302-4cbd-9212-e318fd1c4420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b211be-1404-48b4-97d1-566cde8eba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6164f-de69-4751-926d-8804a40ceb3a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce56b534-5d2f-41d5-8844-7dec87118cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c4df10-a8ee-4eec-98ef-aa6dd134cfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f34ea2-249b-4502-919b-670e9fd6f7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c438a892-3848-4c3b-97a2-2c226a32341e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b7c188-3c53-479d-b3db-226f52749bc7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e88e059-70b9-4de8-96b2-0ff0df87f948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15647a68-98a2-4c62-a58f-e148771f441c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836c08ff-9889-407b-8733-41ad5fb55de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82d2c8d-59f1-4f04-8f63-10dbb4e97317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c4aefd-88eb-41ef-af9f-ced29a3a7b95",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f6b140-7af9-45e5-8724-38e8a0f5e215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec69f81c-f13b-494b-8ee1-87bb3f0f9f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ec0cba-6237-49a1-9eed-f4fbc6aecbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712afcdb-35e0-4d7b-b077-89625d4d24d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0243cd-5017-4a53-b95e-746e7ecf28e5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ccf14e-03a9-4db6-9f16-4b212243a4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd0fccb-61b5-46c6-a68e-741b8e06de40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfa2ec0-5b30-4bf6-85c9-accab3078a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16665d0-3fce-4e9d-af1d-c2b6161cb99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88828f3-4c3a-4d4e-b338-f3381b6cee98",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f894775f-5751-4300-ac6e-90fbda9ea815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9abec5-e501-435d-a432-ce72d836127b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095943b0-0f0c-44f3-8ed3-d1d9bab530ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1397624c-09b6-4bb4-a65a-24b55d1db3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b61a72-b2d5-48f9-bfde-99b65fd0bd5d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f823965b-80f7-4299-bbe9-7e35258fce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bb60f3-a084-4a96-aa7e-2a50f5fe26da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ab4982-2a46-479a-a0fd-d9ab212e8270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570d7698-9de8-4bfb-b8a5-c59309ec7306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dea7aa-a6ac-45f4-becf-7bbe61f12885",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4964c520-bf67-4b48-910b-3c69feedae2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129e6513-7b77-4370-aa1c-1c05b4ecdab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d869c2-ceea-472c-84b0-83a7cb93d184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f3326-0df3-40ca-b9b8-a4c3262cb9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43072c7-e1f8-442a-889b-79668809d38c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ef977f-8cc4-40da-aebf-ba97020d6a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89ec9b1-860f-44dc-a7cf-864d5d95aa47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654c0221-3ae0-4097-8942-af7cbe174d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dbe5f0-602a-4053-818c-e27642e3bed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f13d78-04d1-4ba6-96cd-bcffd5df4548",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c29f19c-7e81-4ff8-b02f-ff18f5e723ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdac9c8-b474-4f4a-a0cc-77e52c7db951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9c6912-11b9-4c3e-9ea8-7c71dbcb44a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18af3460-511b-422c-9bcf-315fec5ecfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b5a711-4d67-41f0-8239-11431ad26441",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aac1cc0-2e98-4ee1-b1d2-aecda2c45f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe90f29-76d8-4210-a28f-a80d42f932b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68367bf-4dda-431f-bdb0-ebd2ee4b3077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db5865a-493b-4c90-8290-5aa3cfd31363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96fd524-0ef9-4526-ab0c-8f6b76734d70",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d63f1b1-f372-4dcf-96e1-0bf7e85e8081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed6062f-6731-42f9-a9b2-314f9cd814c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7155bdc8-3430-4b9e-a21b-771ec00b8e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb33b7a5-5f9c-441f-b792-4a8e2e95851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81663d4-9966-472e-90de-658427e97a8f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60bd7c9-2c5d-4fcf-ae2e-1bb7c774ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a75394-e9ee-4c8d-9057-2d2338ee3a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4b96cf-50d5-4563-9617-7353e97659ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1181337c-43a6-4da0-bcd2-f251390f38eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f95b6df-c814-47d0-a5f7-7f9a43b8663b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f612b77-daa6-4d08-9df6-206d1bc98d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e8cb25-2e33-440c-94a4-a38a31590ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be85757c-df54-42c8-8dd0-c339e9bd4b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f455ea6-cecc-4536-bcb2-38321a160ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ba95a5-4983-424f-b0b0-379ad2caf1d1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05687fa-0191-4661-b8f4-f6f3e67f8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf6f5cf-5ee9-4cec-a21f-f10dc41b0c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64129ba-d60c-4f75-80c3-e5d456bcd5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd6545d-f42d-4ec2-a88c-1fba74ec0161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2e90c9-e703-4718-8171-12c561716f47",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6ff809-05ea-4f64-8414-69d63d644431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f0d676-72d5-48ec-9a77-5b815d010b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e4975a-bfc8-4e37-879a-830a560ea1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8fa128-6ac5-4f50-8d53-8150c530690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c3df08-d2a3-4f01-9d5f-cd60b3c89387",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef86de-aa91-43e5-96cf-58aabf14e58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c5ef96-aa29-4613-ac57-9041b0e7ef23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e2f5f4-9a5f-44da-9f1e-4a4411d75b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fd9049-e4e9-4d96-bee9-fa9fc6eed6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cd0fdd-2128-4e5f-879d-6816d968e534",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7da17-4860-49e9-b1cd-1e59f0f5632d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc62fc4-2df1-416a-b84f-67b8fa067df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c75c6c-5558-433d-8661-4f01943ff800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09372eb7-2c34-4a4d-b9b9-4689633414d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a653fdc-9a75-40d9-8581-93c5103f6cce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b045c4d9-0dec-4850-a3bd-61da415f4ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fc00c7-11cb-4c4b-90f5-f6991496a605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9413b9d-8878-46e5-a1fc-435147b6ebd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bca020-68a9-436b-b277-a2d335719c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f87e90-e49f-4bee-9721-798322480467",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd230dfb-94a7-41a7-8a3d-b4540f86f5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9301745e-d9a4-41fb-ae2f-5e2c47a95aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a3518-a7af-4147-ab33-879571b26dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb02015-c1a5-42dd-9e17-8829802ab2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134099cf-1982-49f2-b1fc-3c0e3403daf1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9a8b69-6cc5-4cf6-b477-fb5a7c8c02ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2e7821-6fdf-4c6b-8bf5-e3acc5a51c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b1c829-fe40-41b0-9c3f-d07d18e90b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f06a05c-b79b-4d6e-b36c-e492d6524807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7293f82a-1d85-4947-a98f-e26494c8bd1a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495c56be-3e01-466b-9816-37cb30fb7d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c28cb4-3894-42f3-b50b-2c0163925743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783ff0c7-1efe-40e0-bf19-c5fd02db82f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdf5243-21ea-40ae-adb0-b508af81366f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6a1814-b015-4e30-9255-78fd5bd3be98",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fcf01a-a378-475d-836b-e5568610f609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d34215-da3e-4f87-99d2-7972d8427206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3219fd-124b-4a2a-beab-db8e45cebbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fd8ec4-7374-4c5e-a7e3-31c536e68c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179892f7-1181-4f5f-858a-3bf86b2b6adb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2039273e-4c9c-48af-b107-1bab220e7138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81d451a9-485f-4399-9242-3cc0ab44090a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d825b4-8c71-4a96-9b7a-269b6b6f6768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c28700f-0c80-483e-8e2d-7b0585c60e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ebbef4-50af-475a-962b-f17f12b49c17",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a07bff-5a38-47c9-a9ad-f76e37d33260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f736d0db-1230-4959-94e3-ebaf25452538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef698944-d421-4479-8923-0200cdd00e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2059ef0f-54ef-4b91-95f1-176636cb81e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0405f95-8745-483d-9bd3-b5cb9a118c58",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63521ab0-f227-4720-9b20-3ba525eb8be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861a8428-2ca0-4f95-8221-a39d88a40866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5ffd52-3a9a-4cf1-ac7c-d865f4a962e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5083efd9-4094-43fd-b34f-4c19e2accdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb884700-3963-467e-a933-5d0104167551",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee6d895-3110-4257-90e9-e1277ec3565e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1411b1b9-555c-41aa-a009-8056a0431397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be625577-c556-46fb-b370-b77f8219be96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62e57be-2dc6-41d6-bb2b-2755fba23661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99327c03-d87d-4ff3-9398-d426461e7fab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568aed37-0abf-4997-860f-0306e54b3ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4ff12b-658c-4eac-9731-5ae5bdbf0f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b613d9e-05c6-4b94-aa54-1eeec5f0950f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac56931-464a-4021-86ba-0bf6f3411c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0089c6-0319-4192-a582-ae117e4b1db9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c75cb6-cd87-4132-8914-b56fd7cf81e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6edca2c-0058-4d40-b571-6b103560ef9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc36a52f-80d3-4c84-a41a-0babef46f3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591aca7d-c0ca-4b1e-847c-890154ec6664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ab4400-22af-4431-badf-e0251290e965",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0fac3b-a0d4-4102-910a-fa6b87a57a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3429d927-09ed-4f8f-9fe8-786b893390ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e7ec99-5c96-400b-a17a-5c0bf5626047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a33110-9a35-41b9-8d5b-c2d9d7c316c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b598cf43-7fcd-478a-b4d6-ad10cdfab1ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9300eb12-dd74-4165-9704-b8052e168ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a622b5e6-67c6-4d58-ba0e-9a2611d14dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeea56a7-0457-4d98-91a1-a06dd164284e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3acd70d-4fd8-41f3-a1be-118836c14c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c673976b-4a63-448f-97ac-fd1613dc7fe0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35d5ae0-733d-4aac-9104-ccf114ddc7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b115d80-145d-406b-95ef-b626ee1dcac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b599a519-9752-4598-b700-bf4af217882d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18484aea-3909-4c9f-8d78-4fea2998b134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24622a5-7a06-492c-b274-465f0f2051bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd799fca-8611-48d5-9de1-0f5f6cf4f835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4dec6e6-6f0f-4d0b-8421-a0219410a5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e4ea4-a6cb-4ccd-a82e-147c650b10c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd43ae0-4f53-47f7-8a55-5c8954bf0c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c2e81b-0ba4-4c76-b77e-7ba617f87f46",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f73f1d4-e30a-4ecb-8298-c5dd2d7a3029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d4bcb79-d6ff-42d2-95cc-91855e55550d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12226bd6-1911-4f0e-8e98-b96be25840f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00584203-c59f-4170-bc46-a7da178b599c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba90c8af-f6f4-4610-a79f-3922961859fe",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91629fa0-62fc-466a-8e07-9be5871460c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc03e33d-b8b8-4687-b983-79f99f12b0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa54596a-5f78-411a-a424-562688eba18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e854409-f682-4e31-9159-c33fb311a30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfe6c72-758f-4630-a537-b774a4525eac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54010aa-35ad-4c65-9e24-0bc413990c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b1bf53-e2ca-4700-ace4-9e7209165807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddb4385-d674-493b-9555-8b941274e811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318ab040-9214-4bde-8d1a-78ce367f33f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126b4480-617e-4915-a16b-e459d145cfd9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b790a27a-bbfa-4050-9182-f271a4fb9048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa69cae7-77d7-4cc9-b8f6-3963b53d587a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be7c8c0-48e5-4167-b0d0-4efb535b9d66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db61ad7-834d-48e8-b24b-779133508ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057e9e95-aff8-4b11-afca-5de08afaed36",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21808325-60bb-4133-91fe-9beff962b748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ad12bf-806e-40d2-9612-0cc7064b3a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ed0d5-7a2a-4d4f-8efc-0164f69c86cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a37df3-7154-459a-b4b0-1310f23162d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8be4c5-25bb-477d-b356-2635ef3e691f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935cc34b-6f8a-46de-811b-9acd57294e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913247f1-6035-4ce0-bed7-781d1b6be008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb573679-b893-450b-a374-4e2130ed2618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298ad512-25a1-4388-8290-44d3b4268271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64e930d-7ab1-41c1-87f7-ad0d560a4132",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c0a49f-40b7-47c6-af0e-89e708ce8e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746a267f-5363-46d0-aa43-7a72c72cbee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40f86ef-a40b-4cdf-8a1d-2354ad86289d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f961c58-4dfc-4b9e-b866-f3333d8d2320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f502f0-3050-4c12-95f3-a9e35f3537fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fab180d-5188-4998-89e3-ca43991762c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e66229-aa68-4f7e-8f69-654128007c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba381f46-2b8b-4791-b062-b7d7a7f3a875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37aae33-c4e4-4c34-9300-5bc4e004dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9c19f0-9402-4401-a42b-de6b0dd1f750",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17389dc1-ad7d-48bf-bcf9-016fcb7695a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c22e026-9f25-47b6-b8fa-1e7ae628b8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bea97cc-f3c4-47b5-94f4-8a00f90333c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2ab5f5-9d81-4b27-99dc-4165682122eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e5062c-de3f-4fbe-9338-c6d1647c9a3d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa6aa03-dd4c-4f59-a212-2861e967917e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61330450-e684-4051-af10-326e3c82c3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47053772-f066-40b3-9ac8-8cdb9dea9c77",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e575d30-1b0b-4f3d-97f1-e1fe67a03d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7263dc69-4602-43f8-a0cf-adcbf8dd7e15",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a778cf96-4336-4b3b-9386-8af4a79d07f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c12ef75-5013-4870-8634-3762253a0aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a9cd03-5744-4228-806c-5870a69dfafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde60b6f-e7e7-4538-98c1-0c64b8fbab93"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55bfe7ca-3fed-483f-bd42-75111199e171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "558c3097-f02f-4066-96f8-19990daee78a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "742e9479-1f48-4bcc-b6b1-eddc37015ae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6bc01fe-f274-4f74-9ad9-62321a0177ee"
                    }
                  }
                ]
              },
              {
                "id": "f3c11983-64fd-4581-9495-a28975af4581",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "460abf26-0e93-4de8-9faa-752b6e4a8e2c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b9be42-bae6-48aa-ac59-3423c2b9b05b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e20404d9-bfab-48e0-bcd6-596c1937d192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189edb67-8395-4cd3-a7cf-ed9697631465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a194f975-84d0-4e54-ab7b-b72b94b51f58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6e157f6-9466-47ad-bf01-0a3c2b162685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be9a45b3-0a7d-4bfd-a6a8-21a207fe506c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c6c557-c624-43a6-834e-01d05dd93ca8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bde67bf3-b4c4-45b2-96e3-8cc42cfdcd0b"
                    }
                  }
                ]
              },
              {
                "id": "9ecdfe9a-905f-4030-85a3-256c26922bcd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cc0eb5e6-4e91-4aad-ae0a-94b309f8f234",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c0212e-70bc-4f5b-a1d2-973a3348dd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "050fa08f-67b2-4161-99e3-dfb1160d96ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc1b018-5199-4e75-94d0-d3d8011ef0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6772c82c-20d3-4395-a37c-36fc449e4541"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "93c1cb27-1bb9-4991-aa2e-9a0183947bf7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d53c65f-4940-4a20-a2c9-a5e3a6df04df",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad1060fe-6d0d-4765-bda2-6c2a03c768f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5418786-3145-48ce-a799-fc11cdf039a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ef82fee-5065-4abf-a156-7617b7d43951",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "392a7183-0543-49fb-bf12-19153655289d"
                    }
                  }
                ]
              },
              {
                "id": "5a255406-2887-4d8f-b16b-d0d6e21660b4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3899f67-6985-4488-9879-d469dbf92d90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "be9ab2ba-325c-4dcc-a37b-fd824c91c0bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79403c5a-c22a-4769-8bcb-e240eddc3935",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b4acdb-c740-4156-a083-c098e123e291"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "387fb290-5e30-4dec-b4ca-1f1d5c3b8278",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f8868d9-7f64-4b98-a83d-d0c49203f90f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1eb6ed1-9a0a-46fd-a471-43b96de126d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2ce7c40-658a-48ad-8785-92c6502d0ce5"
            }
          }
        ]
      },
      {
        "id": "03b56875-4ba5-4663-b0b0-c5c306aca201",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "96353c7b-937c-4f1d-b3d4-20a6a29d21d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a58f55f2-c39e-44e0-8e59-fd814604734f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44f5b982-51f8-474d-8d39-50123758cfc1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125d95dc-26d7-4138-a0cb-70bac8354fec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5b7eb3a-4db9-43c8-8b0e-92ed6b43950c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2587f036-53ba-442b-9af3-fc7405d3aa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb3630b-4bdb-4469-89d7-7c1adaee5a33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b501da2-76d3-46b6-a9ec-657a0a729999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d7ce4c-ca7d-4caf-a18f-b5cee09d86bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25951e69-1492-41a6-84d3-5e9c5a4c4511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da7191e3-e005-4289-8026-6bcd407f0c43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0de8f413-10e8-450b-b1a3-4116ef7a21eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "33bc8fff-5ee2-4200-9b12-201da1a59677"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3521aa71-54bd-4c63-a7d0-b772a270773a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d796f2d-cf6a-4824-9dc6-cbbff7da94ea"
            }
          }
        ]
      },
      {
        "id": "30cac118-a46e-4c88-86ac-925b177b65a8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "19ae4814-5873-461c-8fb8-b14a3b18bd09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed7b708b-8f97-454f-9651-e14e56059da8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "872e84ab-af56-4058-8cac-67aa1bbbeb64",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30ad539-33f3-4350-ae5f-148d2ab2d863",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73e4dc13-cea9-4e21-9805-892e43d4fcb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8daeba-85ba-4e66-acf5-327933b87b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e93a30b6-5e43-4a05-8597-b84a55d81acf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ed3907-3f4d-4cfe-81a3-bedaaa9f4511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0e7454f-ca36-462e-999f-8347f5e78c5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a287bf15-80ca-450e-b12e-2eb83d012f71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "580d439c-7f46-40da-aa93-8d4181699f18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d87838d-9219-436a-a595-414d4d6aa359",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf11786a-1663-46ed-8cf2-5991fce97e62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfa4b19c-2f65-4756-8a54-2acb0aea4cae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f3b76f5-e2aa-4192-bc4c-e628e494d465"
            }
          }
        ]
      },
      {
        "id": "0b892ef2-4e40-4e80-9678-bf43b25d46e5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "71910e62-44b9-43f0-bcdd-3123ed4a5df7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "110ffde9-e00e-4c8a-b6d1-2d7e34d7f3a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f95ebd4-8e8d-4852-80e2-3a9181b1411b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3f4f0-fd78-4c42-ac94-9c48abc92c71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c0167a7-8cb5-4645-8a50-c3ff6c6b5345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b867ea1-5ed6-44a7-9ee5-b28a01f1d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c5190c0-d896-4d14-bac8-8d5d716212a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f005d61d-b3f0-42aa-ab9d-b6d32cc1cfec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ade48a3-3626-4f25-954a-9ff80b406c5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "766eeff6-e273-4652-b66d-446ca131579b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "176ed59a-3204-44e7-b419-8124027a7e26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b3fc6b1-5c72-49c2-b3f3-569762ea9b13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4250b018-a15c-4870-82d6-bf94612f8ad4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a49294cc-b159-4bc3-b9f9-4e9739e93669",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19fa5f45-c0db-42f8-9792-b8649b28c90c"
            }
          }
        ]
      },
      {
        "id": "d2ddf677-2fe3-4f10-910b-c659477c0d7b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c71eaab-f79d-4660-ab49-f72926c376ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afaa3f61-0063-4a81-b672-68b7d69e9199",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e9854ff-bf54-4cbc-8bc1-d9abb59a0444",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89247394-81b2-4440-8c84-0d797b07c41c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "353bda30-1351-4bf9-8d3d-1d887c1c4a11",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.75087719298244,
      "responseMin": 6,
      "responseMax": 288,
      "responseSd": 25.5842133534479,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708130015515,
      "completed": 1708130035085
    },
    "executions": [
      {
        "id": "a98c9701-3d4c-45ee-917a-57f54527cdfe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5d4a2ccc-8cec-45de-b65a-355537adf3c0",
          "httpRequestId": "8aceb541-a413-4254-ac6b-9ddd847664d2"
        },
        "item": {
          "id": "a98c9701-3d4c-45ee-917a-57f54527cdfe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "46ffea78-b47f-40a4-9713-1da9f5d23ef9",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "fd916c5c-6e49-45dc-a858-35647c152f68",
        "cursor": {
          "ref": "085fec83-3354-4b1f-9342-6e540ca996b5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c0cf0118-538e-47e1-ba1e-845bbeac236f"
        },
        "item": {
          "id": "fd916c5c-6e49-45dc-a858-35647c152f68",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76d2aa6a-a440-4d36-beb0-15f4684f7027",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3d267f94-6ebb-49bd-832e-3190d05abf29",
        "cursor": {
          "ref": "28f2a81b-02f4-44dc-9789-d02967436869",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f7362f42-630c-4449-8236-ffaf1605f997"
        },
        "item": {
          "id": "3d267f94-6ebb-49bd-832e-3190d05abf29",
          "name": "did_json"
        },
        "response": {
          "id": "fe9da996-a476-47e4-9258-f02870a7d116",
          "status": "OK",
          "code": 200,
          "responseTime": 241,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789eaf2-c588-4c84-b268-cf4e56ade0a2",
        "cursor": {
          "ref": "637ee074-3097-414e-be4e-78cbfb49445d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "798c11c8-45ac-4eb8-abcd-1b08411bc0a2"
        },
        "item": {
          "id": "e789eaf2-c588-4c84-b268-cf4e56ade0a2",
          "name": "did:invalid"
        },
        "response": {
          "id": "80f198cf-1e86-4cf4-8368-95f68b285ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789eaf2-c588-4c84-b268-cf4e56ade0a2",
        "cursor": {
          "ref": "637ee074-3097-414e-be4e-78cbfb49445d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "798c11c8-45ac-4eb8-abcd-1b08411bc0a2"
        },
        "item": {
          "id": "e789eaf2-c588-4c84-b268-cf4e56ade0a2",
          "name": "did:invalid"
        },
        "response": {
          "id": "80f198cf-1e86-4cf4-8368-95f68b285ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e4df9e-fc46-4a94-ada6-a60c7094bd7c",
        "cursor": {
          "ref": "86a7f2e8-2e5e-4244-a6dc-0d66c343a407",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ed5d1170-19ed-441e-881d-5e534d1a426c"
        },
        "item": {
          "id": "66e4df9e-fc46-4a94-ada6-a60c7094bd7c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb963a78-f2d8-42bc-9401-57359ccd6343",
          "status": "Not Found",
          "code": 404,
          "responseTime": 126,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62e3839-a8ee-4ad5-8c27-3761e17caf5f",
        "cursor": {
          "ref": "1cfeceab-680d-4034-8b30-da4745507fd0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cb9f0ad2-49fa-4b4a-93eb-3e0546ce0d80"
        },
        "item": {
          "id": "e62e3839-a8ee-4ad5-8c27-3761e17caf5f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0e0c3e08-efc6-4434-9c49-a64cdffd186e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ed8af5-52c0-4a63-afc7-3253d034a288",
        "cursor": {
          "ref": "dc887471-2f3d-4490-ae4b-f77acd1773c7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4b432c0b-cb2e-461f-a216-07aef810ed07"
        },
        "item": {
          "id": "57ed8af5-52c0-4a63-afc7-3253d034a288",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5f933210-d348-457d-ba63-1492234f74a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0d1f9a-6004-4c9f-9ecf-16e162c4102c",
        "cursor": {
          "ref": "227e45c6-c4cd-4685-8b4d-a18430f1ba75",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a86f34cb-1c44-45d3-a5e2-4a68275fa324"
        },
        "item": {
          "id": "ba0d1f9a-6004-4c9f-9ecf-16e162c4102c",
          "name": "identifiers"
        },
        "response": {
          "id": "ac96cb8f-1c6e-4a61-bc94-7fcb5b73e25a",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076c44e0-e606-4e4b-87a5-a7807ade3243",
        "cursor": {
          "ref": "93ab1c1e-7503-4ba1-8bd8-30f4fe4a9606",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7df17e72-3e00-4704-a172-fdda73fdc59f"
        },
        "item": {
          "id": "076c44e0-e606-4e4b-87a5-a7807ade3243",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d637a0c1-b4c5-4973-bc7f-cfec5aca9820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88449fc-f61e-4115-a4e5-d133d3f1460d",
        "cursor": {
          "ref": "dc518271-d3c4-4ba1-9712-6723ee61c1e7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "16eec3ae-75d5-4403-a8b3-f99c78e6402d"
        },
        "item": {
          "id": "b88449fc-f61e-4115-a4e5-d133d3f1460d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f4fa1557-6ac0-449b-bf71-1a05ef54c32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0332d942-3349-417d-9615-c711527e6907",
        "cursor": {
          "ref": "a972aba2-1244-4e21-a932-a7b4c9627bf2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9e3209d5-f102-4e4c-9df1-5416394339b2"
        },
        "item": {
          "id": "0332d942-3349-417d-9615-c711527e6907",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a211ac3-2e81-495a-94bb-f4d7bca4de18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c45894b-a180-4be1-9958-bda1a81d3d63",
        "cursor": {
          "ref": "14e740a7-876f-4f59-809b-d6e951a4600b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3da4044d-90d2-4803-be9d-51f73c137b96"
        },
        "item": {
          "id": "4c45894b-a180-4be1-9958-bda1a81d3d63",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f2f7ae0c-1983-4df6-93e6-6ac24e402dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204af352-c864-4638-8354-41510bd5da76",
        "cursor": {
          "ref": "cb30d18c-e921-4bf0-b32d-2c1cefded96e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4644e0ba-fc16-4b01-b569-f1c551103133"
        },
        "item": {
          "id": "204af352-c864-4638-8354-41510bd5da76",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3f2880ed-0571-4670-9f1a-45d035267b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69078ac-e62d-4441-a910-daf08fa4a3b5",
        "cursor": {
          "ref": "5ad58057-a190-4fa7-9b21-774e5eef8ad4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "55ff699b-b22a-45ec-9aed-e8e5f2b6ad4f"
        },
        "item": {
          "id": "a69078ac-e62d-4441-a910-daf08fa4a3b5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "08a544f3-37db-42ed-998d-de575aa9aee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d907cbc6-3ec9-43b3-abf2-38475b97fc1d",
        "cursor": {
          "ref": "a26a6501-357c-4de4-8870-f43cf1c5a289",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d1b6cbf2-f2dc-4282-b595-578a28899bfb"
        },
        "item": {
          "id": "d907cbc6-3ec9-43b3-abf2-38475b97fc1d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f68ed0b6-eaab-45f8-ab14-011b9dd2afb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f1f29d-f0cd-482d-a978-b61590ad36ec",
        "cursor": {
          "ref": "624efee1-24cb-49bd-a646-914cb0da8a5d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5e276a3c-5ff5-4a22-96fb-23603914dd78"
        },
        "item": {
          "id": "46f1f29d-f0cd-482d-a978-b61590ad36ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7a4f610b-799d-47a0-8b9c-b2607381f629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d6cc78-346f-4bc3-b47e-40e6d3621969",
        "cursor": {
          "ref": "06a09689-6cfb-4921-973d-8c0ae28f3a36",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1e8ed4a6-863c-4022-9fd7-ff909d993334"
        },
        "item": {
          "id": "57d6cc78-346f-4bc3-b47e-40e6d3621969",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3dea9575-5ec4-4ef7-b8c2-d0ed751606fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3465cfb0-ef44-45b3-8712-fd64898d153d",
        "cursor": {
          "ref": "2ec1285e-c3d1-492c-b465-3deadf7ee779",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff66d48e-e55a-4eb6-8ad1-1331ef214603"
        },
        "item": {
          "id": "3465cfb0-ef44-45b3-8712-fd64898d153d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1f14858d-568b-4038-bc7d-6be1929f6751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f01724-92b3-4c71-a105-aa00ec92871b",
        "cursor": {
          "ref": "6dfad8f6-0e5a-46c0-88e8-36463f5e787e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "49c4ab3e-fe8e-4d92-8945-0f33b99c4023"
        },
        "item": {
          "id": "c3f01724-92b3-4c71-a105-aa00ec92871b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "361b9ec9-5248-4d99-a52b-ad8787ed1f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257b7237-7147-4b94-a899-a534ba3aa1e7",
        "cursor": {
          "ref": "c1a8f956-ef39-469f-a667-03acefe66dea",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3fb7e23e-7b4b-4cb9-8e4b-71fd253b3243"
        },
        "item": {
          "id": "257b7237-7147-4b94-a899-a534ba3aa1e7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9fa18e37-3098-4d6a-a5d2-1143500229a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db35598-8290-4bf6-a6c6-fc5637977cea",
        "cursor": {
          "ref": "f37a31f9-222e-4497-b8c3-e82d2cf1b2f8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e04a50ff-fae8-492b-b5c1-9af90e9d8db9"
        },
        "item": {
          "id": "0db35598-8290-4bf6-a6c6-fc5637977cea",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d5057309-2cd4-4961-8dd2-79a2a52d7b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11f5270-b1c7-4857-b89b-f5e6573aba18",
        "cursor": {
          "ref": "0bd67c67-1468-4e7b-a777-ec4ca90c2018",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "31caf4d1-4654-47de-8c87-f468638083d3"
        },
        "item": {
          "id": "e11f5270-b1c7-4857-b89b-f5e6573aba18",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "df1fe829-3997-4d47-b168-4c56e7405db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e750112-0ad6-4340-8c47-a2a3aa4fc950",
        "cursor": {
          "ref": "d4ee4751-4516-4f3e-9a12-8d7c4fde0f93",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e519a51-ccdd-4935-95d4-fc5df29acd68"
        },
        "item": {
          "id": "0e750112-0ad6-4340-8c47-a2a3aa4fc950",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d02c4eea-d378-4af3-ab15-672763c6c9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997d3af6-a3eb-4832-8325-babb7da1544d",
        "cursor": {
          "ref": "c1dd0b0d-4ff1-4203-a76a-43714dd76c54",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "89fc799d-7f4b-4567-bfe2-5c35770d6a95"
        },
        "item": {
          "id": "997d3af6-a3eb-4832-8325-babb7da1544d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "82840d2a-ca6c-4e9f-b6f2-ff0b0180cd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff0f45e-c0fc-41e6-b773-d0e82212245f",
        "cursor": {
          "ref": "23f038d5-52fb-453c-a8fc-b6879aa4be49",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9b949cba-8fa9-4f3b-b8cb-70f1f097086f"
        },
        "item": {
          "id": "bff0f45e-c0fc-41e6-b773-d0e82212245f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5a5864ee-7ff7-4121-b263-751d12708a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8a7967-a5d6-46e8-b130-b5046c658a29",
        "cursor": {
          "ref": "82612a40-1f80-46e5-85ba-8aeae8971e23",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a2e795f1-ff06-45f7-ac42-c596cc0dce0d"
        },
        "item": {
          "id": "df8a7967-a5d6-46e8-b130-b5046c658a29",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8d677e12-deab-48b0-8e1d-76d4408cea7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fcf4a4-7dba-4b38-a03d-da81e6d00796",
        "cursor": {
          "ref": "77476256-7ac2-44a6-9785-77be2548f46e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f3c17029-74be-40b6-bae3-7420b9e2b89e"
        },
        "item": {
          "id": "b5fcf4a4-7dba-4b38-a03d-da81e6d00796",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5de233f4-819e-4393-8ead-56cc716f3956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9c956b-8955-4dae-9d77-9d117bfb76e6",
        "cursor": {
          "ref": "ca314866-9b0e-4caf-819a-fc5fcce82a68",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92a7552b-d343-4f80-9e1b-5c8c0a675681"
        },
        "item": {
          "id": "6c9c956b-8955-4dae-9d77-9d117bfb76e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a267bc8e-b1a8-4da6-9189-352da9a79e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2002680f-cb1f-46fc-96a7-f92e52027b06",
        "cursor": {
          "ref": "533e4ce7-5592-48f4-b0fa-2179795afb18",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a98eb318-f45b-426f-adae-f0a91f7b166a"
        },
        "item": {
          "id": "2002680f-cb1f-46fc-96a7-f92e52027b06",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e88a356-be72-4d42-b866-8ecba8ca0f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c73ac9-94dd-4a43-891a-2d1db6e08270",
        "cursor": {
          "ref": "53983022-d2e4-4742-ae2f-e821f7f461da",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "548d6883-c29b-42b8-bcff-a22c376de482"
        },
        "item": {
          "id": "59c73ac9-94dd-4a43-891a-2d1db6e08270",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d36d543b-b416-4d25-bdc1-94139816dc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c077b2c-db70-42c7-85b4-ad53ffe6380f",
        "cursor": {
          "ref": "2d904b43-8a36-4948-bf16-393b781f317b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "80852439-962f-4668-8f90-50c465639be0"
        },
        "item": {
          "id": "2c077b2c-db70-42c7-85b4-ad53ffe6380f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "530b7b0a-76cf-46da-8ad1-7750203b478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d152086-7e1c-49ef-b877-478b2d85dd4c",
        "cursor": {
          "ref": "f2812c8d-2401-4926-adc3-cda5fae9eee0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "742460ed-53b7-4929-aca9-966adfde42a1"
        },
        "item": {
          "id": "3d152086-7e1c-49ef-b877-478b2d85dd4c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cee78258-afa7-4b8f-9758-b4afbf5a1112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eac6cb-fa23-4565-8897-4801816b4081",
        "cursor": {
          "ref": "fdbe1b5e-64ca-42d5-b557-0e4e8486efca",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cb81174a-4bad-4a70-9922-beaab99d77c5"
        },
        "item": {
          "id": "54eac6cb-fa23-4565-8897-4801816b4081",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ac1273bd-61e0-4e13-8f32-d8f075fa51ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6ca39c-9734-4394-ad3c-7699494523ab",
        "cursor": {
          "ref": "e4f096d9-4b6b-480c-8dc9-bb377a56fa15",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "30187f5e-b1c0-4722-afdd-1f00e7d1df84"
        },
        "item": {
          "id": "cb6ca39c-9734-4394-ad3c-7699494523ab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3de68dc9-804a-4bd0-851e-ce83228dc16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121777fe-2a7d-4c97-be76-c7286271a4d5",
        "cursor": {
          "ref": "79e42129-547c-4e96-89ec-403ccd1d2990",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7d7ae09b-3b18-4b63-93e2-dc933b746bd6"
        },
        "item": {
          "id": "121777fe-2a7d-4c97-be76-c7286271a4d5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6e0f1a35-1e0d-4e03-963a-886bb1f7c6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2217bf02-5d79-4692-908b-a5700423e772",
        "cursor": {
          "ref": "6c138bdd-42bf-40f4-908b-d10c53100a99",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3917889f-ee71-4d9f-a1e0-4f2a53f28a83"
        },
        "item": {
          "id": "2217bf02-5d79-4692-908b-a5700423e772",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4788ee2d-1ce7-4eae-a4e7-02838d738821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcb0908-5386-43b8-8910-6777c0baa95f",
        "cursor": {
          "ref": "6d306e03-73cb-4bfc-8287-ceda453a5309",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0223d94e-8711-411a-a386-7ba38ce5354c"
        },
        "item": {
          "id": "edcb0908-5386-43b8-8910-6777c0baa95f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1fcc9723-febf-4bf3-ab76-57ceafd3e9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3d0e76-7f5f-4c2c-9cd4-4dcd1abef442",
        "cursor": {
          "ref": "6fd85efd-771c-4630-8b4a-7399c98c4083",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c6ab97ef-45f3-46e9-9499-97889ff39388"
        },
        "item": {
          "id": "1f3d0e76-7f5f-4c2c-9cd4-4dcd1abef442",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7575ffc7-5c77-4c0e-9eee-4ab4396b66e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a53ee-41ca-405b-9115-1c6a12d04654",
        "cursor": {
          "ref": "fd5f98a1-64ad-434d-906b-fa2a0d4d997c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2c14f3a4-8bb1-4eb4-be83-ab4cbd89c271"
        },
        "item": {
          "id": "6e6a53ee-41ca-405b-9115-1c6a12d04654",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "633e7043-9e79-433c-8286-51d2232cc265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea692eaf-6aa4-48f5-a8a5-b3fa8dd179eb",
        "cursor": {
          "ref": "7d2cb62f-3100-420b-b621-80434841f3de",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c482d281-0f82-4d47-a761-62f3a3ac44f7"
        },
        "item": {
          "id": "ea692eaf-6aa4-48f5-a8a5-b3fa8dd179eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "064deb0b-24b2-44e4-99e8-f329eb97fe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e35273-0e15-433e-84e2-5cb38964706e",
        "cursor": {
          "ref": "2ffc7e9d-72ba-4b46-9a27-0c692c9faa29",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c872b487-3fad-43c7-b98a-404c666c898c"
        },
        "item": {
          "id": "a6e35273-0e15-433e-84e2-5cb38964706e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96c818b1-5489-4915-8096-40bad19de42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f683ae2-71eb-41bb-bb5a-77b1bccee70f",
        "cursor": {
          "ref": "ab63b4db-87fe-4b91-b267-b026594cee80",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b66c6ec2-079f-4389-ac2a-3dc1fed42b3d"
        },
        "item": {
          "id": "7f683ae2-71eb-41bb-bb5a-77b1bccee70f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4a904458-7575-47e1-a5aa-975d5c5e5b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e30b1a-2e00-4ac9-afba-4098e6aa1008",
        "cursor": {
          "ref": "65222483-56d8-4936-a11d-c8c3056f8abf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "20676f95-fa45-4bdb-aca3-cac2778569c5"
        },
        "item": {
          "id": "b7e30b1a-2e00-4ac9-afba-4098e6aa1008",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3afe3484-66f4-43b8-8365-7e16a438e83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5987e1-3f5d-4ff3-8030-352fc9de2406",
        "cursor": {
          "ref": "ac184bba-71b1-4fd5-b6e7-22fce85c40ff",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1f73c3ec-88e7-4fa5-a8cf-ebebf738bf54"
        },
        "item": {
          "id": "df5987e1-3f5d-4ff3-8030-352fc9de2406",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b7f0b3a0-3df3-4746-bc07-9cf3ce9fa9b9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc6d55e-f877-4e04-8d8c-d0d6d0a9570e",
        "cursor": {
          "ref": "f64e04b6-d07a-4004-a54d-08d59fba8322",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1cb599b0-7b0e-449e-8ce6-a533d93b9644"
        },
        "item": {
          "id": "cfc6d55e-f877-4e04-8d8c-d0d6d0a9570e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "964c3ac6-361a-4363-96d0-e3cca16af135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c302121-67ba-43a4-a979-23b1612c736f",
        "cursor": {
          "ref": "b4852ea9-1475-477c-bc26-342eb1328035",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "01ce8cca-0cb5-4230-baf3-6920e9804ec2"
        },
        "item": {
          "id": "1c302121-67ba-43a4-a979-23b1612c736f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ada8b2a0-1e75-4165-8d91-3ba4383cd959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f4e938-cfdc-4f47-8167-da32e3a60160",
        "cursor": {
          "ref": "90b5a218-7d6b-4ff8-8b06-34a6d871a951",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b626009a-8ade-4aa3-a490-f527ac1f2c62"
        },
        "item": {
          "id": "65f4e938-cfdc-4f47-8167-da32e3a60160",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e17cda76-5385-4207-9fba-a5f0f26f638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b7fbe0-8a5f-4762-b58b-b5a98a514d0f",
        "cursor": {
          "ref": "de2d74c4-e096-42a9-a201-62aa7b5e4443",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8c8b7df2-e979-4c34-bbcf-50fa612d2752"
        },
        "item": {
          "id": "17b7fbe0-8a5f-4762-b58b-b5a98a514d0f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1374948c-e42d-4d8f-a2b8-ccf5974615af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c24009-2274-4786-91d7-078ba966425a",
        "cursor": {
          "ref": "9afc6d3c-c427-4dfa-81eb-8cda7bdface5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9d9965ec-ba88-4d04-bc67-1bed33aba46d"
        },
        "item": {
          "id": "23c24009-2274-4786-91d7-078ba966425a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "01bfe063-ffa7-4eee-85ed-f05833c4f93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f62e5c-3806-4a0a-9f1e-40c9a7874d66",
        "cursor": {
          "ref": "cb382fdb-0f81-4337-93ed-41d6399dfa27",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1a4aa7a3-b5ba-4dc5-804d-2b3a15f7aef1"
        },
        "item": {
          "id": "c9f62e5c-3806-4a0a-9f1e-40c9a7874d66",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7e0ae2d9-5b06-4980-9bf8-22654d8ff331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cebabe8-7d2c-4fbd-bae1-af9d1e52d4f0",
        "cursor": {
          "ref": "d39dab89-5b31-4b67-9330-26dc52e5a599",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6d037555-34ee-4ed3-84f5-8020232876e3"
        },
        "item": {
          "id": "0cebabe8-7d2c-4fbd-bae1-af9d1e52d4f0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e82d87af-af9d-4a83-b21a-036c9c1e8ce4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1060d66-713f-400e-8282-6f83793f72b4",
        "cursor": {
          "ref": "dedf118b-299b-4963-9f05-b56580098373",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c05d909-01b8-4400-835d-a2043834f6c6"
        },
        "item": {
          "id": "d1060d66-713f-400e-8282-6f83793f72b4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c1f2fb44-7bdc-45ae-9046-ce1828b601ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968e7409-22c9-4d73-8dd7-2862c7f10fd7",
        "cursor": {
          "ref": "69d404e4-2ff6-428e-b090-8c096c295f19",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "224cb536-0023-486d-8056-0ec20a6aa875"
        },
        "item": {
          "id": "968e7409-22c9-4d73-8dd7-2862c7f10fd7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "895af60d-4f40-4eb0-8ed9-0158d418e2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bc2e77-7db2-4989-b2f2-1ec320279afd",
        "cursor": {
          "ref": "8433a2f5-3642-41ba-bc3d-f5e4b650cec4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1f1d0850-a71c-4328-99c5-4589d90573d0"
        },
        "item": {
          "id": "55bc2e77-7db2-4989-b2f2-1ec320279afd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c1c92c87-0bdf-4c87-ba67-3e789b7427e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc66efed-ee58-45c1-8d06-8159e8a97294",
        "cursor": {
          "ref": "39957f95-5cbb-4a71-a52e-dbdb8272b950",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0e7d8550-d86c-4eb3-b70c-470db92644cf"
        },
        "item": {
          "id": "dc66efed-ee58-45c1-8d06-8159e8a97294",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "693f45ca-e453-44de-86f1-280734b85d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fb35f7-557b-4abc-ab60-e033e0446c75",
        "cursor": {
          "ref": "f621da11-0494-4cdf-a529-a27b056b3b84",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bec404f5-8f0f-4889-bca0-d962948c6648"
        },
        "item": {
          "id": "46fb35f7-557b-4abc-ab60-e033e0446c75",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9fa055e-7219-4028-9560-a4b65b83ff95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c881d5-fa10-4fc3-9234-a42c9009b305",
        "cursor": {
          "ref": "7e4e9445-0753-412e-9fca-a05415cee7f3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ad160002-d1d8-40ec-9b68-17ffecd9598d"
        },
        "item": {
          "id": "65c881d5-fa10-4fc3-9234-a42c9009b305",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fbd99587-d196-4d5f-ba60-039000aa9190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762a5353-79af-475a-ad3e-cc66ccadf01b",
        "cursor": {
          "ref": "5a2a3c8b-4b72-4645-a0d5-7bcb56ea5d6a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fe76cea3-6430-4936-8cd1-71592675f186"
        },
        "item": {
          "id": "762a5353-79af-475a-ad3e-cc66ccadf01b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "502ed164-63b1-4226-b2e8-7eafc520085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1387f6a-4151-4f4b-b00a-9599d10e7c50",
        "cursor": {
          "ref": "661a7abc-f456-4ad3-aa5b-072d22b06b51",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9be96e0c-021b-4603-8cab-c0cddce18eca"
        },
        "item": {
          "id": "e1387f6a-4151-4f4b-b00a-9599d10e7c50",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "02edefa7-db89-4723-a02f-8ffa9b5c8d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243ccf5-a504-4e58-ae5e-2c3235237997",
        "cursor": {
          "ref": "69e1208f-2d97-476f-b8d5-01c8a0f616da",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d9157b5e-d805-41b3-b9d6-b766bfd99c42"
        },
        "item": {
          "id": "3243ccf5-a504-4e58-ae5e-2c3235237997",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "678595b0-efd1-4643-84f8-50dd5fe34867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374de827-936e-40a4-95b7-8abf05cd9246",
        "cursor": {
          "ref": "ac7c2ef2-ef18-434a-9393-45c9164d9872",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9cd922c7-a547-4ad5-9e64-cbdcc9c94c3f"
        },
        "item": {
          "id": "374de827-936e-40a4-95b7-8abf05cd9246",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "17b61f8a-ce99-40e9-aed9-79ce28453973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c26c107-0944-4d8b-92fa-b20975b5d621",
        "cursor": {
          "ref": "eb3a7631-e95d-4613-975d-0847e43089f1",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0db18c97-3195-4142-aafe-cdb34d782f52"
        },
        "item": {
          "id": "1c26c107-0944-4d8b-92fa-b20975b5d621",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "22152e43-a3e7-42ee-9999-9f8e9835f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dedd90-b50c-4ff0-abd7-f67e96f14550",
        "cursor": {
          "ref": "f03e09d4-9632-43d7-911f-ed57f0c9bab6",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b8941b99-b538-40aa-a858-6415ae8dc13b"
        },
        "item": {
          "id": "e5dedd90-b50c-4ff0-abd7-f67e96f14550",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "331e8ee0-5cde-4c35-835f-2ad1e6c8bd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0110b6ff-2f83-4f54-8f86-89cba020f3cc",
        "cursor": {
          "ref": "37fbcd76-def4-428a-a907-ebfefb5a2618",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7b170f9f-71f2-4ac1-ab4d-83b3253c2a4a"
        },
        "item": {
          "id": "0110b6ff-2f83-4f54-8f86-89cba020f3cc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5a60972d-5746-4b80-86aa-9da71a55f3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093b2126-c86d-427c-8809-2f4e6b710901",
        "cursor": {
          "ref": "c977ccdd-367b-4128-99cc-f539f31abe43",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "903bb3f7-10a3-453c-9f3f-eccd650b70b9"
        },
        "item": {
          "id": "093b2126-c86d-427c-8809-2f4e6b710901",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "948336e5-bd47-4268-8592-bee633478c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205644ee-0652-4192-b967-ffa50c29edff",
        "cursor": {
          "ref": "63d5141b-04cd-44a5-ae44-7d739ab61b47",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "68f3f111-64f6-47bb-879b-550200c7df1b"
        },
        "item": {
          "id": "205644ee-0652-4192-b967-ffa50c29edff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8ffc4cf5-afd0-4145-9491-29c73a2fb92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d448de2e-4ab5-4de3-82dd-db63d2c74701",
        "cursor": {
          "ref": "81509083-45ab-4dff-b65a-e68fa995be07",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d083d98f-b1e7-4eef-a43b-90735ce4c0b0"
        },
        "item": {
          "id": "d448de2e-4ab5-4de3-82dd-db63d2c74701",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b28ef02d-7514-4108-a3ad-5ca051e7123c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a660a7-07e1-4b3d-a01c-cbb068767e83",
        "cursor": {
          "ref": "36284ea6-b380-43b8-a98c-7b0281d1b902",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cdf4eb1f-829d-49bc-901e-7af3b29cc4ec"
        },
        "item": {
          "id": "f2a660a7-07e1-4b3d-a01c-cbb068767e83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "14bc75a6-dfc2-4330-b144-1525996a7f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74572782-8ce6-4b2a-bbc1-9bc2a3683f52",
        "cursor": {
          "ref": "21950591-e5e8-4f06-9094-f9cae0fc41af",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a15847f2-fb8b-4b64-8921-22e8efb3c194"
        },
        "item": {
          "id": "74572782-8ce6-4b2a-bbc1-9bc2a3683f52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6403c6e6-dbf6-49a3-bf3e-fbfb9294889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1464abe-b13d-49ec-999d-97e327ba9e46",
        "cursor": {
          "ref": "5b8d493d-13a4-4a29-ad48-bc80de431ee4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "490ec682-ebbb-428c-8923-6fd200c2b94e"
        },
        "item": {
          "id": "d1464abe-b13d-49ec-999d-97e327ba9e46",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0bd2679a-f371-4d03-8a9b-561fb95476f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c11e9-9b70-4894-acad-8f219080f4a6",
        "cursor": {
          "ref": "6cd19f4b-a15d-4214-aa14-3e584cb81e14",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bb73949b-2f2e-4d49-ba4a-e150fdc80b31"
        },
        "item": {
          "id": "2f7c11e9-9b70-4894-acad-8f219080f4a6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8383da68-a42d-477d-b0a4-16e32ba4a2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b96878-1fec-4913-b30a-d748437cf7a4",
        "cursor": {
          "ref": "0d36b13e-b134-47ff-8ee9-009252de5945",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1df09313-d7eb-49d3-9007-2d14b9ba45fe"
        },
        "item": {
          "id": "d7b96878-1fec-4913-b30a-d748437cf7a4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38833a3c-82ec-413a-bcde-d43f4a4f0ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cca15e-24bf-4c85-809d-580916b31d7c",
        "cursor": {
          "ref": "a47542f9-7ae3-4639-90aa-02ef9627ee01",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eb8282e1-3a5d-43cd-a58d-4ef115939bd7"
        },
        "item": {
          "id": "44cca15e-24bf-4c85-809d-580916b31d7c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "723bc444-105b-4444-829b-139dfe7759b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e2bf32-080c-44a8-8821-426366a14669",
        "cursor": {
          "ref": "e5f5c342-3432-407f-8dd2-5d7eb0219d53",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4ae2ffa9-665e-4d8c-bb80-6983ff3d017d"
        },
        "item": {
          "id": "26e2bf32-080c-44a8-8821-426366a14669",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62d097e2-8dda-4cfb-8edf-951f4e96c5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7280499b-584e-4417-a181-42c3cf13a0c0",
        "cursor": {
          "ref": "43900450-644f-4c72-9de0-14ade95fa35a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3d3eff8f-e974-4eb4-8836-17fa5ebf9a2d"
        },
        "item": {
          "id": "7280499b-584e-4417-a181-42c3cf13a0c0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0d48cc1f-cc39-488e-a1b4-acdcd10a8b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578dfc4-c903-4f29-8946-e6de3f3f5371",
        "cursor": {
          "ref": "a5494add-23af-4199-a985-f2d9efaabfbd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8577ca0a-38b0-43c5-ace3-99d6cf3f9bb8"
        },
        "item": {
          "id": "2578dfc4-c903-4f29-8946-e6de3f3f5371",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2a9cebb8-c945-4883-af46-eea4c0d111e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d67f890-5fb9-4e54-bfd2-94f3b957cf60",
        "cursor": {
          "ref": "7e6890ca-cd33-497a-9309-117c9aca7958",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bb3a2495-5aeb-40d0-933e-92bfc4e0f632"
        },
        "item": {
          "id": "2d67f890-5fb9-4e54-bfd2-94f3b957cf60",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "57b71930-4304-4fe8-8e6e-92d33a47bd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14d7c23-de9c-4936-89c5-9cb4d63a459b",
        "cursor": {
          "ref": "2dc02a2f-d7c8-40e0-96fe-1746098d22d4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d7c0bc17-6516-488b-a029-1a4ce262c7e3"
        },
        "item": {
          "id": "e14d7c23-de9c-4936-89c5-9cb4d63a459b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f172045e-0e1f-4b58-b977-a2d60b9579f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eeabd5-a30d-42bd-9313-b80da4f91de5",
        "cursor": {
          "ref": "c01ef0c3-aae9-4176-8121-7c0b6c135f81",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "096dd8f5-003d-4fd3-a6f6-d13c1b3ad05a"
        },
        "item": {
          "id": "81eeabd5-a30d-42bd-9313-b80da4f91de5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "26686f55-67a1-47b6-8ba4-f05af171ec7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8846c5-d972-4ff0-88f1-a153705306b0",
        "cursor": {
          "ref": "bc406a45-192e-4b35-aea1-a8738a52b90c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "332bac52-708d-4c7d-933a-3217c49dc258"
        },
        "item": {
          "id": "2d8846c5-d972-4ff0-88f1-a153705306b0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "48b7152d-0078-4ab1-9493-361580fb9dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40354740-97e9-444a-a664-0280e334bbc8",
        "cursor": {
          "ref": "56f985a7-8e7c-4d20-98e8-85b08167ee77",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "23ddf5a8-daa5-4981-a642-ad033090e61f"
        },
        "item": {
          "id": "40354740-97e9-444a-a664-0280e334bbc8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "62594f53-d364-43fd-952c-cc414d65ec66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783328e1-de51-403b-b903-8a2d93e49e57",
        "cursor": {
          "ref": "10911536-9e9d-43b0-8d82-0761b51c2b1e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b2c26629-c2d9-4a40-9886-ffb0e2af21fc"
        },
        "item": {
          "id": "783328e1-de51-403b-b903-8a2d93e49e57",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6163497d-3ee7-41ac-9e1e-0e88f85e5ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151b537b-f86e-4a29-bc2c-b892156c64f6",
        "cursor": {
          "ref": "784b3360-12f9-45cd-befc-ae5a4e9e1992",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "33846009-0302-4e6e-b691-a1ee62377683"
        },
        "item": {
          "id": "151b537b-f86e-4a29-bc2c-b892156c64f6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ba3959a-25d4-4df3-a684-147850f4524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cff0ca-3f7d-4ac9-a4e3-c8c9b9e06bdb",
        "cursor": {
          "ref": "f975993a-6057-4a2a-9cd9-0e4949b11e2e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "53df52de-92e6-4bab-b3d5-0fa99e01a24d"
        },
        "item": {
          "id": "54cff0ca-3f7d-4ac9-a4e3-c8c9b9e06bdb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3643a0fd-1aa3-4470-b850-5cd1b8ae021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a630081a-2a42-473b-99b4-51342a788109",
        "cursor": {
          "ref": "3785da2c-9c2c-47e5-bb30-8dfbba8a1fc4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fc862985-cded-49cb-b373-280a8b3424cb"
        },
        "item": {
          "id": "a630081a-2a42-473b-99b4-51342a788109",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "467182fa-d1d9-4133-bf5c-9d82db1875fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24cca2c-3182-4d82-a7f5-96851dc2263e",
        "cursor": {
          "ref": "30916b14-a5b4-4bc0-820a-1a2b9d2bac24",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "969a9399-bd27-48a9-9e3d-364d54835dc0"
        },
        "item": {
          "id": "b24cca2c-3182-4d82-a7f5-96851dc2263e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5b9847ce-4666-4b7c-9c16-71da7b41f718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14bad3-cc2d-444a-8c9c-38aa87e38df1",
        "cursor": {
          "ref": "4b94b822-208d-41ab-b8fd-346b54abc19a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f4ac2d3c-9710-4f2c-a62e-2246e1371b96"
        },
        "item": {
          "id": "fc14bad3-cc2d-444a-8c9c-38aa87e38df1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0dac1516-3460-43f1-b395-0804703f3579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b546ad48-69d9-4beb-bf93-409b16724e7a",
        "cursor": {
          "ref": "d1639bd8-f485-4b6c-8276-8f68a09b3b01",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7d149ce8-1884-457b-a003-e743e845e29b"
        },
        "item": {
          "id": "b546ad48-69d9-4beb-bf93-409b16724e7a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fcb9a2f5-15f8-4872-893c-eb4b09096c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28795ba3-42a7-4589-8223-070e174cb97c",
        "cursor": {
          "ref": "8b4c5295-0bf0-4148-946c-df8323a66974",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "89b59ad9-17e2-4b7f-9aa8-6b8eb4eae46b"
        },
        "item": {
          "id": "28795ba3-42a7-4589-8223-070e174cb97c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "91fc5664-7510-4375-b2c6-a506dcbd239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05268a23-ef8c-45fd-b43b-1a26450b5b8e",
        "cursor": {
          "ref": "66c377c8-f0cc-4df6-af68-80336013dd0a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "beb72c2e-3cdd-4136-be48-4b5048cca388"
        },
        "item": {
          "id": "05268a23-ef8c-45fd-b43b-1a26450b5b8e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cef46c2f-759b-48df-9f45-b68cf9381c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a914b6-ccdd-48e2-bc18-9970a7fb044b",
        "cursor": {
          "ref": "d32163c5-7c85-47ce-aa02-b07cd4bc6289",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c62fdddd-4b7e-4075-a9d6-e44f8ae01e8b"
        },
        "item": {
          "id": "b7a914b6-ccdd-48e2-bc18-9970a7fb044b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "32a652f6-7162-4961-a13b-03c1fbad0985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02af4971-31a5-4f9e-97cc-027203c5cd4d",
        "cursor": {
          "ref": "f4af9c5f-1c87-4404-a8e5-d1e96e4f4dd8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "26e55791-88d3-44c3-b632-dc42a4940f95"
        },
        "item": {
          "id": "02af4971-31a5-4f9e-97cc-027203c5cd4d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "56c96b5e-1977-45ae-9866-ac1b99148cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30603aec-e7a7-401c-b905-9f89aa6c8039",
        "cursor": {
          "ref": "f91c503f-d48a-4636-bb67-d92ff02277cd",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "09fda654-1fea-4f96-99b0-68d57baeb2ab"
        },
        "item": {
          "id": "30603aec-e7a7-401c-b905-9f89aa6c8039",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "88a84eca-b6da-4638-811c-dfb2874c0232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba2c4b3-51c2-48b6-badd-20c852eccda7",
        "cursor": {
          "ref": "e40a1a85-059c-4414-80aa-c55b6a2bac43",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "33a92a7d-bbf7-4810-9283-78381758c8f3"
        },
        "item": {
          "id": "9ba2c4b3-51c2-48b6-badd-20c852eccda7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "732f8aa3-3bf9-4515-99a9-9916c162bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2d4ee0-16a8-4758-974d-9e278bd46fc5",
        "cursor": {
          "ref": "82a1dd1e-fdc4-4932-b05b-dfd773ca3dd3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3372f066-8f9d-4856-833a-13cbc5a1bf87"
        },
        "item": {
          "id": "3a2d4ee0-16a8-4758-974d-9e278bd46fc5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bcac559b-656b-4acd-a874-435f93e240dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778c1376-f096-4de1-be05-79d71c9b3334",
        "cursor": {
          "ref": "ac490fdd-a0ed-44eb-8f96-8c2e877eb0da",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c38a3cf1-c0ee-4490-aa4e-5346feae3e1d"
        },
        "item": {
          "id": "778c1376-f096-4de1-be05-79d71c9b3334",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81027e90-486d-46db-920a-8d28a9eba463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a3db70-2931-4923-994e-dc7ad9d5f21c",
        "cursor": {
          "ref": "dd065366-2e13-4144-bce1-1839b459defc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8e83a380-3ef9-404d-9e08-b684367604df"
        },
        "item": {
          "id": "14a3db70-2931-4923-994e-dc7ad9d5f21c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "76718412-55e8-4ac7-8ade-b7fcacd9555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2701772-f106-46b2-8f15-510b0d88295e",
        "cursor": {
          "ref": "e9543219-76eb-4eca-beac-163879298cd3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6f7ffefb-9698-4236-88a1-b33fc2987705"
        },
        "item": {
          "id": "a2701772-f106-46b2-8f15-510b0d88295e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "051942ce-c0fa-4d93-9d45-825bf551203e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c86b035-56d5-4c02-8106-e046d53cc27b",
        "cursor": {
          "ref": "8d1c6477-f9f6-4fd6-a832-1ddc53f0d4e9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "759d68d1-fca9-4671-a6aa-c152aae335db"
        },
        "item": {
          "id": "3c86b035-56d5-4c02-8106-e046d53cc27b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3c1a5f37-adaa-44e2-9651-818ef6ca9b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a631c91b-81a2-4972-99e6-2bcd01189d8e",
        "cursor": {
          "ref": "595b2dc2-cb92-4b8c-b6c5-50edea89b162",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5fefc5d8-eeba-49af-a825-542e513b9b15"
        },
        "item": {
          "id": "a631c91b-81a2-4972-99e6-2bcd01189d8e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c4cdc87f-e14d-4460-9471-7aad49477c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f59a48-77f8-4358-8beb-37c1bc4ba711",
        "cursor": {
          "ref": "b83ed590-931a-4d73-a550-2d52ba2d18a2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "24dd47a1-248c-443f-8494-1d9479948f6e"
        },
        "item": {
          "id": "b6f59a48-77f8-4358-8beb-37c1bc4ba711",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3e9ebe90-3788-4442-9378-574e7e00af38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9de99b-64cb-4499-8563-8a6aca4f7094",
        "cursor": {
          "ref": "7cba3b50-c2a4-4cf9-b34f-7d1bc4805b27",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "be1e0aeb-e653-4993-8814-84f58467283d"
        },
        "item": {
          "id": "0b9de99b-64cb-4499-8563-8a6aca4f7094",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "90f149d5-35bd-4eba-86d1-48dc982da406",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e52622d-9c6c-4748-ba8b-52fe531d02c8",
        "cursor": {
          "ref": "304a1e2c-a549-4748-b593-adeba5882a3e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab4782dd-5572-4eb4-85ce-24c6e1e1da2b"
        },
        "item": {
          "id": "1e52622d-9c6c-4748-ba8b-52fe531d02c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9b561eb5-9696-466d-b60e-65755b1918f2",
          "status": "Created",
          "code": 201,
          "responseTime": 288,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3377ef99-a81f-4299-9ea8-ee2f1cd39715",
        "cursor": {
          "ref": "8697535e-efaf-4b06-99e2-c7749106fb67",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "927be057-4f13-4580-88df-01378e5a5873"
        },
        "item": {
          "id": "3377ef99-a81f-4299-9ea8-ee2f1cd39715",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0a432990-a3bc-4b53-9919-de67d26a77f8",
          "status": "Created",
          "code": 201,
          "responseTime": 158,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "56946a7c-99a5-4666-897a-b85c443d1e27",
        "cursor": {
          "ref": "a58b735f-164c-4f66-9c68-5ca8ecf6ed7e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9b60f5a4-eab5-4147-843a-302ddfe2c0dd"
        },
        "item": {
          "id": "56946a7c-99a5-4666-897a-b85c443d1e27",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1246adca-6adf-4169-ac5e-1f3719424118",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c9de9e-35f7-4166-ac81-7f73b52f1441",
        "cursor": {
          "ref": "cbae41f4-88a7-47d3-bcd2-2030366f044f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "33ea9737-17a9-45ce-96fa-5a356990b598"
        },
        "item": {
          "id": "10c9de9e-35f7-4166-ac81-7f73b52f1441",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a07572f0-8fcf-440e-9de6-b69ce93b364f",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9349c030-8b80-4808-acf6-23dfd3e11a44",
        "cursor": {
          "ref": "644e6fd7-70e8-4617-9189-ba1a0b155738",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "941fce37-dc20-451b-8a31-03057c3ad068"
        },
        "item": {
          "id": "9349c030-8b80-4808-acf6-23dfd3e11a44",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "909d47b6-0a0d-41fa-a612-39cf3d8eea38",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26d9c57-dfef-400e-98d8-1a611bb397b0",
        "cursor": {
          "ref": "c85516fa-52b5-4c32-9b59-547e895e456b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "93c8191c-0eef-4c5d-8c6d-b55bca610189"
        },
        "item": {
          "id": "d26d9c57-dfef-400e-98d8-1a611bb397b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3ca6cb0-4802-4972-b88d-35f9ca781ce5",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb3f5eb-5d26-4891-8c18-4bb5671f1ace",
        "cursor": {
          "ref": "436332d2-e751-4696-91c0-926523264142",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b871842a-1c3a-4c60-a407-3449f902de3f"
        },
        "item": {
          "id": "8bb3f5eb-5d26-4891-8c18-4bb5671f1ace",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1885ea31-1358-4da1-bd1b-852927c00ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebd6f7b-db14-4603-902b-bd21373fbcf8",
        "cursor": {
          "ref": "ee36fb78-47b6-444d-a46f-b00007636146",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e8bdc44b-4038-4218-b784-7ab5c7ac2691"
        },
        "item": {
          "id": "2ebd6f7b-db14-4603-902b-bd21373fbcf8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca744558-3222-4ba5-8e11-b1b951ede81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f53fa55-cdd5-4c74-9ab7-5150edda6c88",
        "cursor": {
          "ref": "5fc1a033-c5be-41ec-9222-74753ebfba73",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "affed3fb-82c3-45ef-b8be-947b0e463067"
        },
        "item": {
          "id": "4f53fa55-cdd5-4c74-9ab7-5150edda6c88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "13fe6bca-bdda-4496-a835-13c77034e522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c67cf-b532-4b1f-8a55-2474d9f5d170",
        "cursor": {
          "ref": "0857c85b-898a-4c23-9217-df81b749d02a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d3bf792d-0746-47fb-a9d6-5e3de2812540"
        },
        "item": {
          "id": "240c67cf-b532-4b1f-8a55-2474d9f5d170",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df43aef6-e857-4398-8c06-1b1cced9fce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46140d91-f60d-4477-b7b7-43a6f33228df",
        "cursor": {
          "ref": "5defe5ad-09df-45ed-beb0-e3c22e56c900",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cb366281-e505-4b8f-86ae-aed415c9d7ed"
        },
        "item": {
          "id": "46140d91-f60d-4477-b7b7-43a6f33228df",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b3354ec-1cfb-48b4-b942-9cc604668d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4d3395-ad75-4884-a728-53ff8dac150f",
        "cursor": {
          "ref": "14706f57-6103-4a34-ae98-6b7c60b9a22e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1456feaf-0ca2-49ca-8745-d4887bfb7cdc"
        },
        "item": {
          "id": "2d4d3395-ad75-4884-a728-53ff8dac150f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "77a11165-4364-4e16-8f31-04ee7a1bcd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33a90f-eda4-451c-81aa-2e8f581eb12f",
        "cursor": {
          "ref": "5cb8381b-2b9d-4c41-afb7-5e35957e4d8a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2aaaee54-0eac-4e50-82a8-dab748cc5c64"
        },
        "item": {
          "id": "bd33a90f-eda4-451c-81aa-2e8f581eb12f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "554146ab-374c-4f2e-8dd9-7c0be0a9b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc9895-a376-4c1f-8bb7-01e4ed5547e7",
        "cursor": {
          "ref": "40047195-4793-4768-b4b6-8dc982f42945",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "32079126-7440-4536-9341-56fd4c8a4724"
        },
        "item": {
          "id": "0edc9895-a376-4c1f-8bb7-01e4ed5547e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55b2d2b0-b43f-4c26-960a-ccf353bd7b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab2a9bb-760c-46f5-bb7f-6308e3ba0605",
        "cursor": {
          "ref": "d1fa9b3e-9b88-4411-a06c-db8be8f97d92",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "151e89b9-c9dd-42a4-8438-91163fed4e05"
        },
        "item": {
          "id": "cab2a9bb-760c-46f5-bb7f-6308e3ba0605",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3d656cb5-3ea7-4d80-afea-f62757132925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cab79a-4249-425b-b8d9-62ef94d9e630",
        "cursor": {
          "ref": "39cf1c3a-bf72-4d65-bfd3-5ea7d432892e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb356c27-1272-47cf-be61-4ed1eccc385e"
        },
        "item": {
          "id": "82cab79a-4249-425b-b8d9-62ef94d9e630",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8cfa31a1-49e5-4470-8908-804c56d8b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e0dd0-9c13-4eae-b779-ef1b61689194",
        "cursor": {
          "ref": "54efffd2-8161-4301-ac13-3f8ed6167e25",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "47467684-0a28-4216-aa26-d7b53ed2c557"
        },
        "item": {
          "id": "924e0dd0-9c13-4eae-b779-ef1b61689194",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "efa0b5bc-849c-4b5c-b202-21d30a20b96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb722fa0-d1b0-4062-b5b8-7c65af9a4d84",
        "cursor": {
          "ref": "c912f3ab-b956-4779-9559-23e7090cf04e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "07bf2d51-8569-49b3-908b-9e23acbde021"
        },
        "item": {
          "id": "bb722fa0-d1b0-4062-b5b8-7c65af9a4d84",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a7b862be-e164-4e9a-9214-f597687dc810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572d6628-1927-4b65-958b-139c373b5fd2",
        "cursor": {
          "ref": "af0d53c2-e2f8-47b0-9056-d53cc02c73d8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26b3b75e-39a9-4f82-9900-08c751b08924"
        },
        "item": {
          "id": "572d6628-1927-4b65-958b-139c373b5fd2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c633b35b-0c53-4d02-8bc0-19c0ac2877ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a87b11-72aa-481f-9c0c-aa5c55aa14ed",
        "cursor": {
          "ref": "d0b947ec-d2e3-4165-b66f-b894fd3118dc",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3fc2e575-71c8-48d9-9ba2-c6651af0e202"
        },
        "item": {
          "id": "31a87b11-72aa-481f-9c0c-aa5c55aa14ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d6be363-1ba5-4238-a462-30975d50dc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f95f5f-c913-412a-a69c-6d3f5caaaac1",
        "cursor": {
          "ref": "22fb2807-89a1-4cdb-97c6-294f58ff577d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "30aa897a-60d5-4854-aa01-4ed878ccb7ab"
        },
        "item": {
          "id": "e2f95f5f-c913-412a-a69c-6d3f5caaaac1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3fb23c7-91e3-4b6e-af30-977789f57076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c970a1-46c4-476f-b999-22c3c98d0c74",
        "cursor": {
          "ref": "95aa44cc-9920-410a-8449-b77ee7c378e5",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a42dc4f-7e25-4a34-90cc-0deb1cb22af4"
        },
        "item": {
          "id": "e6c970a1-46c4-476f-b999-22c3c98d0c74",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d57b495-9c01-4ce9-a765-b1be66500f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c99f93-743c-433b-b74a-25373d59054a",
        "cursor": {
          "ref": "5791ff20-ca3e-4642-9ae0-7c87365329da",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0661b20d-e712-44f8-8096-c25e964f5ec5"
        },
        "item": {
          "id": "30c99f93-743c-433b-b74a-25373d59054a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46582492-4454-4ce6-bb91-7def71e71417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4222eab6-cea8-4bbb-a4da-aac6bf88b436",
        "cursor": {
          "ref": "0720e11d-a4a8-4301-a06f-a0aa314dfff9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "481d1655-9d67-41b2-9d9d-dd9d6c4f061e"
        },
        "item": {
          "id": "4222eab6-cea8-4bbb-a4da-aac6bf88b436",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eef578c7-a9e5-4633-b9ff-0516f8ce22e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3bd0e-b09a-4649-a912-9e7ac157776b",
        "cursor": {
          "ref": "53a68669-054f-4031-bd65-83f059af20d4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "84f911b0-0721-4de3-885c-9dec082075b5"
        },
        "item": {
          "id": "c0a3bd0e-b09a-4649-a912-9e7ac157776b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "617561e2-822a-4bb1-b526-0c48a778bfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0764f8-a557-41c8-b947-e806d7dffc23",
        "cursor": {
          "ref": "2333f5a7-d45b-4f81-9123-0243707724f7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e017d483-ec3f-4f05-9a19-06cefbe9be06"
        },
        "item": {
          "id": "8a0764f8-a557-41c8-b947-e806d7dffc23",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d2a4b14f-9379-41e0-a5b2-36a418dc70c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8248f49-019f-4328-8c32-2912b7830ca9",
        "cursor": {
          "ref": "8b9e6ea8-e8a5-449c-b8d4-e0bb1ff9e6ef",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5bd3b1de-f44e-407f-b640-715e556fcc4b"
        },
        "item": {
          "id": "c8248f49-019f-4328-8c32-2912b7830ca9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4fee140f-067f-4610-842c-8aabe1ac11ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd8c3d-af2e-402d-abd2-b4996bebcd97",
        "cursor": {
          "ref": "5761b646-8dd1-49a7-a01e-ef0c788dfaa9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a310f020-9d40-40ee-bf4e-f6f76d0b03af"
        },
        "item": {
          "id": "7ddd8c3d-af2e-402d-abd2-b4996bebcd97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "38dd77f4-4b2b-4bc7-a54b-d9d745e01e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a023e808-bb7f-437e-b071-dc934d4f30c9",
        "cursor": {
          "ref": "6d406cf6-0165-44a1-8b31-09171b346a26",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65feb0ec-3ab0-4845-812c-3d611f38aa8e"
        },
        "item": {
          "id": "a023e808-bb7f-437e-b071-dc934d4f30c9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "77a1be59-1388-4919-9c9d-9338e937707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6fab4b-1300-4789-9b0d-11161dc8693d",
        "cursor": {
          "ref": "e08d6d21-e0e9-4ba9-83af-dbfd47e91a32",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "87f6d56e-a19c-444c-b307-72de3756069f"
        },
        "item": {
          "id": "cb6fab4b-1300-4789-9b0d-11161dc8693d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ffec2e2-f2c8-4841-914a-be3ab54862ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61df323-ad74-4211-8ace-1a99ce5bd741",
        "cursor": {
          "ref": "53c2dec8-6be2-4242-b5e4-75e7232cd411",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f6ebe9af-dcf4-4a0d-95a5-fa4438365b45"
        },
        "item": {
          "id": "c61df323-ad74-4211-8ace-1a99ce5bd741",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f270ec90-ee8e-437a-ace8-7a5b3b267ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a629508-9a98-4f91-935d-0f8e1794b5f0",
        "cursor": {
          "ref": "598f3f2c-d8f9-4dcb-801d-9aad498b4aa8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "022125f4-1843-45fb-95c1-43639b1c3097"
        },
        "item": {
          "id": "4a629508-9a98-4f91-935d-0f8e1794b5f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f5361fba-8120-4244-aedf-85e2d90c500e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4913da2-054c-4d3d-8a80-a4c442194515",
        "cursor": {
          "ref": "f468d98d-c4c8-461e-bba5-b0722aba3b07",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a1beac8e-3046-4b4b-aaff-1f7a40452142"
        },
        "item": {
          "id": "f4913da2-054c-4d3d-8a80-a4c442194515",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dcc46732-b672-4daf-ad70-0ed269756db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad03258-6b14-495f-b831-880dba474fff",
        "cursor": {
          "ref": "91f7b8eb-3117-47d0-b1a3-16270902c421",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "39391f4a-941f-44fb-8d3b-5980ee55f29b"
        },
        "item": {
          "id": "7ad03258-6b14-495f-b831-880dba474fff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e869e794-d015-4046-95fc-40ef9df0afe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7761c38-649d-4007-89a1-733f1c080fff",
        "cursor": {
          "ref": "87d7b0f2-7a42-412a-a53e-ebbb8b113cdf",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7f126433-362b-42ed-8643-6bae362f2d20"
        },
        "item": {
          "id": "a7761c38-649d-4007-89a1-733f1c080fff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a0dc014b-63ca-427b-a1d6-b4c4c1f2e2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1d3bac-8f37-4723-adaa-a05da8d28a1c",
        "cursor": {
          "ref": "51a883da-3efa-4925-b7e1-818dd006b8ab",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fb03bad3-3bc0-4f28-aa59-d8dcbf7b9828"
        },
        "item": {
          "id": "4f1d3bac-8f37-4723-adaa-a05da8d28a1c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ef5359bf-ae66-4370-8c22-82d15c30a28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4953cc4-231b-4efb-ace9-14d0165c18fc",
        "cursor": {
          "ref": "fb3a1a43-7e35-4b3b-8caf-1ba88ee07e7a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8e6a69df-4297-4586-8a34-754327d0d99d"
        },
        "item": {
          "id": "e4953cc4-231b-4efb-ace9-14d0165c18fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "33ac6a1d-8cdc-49c6-a060-9da85b35ef20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c69713-8f4e-4326-8120-bdbdebf1475d",
        "cursor": {
          "ref": "aed91437-5da3-4fb7-82eb-b077e1ee57d9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b3dd5cd4-c1c3-4d3b-8615-2d4673d04c0a"
        },
        "item": {
          "id": "57c69713-8f4e-4326-8120-bdbdebf1475d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "13614bc0-7976-40de-8f30-489d9b649759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf08c679-1555-4b15-bef8-f05fc93edba1",
        "cursor": {
          "ref": "fb777116-cad7-4ffe-81df-ae027cd4f11b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ba217cc4-f542-4de0-a15c-a50915783177"
        },
        "item": {
          "id": "cf08c679-1555-4b15-bef8-f05fc93edba1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "12382e10-6a65-4662-bb3d-d1adb32a9d09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab7763-f5b1-4686-a7c2-1a5500da10fc",
        "cursor": {
          "ref": "e3b5597d-0a7c-45df-b253-e30d143d4369",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d889c147-6d47-4b27-9f84-f256c3a678fd"
        },
        "item": {
          "id": "dfab7763-f5b1-4686-a7c2-1a5500da10fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "706f20d8-979d-4eab-8d98-f0bf7cf4b3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6c42da-3331-4ba9-a962-88370ecb8a4f",
        "cursor": {
          "ref": "ae383cb4-84a4-42f2-8cb7-461b6cff3f9c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e06e1ea4-8372-407d-bbfe-40a5cf5327bb"
        },
        "item": {
          "id": "0a6c42da-3331-4ba9-a962-88370ecb8a4f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dce59e24-57cf-4658-9b35-68f9451b4106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9915fc3-3029-44f1-af63-e60e6bb4d52b",
        "cursor": {
          "ref": "ed5c02d7-1423-46db-a882-3203c46dde96",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "08dec5c9-34a8-4cbf-bacd-8a296af9cf30"
        },
        "item": {
          "id": "e9915fc3-3029-44f1-af63-e60e6bb4d52b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cd9d8258-1d57-470c-8388-6f187f145ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e959fe3a-210a-454b-8fe7-1e4f068ef9f6",
        "cursor": {
          "ref": "16d696d8-0ab0-432e-bda3-140fc0742e06",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e99746c-30d9-4157-a2b8-d3c0afe304d8"
        },
        "item": {
          "id": "e959fe3a-210a-454b-8fe7-1e4f068ef9f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4fb36ab8-2fd7-4889-b2cf-3db22d0ecde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8238a84-f580-44f0-8432-a8371a1d9d18",
        "cursor": {
          "ref": "26befa9a-4306-4e06-9088-366ad76b2a73",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "15b7af83-b424-41a5-9a90-b3528808567d"
        },
        "item": {
          "id": "a8238a84-f580-44f0-8432-a8371a1d9d18",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "27aba51c-99b1-4e39-98a8-4fe2c2d2e448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9804da6a-7896-4c94-87fd-7d862faa63bd",
        "cursor": {
          "ref": "8c0a396d-424e-47a0-8a18-1ccfabd97af3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d493c40f-2b4d-4e38-928c-89ba08cb3e1a"
        },
        "item": {
          "id": "9804da6a-7896-4c94-87fd-7d862faa63bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "50d9b33f-32a3-45a0-b321-7551a479f70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee02116c-39d6-4de2-bf69-c1781865dad5",
        "cursor": {
          "ref": "562e1337-5f97-41cc-a8f4-fbd5d70a014f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6884f406-1a09-4aeb-a6f7-55155089fe30"
        },
        "item": {
          "id": "ee02116c-39d6-4de2-bf69-c1781865dad5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "38d99f2c-bd81-4aa8-b175-30c117e7a0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fa2a3c-05f2-4fbe-bdb3-ba87d06adf88",
        "cursor": {
          "ref": "4440954c-6a4c-46c9-b52c-19be6d6b2ea8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d0b69558-5c8f-41d1-8d30-cabc828735b1"
        },
        "item": {
          "id": "b7fa2a3c-05f2-4fbe-bdb3-ba87d06adf88",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e459eb8e-a283-4d6c-8ce7-519af0625659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d8f618-6dfb-456a-8a34-ff4c91dfae33",
        "cursor": {
          "ref": "1756cf0d-11f6-4679-bb7e-e955522f9ae9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "04e06c66-f103-46f0-b147-6a553af087b6"
        },
        "item": {
          "id": "42d8f618-6dfb-456a-8a34-ff4c91dfae33",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9dc45c01-82d7-45a3-ade2-3dd3cf3184b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f420c-eb98-4644-9c6f-7a01ec4cf141",
        "cursor": {
          "ref": "b6aa54ad-53c3-4707-8efa-53fae829d33f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4037db7d-45aa-4efb-a882-ee0ecfebfb3e"
        },
        "item": {
          "id": "f55f420c-eb98-4644-9c6f-7a01ec4cf141",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7159032b-f79e-4149-ab52-6864291757c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00777073-02c0-4127-9aff-5240a5789982",
        "cursor": {
          "ref": "0921a596-88ce-4622-89c6-540c70d11167",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "92f13f9a-d56f-48ca-9430-b5081c0e883e"
        },
        "item": {
          "id": "00777073-02c0-4127-9aff-5240a5789982",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2cf3a572-0742-43b0-9fd0-95bf4371de5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473afd2a-150b-45a6-ba94-bd2a262df3f5",
        "cursor": {
          "ref": "9431ee87-2b1d-499a-b4d2-73d6e0a2b8ca",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d98ceb18-de5f-4e0c-90cd-57ccf5f79602"
        },
        "item": {
          "id": "473afd2a-150b-45a6-ba94-bd2a262df3f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84d31a51-0d78-4e38-8382-27f6ae66fe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169bb009-4eba-4721-a2cd-77c8b4806db1",
        "cursor": {
          "ref": "f3a2fa3d-c55e-4642-a23e-8af2aa8ce84a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fc3db03e-a8b5-443b-bffa-7ff521342f89"
        },
        "item": {
          "id": "169bb009-4eba-4721-a2cd-77c8b4806db1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7f963134-0e56-41e1-a9a5-ea31f7617721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a0e9a-444d-442a-99ed-59301c77f5de",
        "cursor": {
          "ref": "9c969d88-9e09-44f9-8df4-e0dec0ff273f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3adcb700-718f-4e57-9f6d-1760aad6260e"
        },
        "item": {
          "id": "710a0e9a-444d-442a-99ed-59301c77f5de",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d7318032-948a-4941-abbd-e8a1c60b3e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab08d1-fb0d-4e45-8535-b5e4045254eb",
        "cursor": {
          "ref": "812d81d9-0495-474b-a72a-246a49d7e9b9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0dcaf679-ce27-4089-9e29-3134f8c1d24d"
        },
        "item": {
          "id": "46ab08d1-fb0d-4e45-8535-b5e4045254eb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "92a9dc1b-bb38-46cb-8aad-f6b2c06354c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a96ae78-54e4-453b-9d07-e6dd3dc219fe",
        "cursor": {
          "ref": "8c2f399f-817d-4252-921f-79b050615af6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "af8c0c51-95e9-44f6-a625-b718382aa0bc"
        },
        "item": {
          "id": "8a96ae78-54e4-453b-9d07-e6dd3dc219fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6d1c860-b495-4a8a-ac74-6a0ea040fcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cf4197-41cf-4de7-8a5e-194d3c50f3ef",
        "cursor": {
          "ref": "f525612e-df04-4ac6-a92e-673890871dbf",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c23346f8-5722-4979-8117-20072895719a"
        },
        "item": {
          "id": "00cf4197-41cf-4de7-8a5e-194d3c50f3ef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6542534-04bb-45c0-9e97-4ae40f9a5d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4f824c-e2a6-4024-9b04-b6797f71c721",
        "cursor": {
          "ref": "9f648007-b9b5-4f91-bfed-e74b1b360d1e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "12b1dc6b-8bc3-443e-b9a8-591d022abb92"
        },
        "item": {
          "id": "ee4f824c-e2a6-4024-9b04-b6797f71c721",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3ae79303-d691-48ad-999c-87e8e7be8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae904b0b-333b-43e7-bf71-2b394172001f",
        "cursor": {
          "ref": "152f14b1-114d-4d90-9f9e-734f893cc893",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b0efd5d-b6df-4765-a4e5-ec15a0be6399"
        },
        "item": {
          "id": "ae904b0b-333b-43e7-bf71-2b394172001f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6351e0de-3d2a-4793-b5fc-9e0c38bad583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dc136f-c165-4ef0-b8a2-78a126a3c9b6",
        "cursor": {
          "ref": "ef66521f-ddd7-4545-a3de-b5cf877fe301",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "170c3de9-72b2-43b8-b965-9c6f120d3727"
        },
        "item": {
          "id": "89dc136f-c165-4ef0-b8a2-78a126a3c9b6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b80d621-11bd-480f-9556-71c246232e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81be999-c629-4115-8ea9-f2bcfb3a7694",
        "cursor": {
          "ref": "c37575b7-1aa2-4bd3-9e88-512eaa3c344a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dc139975-6d99-46fd-9a19-c5b10a76df04"
        },
        "item": {
          "id": "a81be999-c629-4115-8ea9-f2bcfb3a7694",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a7f0e53-b505-4e01-a1b4-7b907c4c92be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2755094-b276-4164-973f-ec580925b2ea",
        "cursor": {
          "ref": "b771808e-fd2d-41f8-a196-99e2aaddeaf8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "56d84554-f431-48ea-912d-5091b5ad0a8f"
        },
        "item": {
          "id": "a2755094-b276-4164-973f-ec580925b2ea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2d0af977-33d9-4276-9c68-6a43da041e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e203b5-c860-492d-a360-4ad1dcab1c1a",
        "cursor": {
          "ref": "287d11de-8fd2-4592-a2b8-b2221b10c342",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "437a53bb-2b9e-4ab0-b6bb-4ba6786938d8"
        },
        "item": {
          "id": "09e203b5-c860-492d-a360-4ad1dcab1c1a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2eba4b06-6c80-4c85-9eb2-be88ae320f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ae6ac3-f7e5-4f6c-be71-6c9a79f3e115",
        "cursor": {
          "ref": "5edd948e-0cec-4650-a7ba-a0cf000536d6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5cc405c8-ea38-4dab-92cd-2fb69c2b6c05"
        },
        "item": {
          "id": "62ae6ac3-f7e5-4f6c-be71-6c9a79f3e115",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "490a7593-0ed4-4497-b721-7e485f00212d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e3b47-d6d6-4f0c-9d84-f2b0569f68b0",
        "cursor": {
          "ref": "b7e19ad6-0b66-47d0-aaff-51e0e4d04195",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b51fb875-494c-4757-9c83-9a339af52c8f"
        },
        "item": {
          "id": "af7e3b47-d6d6-4f0c-9d84-f2b0569f68b0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "db0298e9-68d7-45a4-922c-035b27b8d304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26ea995-fd92-4c10-9790-a9f777159ac8",
        "cursor": {
          "ref": "45b5a5d7-9086-4392-bb1e-8e0a930d0c5c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "77a43c1f-5df0-41ff-a74e-e296ec7dfcbe"
        },
        "item": {
          "id": "d26ea995-fd92-4c10-9790-a9f777159ac8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "28e9f766-49d5-433d-879c-6ccc2696fe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020cf4f3-152c-4f31-8c93-488f3219ea4e",
        "cursor": {
          "ref": "9c6169db-8fba-4391-946b-cc3d46116124",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0727f52d-2211-4720-aadc-ed55af2ab32b"
        },
        "item": {
          "id": "020cf4f3-152c-4f31-8c93-488f3219ea4e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cf93b62a-c8da-4970-9f00-84ec1bad4458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be779fc4-6aed-44f0-9a72-8a8bf3d71de2",
        "cursor": {
          "ref": "619fdb83-1b14-45f6-ab6b-ed9a004afc25",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8415b312-82e5-4a12-a099-6746acaedb69"
        },
        "item": {
          "id": "be779fc4-6aed-44f0-9a72-8a8bf3d71de2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "da1a6d99-49cf-45de-99fa-b013b3783fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5660456c-ffcd-48d5-ba41-49583ba886f8",
        "cursor": {
          "ref": "3e32a005-5c51-48c8-b99e-5442a96331e9",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9dbdf09f-9c6d-4347-b540-94bfdc433ce7"
        },
        "item": {
          "id": "5660456c-ffcd-48d5-ba41-49583ba886f8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8e8f1178-ba04-4a56-81e1-c75d4169a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f6676b-d9b2-4777-a6ec-35c2da9eba2a",
        "cursor": {
          "ref": "66d70245-811e-4fb7-8c1a-e448226aae4f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f73112a4-d34a-4a74-9e97-d67a96fa218d"
        },
        "item": {
          "id": "51f6676b-d9b2-4777-a6ec-35c2da9eba2a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56ae668e-d732-4883-977d-c6e0ee8a18ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f7369-15b1-4a73-b921-680a3c9e16e2",
        "cursor": {
          "ref": "1545e770-9561-4886-b1fa-13e89cba8186",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3b278d16-c8d5-4709-b058-366ee1c8527e"
        },
        "item": {
          "id": "291f7369-15b1-4a73-b921-680a3c9e16e2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "29c45af7-9091-45b3-aa7c-e55bc49b4fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ff88d2-4bc6-4388-9e63-a98c98010589",
        "cursor": {
          "ref": "80818f49-be8e-4a29-bdc7-aabf1bfc3a60",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8f4f6d84-a866-4b36-8302-3fdf4b9beb51"
        },
        "item": {
          "id": "79ff88d2-4bc6-4388-9e63-a98c98010589",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4692e5b8-e208-436c-add6-203e5a9f2379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ffac82-d3d1-4d61-93cf-438657acff1a",
        "cursor": {
          "ref": "1be136ef-1bc3-4884-a799-d48630cc7ae3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4dbedf53-72b7-4fb6-a61b-b9e65824ddf8"
        },
        "item": {
          "id": "c9ffac82-d3d1-4d61-93cf-438657acff1a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "085a8e09-53cc-4152-a599-656365287a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cf5ebd-4975-42c1-af3a-a843d956c7e3",
        "cursor": {
          "ref": "fae22bc9-149d-4c7d-b322-bfb7eba49674",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f3c1cf24-d333-4014-9a39-6cf492efb5c0"
        },
        "item": {
          "id": "b4cf5ebd-4975-42c1-af3a-a843d956c7e3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "db2b0bad-0491-4e22-903f-d45b8cb48fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c5ff5-edb5-4428-9a73-bf3f4b86af78",
        "cursor": {
          "ref": "ae98f73c-b78d-4787-b00e-ef50e8c647c6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aec303a6-5ab6-4a73-aeb1-6687004326c2"
        },
        "item": {
          "id": "bf6c5ff5-edb5-4428-9a73-bf3f4b86af78",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6fb31b96-3c86-4daa-ae7e-04c7eaeaf837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb03820-6e55-4d7f-ac54-1c7607b23161",
        "cursor": {
          "ref": "7f4a3292-0ec9-4102-a979-c00deea7892e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "269a4533-9f61-461e-aed4-e5901e5bc7e9"
        },
        "item": {
          "id": "7eb03820-6e55-4d7f-ac54-1c7607b23161",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "56b85c17-aaf3-4f99-a420-58a9abee8b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897aba7-d1a7-4806-ac1a-2eaf1a1d5949",
        "cursor": {
          "ref": "0131012b-26d4-4f46-b99f-045196da2276",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "25c4f5fd-dc69-4adc-ba0f-e64c509e7260"
        },
        "item": {
          "id": "8897aba7-d1a7-4806-ac1a-2eaf1a1d5949",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ec335c1c-225b-49b6-b0fe-246067118c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c876d9-c03f-414f-8726-58f55222838e",
        "cursor": {
          "ref": "d61ad349-bd51-46f8-9276-db531e14b3cc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "491aa0f1-2574-434e-8e89-60433b6b8e17"
        },
        "item": {
          "id": "b3c876d9-c03f-414f-8726-58f55222838e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "547f038f-a481-4c74-b4fc-cd110c08dd51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a911fef6-a7e7-450f-9cfa-bf53cb78d3f1",
        "cursor": {
          "ref": "91c5c418-f65b-4783-bd62-798c228022f4",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4b8e49f8-bb0d-43a4-a29d-4171b3940112"
        },
        "item": {
          "id": "a911fef6-a7e7-450f-9cfa-bf53cb78d3f1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0faa36db-0aac-4eae-861a-1bc6c6339525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cb1ece-0481-4887-9032-cf546e414097",
        "cursor": {
          "ref": "2ea97c53-a546-4765-846c-b1ca79d965cb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5687936e-90ce-4c0a-996a-205896e51bbe"
        },
        "item": {
          "id": "19cb1ece-0481-4887-9032-cf546e414097",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2efb271-d901-43b7-877c-ee484bdee9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baee7a64-735e-4141-9470-82b257f001a2",
        "cursor": {
          "ref": "117be479-fd97-4159-a790-f7fa7d0f9ef2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9e035acb-678f-4581-b8fe-4943d4d8b711"
        },
        "item": {
          "id": "baee7a64-735e-4141-9470-82b257f001a2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d1e909bd-3c5e-4b35-811c-abb0b1843bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfbc882-3185-46d3-b016-6718162f8d08",
        "cursor": {
          "ref": "0ab638ba-5f15-485c-9000-7d3ead227445",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a65313bc-3df4-4f01-8fc0-49eb1156d55a"
        },
        "item": {
          "id": "ecfbc882-3185-46d3-b016-6718162f8d08",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a6b2247-70e8-4f3a-bddf-153b6540238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927923b6-0673-42b8-9b82-83a97ab815c4",
        "cursor": {
          "ref": "b0e56e25-9af7-486b-8772-d68b3bb3e05f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "aa9d7652-53a9-4163-8b80-1ff8c2aec18e"
        },
        "item": {
          "id": "927923b6-0673-42b8-9b82-83a97ab815c4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3242c639-4bb3-426b-b4a8-1b04b137ba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1f3f12-ee5b-45ac-b33e-855a56169307",
        "cursor": {
          "ref": "dbbe7500-be2c-4ace-af9b-14cfc4066a56",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5e2985b0-ed20-443b-9843-f1d701f5ffbb"
        },
        "item": {
          "id": "2e1f3f12-ee5b-45ac-b33e-855a56169307",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2e937ea1-a1c3-4346-ba01-dc2ba1fc362e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd102910-7f24-4f39-b77f-67acbb30ec06",
        "cursor": {
          "ref": "306b43fb-94f6-42f0-a60a-07f53c7b0916",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d3645cf2-41a9-4019-a299-88c6a95262e9"
        },
        "item": {
          "id": "cd102910-7f24-4f39-b77f-67acbb30ec06",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "94e3c78e-89a9-4e3a-bd8b-9349a718394b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc72b409-80e2-41f9-8f62-2e2ba68c7999",
        "cursor": {
          "ref": "60acf94c-fc39-4275-9771-f13b5d847b7c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dada2897-df57-4b05-abf1-fb54e336e8c6"
        },
        "item": {
          "id": "bc72b409-80e2-41f9-8f62-2e2ba68c7999",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6298c8f1-51fc-4873-95cc-1af934c11751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae851f-154c-4883-b9c5-8a97516a17b1",
        "cursor": {
          "ref": "ae7d1024-c0af-4121-9ab4-581eb9842444",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "373852e6-083c-4724-9770-2a66c5e484e8"
        },
        "item": {
          "id": "92ae851f-154c-4883-b9c5-8a97516a17b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "91730df3-ad72-4286-93ca-b53d94b5afa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21089e0c-2241-44e1-bcba-c8c0e9dbacb0",
        "cursor": {
          "ref": "49a09328-721d-43f9-b591-fad6c8416482",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ee2ee1c6-4c2f-4d2a-95f7-4f070737a718"
        },
        "item": {
          "id": "21089e0c-2241-44e1-bcba-c8c0e9dbacb0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7635fa0d-8e6c-4347-9323-aaf66d6c3772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c0d23c-cc1a-4e4e-b35c-90b40f27a0ae",
        "cursor": {
          "ref": "c1d830a4-6064-4b0a-9c3c-566a08ba0c5c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "74383b3f-4f28-474d-8db1-868c05b160a9"
        },
        "item": {
          "id": "10c0d23c-cc1a-4e4e-b35c-90b40f27a0ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bd85b4e0-22b1-4663-8003-0acd35267c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2475992d-e3c5-42a8-82c6-aa39f8c50697",
        "cursor": {
          "ref": "c33a5d4a-db15-4d95-9f84-035934c21d9e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bca03f56-30a2-44f5-8932-a48c2e88f7da"
        },
        "item": {
          "id": "2475992d-e3c5-42a8-82c6-aa39f8c50697",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3eeda6f9-30a4-4959-8b74-9dabbf9db734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52daffac-ef45-46a9-b8f2-1cad354c165b",
        "cursor": {
          "ref": "14ea268a-b121-4477-bfd4-271a005c07d7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a80eccc-7b43-42d0-a695-8e63dc144f54"
        },
        "item": {
          "id": "52daffac-ef45-46a9-b8f2-1cad354c165b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3c820a3e-66aa-4f40-82bb-d7bea8fd90f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccd3bd6-aee7-49e5-b08b-72562b77b10d",
        "cursor": {
          "ref": "c95982ef-5766-42ab-8062-278804f8cc4b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ad2ce763-f4b6-4c57-b126-a3943afd07b6"
        },
        "item": {
          "id": "9ccd3bd6-aee7-49e5-b08b-72562b77b10d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "41394916-717f-4a2d-a2ef-158611116b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac8cee-4826-44c9-b946-e53387806e8e",
        "cursor": {
          "ref": "da7faa17-b979-4f99-ba42-ff0c2de9e94a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "817a9eb0-5292-4e31-ab05-25544655cf3f"
        },
        "item": {
          "id": "2bac8cee-4826-44c9-b946-e53387806e8e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "188afcac-6128-4464-9c79-4ba32b6b1bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0641b8d-aefa-4b4c-8084-b05b42915028",
        "cursor": {
          "ref": "7144ab67-6121-457e-98ef-3c9786fb7986",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "db7ba0be-0288-4d40-a987-a07ccf4f09ff"
        },
        "item": {
          "id": "a0641b8d-aefa-4b4c-8084-b05b42915028",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "78705c5a-c914-48b4-b1bb-39c1296937a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f9121d-93e1-4a33-a644-91ee04bf6e03",
        "cursor": {
          "ref": "d4ed9538-f3f3-45eb-9c08-505ab85014c3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b8d9ebfb-09b7-4935-9678-d8dba1754a1e"
        },
        "item": {
          "id": "c4f9121d-93e1-4a33-a644-91ee04bf6e03",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e9c5780-903c-4202-9d43-2a0995553cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfcc228-86e7-4cb4-a081-d3548c0b34e4",
        "cursor": {
          "ref": "db826ecc-b15b-4fc3-b00d-3a06d93288bb",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9f58a588-b2c5-4668-a450-b83084d93647"
        },
        "item": {
          "id": "1bfcc228-86e7-4cb4-a081-d3548c0b34e4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3aa215ae-03fe-4ac6-8879-67167584f785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ca07b9-1381-4d99-9462-80abf36340e8",
        "cursor": {
          "ref": "445a328a-b624-4025-ba75-72dd227d8c9e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "61fbbde1-7f14-41ae-83f1-d340f33bcedc"
        },
        "item": {
          "id": "87ca07b9-1381-4d99-9462-80abf36340e8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f2f80bb0-853b-447e-b107-fc0e8b43b328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9a255-527d-43b5-8685-e7a8f6fd224f",
        "cursor": {
          "ref": "24f802cd-31c7-4f66-b32a-7536c2f8b2ec",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d1067b2d-05b8-44d7-9c6e-b73a16210faf"
        },
        "item": {
          "id": "c0f9a255-527d-43b5-8685-e7a8f6fd224f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b26424fe-735a-47f0-ae54-32783f36d980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91f2970-b9fc-42ab-8816-c94600be162d",
        "cursor": {
          "ref": "afd7935d-6bae-4c10-b26a-6ba15441c0e9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d9b7858f-9db4-492a-aa89-e9a9b61e2575"
        },
        "item": {
          "id": "c91f2970-b9fc-42ab-8816-c94600be162d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a816b484-4080-4f70-a998-3f31a54de0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149b7db-6953-47f2-912f-b1d513aa9583",
        "cursor": {
          "ref": "8321af75-4a0b-4f77-97a9-d015f70de3ba",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f25f3661-5b6e-4c80-af99-615bae2a4ee5"
        },
        "item": {
          "id": "9149b7db-6953-47f2-912f-b1d513aa9583",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eda9865e-23a2-4ec5-9fcd-10eca181be8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6414d1f-64b4-4fb5-a210-e45b3b4c7cc1",
        "cursor": {
          "ref": "6cc8f010-793d-417b-849f-4d2496116144",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cf1387ef-2c03-4076-9ce2-a1ac923317af"
        },
        "item": {
          "id": "d6414d1f-64b4-4fb5-a210-e45b3b4c7cc1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "71ac544b-93ee-4ba3-9bf5-75f8c41a2b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e94b41-b300-423a-b677-e239ca1e5dca",
        "cursor": {
          "ref": "e5b8262f-db9a-44f8-8d3d-ab8e1c016b6f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2a78a2b6-4842-4ab1-8f5b-ed764f405786"
        },
        "item": {
          "id": "a5e94b41-b300-423a-b677-e239ca1e5dca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "54e64b77-bc15-4fad-9d9e-58c443b78703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02929242-522d-4503-8113-7e349bde2643",
        "cursor": {
          "ref": "adfef7c4-fde3-43c3-a535-f0373147d9fc",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a6c5be66-9875-4865-afda-83262414fd54"
        },
        "item": {
          "id": "02929242-522d-4503-8113-7e349bde2643",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7c0e473e-fb9b-498f-833a-c9308aa5163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1af4e30-904d-48e1-8048-b2d106444adb",
        "cursor": {
          "ref": "411dc99d-d932-4e8d-b7d3-31c90b115089",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8f0a3224-fbeb-4019-ba66-56fcebb38483"
        },
        "item": {
          "id": "b1af4e30-904d-48e1-8048-b2d106444adb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f4e03b0-86fc-4eec-8784-4efe914f788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a64f4c5-3d62-4cc2-8732-04484465226b",
        "cursor": {
          "ref": "1fd65aa6-00f9-4dc7-b145-3280944a59f4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3ef3c317-879c-406f-b76f-3e88aa60e22d"
        },
        "item": {
          "id": "0a64f4c5-3d62-4cc2-8732-04484465226b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3e575a25-2a2a-43a4-a82e-3a12e1d7b60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13df676e-e0d5-47bb-8a12-d31056fdb11d",
        "cursor": {
          "ref": "fe2d1d51-1a5b-4942-84e5-42dc475a1a90",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f22d67be-7a0d-490d-92b0-fcda2c3d77ad"
        },
        "item": {
          "id": "13df676e-e0d5-47bb-8a12-d31056fdb11d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bf12098a-5633-4e4c-bc82-867aaa776e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7989b80-a78f-4d7a-a608-88cc655e4553",
        "cursor": {
          "ref": "dc7a1ec8-8b07-4fde-84c6-64b85b335583",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7c83f612-1770-4d1b-aace-4eda8e1ee693"
        },
        "item": {
          "id": "f7989b80-a78f-4d7a-a608-88cc655e4553",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cc302164-8b1f-4bb9-a828-a02eb84e8c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a72916-77b8-4e3a-b9a9-a8cfd0ca8f83",
        "cursor": {
          "ref": "f32293b2-d429-4736-94fd-dd55bd790f9a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9c4ce6ad-fe08-43e5-89f8-8844b2c52afb"
        },
        "item": {
          "id": "c3a72916-77b8-4e3a-b9a9-a8cfd0ca8f83",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a65b9b0c-9296-411b-9117-e90f15ddb711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3f0861-a586-4bc7-837f-d0fa0b96c722",
        "cursor": {
          "ref": "464129f9-8be0-498c-9b18-03b0c4ee88bb",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6a68b8b9-4d22-4fff-bd6b-3cdf865d1ce8"
        },
        "item": {
          "id": "1e3f0861-a586-4bc7-837f-d0fa0b96c722",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7304fb23-b951-4c58-adf7-16f550b35ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e7c6f9-ac7f-4d8a-9834-a16c59cfb22a",
        "cursor": {
          "ref": "3f7425c7-e7e7-46fb-92c2-ab9235210287",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a40e1788-1c85-4896-bae4-c054f0f57079"
        },
        "item": {
          "id": "56e7c6f9-ac7f-4d8a-9834-a16c59cfb22a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "994f19cf-cf18-4db1-9da4-de6900ffb5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b1c688-3215-41e9-95cb-268263d9614c",
        "cursor": {
          "ref": "ec752b5a-bec8-4018-8f47-ec59f86ec736",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0b8d4144-0ec5-481b-a072-a9dda1155131"
        },
        "item": {
          "id": "c9b1c688-3215-41e9-95cb-268263d9614c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c936617b-32a5-4a34-b7c9-c7cce6dfb3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955e49a5-8bc4-4de2-80d6-86feb9d50712",
        "cursor": {
          "ref": "9623364f-7cd0-46be-9657-b58c903ad505",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "db02cd01-25b8-4164-ac95-d83c58baa2f4"
        },
        "item": {
          "id": "955e49a5-8bc4-4de2-80d6-86feb9d50712",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "172238fa-5123-4aea-9302-57efafc22359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19a1827-44b3-4b79-86ec-594fb4b8a7ea",
        "cursor": {
          "ref": "60cbf492-5040-4dc9-ad41-20e24b4f65f7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b0043c62-8b0a-4981-9414-f7a62da310f7"
        },
        "item": {
          "id": "c19a1827-44b3-4b79-86ec-594fb4b8a7ea",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8ae5813c-d469-4430-91c8-f6540337c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e6a60e-348a-4c17-92ba-0a10fbf08856",
        "cursor": {
          "ref": "a39c75fd-f3f4-4de7-98ef-ef968a1447ee",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fbc81348-acff-4916-b547-e28a6dd17046"
        },
        "item": {
          "id": "25e6a60e-348a-4c17-92ba-0a10fbf08856",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b08463bb-0703-47e7-b972-e08b0bbda162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9257469-1b04-4614-9bec-6155e1a7bbd0",
        "cursor": {
          "ref": "0c161b81-3a41-4252-92bf-f44f3ab81cac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8a705762-a2a2-4087-9b20-f07f483f0e8d"
        },
        "item": {
          "id": "e9257469-1b04-4614-9bec-6155e1a7bbd0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b9747454-c518-4827-82d7-aba37e74e396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44c900f-6d7f-44d3-9179-eba9b81e1aea",
        "cursor": {
          "ref": "d9140250-dacf-4c4b-ab7b-25f56e900ab2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc6f8d57-dbd6-4e15-ac9b-c878ed90605b"
        },
        "item": {
          "id": "d44c900f-6d7f-44d3-9179-eba9b81e1aea",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d23fc056-0221-424e-a5fb-7f447b374150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a351626-5153-4a87-a962-e5624a1b3a76",
        "cursor": {
          "ref": "dc95de15-ef9c-4e7a-87f2-b1420701ab56",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "87717265-ca26-4b9a-a1dc-a9cd167cce04"
        },
        "item": {
          "id": "5a351626-5153-4a87-a962-e5624a1b3a76",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "890a7266-b3b0-437d-942a-1da0d012a141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc63874a-998f-4688-b110-7a05ce05fb8f",
        "cursor": {
          "ref": "95ad664e-c6fd-45b8-9f66-229b70a67c55",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "213a0720-eeb9-4b9f-91b3-6b1566f30510"
        },
        "item": {
          "id": "dc63874a-998f-4688-b110-7a05ce05fb8f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c452c89b-e61a-47a2-bef2-d1f7a1b29d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e6c3b2-fffb-4511-ba24-dfb861e5b855",
        "cursor": {
          "ref": "916c41ee-4e42-492f-a44e-3e2333faf6f3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8f0140ca-e2f0-43ad-bc7b-21b15598d23f"
        },
        "item": {
          "id": "b9e6c3b2-fffb-4511-ba24-dfb861e5b855",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3769f4e8-6539-42db-96d9-47086b1035b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970f6896-64f7-4e9f-a515-6f83f75bb734",
        "cursor": {
          "ref": "3158f752-7096-4765-b540-ffa9b761873c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ace2f231-c606-4cac-95ba-c3034d30d9f7"
        },
        "item": {
          "id": "970f6896-64f7-4e9f-a515-6f83f75bb734",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e81475df-1b8d-4227-8be1-3c7b04571d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c992d216-6527-4dbc-bb5a-a7323ae1e94c",
        "cursor": {
          "ref": "6d60a23e-d740-4209-95bf-b8283feba3eb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "072bb0d3-0aab-40db-a6a1-c86a0533e827"
        },
        "item": {
          "id": "c992d216-6527-4dbc-bb5a-a7323ae1e94c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5888a0b0-4d44-4c27-a4db-118d7dfc1eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9567f1f1-5435-4e9d-8847-fe6dd5cb7887",
        "cursor": {
          "ref": "209e4a52-78b5-43b4-9dd6-858186945ecc",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "88ecdbb7-1fc3-48d9-a3dc-6e0defc1e5b9"
        },
        "item": {
          "id": "9567f1f1-5435-4e9d-8847-fe6dd5cb7887",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6fe8449b-28b2-4cd2-b877-c19387725525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3813bfeb-cc0d-4f18-aedb-c556247be23f",
        "cursor": {
          "ref": "f5f8fcc4-6c53-4471-8f24-95fa2efe5afe",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6c121ac0-61b6-4123-b372-7b7917c821df"
        },
        "item": {
          "id": "3813bfeb-cc0d-4f18-aedb-c556247be23f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e1b4d046-5b54-41a2-865a-04a2fae72dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5fa01d-d00d-48bf-9902-96236f2c59b7",
        "cursor": {
          "ref": "9e21493f-9fd9-43d5-9459-f7ffbbe52385",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4fc66737-1432-43f0-a1a9-7f35a16153c4"
        },
        "item": {
          "id": "9b5fa01d-d00d-48bf-9902-96236f2c59b7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "437b9aa4-88c0-42e0-8ee1-ab9059b1290a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1218df-a3ee-4ce3-b558-fd9fe1404e07",
        "cursor": {
          "ref": "d444d0d4-1b94-4edf-8a2a-5bab174f18f3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6dfb449b-bb43-4300-83b4-42b4b0cec9ca"
        },
        "item": {
          "id": "de1218df-a3ee-4ce3-b558-fd9fe1404e07",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8e61a3cc-792a-4fb4-8939-5a24f26921bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b382b3-fa48-497d-8779-ba536daa22b7",
        "cursor": {
          "ref": "33c8d96f-d31c-4296-ab03-8de82394ef65",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6919efde-07c4-49ec-8e3c-2d150baee029"
        },
        "item": {
          "id": "58b382b3-fa48-497d-8779-ba536daa22b7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2e72346e-0cfa-4625-a3c3-1602cd831515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db219e3f-6adc-451b-96a8-2fb6f33b0dee",
        "cursor": {
          "ref": "3b1e313f-18ee-4989-bd34-3d25b10e2ab7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9db0cbad-73d9-4c32-90bd-086e79db2e24"
        },
        "item": {
          "id": "db219e3f-6adc-451b-96a8-2fb6f33b0dee",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f04ffd2d-3971-4535-86a0-ff690a8f10c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe624d-45cd-47d8-af76-8e9e93ebec09",
        "cursor": {
          "ref": "b994b8e5-65d1-4cee-b561-e809b0d2ca98",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c5b98ea1-1eae-4895-a91b-6b5612e36216"
        },
        "item": {
          "id": "7bfe624d-45cd-47d8-af76-8e9e93ebec09",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dc2402e2-0ff7-4272-bc3a-f533ab5e7c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b700349a-95c8-432e-94ce-a020bad16213",
        "cursor": {
          "ref": "50379771-43ff-45a6-a139-4bd2aa0d75fa",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a61ab0a8-acd5-4b55-a730-8ef2645bdd4b"
        },
        "item": {
          "id": "b700349a-95c8-432e-94ce-a020bad16213",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "23230037-4a2b-44c2-8e4d-edf288c73db0",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "456786fa-ddb5-4208-ad57-38683efd70bb",
        "cursor": {
          "ref": "47f3a21f-7959-41ad-b309-5a6a4d90cc48",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf539ed3-887d-4a22-b870-2feff48a076b"
        },
        "item": {
          "id": "456786fa-ddb5-4208-ad57-38683efd70bb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c674a9a5-ed08-4d59-bec0-04309b292bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba43431-e477-434f-b186-da050e9910bd",
        "cursor": {
          "ref": "34967d3e-8708-48e6-a003-cdac86e755e3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9eafdb88-84a5-485f-8c54-b4928a386635"
        },
        "item": {
          "id": "1ba43431-e477-434f-b186-da050e9910bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a1716f7a-3515-42dd-bb00-a99397a2338e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d644c8-a2ee-41f5-863d-690758eeb860",
        "cursor": {
          "ref": "3efb8872-d289-40f9-a161-3af6c484fabb",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "088f498f-817c-40e4-aa07-bbef485784dc"
        },
        "item": {
          "id": "81d644c8-a2ee-41f5-863d-690758eeb860",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "03427e5c-9e43-4b36-9a9c-e60e7844b792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6164f-de69-4751-926d-8804a40ceb3a",
        "cursor": {
          "ref": "5cc17da5-c5db-40d3-899b-7ba391e0fdbf",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4cdd24db-8ab4-4844-b48a-3c2fc08bd116"
        },
        "item": {
          "id": "8bf6164f-de69-4751-926d-8804a40ceb3a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0bdd5a6f-c58c-47d1-bd6e-0f5b22e1da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b7c188-3c53-479d-b3db-226f52749bc7",
        "cursor": {
          "ref": "dd679760-a3b0-4a38-9643-305a2cc71587",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b4c59947-f13d-457d-8ced-7c1998628598"
        },
        "item": {
          "id": "e4b7c188-3c53-479d-b3db-226f52749bc7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "06dc92eb-b923-4e6a-89f4-25a6421220ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c4aefd-88eb-41ef-af9f-ced29a3a7b95",
        "cursor": {
          "ref": "e5a7b4e2-70ff-4c3e-acdc-d9f2c70d9677",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4bfe7c18-d831-46ee-bc67-135140100bca"
        },
        "item": {
          "id": "14c4aefd-88eb-41ef-af9f-ced29a3a7b95",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "167ba4fd-cde0-456d-a536-717095c4dce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0243cd-5017-4a53-b95e-746e7ecf28e5",
        "cursor": {
          "ref": "116ca626-9c53-4054-9c5f-daaaa8fdcfac",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1c4a11dd-84c3-44c3-aec6-da6a60a8531f"
        },
        "item": {
          "id": "cc0243cd-5017-4a53-b95e-746e7ecf28e5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "921a6a81-a74b-4985-ba14-e819c5890858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88828f3-4c3a-4d4e-b338-f3381b6cee98",
        "cursor": {
          "ref": "cb7a8ba4-b632-45cb-836e-4e2f5fce9d37",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b17869e9-1fea-4948-936a-c1770e76c4a7"
        },
        "item": {
          "id": "c88828f3-4c3a-4d4e-b338-f3381b6cee98",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cc87b52e-81be-482d-b1d4-78e22c22a5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b61a72-b2d5-48f9-bfde-99b65fd0bd5d",
        "cursor": {
          "ref": "fa78e2bd-7e0b-492e-99af-ff4e497b4199",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "acf5d1f6-b167-4767-aae1-332c09f04cd6"
        },
        "item": {
          "id": "e7b61a72-b2d5-48f9-bfde-99b65fd0bd5d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "88f7a492-e3c5-482e-ac1a-d17e060af67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dea7aa-a6ac-45f4-becf-7bbe61f12885",
        "cursor": {
          "ref": "0dc154d5-4006-41a5-8e6c-66c7a346f64d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7869d97c-1aac-45f5-9e11-88116e839b60"
        },
        "item": {
          "id": "b6dea7aa-a6ac-45f4-becf-7bbe61f12885",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cfee31db-18c5-4b35-bee4-9cd61df1f087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43072c7-e1f8-442a-889b-79668809d38c",
        "cursor": {
          "ref": "4e4747a3-d857-470e-ae02-cd61ab5ae438",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c27f6499-9d78-482d-9e5c-6c9d005d1e19"
        },
        "item": {
          "id": "d43072c7-e1f8-442a-889b-79668809d38c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2472d40f-a34a-4ccc-8aef-16ed04195abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f13d78-04d1-4ba6-96cd-bcffd5df4548",
        "cursor": {
          "ref": "f163a82e-d8c7-44e5-842a-9bf90cccf36d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f26fe026-87c6-4007-8b79-1e26772bc682"
        },
        "item": {
          "id": "95f13d78-04d1-4ba6-96cd-bcffd5df4548",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "652c471e-10d9-46ea-88e1-b3f949e18073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b5a711-4d67-41f0-8239-11431ad26441",
        "cursor": {
          "ref": "6119c63c-52e9-4162-b225-9d2d7dc64b9a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "64912f98-4a0c-4a92-8dd0-7e69e06b1f86"
        },
        "item": {
          "id": "c6b5a711-4d67-41f0-8239-11431ad26441",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a313c6d-3bc4-4011-8d94-a1c6295d256a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96fd524-0ef9-4526-ab0c-8f6b76734d70",
        "cursor": {
          "ref": "6cf307b8-92f9-4d11-8fd2-0b3500a8cab7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "168a6217-0ae2-4988-a9aa-556f012fa401"
        },
        "item": {
          "id": "e96fd524-0ef9-4526-ab0c-8f6b76734d70",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d4616b07-e822-4ea0-9648-112118c03bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81663d4-9966-472e-90de-658427e97a8f",
        "cursor": {
          "ref": "c1fa5cc9-feaa-47a1-adc6-3e84abb7dab5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "978fad5d-1fa0-4b57-8c16-500c70cdb1b4"
        },
        "item": {
          "id": "d81663d4-9966-472e-90de-658427e97a8f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b532e12b-30bc-478b-8ee3-e5f28dfce6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f95b6df-c814-47d0-a5f7-7f9a43b8663b",
        "cursor": {
          "ref": "20b36814-6f10-4023-8298-3e8637fb2e7d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4747b415-6451-40f0-8e23-2518fbc79f24"
        },
        "item": {
          "id": "4f95b6df-c814-47d0-a5f7-7f9a43b8663b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ccea04ea-da77-4e51-9eb1-0c479dbf04a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ba95a5-4983-424f-b0b0-379ad2caf1d1",
        "cursor": {
          "ref": "a92d6651-61bb-4834-88d5-b94b9491e3b1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b8cc2290-469a-491e-8d62-38402390f8ff"
        },
        "item": {
          "id": "34ba95a5-4983-424f-b0b0-379ad2caf1d1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "49d53a4c-dfcd-4a7b-b053-3c2f5b9f8443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2e90c9-e703-4718-8171-12c561716f47",
        "cursor": {
          "ref": "684a1e06-cf4c-463e-87e4-8163ee6da8db",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3d2d8f51-3119-4ba3-a3c3-e78d68cb3a35"
        },
        "item": {
          "id": "ef2e90c9-e703-4718-8171-12c561716f47",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ed017f1c-e173-4216-bcc7-eee3e721132d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c3df08-d2a3-4f01-9d5f-cd60b3c89387",
        "cursor": {
          "ref": "354548dd-7d2a-4797-917b-2d81ecaa0fa3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "57a52eb1-a559-4eeb-8c80-e79b4f85339e"
        },
        "item": {
          "id": "d4c3df08-d2a3-4f01-9d5f-cd60b3c89387",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1e629fde-1480-4e4b-b3ee-c0f89b700fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cd0fdd-2128-4e5f-879d-6816d968e534",
        "cursor": {
          "ref": "d6d6d2ce-0577-4c9c-9202-e5dc56ccba0b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "deb48617-9614-4d60-b20d-a8fc2f28dbe0"
        },
        "item": {
          "id": "e4cd0fdd-2128-4e5f-879d-6816d968e534",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e6894154-a39f-4e24-8c75-fa9a19f41ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a653fdc-9a75-40d9-8581-93c5103f6cce",
        "cursor": {
          "ref": "8ea43328-cf90-4416-9a96-d5790bac0b2b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "15cc3696-b85b-4401-8c35-2b4dc680f55c"
        },
        "item": {
          "id": "1a653fdc-9a75-40d9-8581-93c5103f6cce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e50a2619-f690-4235-a58a-589ae94f062b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f87e90-e49f-4bee-9721-798322480467",
        "cursor": {
          "ref": "4798e534-5def-4d91-a1ed-ac2e63e5d42e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "228a6d7b-143a-4684-8102-5b5d808b97b1"
        },
        "item": {
          "id": "15f87e90-e49f-4bee-9721-798322480467",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "62dd389f-b3b2-4874-bf16-055d0062befe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134099cf-1982-49f2-b1fc-3c0e3403daf1",
        "cursor": {
          "ref": "5727afae-c73f-48d3-8731-525de4445730",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9dd060d3-3bf8-402e-8d7b-ee82cf2eeb28"
        },
        "item": {
          "id": "134099cf-1982-49f2-b1fc-3c0e3403daf1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ba135d5c-092f-46ef-a7de-a7bada861965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7293f82a-1d85-4947-a98f-e26494c8bd1a",
        "cursor": {
          "ref": "90003ab7-c40d-4384-a02b-0c878d936790",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3a3dbd58-ea2b-467e-9407-5c2302910443"
        },
        "item": {
          "id": "7293f82a-1d85-4947-a98f-e26494c8bd1a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f73d9d91-3a70-4b65-9780-03fe2e9a948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6a1814-b015-4e30-9255-78fd5bd3be98",
        "cursor": {
          "ref": "835848b9-a736-4c25-8d5f-9e1514da4729",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7b963479-33aa-4a07-8a41-d947d420512e"
        },
        "item": {
          "id": "2b6a1814-b015-4e30-9255-78fd5bd3be98",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a62ccef0-8a49-4380-b7f6-7ced7edf8ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179892f7-1181-4f5f-858a-3bf86b2b6adb",
        "cursor": {
          "ref": "5f8cc733-60ea-450a-85e0-d9e4db8d46dc",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b1023229-fe25-4358-b06c-29191d4ef708"
        },
        "item": {
          "id": "179892f7-1181-4f5f-858a-3bf86b2b6adb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "06eef826-ee89-4fa2-ad3d-98256a807ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ebbef4-50af-475a-962b-f17f12b49c17",
        "cursor": {
          "ref": "7b129a99-06fb-43de-8c96-f59ad1ce32ef",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bda67d8c-746f-477f-8091-9c2ab101e26c"
        },
        "item": {
          "id": "69ebbef4-50af-475a-962b-f17f12b49c17",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "746a4ce4-7461-4aac-a159-a2157c48f36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0405f95-8745-483d-9bd3-b5cb9a118c58",
        "cursor": {
          "ref": "72ceb6b0-ee04-4af0-8530-7aef6d5d2ba8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d1466532-5a49-48dd-863e-bdaa432bd55c"
        },
        "item": {
          "id": "b0405f95-8745-483d-9bd3-b5cb9a118c58",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9467f347-f716-48a3-9ffa-c9bf4101c4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb884700-3963-467e-a933-5d0104167551",
        "cursor": {
          "ref": "c866bd6f-8ae7-4f71-9771-e2fc73369fc6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "16348d52-8961-4047-a40a-8c6c0997305b"
        },
        "item": {
          "id": "cb884700-3963-467e-a933-5d0104167551",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c870ec32-7915-4a43-aafc-1239edc99312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99327c03-d87d-4ff3-9398-d426461e7fab",
        "cursor": {
          "ref": "41703f7d-257b-4201-b6be-360f3d5478dc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "76c15a94-fab6-4e1b-ab98-569c1dc8a338"
        },
        "item": {
          "id": "99327c03-d87d-4ff3-9398-d426461e7fab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e8337dba-1eff-4527-adf9-a8a6a4597cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0089c6-0319-4192-a582-ae117e4b1db9",
        "cursor": {
          "ref": "67f5d517-8cee-4011-9998-7a4895d4d65f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b5a534b8-7e4a-45f5-8ed0-757818a459e7"
        },
        "item": {
          "id": "fe0089c6-0319-4192-a582-ae117e4b1db9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "79d37218-0984-4c55-9300-8b7077e37dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ab4400-22af-4431-badf-e0251290e965",
        "cursor": {
          "ref": "aceba555-9e1f-4cfd-b326-715cdfc35b45",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "348cbcb5-5092-47b9-b8c8-a510cdb5dc1c"
        },
        "item": {
          "id": "19ab4400-22af-4431-badf-e0251290e965",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "80cfefa9-2324-422b-bc3d-201fbc1bb519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b598cf43-7fcd-478a-b4d6-ad10cdfab1ed",
        "cursor": {
          "ref": "8a854c10-6c41-48bd-966e-603211fe623c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d24d4c77-8110-406e-bea4-b5e8ced9d710"
        },
        "item": {
          "id": "b598cf43-7fcd-478a-b4d6-ad10cdfab1ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f0ea1e49-712c-469a-900d-460a7868fb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c673976b-4a63-448f-97ac-fd1613dc7fe0",
        "cursor": {
          "ref": "eacf6d44-1ba1-4996-b90f-71e3094883ca",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "98a41c85-642c-4948-b017-284efd85ee5e"
        },
        "item": {
          "id": "c673976b-4a63-448f-97ac-fd1613dc7fe0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5fe37514-f015-4202-84e4-a7f5994c370b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24622a5-7a06-492c-b274-465f0f2051bf",
        "cursor": {
          "ref": "6a7b1aae-1bca-4313-b237-6b064edf00e1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "19410781-469c-4bc2-83e0-c19e991226dc"
        },
        "item": {
          "id": "a24622a5-7a06-492c-b274-465f0f2051bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5d78a404-0dd6-44a7-b1d3-6ec28e7aee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c2e81b-0ba4-4c76-b77e-7ba617f87f46",
        "cursor": {
          "ref": "3b502656-1344-4270-be8e-1ca76b588b4e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "aca97e39-8d47-4956-a862-ab90623211f0"
        },
        "item": {
          "id": "b4c2e81b-0ba4-4c76-b77e-7ba617f87f46",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f77476fd-a6a7-4fea-9de6-dd8f2edc0166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba90c8af-f6f4-4610-a79f-3922961859fe",
        "cursor": {
          "ref": "c1242bf6-01fa-42d4-a1e6-5752fa521ed5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bbd2a459-8b79-4ecc-9b76-a6f817db3e2e"
        },
        "item": {
          "id": "ba90c8af-f6f4-4610-a79f-3922961859fe",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0db2154c-d68b-4577-8154-5c4c37e6917d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfe6c72-758f-4630-a537-b774a4525eac",
        "cursor": {
          "ref": "72adc068-03b8-43ec-9968-da791447dd63",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "69438956-7181-4635-92e0-0c04ceefab9b"
        },
        "item": {
          "id": "1cfe6c72-758f-4630-a537-b774a4525eac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "deccd3da-1005-45a7-98e0-06ba4adcef38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126b4480-617e-4915-a16b-e459d145cfd9",
        "cursor": {
          "ref": "68e9481e-0acd-4e8d-ac52-4820057a54c0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9612374d-ed3f-4ba0-9b63-0e459edc017e"
        },
        "item": {
          "id": "126b4480-617e-4915-a16b-e459d145cfd9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "732d63f0-c726-4e66-a742-5c758656b047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057e9e95-aff8-4b11-afca-5de08afaed36",
        "cursor": {
          "ref": "c1015e93-3aad-43f5-8f9e-c5e24cb672ea",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bd5fdffd-6a4c-4929-8aa0-b4671bfd4897"
        },
        "item": {
          "id": "057e9e95-aff8-4b11-afca-5de08afaed36",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5cd9c4c2-4b6f-418f-b959-829e26698164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8be4c5-25bb-477d-b356-2635ef3e691f",
        "cursor": {
          "ref": "b51f903d-5ccc-4c77-80b5-8cb538cad624",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cd2bd357-143f-4c59-b721-5c4406556e4c"
        },
        "item": {
          "id": "7c8be4c5-25bb-477d-b356-2635ef3e691f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1f7458db-8023-4edb-ae52-566f1ae78e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64e930d-7ab1-41c1-87f7-ad0d560a4132",
        "cursor": {
          "ref": "7b46b6d0-6e90-499e-92cb-858e09bcc741",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a8d43f28-b652-4889-9e15-a465079f47ac"
        },
        "item": {
          "id": "a64e930d-7ab1-41c1-87f7-ad0d560a4132",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "88bb3962-907e-43ab-858a-b71bbd2c8921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f502f0-3050-4c12-95f3-a9e35f3537fc",
        "cursor": {
          "ref": "63551765-658c-43f8-a7e8-e820b269f124",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cd518a06-6510-4c37-858b-8bba81817ead"
        },
        "item": {
          "id": "29f502f0-3050-4c12-95f3-a9e35f3537fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3812bf37-52ea-4cbf-865e-3940b3840256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9c19f0-9402-4401-a42b-de6b0dd1f750",
        "cursor": {
          "ref": "a6fec0b1-7342-4a91-8d74-44805e1e1341",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e5c26f02-4528-47f1-9b6c-1251a4a26beb"
        },
        "item": {
          "id": "aa9c19f0-9402-4401-a42b-de6b0dd1f750",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc8fc5c9-07ff-4067-b866-f5438d162710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e5062c-de3f-4fbe-9338-c6d1647c9a3d",
        "cursor": {
          "ref": "b143ccaf-476b-435f-a2f3-0ff0defec82c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1b97a27b-b1c9-4e8e-afbc-fbfe584a998f"
        },
        "item": {
          "id": "22e5062c-de3f-4fbe-9338-c6d1647c9a3d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c9c1e650-b916-48f4-8874-432fb876454a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263dc69-4602-43f8-a0cf-adcbf8dd7e15",
        "cursor": {
          "ref": "1214ee6d-4086-432f-87b8-feb7178c84e4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "71d1b717-56b6-4a51-988c-ee37e994faf7"
        },
        "item": {
          "id": "7263dc69-4602-43f8-a0cf-adcbf8dd7e15",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "38ac5bfe-fb9f-481d-afcf-cfa8ac8eb1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460abf26-0e93-4de8-9faa-752b6e4a8e2c",
        "cursor": {
          "ref": "0a2f6d4c-c4b9-480c-b0d8-1af92b55a00a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "01cfff59-c161-44c1-8275-ffa61ed77394"
        },
        "item": {
          "id": "460abf26-0e93-4de8-9faa-752b6e4a8e2c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7c870362-288e-4479-9bc8-47b623b591f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0eb5e6-4e91-4aad-ae0a-94b309f8f234",
        "cursor": {
          "ref": "4214a5f1-5e92-40dd-a897-adea89c7bc30",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3984c02c-df45-4ddf-b83a-55040a9454f7"
        },
        "item": {
          "id": "cc0eb5e6-4e91-4aad-ae0a-94b309f8f234",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b5ad9696-ac1c-496d-ae22-c0e499c06058",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d53c65f-4940-4a20-a2c9-a5e3a6df04df",
        "cursor": {
          "ref": "0691aacb-15ad-4d8f-a481-d96eb524e8d8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d4359ac8-c72a-4cd1-8dda-1c60a74c2688"
        },
        "item": {
          "id": "9d53c65f-4940-4a20-a2c9-a5e3a6df04df",
          "name": "credentials_verify"
        },
        "response": {
          "id": "056da420-9aa3-4d0f-857a-638877d83e11",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a255406-2887-4d8f-b16b-d0d6e21660b4",
        "cursor": {
          "ref": "504be44c-d524-4699-8dba-86cd4dc00114",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c3678999-8a4a-4703-81f6-ac477dd4ecdc"
        },
        "item": {
          "id": "5a255406-2887-4d8f-b16b-d0d6e21660b4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d107eaee-47fb-49e7-8630-0223ad6bf6ab",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f5b982-51f8-474d-8d39-50123758cfc1",
        "cursor": {
          "ref": "a65631b0-a558-4b8e-9da1-4c2d68a6d575",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7efd8dd4-f40f-4b0b-931a-55d3589e68d8"
        },
        "item": {
          "id": "44f5b982-51f8-474d-8d39-50123758cfc1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e87f5a07-d5d6-4ee2-9399-884faef6b738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f5b982-51f8-474d-8d39-50123758cfc1",
        "cursor": {
          "ref": "a65631b0-a558-4b8e-9da1-4c2d68a6d575",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7efd8dd4-f40f-4b0b-931a-55d3589e68d8"
        },
        "item": {
          "id": "44f5b982-51f8-474d-8d39-50123758cfc1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e87f5a07-d5d6-4ee2-9399-884faef6b738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e84ab-af56-4058-8cac-67aa1bbbeb64",
        "cursor": {
          "ref": "85820bc2-2a81-4fb9-9307-e79d1da1ddf6",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "78851dbb-4ae8-4730-ae44-cddb478a58ee"
        },
        "item": {
          "id": "872e84ab-af56-4058-8cac-67aa1bbbeb64",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "196ad20a-19aa-4c6c-9273-a36039c412ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f95ebd4-8e8d-4852-80e2-3a9181b1411b",
        "cursor": {
          "ref": "3819aaf5-cf33-48ea-aff8-8181d01848a2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d00e2759-1ce7-4c94-96ca-a3c32d9cb86e"
        },
        "item": {
          "id": "8f95ebd4-8e8d-4852-80e2-3a9181b1411b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "591d83cf-497b-44c4-a78e-50c16efb9d23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}