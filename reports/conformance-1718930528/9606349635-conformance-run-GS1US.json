{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "841b7a27-ac38-44f7-b4bb-f5061933fb48",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01dc42b3-ae3a-4a20-9684-97bc7d718557",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34de2369-9676-44c0-a456-a02d068e73d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "324e1eb7-5e96-4b8c-9bf5-4bfe629c7a96"
                }
              }
            ]
          },
          {
            "id": "9424661b-9006-415e-b8d4-e6c223b0a01b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e712ec0-1a5d-44a2-bd04-03f50086118e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aefd6433-cea7-4103-bdd2-bcbc0d557f1c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ac259d87-e4f4-48a8-ac43-27774a060be5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7aa45a4f-57aa-4b54-a469-fc537f8e1704",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e34687ba-010f-4af2-bf95-ee0d7aaea0e8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "559ccab8-c31e-4351-8d52-a03ca8fb7414",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f859310a-fe74-4781-9e9b-fcd300ea2b9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11146f39-4f39-4f1a-86d7-1495cd57f279",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b219491-cf6d-4f52-8ef2-ecde028dcdf9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a68533b-8a52-4113-8145-5b1d7470b98f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71ba4ed4-d383-485d-969a-818ea245a5ce"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c533e97d-78df-423c-9578-68ee3a63d952",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3fd2c952-cc34-41b7-ab68-cca498f25104"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cc6329c-50a3-43ae-b0cc-1d23e4e9590c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c7dcf53-53c6-405c-b9d8-26c41b669cb1"
            }
          }
        ]
      },
      {
        "id": "3ecec668-b4a7-440a-b9e9-b497d5f86a96",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1c55e05a-39ee-4f5e-905b-fbd612323bde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "505d5de8-295f-4f7e-ab5d-9559a71bcb86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86dfc683-83f5-4bd1-b19e-b569d238490d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beedb264-c2c4-4de0-9fd5-058a089c69d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c85b21-d00d-4e7c-8960-bb13c8ec161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7148a6-efea-4a0a-951d-c635eeb6485c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aa345c-9c08-40b4-bb6e-cccb3729d49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c7e37d0-b416-4356-962e-1d6e8756dc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf223d-3388-437c-aa82-4b5840cba87f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad66558b-4986-4f44-9435-e26ddc81e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efd96fb6-1024-470b-95a2-858e316f1903"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15e759f2-e7d8-4d43-bee6-6b69eed15efd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb8a3e98-0a35-4e09-bc2b-2b2c6b70a34f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d220399c-5ef3-48d5-ae17-9cc40a2c78af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bc6dbea-2171-4bfa-9d74-6a4dd17efcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef81bd-57a1-476e-a415-95622429ab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281e1a04-e5d4-4bb8-89cd-854f652c172d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c711a35-e87d-4014-81b8-a9a0ff5bb20a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0452741-5aaa-4f62-9bfb-25b8217ccd67",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a118f944-2b9c-429c-8f64-67ff792f1c99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6480ff1b-e876-4e7e-a4a3-a4ae37c010fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "452d670d-2736-4995-a40d-647e544ff09f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f2c74b75-60ef-47ef-9b81-90b078904272"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d67afd7-5997-40b3-907d-16698e6ff3cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed5961b2-2317-491e-a093-5bc5f8982fba"
            }
          }
        ]
      },
      {
        "id": "22468892-de7a-48c1-a0f4-e501767d6430",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "60c2a81b-c1af-484b-b61c-21f5bdd19cf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15980d40-7815-441d-97fc-d0cae8a98092",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4f9ceb5a-a4c0-4765-9e71-68cac18be5fc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7564cb75-ed0a-42c6-bec6-953d9ca24d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daca160-6cab-44c9-96a3-8708f9c737e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62adc313-cd89-4984-b099-f5c95ab3f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "214e7df3-cecd-4d8a-96e9-4b16d1df7149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c03d584-b385-4086-a96d-ced5c5088431",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf0fb1-1268-413c-90a6-b42f761deada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c419031-2008-4be7-8bd0-eb2b4ea23475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f700c5-4a1a-4d05-9910-7727bdec0fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8bef75c-acff-4d6f-affe-b2896ceac479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98012be4-3059-4c6e-be7c-20c458bb1094",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a209ad-2b30-47bd-8eaf-1e9556994f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c8a474-3695-4612-b6f4-27538126886a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5203c28f-b214-42c4-8757-72ac5fa4d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a00ad0e-2796-4952-9e9a-c66864e142a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a909c-a086-480c-8ccb-24405465c654",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377fdb69-ca83-4b93-9329-1649ff565f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b9301a-f9da-4527-9ae3-348d53fc8556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99440b8-a883-428e-b49a-7a382020eea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb4bc6df-3031-4e46-bb5d-1bc69acf608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9957a42-08b1-4b0d-9893-5d233eadca28",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeccddfc-f781-4a64-a153-c4d9341fa71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2759df7a-41bf-4301-979c-efc3e1f327cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98dc23b-bc79-4a7d-947b-4d3e238aa790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bfa42d7-176c-49e2-b912-b29fe18e2b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0cf621-9dfa-42cf-bde6-de65bacb413b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85278336-0ff1-4ee4-a1a6-42c43f1000e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc88091-1a6f-424a-81ca-e3efb5d17945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9413696-f251-4e7b-85ad-9d79bafd6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "571266eb-173a-4691-83fc-2dcae86d4f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc0398-e52a-4be9-b16a-57edb25d5b7c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d718ba-2d79-4a8b-9e15-b45e77fd6eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebad658-962d-43a7-a3e1-a463767aa2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c05c3-3387-4e99-bf60-d24e4ffe77fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a829ea0-4d49-4eef-ad3a-d54de627971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdc0d1d-a63b-422d-8f1e-4756bf5521ae",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6560f5ae-763f-4e91-ac93-f9bd5edd3357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5b170f-44a0-4e1a-a4b0-c5c5747be27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f56553-9d62-4532-bb10-27d5b585bc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "430165bb-ce82-408d-a0a4-db1b0706971f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8deb0727-5199-4960-be3b-ccbc5cf25816",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d68841a-3197-4a47-874b-5aee16b1202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb370b4-9029-4cca-b312-40e98058b370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f486ed-ee87-4ecb-9980-318ad0c6f20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3495d50-182e-4444-84b2-c7896ef0ca9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfe4565-1671-4872-9e62-2455f124b733",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545741f4-a8a7-4b54-9d1c-095bb491f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf25a1bd-67e5-4b2b-8e32-59be3b42577e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b897c5cd-c6e3-47e4-8aa5-c13ab1eafac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e27054de-17b2-46a3-a525-108de11dacd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae3abfd-43e4-4378-8962-2e2997d65b25",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e5d282-80b2-4a0f-890b-528af48d7496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93a88a5-87bf-4a89-b7ed-0ac99e65b27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0775a1-c5cc-4a7e-9bfb-cc4d03fc3e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e9f087b-ca96-4a28-bfab-515dffa1ca2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb796431-0ac0-4a8a-95db-752800ebcf2e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc4aab7-ebfe-4ad7-b1f2-ddd6b96140cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2e7ec0-0e52-4efd-a1f1-910e8f9c8d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa21151-9da8-44a3-aea8-d73cbe890917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f7372f2-1f55-4ff7-b828-4f2800f4e058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3990d9b-cc9b-4f4a-bdac-75e3afd6e822",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40e091c-f130-487c-96b1-534a1acc9479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96953eaf-fb32-4369-9603-8226db9b2ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1920f7d-34f7-4f52-b725-f92909a91d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34f20dbe-b29d-4c0c-a442-767aa8e60b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a300a35-1e22-4f6d-afdd-17b1b95ce289",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2a938-4c35-4892-aeac-18260a9c986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac47f6d-ff50-4a23-9250-1788bb3a7f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60820ffc-7ba1-4bc9-b661-d7d6f5396245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3317fee1-0006-4c5b-96c0-7a19cd4ad7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340dcfd3-9309-484b-a755-e34801c65533",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f798f1e7-eee2-435a-b948-a1aff698006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4730f25e-5b07-4d85-90ad-5a46463f7d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a321e0-4cd8-4ed0-83f7-11530c4038bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b804816e-3f52-4397-8615-151f6b566082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a44fa1a-b2c5-4a96-9577-a8ddca7ae71e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1eaa40-e5dc-44e0-b3f5-ec14ed43f138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800a405b-1945-4dd0-a1af-9c781fc86385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbd47ae-43ab-466c-8eef-c3af8c5f74c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f1470ff-c324-49fa-ba67-3ef0a45afd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00209d51-28f1-49b3-914b-b884d8a86956",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de60d8f5-92fe-4b35-b7a8-775298b9bcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492daed5-c90f-4d17-acdb-8c88feffebab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90fd705-ad78-447e-b866-b6462d06b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3070d199-3fa7-4666-b9bf-f161e069882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d087b545-33da-47ef-a835-9ebeff0dc131",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24271c0d-e06f-4b45-89fb-25945b30e85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198e22f4-3e53-473e-8843-5cf2e23a3904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0426d15c-d4e4-40dd-9813-1c7f766ba726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0a91e8-24c3-4517-a429-0a11907727dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295c0e33-806e-4d62-b412-5beb48cfcdc3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54896d6-636e-40da-b1b3-2caf61679632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142b31bf-e94e-46bb-bd31-558a7a6fc389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c4720d-dc8f-4d3e-b02f-8bd95fd73917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d6c6bb-8ef8-4af1-88be-da6f78fed890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef366fa-0d3b-43c7-bd7b-e68093a99278",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cf40ad-3575-4812-a641-4d406dcee62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e5ae5b-558d-4549-bf2f-dcf183fc6fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f063f53-66a3-417f-a177-430ce25c3f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8898f77c-b5ac-492e-b3ca-6bf2760d6ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357beb2a-f720-4de0-8b93-1e9cdb02f427",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c74ac33-dc22-4165-a542-6a2759627646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef61f29-5265-421c-b8d2-2eea373fad0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8448d0da-5c8e-4a54-9312-2b6bff6eb945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a34b9a-a30c-4bd4-bb42-a0a2d5d3b7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390ce1c6-ebd2-4fc0-8e94-83b1880e3b91",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b237b4-7b38-4e1a-a500-96662573c918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c4f350-dc73-40ad-ab85-23b2020e2122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1ee52f-f5ed-494e-84e7-f8fa0b7cd297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10d2068-c050-4ffb-8472-686c55c5dcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2084e59-5c13-493f-8900-7aa82f795c07",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645d37bf-cdcd-49a7-8528-7cb00b33b597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c641c166-0906-4c84-bc45-31e14395a805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bcb10d-6067-4e68-96af-1b2c756590fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a92683ca-d46b-4fc9-b630-228218ae73d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7018173-5dff-481c-aad3-0aa7bb29190e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbf5167-4af7-4f3e-acd5-6428e9a6b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f238798f-6af5-4bd8-84c0-61bbf98d6061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58925dd-1638-4a22-8780-7cb9bfc2ce09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc866dd-d84a-4481-b5b4-2193568fee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7715c1f-221c-493e-ae4d-62e2037b2048",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348f14aa-df39-4175-9927-37b9fc4d0508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82219b0f-1c07-4e83-b1e6-627af0e299ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752ef852-9afd-4adc-919c-98cb9ba41ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b2fb26-67ff-44ef-be49-7bbfa7cc9a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89d87ef-3cc3-47be-8c23-de1c87958cbd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbec3e9-0360-4e97-be67-7ee8ef30e158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169b602a-442a-4d83-ad65-c772b453bcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866b85ab-2b8e-474e-88d0-74e0c0427949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d1fc6f-440c-426e-9f88-3230f42349b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6710686f-4a71-42dd-9bda-9b908f3e7e66",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec35de78-049e-49e4-a87c-c2479fb3fcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c14a5d6-c3e8-4360-9218-d9973410a192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b898f532-ea74-4b82-b52c-c6aaa3419351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ae1df1-34c3-457e-8460-b950cc926c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f137226-4bba-4567-8795-d3f53625d4bf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332be2d-589f-48b0-8d91-38626b489c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f819ae-7b29-4985-a8b1-4c060758f6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef84035-3bcb-446c-a548-4b6efea5474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68eabced-a6fd-491b-8c9d-6e5f802e8d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90e1cd5-9fff-49d9-a635-6a19f56ed6c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba4f1a5-3356-4206-a0c5-4538f27d27be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8884d3-2a46-4864-ac3a-870653d4dce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d094c76-0ef0-4c74-81f6-e576f3149d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa379fd9-5990-4ae5-8c60-0dc14c4fe1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f47fdde-d637-47c7-822b-5da84955329f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747eba29-5b9d-45da-a913-904a2ba2d883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98788ea7-e67f-4d27-889f-216da11ab806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58994d03-d024-4d6f-8568-84fa27149876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "698b0cda-57cb-4e1e-878e-82a3e00e88f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc718f7-cd8d-41ea-b4c2-d4491fc4b65f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd7a5f5-5a04-4978-9526-965d5e76ff11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7e0cc5-0365-41c1-9321-99fdab8b66f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23900c4d-5896-45fd-badf-81b4fce713ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b84d24c-84ec-44e2-9a5b-d38120d5281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f775cf-70ef-4a47-8688-38cced4fb63c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f02c3a6-d76e-4881-a6c7-66d5f45bca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edcca41-efec-4b50-b861-8c31c6b4d06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1fa52e-9230-40f1-8823-ab96e08fd66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "193e654d-6998-49ad-a16d-2a2056035d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77db041c-598b-464a-b346-0d8a244a0504",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539ff850-4419-4b7c-8e16-e17331fd9e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d029a71-a78c-4224-bc05-39eb61e8c15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca0d88c-dfbc-49d4-9147-3928055618a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "355a9ec1-528b-4153-a0b4-3b9063e01bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f817209-9cb4-4e66-bb3a-8858bbc6ee76",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d5fece-a26d-4fe9-9a46-e0c8aa0f3d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb0379b-e90e-4da3-9497-acb73d7eecd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca69ba4-28e8-43d9-af1a-838c1b74b346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15867785-b74a-4b3d-8b38-86dc94a62e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc54822-be80-42dc-a0cb-9b836bee7864",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e555bf6-e1b0-412b-a5b7-6fc0a72071dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d8c284-7c87-490a-a50c-383e89933f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ace81c-5f9d-47b5-b5e6-e8a3101a46ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2da93c03-7e25-449c-9ab3-276f24dd8997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768f08bc-65c4-4c5e-aa97-581cb5f21a14",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff20473-347f-4c00-94fa-4cbddd25bb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e518bbb9-a86a-4597-a600-0546c534e66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197b6e5f-ec1f-40d9-9b3d-74a0994a1fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "912573fd-8525-4c71-bc33-417deea363c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc0129b-e3f5-46fb-ad24-95978011bfea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e61be9-2877-4c80-9d0c-3dc39922f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c64c08-4083-47e5-8ee8-f8cb29eb23be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c457309-7f81-490f-a3ac-156ecdce2cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac52e94-317a-4f67-b991-7caa8bba7d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8f461a-2231-4010-bde2-d7c259852113",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c352fb9f-6ef9-4b06-a1cc-b7445c9075e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6159952a-7f53-447c-9dc9-874de8d7f954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445c0117-95b0-455f-afbf-1648f4961437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be04c080-322c-422f-8370-345ba6a50d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7d2017-6ce2-4881-8cf3-326c3505b7d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6d8b06-0a15-4229-8ad2-3d1b86e86385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42a6be4-2d0d-443a-9ddc-6232ad629cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ef604a-4221-4fa5-a9a1-20947c1bc29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a09bec-298d-4bc3-b431-7f79df323e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10025963-62ed-4fd2-8d5e-6396ffba9aef",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae79a638-4e91-4457-949f-cfe790c9500b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ce3a48-5b5e-4ee4-a5f4-b28f9487250c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ce249-df1d-4554-9449-007a9f91233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0614b09-52a3-4916-8743-e30752313b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc7755-c848-4c70-afbc-b6408eab3be7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accbf0e2-2f07-4979-8a94-b216ac59222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ee4b3b-7049-4425-845a-11f54e52dc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed0331e-76e2-4ff2-8836-ed225edb193b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0653a4-df98-421c-b640-4676f272bf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8c56e0-6394-4689-928c-3836590a67b2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dea39d-5dc3-4767-b152-f13054746b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dadfa8-ac0d-48cc-8b18-ad69ca059ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb07ca8-cb1c-4091-9442-acb70664ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfdec3a-8e54-4ca5-b73f-4b6f8e34aba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f5d88f-2cd8-454b-abaf-d27d7eaf94e8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daba4ba4-bb69-4c8f-b76b-b3e7887317ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dd6795-ed41-4138-84ac-729ab892aaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a5fc0f-271c-4d50-9619-e04162d05563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca42266-ac22-48e3-851f-8f933ed9ffa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab7c5c-32dd-426d-bfc5-5cccc23f0359",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2056734b-accb-4b54-a20d-60dfa3ce8a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b7cc01-7737-489f-b450-66336e08e993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e265534-8963-4e72-9a6e-c2c333fd0a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5378ae02-0ce6-4835-aea5-64af3967234e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac258b2-0d59-4a38-9a99-0ab5c410dc3c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2c00eb-2c7c-49ce-a175-a2574af7195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3f8786-7b8e-4c88-8b43-8812f6bc5f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a6bcfa-5497-49e3-ba21-c74937a4dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece4bf91-4ee6-4332-9336-31494519d339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78daea2-bf6e-4478-b455-2decdfd9461e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50054c37-81bb-4472-b53b-3f14d0217812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5529162-5027-4ee1-a871-f51d13e08093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3164b0-5254-4342-be77-7fc0e2caa65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a334fdfe-6bbc-4e52-8828-26e2ef08c68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0300d4e7-9ae5-480d-8af6-62032ef9a6da",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25380dd2-81d0-4ccf-ab74-b49e2c1168a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f75a8e-f2d2-4f56-8e05-f043381492c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cf42e8-8a7f-42d2-bf81-2015b2080767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df0347a-0677-4411-a078-edeb6ec76569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084227ed-9b04-4ad2-a26c-d0f562a64c8b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af10df1d-8e81-4e8d-996b-3beef925e265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcb5b29-6461-4f1a-a618-42c126d37b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f490d2-977d-427f-b47b-bbce7b788c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b632a67-6e5f-4eef-8762-1526bd6a4cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf045098-c6a2-47c3-8e36-a8c899058181",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b00106-53f1-4e21-a5f4-313ee5f3d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62693a66-2c56-482a-a50b-b9fe0789a408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5e7aa2-270b-49d3-a10f-418a479611c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9de0519-fe7d-4f9b-97cc-dba5e1ccd1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34849b28-60e9-40af-bc25-e950263ea622",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b8dd94-f0b2-4f4e-9a6c-b8937a8c3b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3be0b23-73d2-43a1-90eb-f1d66f7bd1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a5276a-9b18-4c6e-acd4-7e4426f8ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82f9d8bc-224d-4050-97e6-2648dd052196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83755b7f-6266-4aaa-8b5e-a47d03389b9e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5456c362-0f42-4f7e-8eea-b8a2389fa12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcb3144-a1cc-4238-b388-3adbd1495f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e1d933-0076-4b8b-b0f2-8e0a428512ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "538a4535-bdc3-428d-9ba1-7d8eb0c07a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8142f6e-27d8-46e3-acbb-5a13224cd4f2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb58a40-4cc6-4d48-9a5f-8e5282ae45eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942a5fb4-2d8a-4271-99b8-5b20334c33f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f498e0a-2393-48db-8a4f-f3960b39a645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff529e2c-fe82-43e6-a95e-1225a6b610d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2957a9-12b9-4956-8a84-28545c96daeb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7eef7-0306-4fc9-9138-0003627f28dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6153497-f221-4899-a780-a5525db169b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca182ffc-e999-441b-a774-5900200be0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1367b35f-bda6-4aa0-912a-60212c27f968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96231e8-5152-4dc8-847b-8d313f0eee71",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64acbf9e-6124-4e11-a465-616f743b16c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5674979-0c15-4917-b131-497360bf2c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ebe3d9-9cae-4afc-bbbe-c9b9c356ade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a0c2dd-3ed3-4ed2-8ca4-2455fce021e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d06080-e1a2-44b5-b7ad-4b871befa7e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a0e2bd-21e7-4f52-b071-f389ff37b78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c743e5d0-b3fd-4933-9c72-834b3bf103cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1b8e7a-b140-40bf-8528-3f9acbbf178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c595a13-1941-4903-aa52-74b017fbdba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c97105-d5c0-4569-91f6-95aa8523b341",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b2aab0-fa17-41a6-a1b8-b7ddc677b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ad1813-e362-4998-b5a2-6d321d1ba51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a53394-4c03-4eaa-b1d8-fd31b8fab768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc5bd74-7d72-4dc8-bb0e-803ade38a230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e285e2d1-42d4-42f3-972f-e4947a7e79a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60546085-8024-471a-b58a-73f32d6daa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084fa339-0a99-4dd6-8c76-1d05e3a2ba37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a59a37-b882-4c50-b7fe-9577319bf86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b83da3a-4a70-4964-a135-13166384becc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75db986-61a4-4324-8445-eed46dd46eef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6e39f0-f8f0-4c31-955d-c3fb99305d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ddf7fe-bf18-48e7-8ada-dde0ccd61e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710ad632-bd45-43ee-abe0-7ecac92c3813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5616b68-4233-4c5d-ac80-14e68edbfe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087dba8e-056d-436c-a018-d79f28bbc27b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8568015e-4e0f-411c-b3c1-aa6bad000575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be479c6-09b9-4254-a84c-495d971b305b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2550b3ae-99d0-4cc0-89a1-9d45928045fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef8bf9f-5e49-44d1-ac18-3e445a2340b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911b82a5-b7bf-4f06-8e9b-1a504b2a5c7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb2c62e-d7bb-4364-bd83-fe308ea9ca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25620b4-82c2-4f28-8e19-b4f03bd008a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8832d8a-ed76-4e72-8ace-87af145152d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef5c6f9-bc26-4806-ae6d-4c8f9892f739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c974d52f-1826-4f80-8d78-649a57673117",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711be4e8-a9de-430e-91c8-d23ed0918097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f9a9a0-7ace-430c-a197-7126f0c52f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c6b644-e369-4c98-b765-500cc41f1e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7995f50-0492-46ad-a1e7-20cc3433ed50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affdbb39-65f6-4c39-9159-9c3446ac5616",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856ad95f-9780-4b10-9bf0-9544b7ef7f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2522d7-96af-4dfe-8b6f-c742755660e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaf389a-675f-4c6c-87c2-758506c4cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d33a97d1-f663-4637-991d-552abcb52e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac59942-dea3-47a7-b984-958ab7c0fa9f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e67c8-716b-42d6-8f18-1cde3dd56dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd45d7-89a4-4ced-b691-8ac4248c0856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f235a2-c7fb-4972-9f2e-5c3c24d1764e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0836d4-a9df-4489-bfb1-f6aa471b700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0edf69b-ce2d-45bb-b545-473fa9c9922a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cf7a07-edb1-418a-be2d-5ff31aeb20f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7018d487-9aff-434d-8b3f-e6b5b7028a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aea68a-796d-4ddf-bb70-0ec7ffd49172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9019380d-dc87-433d-ba59-e7c295681fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bbc445-0063-4356-9340-1830c98a0c1b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dbeb13-27f4-4731-9337-43cc80cad91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b56c54-c66c-445a-899e-f45793670621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afb37de-372c-4e16-ae95-e69641a19b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "455a7444-9609-4853-8a16-521aee53b597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f0bf52-bb57-4d0d-acea-4bbeaf953a0f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a5f5f-be73-490f-87cb-bdbcb39faf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb80688-cb5f-4b60-923e-b242f5b0e9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf18b9-634e-49ce-82d6-3e67411d7c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d93fc6-20f8-4605-8d50-4ad40042a56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcf19ff-aa4e-4ec0-9196-9ad7e9867966",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaffa23-881c-4fb4-9b66-9f577295763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035632cd-6304-4863-8929-0acf90898c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249cd005-1a13-44f5-8928-25c1615b14b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16feacd9-cac1-4bb3-9c3a-110c64d8573e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f042d595-6b42-4f3d-af90-56181f274768",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab66077-af34-4b3d-9be7-3724b6c842d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb020c31-f0b3-4379-9cea-694f5b1f573e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333c325e-93af-482a-9039-97efd3db244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08e3f91-01b7-4df4-8dab-9f9c171213db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e595cf4a-36ee-4fd8-a3a2-99360bfbe21e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1050f8e4-1df5-474d-a392-b769bef62f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dba916a-cc3c-4cff-bc6a-fb4516ade433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82beb573-f987-4a75-a9ba-4404f883e9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e5834f-7260-4460-8210-bc16d90d7bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13783ec-e201-47ad-913a-289af98f6cf8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7286a20b-3673-4094-a5fa-63233f40fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db0acc1-d9ab-4136-b692-4fa9489e2e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc3d08-7db5-4ed3-ab7a-ea32b72c1aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84dd3fbe-6047-4cf9-9eea-bf6ed6fa9e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca6d15d-c1f0-492e-91f9-cd3a51418cb4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a243646-6d16-4ff5-89ba-c7bc0c4ec18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdde5496-41a1-44a5-a8b9-95f984fbab0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86443a7-80dc-4085-8ed9-8d091beccde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1ed520-6c1b-4db5-88a6-cda8f776d45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f5666a-9085-4f54-8a32-b5e37155ddcd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6709af80-1e1d-4514-bd8a-24f63448bd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9627c0-1a5f-4af6-bd4a-0e0723b2ada8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3850d98-8e08-4d0b-ba67-f45c7d3168eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d43418-7587-44d6-be1d-6f3ec638e64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051bd77f-90a9-4e32-a8fb-002ae7b7d311",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e9b795-9055-40e5-82ed-21810b8040a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee13361c-d4a7-446a-9cd1-81a1f96e7d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdfcf22-c587-40e3-93bc-19ee04c4f4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1630bae8-1280-4750-8e82-910833db4e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c276117f-6e8e-4874-8af1-0512cddd14b6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d834a3bf-6f32-4169-8fe7-ee1d3a48151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802e868c-af90-49dc-b5e1-674d1ff84d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb373f46-151b-4b98-94d6-cf8a50281827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bba8b90-e14e-4e4d-8073-78f95ec82426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba0e518-482b-41a4-9d1b-d4ccc39235c7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09da106d-b151-4e04-ad78-7f50340e397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d668889-b27a-4593-987f-ea9bdd7c7db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a03a4d-a423-47f7-8e8c-586dc8831a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0867e8-668d-498b-8e5e-6cfa1b70e477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3351a0f8-02e4-4cac-9d6d-78f6d2292afc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ef14d9-5dc4-4c50-8a8e-1b65a3e3a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2cca2a-e36b-48bf-b928-86a0b0efb806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8ab8a4-3393-466c-bcbd-b4bcf8147d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ac00ee-8ad2-4a5c-9664-2cee62c04f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0013a5-1442-41c1-8f80-bed6eed7638e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafde435-1b59-4a48-9415-a15fa0ab53b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c0ec7f-02fe-4fdf-950c-931a752491bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86d747b-d3f3-458d-aa29-cc5bc02fdd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40850e34-c3a0-4d70-abaf-ff18573f7034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a868ad5-c908-4270-9b5d-e89bbef58972",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b7a2bd-953d-4c5d-b195-b93c5c45ed22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7351ac66-c01f-455e-9fcd-925a1def2de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad318144-e0ce-44c0-a7dc-edc24f25d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5ea986-f185-49e0-9d68-eb4172fd3740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20572c4c-2bce-4a81-badb-65d6259e10ef",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3000724c-eca9-499d-bcbb-915b986f8158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e151f3b0-1af3-4c2b-812e-84de8e9b72b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4b44a5-f89c-4941-b84c-69e5b9603f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f74c4cae-1c18-4d1d-b55d-9e6577254d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf9d47c-d8fb-415c-a752-ddff0783a805",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9527be-2155-4c2f-9c47-117b7c353f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcd51d4-c0a0-40dc-aaa2-1fd43aad53c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f928bfe6-fc9f-43b8-a412-4eabb885b376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "387a7e1e-f137-4d51-a44e-53d1768f843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc52954-2e13-4263-a634-14a324db6b8f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1356d7a8-cb7d-4308-afbc-10e6bed87bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d91ef9-38a5-4870-a1be-cdd36bd0b858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d3395d-1e04-46b3-8e88-564f4cba8216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b3d99a-d8c9-4ed4-866b-c14333859243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b805d366-d5d6-4260-999b-ac3d0067be92",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57ec66d-4cc9-4f35-bb69-96f137368492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faef337-10b6-4c56-885b-9ac180d0d169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af83d7a3-c836-46ca-92cc-794a7be69720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e65fc1-8d66-4d9b-8e05-36bf1f9c5012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f592a236-e85e-49a6-be4a-7386328232eb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429be3cf-8a73-4d6d-a94a-810a0f8daeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541b9d65-4e0c-461a-acaf-08325123f0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8275e0-2c1e-4dbc-8ea0-a86a9cc597c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef9bac1-4f26-4ab9-bf04-9a88735e4998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dacbae8-97e4-466c-9cd0-c30f2b7a4dd9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ef5746-26ce-4e12-bf71-c5d77d5e2b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550051ae-2493-4d63-8bd1-3c597c0a0890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f00e98-ae3e-4e86-a7f5-e979ba169037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b630a64b-7bdf-4aac-a143-7ce984b01a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f59eae-ed55-488a-9ebd-025220370f15",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4045eeaf-ae52-46a7-a9e6-d26c8354e287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cbaeaa-79ea-4372-9027-aa7fa6cee0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b57452-868d-4518-9cc9-042d4e66e228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1285a887-29f7-44ea-b521-10c1226bf6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d42e12e-6d2b-435d-aaf0-1bf07e66d60d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2dc75d-0928-4513-8aa8-bdbadf57d727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668ca03c-eb50-4041-8cc5-91ba132561df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9f3c29-4ed2-4aac-97e7-d60a055f6cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41d8fcc-8ef1-4dc1-ab79-0d054ebda1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6118ec9e-1505-4341-b9c4-c694b9348780",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97416cf-257c-4fd4-81a8-ab7f8e0256bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3b0cac-8ba0-4120-bcb9-28f1b9d41127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c94364-4b07-4149-bf30-3bee6394a278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35adc1db-e89e-41a9-8972-acc9db11b6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cf766e-6b3f-45a6-8aa9-00ffa5d9cdc3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d4c1a9-2dd7-47e9-9c4e-69604693cadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a2ad05-a8fa-403d-98b1-94324ed59769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abf31be-9cd9-4b9e-99d7-d87813e35906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dce7247c-d7c3-42cd-9c84-a2be076fa001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ca6056-d957-4c82-912c-8c94993b28be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662055b0-eec8-4435-af1a-c8e7eae4bd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3688cd9e-bbc9-4a29-a9d8-af65a6ad11b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74525680-3588-4b0b-8889-8d6356716aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "648a57a7-a7c6-4be7-bcbd-ba0b91896860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6890f70e-9acb-4cc1-96a5-009962d56cfa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4a04da-ed2c-43c2-8f9b-e49364a2cf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91430bb-b648-4aaa-84c7-cc7bf97331cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57266375-08e9-460e-8e4c-8e6f2123f387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3987d17b-d304-4951-9ad1-5d4dbc2938e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9af53-7061-4842-9584-21449badd63b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe953d8-023b-49c6-8ccd-fc4075699f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7787e10-d731-4d75-a401-a5bda63eeda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f97fb-6d63-4b19-b32a-eac80b722462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bcaa10-c716-452a-9780-b2a77e71e220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3681fb08-c1c4-478a-89f1-52cb1d088592",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af0b2ab-9a8f-4639-a962-b4bdad442fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4d37528-35d3-4327-896a-8dce8fcd5538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eaddeb-bde8-42f2-a417-a76f2cdd8d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8121e0-ae9d-4858-abf4-dea3991f3d3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53db110e-d11b-48e9-9716-f97eea29819d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e8ab705-8933-4858-b570-c5e55fb3c14d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb231d9-88c2-4f31-9b1f-7bd6a31900c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9401504-d657-41a6-bdb6-cee8693ed2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6d257e-d82c-48a2-bdee-234247a0bf34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc0e090e-5385-48c4-932a-abafd6281f5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "204da2fc-2aaf-4171-97e4-169c94de33d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "760e169b-4f90-4c31-9f6d-d7a6567200ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2073bd2-3514-4d8f-b265-05de82b776cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65574879-f5e1-42eb-8ef0-31654131865b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "254727fd-f475-41b6-bae9-4595ce53375a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49c8f8ef-9269-4292-b83b-555476047bc5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc88456c-ccca-495e-a4e0-6e4429304975",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2cde521-5624-4bb2-a05a-d7ae7923b74b"
                }
              }
            ]
          },
          {
            "id": "e61610fc-d9fa-451a-820c-996c90254427",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c41f3719-5bb8-4789-b9fc-2a13f0b85ab1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f42a5b76-9d97-44d3-9037-68df57d87f92",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058eaec0-3814-4df7-adbc-c60728ea0bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "473bad4f-1cb3-4be8-b7ad-d3a96019706d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31b5392-bfd2-42f7-a546-527730dfb377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65f268f-d19c-4a1c-991e-a0253b8b7739"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5aaaee44-8b9a-4cd8-859a-073a6426da1f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37160f05-dc81-4197-ac47-e3ae3b4c87e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19ef81fb-461a-4290-9a1a-c1ee8c975006"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46525edc-cd66-421f-b16f-49765003519b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5eefd255-52e3-43e9-9466-7ed297b070ab"
                    }
                  }
                ]
              },
              {
                "id": "df4b0712-61bf-4de6-ace6-96991edf0909",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbd4822c-d800-495b-aca4-910d4f228367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bee7bd6-9b45-46c8-a7a8-286366e1ed98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a00fbe2a-f7f5-4cb7-9124-418b33a650b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5688991a-dabd-4b5e-ad4d-8bdda2b478d2"
                    }
                  }
                ]
              },
              {
                "id": "cf356692-6f8f-4b25-88b5-4186eabc8687",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ef0daef-9a66-43c6-89bc-d35a9762376f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a844288-c78c-4e15-812f-25ad291bc307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8daaf90a-07c8-47b3-a23b-b45b0e670d33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e25dfa50-8cd3-4548-9a43-6f3c6aa63e91"
                    }
                  }
                ]
              },
              {
                "id": "4319a5c3-4ad7-4271-af07-2a0a6f79b956",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c09adb4d-0c5f-4b00-8118-e0fbde8796ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9cba7a44-648e-490a-9810-db7e0d1ecb28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a47a0187-043f-4116-a7a2-cbc89d88461b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "44c4c403-9abe-4f46-9bba-919d266b15e9"
                    }
                  }
                ]
              },
              {
                "id": "61f3bf42-605e-4e9c-9612-fe4f22098d04",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5acc9f3f-f53f-4a14-b9d0-c1f2915bc55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1690f71c-84ea-4660-9bae-191ce8f62431"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ae9bc3e-87a4-4194-9f0c-f896ddc51773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9181a027-f0a9-457a-ae4a-3ebab7ee9ee2"
                    }
                  }
                ]
              },
              {
                "id": "f97648ac-cfc7-435e-ae76-4d17e12394b4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "712237f0-5e74-4d9f-a23e-992f49fc55e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32481b78-1999-4759-aa75-03f20b5e72c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de8efb54-55e7-4cd1-9189-9b56fbfda025",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3934c6fb-4bea-4265-9920-ff62f1e11d2a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "911307fd-1240-45d9-bc2e-afc3d8a6eb69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "006b1a86-fb6c-4c08-9919-b98e90f92d10"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2ec79391-aecd-4d04-a051-6b013d64fcae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d508bdc5-e2c1-441a-ac4a-4a8b7ac05374"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a5e301b-8d57-4735-a3c6-9a1c6d639500",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f33b6abc-5c85-452a-a755-b5eaf510cb7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77eab09b-3c16-4b8b-a8b1-c57b090cbbcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7341f247-08d4-4679-88da-7af835f375e1"
            }
          }
        ]
      },
      {
        "id": "44e49479-b089-4e5f-92f9-a6656b9a71cb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d48ee5db-a4ce-44c1-b1ed-55bdcddcd1b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "853e28be-9d0c-4237-93a3-cdabc6af883e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88543dae-c887-469a-a40e-14616c9ac18a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1087dc17-3835-42e5-84a2-f2368c400f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f940a8-badb-4a01-acc2-d83e57711eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33382efe-38e2-483a-9560-807182124acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d613d9-3830-4267-965c-78f5cd54cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778ddf51-9ae8-4ae9-baab-7bba42cfb475",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c25671b-ce35-425f-8dad-662b10f98498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a589c97c-708d-41a9-a7e8-6d9707f3372f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1bac51-1f29-482d-ac62-f33cb3bd1232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f51886e-5d2b-4fb5-a65c-3a7c2288268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c0943f-29d4-4117-9adb-27bad8ecb4bc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce1d9f7-ed12-40b0-8ebf-586765df4ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274ffbce-b11d-409c-873c-bea04b41e4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec132e80-435a-4423-9e43-b6666721f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e129f71b-d791-485a-a677-de6a8240cfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a9db8f-a223-4b71-881f-9d451e8cc0c4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244bd315-f8ef-4379-9a8d-b0fe5ebb0401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f971d092-a091-4c50-bfb4-c6c90e203fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e3c13f-9240-4e5c-959f-cec4692afe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "265cfd6f-4da2-4b57-9c70-22a2e329e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146aa0c1-f990-41fe-a2bf-836c01dbb252",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b368c164-c936-49ec-9a21-b6e7491fc231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee825c1-e254-41bd-bc1a-12643f6b431c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14107ea1-562a-40c1-b234-8594dc6882b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdb1e78-2794-4959-80b5-fc7b8aadf7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec76f4-419d-45d6-80ee-9a80c245310d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dc9ca2-4e24-45a2-9e19-9a382ec9bf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc914b8-46ff-43ac-81d0-565a8d327985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bf7952-bc34-4940-ba90-08fb5862765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da58d55a-10e1-496f-9203-a451a4459f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd73733-34de-4a30-8c11-6293299f76ba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4219e2-c814-4ebb-9160-5f23ac6e2bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95f60c3-0c45-4c12-b336-ef5fc0364427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1deb78-b568-48da-8a48-a437a63eb925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cedacb71-cde8-487d-940c-7ef268ea7f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730063da-2e8b-4396-a98a-8861bd540872",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3166a031-c2f5-4abe-93a5-066acf0b94d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bdffdd-bee1-42c6-a780-7ef1c6f25d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea7723-5dcb-4102-ba37-f6bf945eecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c55fb9b-5014-4de8-bdfa-ae0453c9087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7f03af-3b71-4f80-b66e-d950f5bcca12",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2512affd-cf6e-4954-bd87-49e77f6a6265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b382ed-1bda-4306-9384-c068c25ffa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db01cc28-6574-4dc3-912c-a76b454483c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c455fc0-9aa5-4824-853d-0a97a8437900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062dde8f-1025-4aac-aa2c-8e59cfb04295",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cf49a6-aefc-4624-8599-318b7be7c258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730a7bb9-0f00-401e-b11d-dc186fe8f90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07494ff9-a6ae-4663-8b05-7c34b8da2a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e736baf-f068-4c00-b832-6c33778096bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab486b30-c136-4e9a-8c0f-aa5b74dfce56",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd412d5-2e4e-4375-a89c-100102793e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2e9571-0045-4066-83a5-3d2d184bb047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2765aef-eba1-46d2-bf90-b037973067e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b70e05-0cd1-4246-a6da-2f95e160b812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3fc2c6-399a-42b3-95f9-e0690e6455b5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5092e3-db2d-4b47-bd3d-511231aee11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518acf1e-b810-4c82-a51e-3ed417c3232e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc4f3cb-c101-4390-a30d-aa9ec6a89955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9595fa3-ba07-466d-a46b-5675fa194913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb86fec6-1792-401e-87ea-1bbb56b16836",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc87545a-3875-440c-93a2-bde27699a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf682a3-9507-4a4c-bd40-6d13ca19407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a811fcd4-a274-4cd5-9997-b70a573e9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98cafb76-f127-4e61-ac81-86fa1c26f368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec1c8ee-144e-412e-b8ac-5787de108aa0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a62d24-b2be-4596-a0bf-634ac13ba361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba36110d-b77b-41df-a4b7-3e021e23c333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf2adb3-66eb-4913-8047-e33a5b51d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb4001c-d939-40b7-ab81-e7f139bcf75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251a7a16-2ded-4977-81f8-b0c3ac10b826",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1696dc8-52e5-4876-80c0-bf926898dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35676ec9-4398-47da-9128-6d9f84d5a1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6e4257-220e-4eb7-853e-d8bc76a0222f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b536adc-d61b-4ce7-bab3-e617d24eceb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379fc610-0360-4310-ac32-8949740fa42f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623230ff-853f-430c-981b-73fd54346968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca818f7-cc9b-4783-8190-1104d71aca18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2686d4-d9ec-44bb-a4e3-0b47511fc0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5004a7c-e1cb-496f-a480-1d5d2587f3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27039bf1-f14f-4504-b13f-0e952c2faaa9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d6a182-0761-457c-813b-5d1879341434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfc9880-ae4b-4194-85d5-c173462b2972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429e4380-d748-47fa-ae14-95831f019d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28268060-fa7f-4eda-a9b1-24b8bdf8fe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394f3319-1886-42c1-adf7-d162e3df5420",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55ddaa3-e56d-4ee5-84bc-c7e87bee0172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0c8cee-8f9d-438f-bd0b-bb5c37b3fb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac0471e-f479-4f15-a181-23fd8e2e5c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f0e981-dd72-40d5-82b5-b5e7c0ba76d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3b8e0-8637-4d4c-8d88-b4b3a82e25f1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f20771-8230-40c6-82d0-83c8d09d529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b03a20-785c-4c5f-9c27-41c9b1a9a60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dee9bf-15a7-47e7-ae17-f4f07a3e7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c008645-05ac-4320-adbb-a005b201e4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df14202d-3586-4553-b6b0-17aa252e3759",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76119131-1836-4f31-8cfd-40bf29b3af67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11087dac-1007-48f6-aa8d-edac9439f373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00ce20b-59c6-4b93-8414-a15f5437db11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "072616e5-3323-4b0c-a24a-adf4ebe0027f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6c15e1-9e51-4e08-a770-543c61178630",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576794e1-4368-4892-a9b2-6100b02c126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23b15a4-c6a5-4e7a-842a-a09265bc5969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9f5f86-c42d-4fa3-a6ae-7bf4360ebb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce7cb34-71cf-4d9d-aaf5-3a023547d769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2002c039-48ee-423d-9c44-55bdb6a49f9f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9449aca4-b046-43c2-bff8-fc90c523c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969ee056-d4c3-4697-acc3-e4c7b65f7994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8f29ce-9afe-4e8e-a9d2-75ff843d8e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f264bb-f0c1-4e94-81ef-0ad7b1b34c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565e32ef-f5c2-4674-896f-b61b94f114db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d67009-8e3a-419c-be71-15dc3855bc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89a4e1f-d0d5-457a-a371-7cb464ff51b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6abbc3-8217-4caf-b3c8-738be22fb7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14259bed-bf40-4b1c-8e9b-a9b64ad46840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62b5cdf-72f0-4980-a61b-3adc922bf9da",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1035376-c899-42d5-a8e0-99a7249ef34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae58f62-e290-4d98-8393-e0d801a67fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344f5a3a-521d-4a94-baa7-d4d87fb75417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd29278d-49f1-4a20-844c-36043ec89c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7223e507-8318-4bb9-a7ea-f701a66d9586",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dedfed-6194-47d1-9fd1-7f48971ca6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22407e9-a09a-4db6-b6d3-9bff58d43b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512e095e-bf94-4a1d-9e0c-1334fb313d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c835f52-6df0-4a78-81cd-28634bf4f10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f579755-b067-43aa-b83b-c8791e0f38fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16540b8f-e3ad-499f-8c7c-b8f820599342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752f3bbe-ad3b-4deb-a0d9-8ab61797abcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf67d463-3cfd-437f-af69-bbc29a426d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee5ca4c-caf8-4631-a5b2-b7355b0aa19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964e39fe-511d-428c-b705-f003ee27c185",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c20d5-85db-4aad-8413-9f9c6b45d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf98f6a-df18-4550-83ee-d99278fc6371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b133bc01-506d-4729-a4d8-130315534ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bab889b-389b-4bd7-ada2-2ad88ec9b5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59268f76-0de8-4b67-9c45-0bb9f4319746",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08071aa-8357-4fc8-8f78-125712906b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7629f997-24c8-41f2-a648-a9cdd6b3096c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd1f39-e8c4-448a-baee-4a83185c5605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "036105dd-cfb9-49ad-b229-5ae60f4e7bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c23fe3-71f8-43ec-88d2-81a484093b39",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29abfd57-6fb9-4700-aa8e-b68e92fec00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8744a5a9-7415-4951-9873-40893e448c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e13cd-8bc3-4a30-bf11-8510036d97cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b2f01d-04be-419d-b536-64245660f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e8eadb-61d6-4228-86ae-af9dc94f1da2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c892ce-914d-441f-a317-767e77b63abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f9f65c-c257-4485-88c9-ffac1968f30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c051b5-eb25-4fdc-8b24-6561a6ebbd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6d09d9-1279-465b-9c71-44844564cffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59e5f5c-e65b-4eb4-86f1-a64568a71f38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11674d28-bab9-4914-bdbc-ccb641ae4a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad48c42-fbd8-4854-8e27-a62166774cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c170e789-c8f8-4131-8833-2d986a4a1b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba96d21-d0df-4914-b442-d2c5812c4a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df82de83-203f-478b-9aee-42302099a0f5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3322ce46-1466-4577-9401-ad973689ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6ee8d8-e74a-46e9-aaa7-d6017722e1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f34f54e-67b7-4a6f-8d01-b3d3607f0f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e1cb0c-8c6c-4689-90db-8f982c052c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3918dea3-a0ff-43fd-8562-b7637c1857ad",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fbf1c1-1606-47b0-a5e0-87ca06533a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742cd384-e9ea-472d-9b66-e699367b41e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ae289d-5d7c-4f27-b35d-b1c90b4374c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0067f1db-ba7e-4b2f-83a7-9307921c4fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfa9544-23d4-467b-bc45-9afddcb7e127",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b1427d-3940-460d-99bf-626948fcbce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feae1bf8-9cfe-4721-93d2-7223d8fc972c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5424412-04eb-43a3-becd-9b73ed0052d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb6ad0e-2ffc-46b5-a924-96a59832b320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacbee7c-d4ca-49ca-99da-df983d68b8e7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a08d0b4-61d4-4e59-a74a-6492460865bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc35d44-a260-407e-bd37-59e10176733a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3617dd8e-bf0c-4205-865d-08d79b7e4ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae5af01-7912-487e-ad3b-04a2ba691c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81781334-7a0f-4675-bfa3-b69f537b6482",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c47c133-e34d-435e-9044-25ff07561817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057d07b1-9432-47dd-a1f8-16deab7f3142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed2e111-71de-41d4-8a52-b09c29ec7652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0029d011-f61d-4ec1-aa45-be2a1936e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d4492a-0e6b-4a19-a1c8-a600b3fc847a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdaac64-dcc3-4749-bf57-d0b6fd849dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a32fbd8-8754-4c00-b1d4-f416d723d45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11abfac6-728d-4f0a-b202-f75449c78cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78a03ed4-983f-40d9-8f05-d6e5a938c425"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f8ae7a9-8551-43ef-8ee2-29a072a9b4c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ac45b6f-ce53-43a2-ab45-bd7ff5644023",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb87daaa-e43f-436f-98ed-07debacb1888",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2615e116-b9e6-4023-8d76-fbccdaf62908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12747ecf-5945-442a-88fd-199605293c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0bacb42-6252-4045-b45a-336c0247cbdc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c48c7c95-236a-44b8-ab5d-25f7e0ac67b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d75a223-7854-4f51-a871-4a309fab44af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16001d29-394a-4c9b-b570-f9a865fc0f03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e1bc64-0768-43cf-82e8-277c236191eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19c8f5d0-24bf-4452-9e2f-5eeb853ee7ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e95c1384-df6a-487f-aea6-9f1800a78599"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f642a2c8-c3ab-42f2-9ffc-c8d889ab6244",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b70b09c-5433-46c2-8ba1-26604f9967e3"
            }
          }
        ]
      },
      {
        "id": "4b3e5493-ca30-41a0-ae72-2e68dfd58dd0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "35cd2007-7150-4a98-8543-e0cdf19a9a6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a089f009-3d9c-4e66-bff6-da988dfa22f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "290d4f6a-27b9-4588-b7d1-4f20ace4a75a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cff17b4-ee45-4894-a4f5-0cd20b2521e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0502b00-d76c-4b2b-85c7-0735a4122956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cea4f73-7e48-4a55-ad00-066188c30d5d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc65f0c-cb5c-431b-9276-ae35002210e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477f5771-925c-4272-b7ba-2e243312ccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be65dfb-7e4c-4476-9682-699c41a3b55b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f57a68-1c57-4039-ace9-38e4122b1dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363f7e61-3091-43db-b7c9-2805be891754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ecf99-65eb-4d1a-ac73-36571f9a22ea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4baf94e-c419-4371-8043-9d4a3d9956e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82c6d6a-6ee4-4608-8dc2-b057ce30b000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bb3edd-9d3c-4763-b4ae-e1632b21b0ff",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146610e7-27e8-4f3e-8fd6-b959bae66fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a511cd16-91dc-4bed-91a3-b94bca553c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d71b808-1116-4f3c-879d-5cf26ac3038b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22510e4-8472-4905-b0fe-9401b1191365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f3621b-0c62-4a0a-b65e-8cb00df4cc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41131593-263d-4b97-b043-a6aa4269bdcf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee9077a-3ff8-400d-9984-837f16e1cae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff83c8d-7286-4e1d-88a3-bdc5db5ec56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35ba733-b9a9-40aa-b1a4-1ed021e77f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412bd1f3-7899-4bff-9fcb-30f552891811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960699ad-cc18-4c62-b310-d3f783dddf0e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef5182-a00e-4eca-a638-b462550329b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a66b7126-b60c-4b83-bf77-54e064d82383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe173c5-ab9d-4fe2-993c-67ba22b061dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fd723f-f172-4cad-8cf2-880fcbe29a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be82664-4b03-4875-b93b-65423006b891",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01889021-bca5-442f-a962-97d7fbbd8691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "315cf6b4-86b3-4daf-877f-2b6d3d99f955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add34e28-40ef-4813-841c-9b41ef7d0834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd47bc69-4705-40f8-a247-b97a34ab0840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8613d99d-0d32-4e9a-9483-757ef8f149c9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31636a3c-e240-4ba4-990a-0ee9ab4be59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ae8839-abe9-48fc-8598-a7cc91694e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceea12a-2fd8-42f3-93c8-8c939f3510f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b0b6ab-6eb1-48e3-b963-8e48730f010f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61219d4-6278-4792-b524-9f08d3bb3d6e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a23049-88af-4695-bda7-3376dce5e4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192a9ab3-78c6-4496-ab4e-84ec0f27b5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e1a526-ba0d-4475-8f45-87947f05ba29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff2d27d-24e2-4113-8342-34ac8626e6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97a343d-4de1-405d-a5c4-2181fee9ad38",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32c42dd-e3f8-4893-85f4-9a0e7a37083f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faed656c-6638-4eff-89cd-3a39ca205edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f500d-5109-420e-82b3-1dcffa6902f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c9323e-d91e-4f2f-97fa-a62e57b7730d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5b7447-07f2-4a0b-ae92-0b6e7d86fb40",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d059013-e937-434c-ae9e-b926ccccfbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a23ec32-8aff-4ea5-a38c-1de505f6e8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e076c189-68d1-4a39-8738-23f69fbe11eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ae99fb-b3d5-4da8-88ac-32144a9eafee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeec51f-de92-4c20-b3ea-1f8d244fdd80",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f580b705-32c5-4f1c-a4b8-1f1d908a0167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373f4066-2772-419a-8820-2e1085ebf9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc9a1de-b39b-4aac-b998-e6f76a8e2542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04d31c7-a081-43ca-9037-b41463b3a45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cc1508-5500-49f1-ac47-92d0b6b258f5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af82aa1-bd00-4a62-8d87-3ef0f5337f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c83e441-2326-4938-b573-b23d351b8ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb975e5b-21be-4d70-8c89-011bef22db2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee0e1f8-2352-481b-8964-eb343af12f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07186f8-24b9-4838-a4e1-74842a2e07fd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3e0ea-6df4-4ee6-bfb6-2366767e2c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7167bed-3a07-411f-adae-4d33d0718c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4827efb-1c87-43e0-b8cc-637710a555b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f6fdaa-9188-45e0-b3df-949c2ce02be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ddf95c-8922-4088-b304-7a8952b4c446",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fbf1ef-b193-49f4-a988-3e609c8d9291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0593c10d-f6f0-44b7-962f-ccfc7bf5f504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a3db3-9b1b-4223-bf96-e54fcb1edbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0190ba96-aa1f-4a10-87d1-d7e692085f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4efb96-1918-4c58-ab26-3ae856672700",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa6a10a-5f63-4a39-bbb3-e56626d14fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a16f4a-e38e-4aa7-95d7-dff6189e887c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c026ff92-09e2-4098-ad74-5cf02be71053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ab9514-84e6-459e-a780-c0ead6b79fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742ba645-7a74-489e-ae52-0f5dbf9e0d26",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0a8a77-9297-412e-9676-09ec37600972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7752b4-7f2b-4a64-ba1d-08b02465362f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2b1604-64ec-481d-8a96-2a354cc6b892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8f41fb-c058-4a05-9797-bb17bd3d327d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5aaad5-0732-45b3-a792-331de75780bc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889450c6-1c9c-4e18-9a8d-ea3a7c28d539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d020a3-58e9-4f9c-8b67-4a7fc78ba97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1c6821-b675-4e88-b837-d23da676d00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c5004c-38c7-4dcd-9601-72973782a90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfb9ad7-ef36-41e8-8747-55a4bcfde26c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0fc2ee-bea8-4b37-a577-e635ce690ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52708d98-3210-4103-8a13-01072d123484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5305d6ae-6c52-41b8-88b5-2de2e1c9d50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604d6d6f-af50-4eb9-8215-7caedbb3b68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8feec24-8f0e-4e40-85bb-44b38fa7d139",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25137e39-c792-4583-b568-2b27bb83ff5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49ed442-09bc-4184-8d83-3c44b993f7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99162e1c-162e-417e-a2d9-a54b888fc8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bb8ea4-9d61-449a-bfba-e1a91fd236df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2a840c-0110-46fb-a072-33c9a2ee65bb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc7af1-8044-4ddc-96ab-b6d79afb9533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45797483-1d94-4aac-bf85-594a5502bc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027ee08b-447e-4418-9274-034b12faa635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3e563b-0d34-4629-9798-374cfc8b0613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cbd694-a4c2-4c3d-a320-f6afa159becd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1220b66c-8373-4f8b-859f-d86190ffd44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5869a479-5504-47ab-b7bf-15650e015663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eeda356-ef1a-4462-b7f5-150586ba74d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e9ed2d-9dac-429f-b3f1-5009b919182f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4eb581d-96f5-4f0a-8e8c-226fb597987f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f8c510-ad91-4d9e-993a-876fce57c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac26d0e-aaba-4255-8c5d-b357c1a47c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e380f9c-4303-40cb-959c-1a0f2b3c5439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5f7f3a-6731-4208-82a4-0f68d1f827ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7662f41d-99eb-4193-8e85-630dd3e7b0bb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec428ef-b0b4-492e-ad76-4a3245f2f70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5b8947-534a-4bee-b52f-7b25a05413e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791cb1c0-764b-48cf-9400-9fba35e73943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f716d7-597a-4e4a-9390-ccf02e2e3692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7a5631-78e5-43d8-9a41-72a4390ff223",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87837584-8444-4c6d-afce-3f4fafd71b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54c6efc-07ed-4b2b-8f5f-1477a178f0e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee34240c-2b61-49ed-8e92-d3693dff9f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6777ef29-cf10-43ec-862f-91fdab7dc007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e32ab4a-a1c4-4753-be08-11fbf0b0a95e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890c71e0-7473-404e-893a-024207b544cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d888f9-884c-419c-a5df-97e250fd0397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f41de6d-68ad-4140-b5ec-8f5e9366d167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193293f1-1778-4a96-9fb5-9d2a1a9f0caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f38a3c-12fe-4272-ad56-7c0a9b614208",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57567923-e6ed-40ff-bdf6-fa6afe5de838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "543548e9-53b7-41d6-904a-4399b1e96f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ff444d-6ecc-41e1-835a-2aaaa0ad95cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426d7f4a-3141-4a6a-ba5d-c728d9a953ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2f6578-23fc-4a78-9b08-aa76232ebd68",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad7118e-43d2-4819-95c3-a0fc4e2d4478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e881414d-21ad-41b1-bb2e-820628d784f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14200df5-2d57-4590-a752-6d40b2cf7624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9d4bab-e586-40b8-8f5c-9ba80def0f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc2ecb5-4059-4dc9-9868-9fc8e3c39301",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1884fa2f-535c-4f6e-a11e-29863dae1487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc3990a-3c6d-41c2-987e-7e8818b99d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edcffa8-44bd-4407-9958-57b6cf931914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71304662-b28a-49b2-820f-b15b78ea062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912d03f0-2cc9-4f1c-8cd4-e29b86a955c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae1883-0a2a-4c38-b8e5-a266661a0f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73d00d80-8d01-49ef-8209-a2e93c5e50c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c931b-e78f-40c3-8608-edc5c5575fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3ba842-f0ac-4264-b586-19dd50a765fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c4d38-9cd3-4255-bc92-1b9430a477b6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202c1b89-6854-49a3-ab09-2a9ae908086c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821e333b-6197-4873-97b1-c6c5e4e0821c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697e9be9-8913-4da8-b210-224f917129e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b288e34-7c80-4bd8-ab94-1c31377a859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a1ba0f-13ac-4263-84f1-462e71272d94",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d48425a-3ed3-4345-bbd4-48720b9ff6c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85588981-6361-4ec9-a1da-d33991404b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14efd9fb-658a-4cea-8d2e-dfc0727bc898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c8c151-7452-409a-8a33-e93ef4bc484e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e666a6-89ee-4ef7-a3c5-78c74246ac03",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eedb89-d3a1-42f9-b75d-7e1ca020d999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acf877c-615f-4eec-9bd1-624949d1e357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece4c2af-f9a4-4a6c-821a-3f51d91a27b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15e9b24-7927-44c5-9599-60b11364424e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f86afd-b8c8-4c55-b662-06889b6aa282",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a45d602-4f3d-4a6d-86b0-8b3d58f0906a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0b5a56-ae8e-4bf6-adef-9fdd3404f5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa356de4-b195-4651-8a61-22e96efded4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a095d71d-b2d4-4be7-96f9-eb68f6873052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70711baa-5b82-468d-95f7-97538a6904ab",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a204ce00-b955-40d6-996c-397f20ce6258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233556b1-e778-4895-87a8-1a11eae3be72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f422ef-1b81-4bd8-bcac-41c326854d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfabf81-b97c-40e3-ada0-d50cf25acd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93c261d-7bf1-46c3-bae2-1145e745941f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e2722a-5a2b-4c6e-a80d-cbc3a730ef65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6b7e51-2384-4b41-a30c-1b800e043418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22f772c-d897-47c4-8291-88608cbfcebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9810ceac-63f6-4971-9505-2ac4a002a615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d923362-f134-4c01-b6a2-a862f6312005",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85369e08-ef64-4ded-a1f8-d01372360ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ce5cdd-77df-48cc-8d0c-e6659681ae6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88647486-21a1-4e4d-92f4-7e75ae66c03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590ffec2-cdfa-47b3-b344-0f04e86be0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08cf437-ab78-4c66-8688-610940e0289b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ab9a64-c686-49c7-9831-c16cf063b8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009171e9-2533-40ac-ad09-305bdfff3962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e77904-f75d-4dc7-bfa0-bdb5d077ad59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84477839-cb58-466f-992c-1c5a91eadefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c1a888-6766-4832-8d9d-f92b568e29f9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d0e4b6-a4a7-4901-b80b-2b705fc15d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c37cfe-1a4c-4f0a-94be-0171924b47ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cb2d45-712b-4b35-8ba3-12b1db1b3c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7707ba2-96ae-4679-a1cb-6ef79015d59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7b515b-949a-44d1-8e0a-da2f45bbc9a9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0fc2d2-b297-419c-9cad-1bfc6f28a503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cfe9c0-7f31-4519-8e4e-283914b5c250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11dbbcc-280d-4328-9f53-5cda93d0d463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa61e20-ab0c-4185-bbd5-3e62bd70889b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76ca6e2-9de1-4fa7-96a6-81e22fca6be8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1695a1d1-35b6-4f11-af05-1623eb14f8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d29c65c-5447-4c55-a937-433c66310123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8a43b9-54b4-48c0-a6ea-863295b60fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f58030-4dd9-4268-afeb-38c02d77c039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f044556-588f-4f25-bfeb-b4e6a19fca4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db577ff-a88f-49ae-a1dc-cce188d87b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63260377-516c-41d1-a05d-201e142bafdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee4dd42-9cd8-46a4-9071-750b7c5ccab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bb3b37-1718-4dd1-a372-56f9f2ae2a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64b06c5-06e1-4a37-8e0d-1601cd94ce94",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c44a1e-de9d-4f64-9ee8-39c67ef05fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4190bc-1c9c-418f-8c4a-15d818c00f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d74de32-c96c-4603-9096-a4f22e06ad48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3486eeaf-ba17-4b0a-b65c-dc1736a95ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce68fa79-566d-4e90-a455-de4db690c3ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07c10c7-b207-4132-8a69-12df12211d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be9cded-c100-4e11-96b3-5d1cdb6893a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d56d7-1673-4b47-ae49-1e6290c5e059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b35bdc-7156-402f-ad12-a1531eb90fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c4c36b-472b-4bc6-b9f5-ccb1f570aac1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e053fc-0f98-46a6-9baa-86f770bad8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17943018-7372-4ef1-aa8d-0c323c953020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94dd35f-26b6-4487-8b5e-d6cf265c1536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eec33f1-30a6-4807-82f3-d6ad68940bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf27aea-3a92-49de-b5f3-a1fc5eb40c54",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c5a42c-111e-4460-985b-79366116680a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901b8a51-af9c-4e30-9389-7fc59aa36bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29113144-f4ac-4daa-990f-0ce64b3d3226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4272aa-cd5f-4642-82e8-83829d26d0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a23383f-8c77-4052-9417-9c1ca7b14857",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4ff992-9707-473a-8aa1-508b636c6440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3062f2da-ceed-4538-af87-e71d7d4dd8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e43459-2b0d-40c5-a150-abf5013b8a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd57d183-e06c-4f8c-b100-66ae97302135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a8bf29-0ea6-4df8-b8d9-043cc87e03ee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e326e-0fbf-4153-9a6b-37ccfdae0ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed627384-66ca-456e-9b64-b4815ffa93f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5fe49c-cef9-47dd-92cf-46b8a5c87abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9345835-f9e5-415c-a104-7eb51c3e067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170e0334-eaaf-4797-889c-95533532a0ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f305630e-61b3-4bdc-947e-403f6b9aa9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a79f1fe-7cf0-4db7-9316-372abf8e8d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e266c0d6-6369-41d0-b295-2fcd841d250f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507fc6ba-ddaf-4031-b98b-2e52f87470ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8aeb70-7cbd-4009-aa44-275e7d9f81db",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef54db-bba2-4b5b-bc5d-cc68f948cd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec247e8-d671-46d6-961f-517030538393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3cd9f2-74d3-4eb0-b203-a8ecf8873598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9521f459-b4c0-47ef-8f03-c6087aae4e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9c0679-5655-4dc6-af72-550d65f53dfd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab9fa97-3db8-4872-94c8-fefd7cadc549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c8f5bc-a966-40b9-974c-7b0c6436d7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21390f8b-7dc6-4d16-bd94-e6f62d6a3081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5119c4-7080-4b00-9197-1fd193875e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185d9398-8582-4666-b430-88e40bdbc45b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64efc737-07de-41f0-afe8-b785d4f0fc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24193db8-ecc6-4c3a-9ba4-4279f7019b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb7ce09-3512-470f-8fe8-6d2ac8c3ce97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2247bb-e138-46a2-9499-cfde01f1e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e8f674-3af2-4213-9b7c-d4a6cf160f12",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6ee993-9996-4099-aece-8e1137c45ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d246ec88-8b34-4519-a1d5-825fd8659ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a237679-c116-4182-b456-bd399a4234ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4ff1c5-8720-4f4a-a8c4-d9835ee481d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acf8bbb-6691-4b29-af62-1bee18d36a6b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5201c852-c188-4049-99e7-8a6925ce44b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f66ba52-773e-4232-a2e8-9b9b4fdef5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53186eb-b2b8-4e7f-9b6f-80dc55802421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3401f9ec-405a-4a85-8519-44ba7031bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e92b0e-d027-47b6-bfa1-ef30c6835632",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96598f0-eec6-411c-9b3c-1866f58a95a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70ecf7e-f20d-4dd7-a03b-84cc5b5ff98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150d200-0fae-49d0-b5e7-a484de24ef3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fc9aee-a58c-41cf-8a90-01f5d705c7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bd99f7-add0-4e63-8859-7860b59faa63",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b514011e-116f-41cc-9084-40385b178be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5892c610-db92-4de2-802d-d702c6c0e775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724f16d6-ff84-4cc4-8cc3-805f4cc46a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39e85e8-6aea-4541-b5af-d513b5c59009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ca260-1e76-4206-af00-18c1ad0ed978",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b3412f-b30d-49fb-882f-eb095bd77cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd3d4a3-2bbb-4f5a-9313-4df36c7315c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1ca5d4-9005-4968-8170-972617ac0767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96d5c91-9bf2-45fc-9aaa-2255350a7f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba29f1-19b7-4aac-9fbd-4e411732b3d8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3176caa-a456-472f-b53b-c11a4c14b912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46161f0c-464f-4583-b515-12c71b3dda02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a400d2-29c4-4be1-aac8-a81a72d016d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13717325-2ac4-4f25-ac10-ede2f70ffb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9bbb96-03b1-436d-a3db-c4947288e21d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c647e4-5a72-4387-a2cf-3674715bb9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb6e074-2dbb-416a-9f54-3268f259fcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc21380-d3bc-4389-8503-828278625903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62313d6-49f2-4e06-b46b-89ee0bd5bb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed16e449-ad50-4cd5-88d2-90502d202960",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6adab96-60ab-4522-a6ca-31b6c6325d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adc7531-06f3-49b2-b44c-10a387b11ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c0ee11-04bb-4b21-b8fe-060d5f8d4bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2908418e-ea42-4194-992e-c2a4a6c497dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aed5641-86fb-4418-9bc1-404a14dce62e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37821b34-de9f-4522-a738-16d723ef30be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3160f1f-29ba-4fa1-a801-19b998dbabef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb086fd-cbad-4a2d-b940-886c49c85029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde61be2-02c1-49dc-b897-a55a90a4499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06876b3d-e3ff-409c-9afd-cd56be864ed4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c7b62b-1a19-4771-8814-4325aced0720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df2502f7-89f0-46b0-ab28-9686d3941330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbd6c08-46b2-4d4e-a743-2f80187795c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df93c3dc-217d-4872-af55-606fb73db061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e639b6-6cd0-4b11-8b99-7fe702b4a858",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd847012-8ed9-4034-9b54-a0a06d10b18c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855f70bd-adab-4d4e-b6ef-cda1e2ab0bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9218c9aa-2024-4e62-953b-810f26dae652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c265e74-a3c1-4437-959d-7f4f80b7ac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f90834a-4bd8-4784-b896-2c4db9002658",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e766d7c-78fb-4b24-a1bb-8a00e1636916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b921ee7-78d6-44f1-934b-5e65e1f35f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fc365e-39d0-4b2a-a79a-8ab9d0e45d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae65d6d5-563d-426b-ba7e-4edcf108fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefb8c13-dc35-43a5-ad47-fd213ea7a8ff",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7ea990-5758-4afa-83e8-87496c2d4345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b96570-9e41-4f9e-8cfd-e848b3c3e887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cb1a27-ea59-4f80-b8ae-fab6aa0cc284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698e33f3-a462-4faa-b5e0-5db86b2e38e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f8bd6d-e247-41aa-b5b0-10fbdb683d1b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c18abc-cd00-4fce-a373-818f7db1c300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d38d9b7-9beb-404e-98f5-d276ed54c4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ca7e61-f6c0-4de0-96ca-f13fae3df568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21b05b0-aeaf-4680-bcaf-32fc91d3dd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0290fc-666d-4555-b4ef-c779696c285a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90d47ca-7f3b-4636-ba12-602e548d2539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503eafe8-8321-47df-8fa1-66bbab8d8318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c809d0-952d-4578-b76f-a9c6f03889a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1192a691-d500-4bcf-81da-6b0e3cb2d3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c18628-fefc-4338-964f-561a80c10c83",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f566c296-f213-4871-b6eb-d744c1b7747a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195c4f04-8e4b-4d09-ba51-14595d5d793d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79cdf40-0982-46ad-a292-c3fa28194b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6366fc-277d-4ce7-bc56-b11c84c727e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b681b3d-67d9-492e-ab01-7426b7cff9d5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe30425e-9fca-4aa3-87da-274bc6d8b77d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4eda01-8c36-4b4e-bfcd-67b717007c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f18168-6ed4-48f3-84b1-d04bce69c7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b606aefb-6897-44d5-9878-c9aef1b914b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eacafeb-b9a6-4794-8589-1311855cefda",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0e34f5-61ed-466f-9fb8-41101bcd5ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d7d65d-defa-46f3-9a23-3334353c709c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f01aa39-9862-49e5-89d9-8625f53da656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5c5189-c9c7-4e27-b2e0-66c2349783f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c113f0c-9633-417b-b63a-ebe859b4a01d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1136ec3-55cd-48d0-9cc7-a854d019dabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9847735-1be6-4e1a-8a83-fbccf15813b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d145f0-d68b-4fc6-bb5d-5c2d82a261b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559cb8d0-e61d-46f3-87ec-4265911e57b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ca285b-feb1-430b-96c0-aedb664ad89e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5922cfd-86fc-414c-83d4-a29297e03050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2d9d68-b418-4939-9fc4-0d3e44c94c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a563515-f608-41d3-85c3-7ec4427678a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962ba33c-702c-4bba-a745-8a43d830db47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780bd29d-bc9c-45d6-a19b-8719198038be",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efdc486-fe7a-4281-b0d8-04b11d725689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e095dfbb-123f-417d-938b-93440e41493c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd11b371-d634-4c6c-a095-2ad822c13d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9b51a-d32d-4fe3-a786-bd504bed921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26e6791-2e85-4da3-ab56-54c6e53c4997",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f32c086-8768-4216-a481-3d053a19bd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1b496b-5765-4a56-82ec-0397a255aceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed074f0b-a9a5-47f9-b1dd-92dd81de7cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87658cb-4828-497d-b757-bd9504e5ceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad49460b-75f6-4096-b126-0d458cd92a34",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc1e64c-e3bb-4b9c-959d-35d84f6c27ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d059d885-7e52-491e-bc92-9218242cbc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cccf3a-b797-4a2b-af38-2deebaf2b685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76643e31-f7e4-4a7e-8ed2-b4fc57b3e788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834a6b7e-61e7-415c-a37e-92955ed7d1a0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b954c0b-eca7-4f46-9731-53a139ae1608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d6e414-af94-4887-950b-2356ef8d7ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920e69d1-985a-4ca3-8fbe-629b05b19406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229f20f1-5f42-400e-bbc3-008d72d20311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53d4555-4cb6-430f-83f9-4fa33c48ff68",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce100eb-3b1e-4747-95f9-20939cc474e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a4d6ec-2841-42fa-b499-cc9a0134aa12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6d7a40-0318-4a03-b445-8f3f5674cda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7ce933-11db-4240-9a3e-4709b52721a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d7b1c2-bace-4814-9c04-d2b12e9610c2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55c3f16-1e0d-4d70-b394-0e6e405982d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f47fbf-5ead-4e89-b411-dc15d78300cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6124447-73e7-4b36-b985-c387defdf6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8155437b-dc58-4b4a-a0a4-8910052cce11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15f317e-4b60-47b9-be89-0ec41ccd1c92",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1988927f-a7e7-4e15-bc8d-4e13e2815c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a8b993d-63a9-46c5-81cb-a551c5e4f60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cd724b-c5c3-42f3-ad2f-4714be628728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae05e34-f643-4d3f-a3fc-1d93eed3b3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821d9179-f32e-46e2-a311-027e5ec17752",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f352d3-1610-4644-9afe-315dd5fb9a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69430d5-d09c-43ae-a45f-664188e617ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132d38f8-ea08-48b4-bd3a-e0d44cdfbb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb57dd9-6a4e-487a-81e4-0b5f684922c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7a0113-5224-4c7a-893a-2aebd8f70521",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7df1da-fb1d-40cc-9561-794e4fe6b806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717ddaa3-7263-403a-8926-bd0b590c2197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58603a1b-9f10-45f7-94f1-1ae0d8fad342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0efd934-3ed0-4517-8685-7a6ec6f500b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7b3b6d-9037-42f9-b02d-f18ef92e4c7a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c643e9d-4587-4524-ac2c-461c0a0b6403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a38875-dd1d-449f-b715-7762cdcbcba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ffafdf-ba77-4f99-b690-4a5d420fdab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60edb872-6b3f-46ff-bded-2266f6e3d3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aa24ac-8f15-47f3-a7b1-f89c1f5fd37e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e0d724-de00-4c46-bae4-453840ff91cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff626fc3-0153-484b-8ad1-683017cb0c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ccfe8d-7c48-44cc-ade0-f993c5de0cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2275cc-2e91-4933-bdb2-e0e757e5b673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493cb561-582b-4d23-b1f2-a89ef82a1d5c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d029f41-c5ea-4e46-8d11-cfadea6d38ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd66979-a18c-47e2-a648-cd76c52fbd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca21975c-e3a7-47bd-a687-412d1eabf970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0974bd-6967-4362-bc5a-c5dc507b7c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ffe48a-a20e-4164-aee3-c00688eb59b2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4f7a08-6ce3-412d-b19d-4e7409161fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1722b61-341b-4ce5-b0a4-409d6438d042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63921b7c-3592-49d6-a467-4ffe67518ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0106d2b7-78c7-435f-b59b-babbd385dad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fc471a-a3b8-403e-ba12-363141b083e0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cc6196-bb68-4948-a665-53354144cd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0766957-9a46-47d7-a8a2-cebcaf396b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13016606-184d-4af3-b3b0-181081d66f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84357ee6-8653-4e24-92cc-a0ec0406b2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66e4454-7225-4736-b5a6-246ca2d6732d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c20c1d1-757d-4c0d-b966-56e808bc5c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5c644a-480d-4d1e-9c50-2d56b5641160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ad8630-02bf-43b4-aaa2-d2d7db213831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185e3de6-c0d8-4914-adc8-9b4288934bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34d68c1-4498-4bdd-9e54-436c80c49d98",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa62c36-5488-4556-8f86-392305818698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9300eb-00be-478a-b90b-e8c808344079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3449b78-9b32-4278-96b1-e8ae57e07dde",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce2de2d-ce70-450e-b323-ef951760c0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadb764a-05cb-4454-8701-a30d1f8d4fd6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a89e5aa-3479-4242-8e17-a962d8e6f554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d3dbc5-a548-4fde-9a38-fedcbab0dc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8511a7-0c2f-4120-9afe-5d75541d04fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5c7ef2-14f8-4758-8a3a-d1f49ad20a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7349bc8b-3c15-4039-804d-5fb0d7a1fa6d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cf6df2-d397-4412-a63a-c6b5d29d51c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1279d745-6a77-447e-bd75-e746bfe3b76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9f00c4-b3b4-4aa5-bfda-7d5ba9f5b7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65499eb-300d-4bc4-a47c-88a280465489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ed0ab8-b412-4328-be26-99a162fd5b1c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f975bfa7-77ac-4f4a-904e-50ed2c9d9517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6326285f-b046-44af-a844-ee49e49e5e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dd149e-e722-4a29-82fc-117c2d630a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fd1402-9f62-46d4-8153-1c1d299dd21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b44e73-c09b-430d-92fd-fbfc32ef2667",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd40bdb-071e-45a5-941c-346d31fa105a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d246c0f8-4308-40b0-8189-502cd5d4a08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3471cf8-7d2b-4efa-a882-0acf507f99b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022821a3-a7d7-4e84-b951-15e8f4abdde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5d1b02-d6af-4e40-ab32-a3d19f701a97",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020e2aa5-2838-4047-83eb-b1793b78c6da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ba39f1-e01e-49c5-ab97-d25f1313e4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06554e3a-ddc2-4614-9b0d-f4acbaa4db29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda22bca-8921-4351-8f66-d014bcd5c513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce169553-db03-438d-b548-64b170b58f7f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e74a05-8c3d-4558-a64d-8b2a2fc5d246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ff202f-89b0-478d-8d9f-4b3a17abdba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e043009e-f0bf-475e-929b-96025ea8a2e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54b5b4e-9774-4298-9db3-87e86d4cc211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8e0ad7-96d2-40ed-bed4-870880d39d7d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04739f70-4eae-4c4d-a72e-8798defd8e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9d8e05-23d8-438c-8ed9-057552286771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417ae3b6-341f-4daf-b7d6-5ca6b04a2d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5ecebd-3e35-4759-aa4c-5ba2c080bc6f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "141182b4-5bb6-4a12-9185-6a20c9a74d9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "709f9901-a362-4e69-bd70-36afa59b7e8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "476d4e4d-2499-4ac4-815c-e4a418b0d0c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a62483a-e865-4698-92d9-2b160d79fd30"
                    }
                  }
                ]
              },
              {
                "id": "9a1a3e54-e0dd-48d5-8c44-01333d567cf8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adf217d2-9e78-4910-8abd-3747277cb4bf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f98c2d5-bc25-4c50-a0f6-a4ec7f57541f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "12b71a75-1a8f-40ee-a232-3afc2e52e171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83f0066-b31b-4c84-b5ff-fe9c944e64c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "103cba87-fafa-43c4-a3fa-30a7a3f9f288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb02441d-23a1-4b72-bd29-59e94f47a9f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fceda3c3-c54e-4cc5-9f82-86fcba5c59fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e83b0331-e8d2-456d-8bee-4a48f12acc14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600dcdcf-1ce9-4e24-bcb8-81a8859fcef8"
                    }
                  }
                ]
              },
              {
                "id": "93b4b266-f51a-4724-85e6-e4e293ac9d84",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97520c2f-9fb7-4c52-857f-bb55175061d8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fb3cc-ba79-4f99-b178-b0aba6659526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "61016840-ba0b-4e69-b1dc-07b20916eaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1251d27-b254-4839-a5f4-9881864d3c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf57b54-9050-4e91-923a-ea454ea74fe3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16f1636f-c79a-4473-be63-b279771255de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6abd23c3-bd58-4e7a-a20c-b94a623ebe0e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20e5cf88-9819-46e5-bb6b-7a5f2a21f1bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70258b00-1f1d-4f64-818f-bba3f6f1d79a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2850ca8a-2c96-4cd9-8e54-43d659f5f5fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0785aab-0c57-4d92-a1de-3a498476cff0"
                    }
                  }
                ]
              },
              {
                "id": "399f77b1-7538-4dbf-ba53-49799fd595c3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "804676a6-8a73-4962-891b-e2cf58d68362",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "60188a19-06f9-41e3-ac76-4d5443928300"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9ff4ab2-f694-48d6-ac54-bd02bc88fa9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc383188-480c-4d5f-961e-eaac5d4adfc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8330bc85-d300-419e-a9b1-bc578a39ce1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ad2596d2-c2da-40d2-842f-57bb9da38567"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a13f3d63-e089-4e81-8647-719daafb356e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "601ca7e1-310b-4acd-9d69-039e2df1252c"
            }
          }
        ]
      },
      {
        "id": "2d483479-03e1-415e-a9f6-3a2dda19a7df",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c7a5d2e-c611-48bc-a1ae-d4b2d3581d44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5a43dd5-36a3-4611-ab43-6cfc7333023c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd6a7615-60c4-4ce9-8ba1-0709f275cb83",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1825dba0-c96c-435b-b530-0e6a8a18ce20",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f495f4d7-57ef-4ca0-9476-e7110f11e7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f0d556-d0d7-422b-beb2-bdc3e3a44383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b447086-f4b5-4f90-8104-6800f2ceb35b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c33d9092-ebda-43bd-8993-209ceafc4500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55024043-64b5-4117-bdf4-7bec3251ea2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62470277-2064-4927-a62f-dcf98685b2f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdbbc53d-4630-458c-9ae0-4f56eee92958"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c39c138d-1fd8-4068-ac18-82e723559eaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "34cd61ce-c259-440e-92cc-72fce11bc901"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be2c5c87-f288-439e-b128-453718456807",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6d25588-e794-4339-859a-f6fc492a47f0"
            }
          }
        ]
      },
      {
        "id": "7329d648-79ee-4952-b315-4cc544bde955",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "054aee59-15e8-4d0e-aea1-6f00345eabc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ef69e18-cfd0-4685-8d35-e5bcc6fced7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80cc1114-6007-490a-8d8a-27fa340bdb7c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaf8d40-cc17-4b5f-a69f-e9a0b6283e40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bad89ce-f60b-4288-bf90-9d75e3480178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a65153-cdef-4ffe-989a-7802486077bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb4d82e2-3fdd-4d77-81a5-5e35242ed121"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feeb6296-7656-4206-8695-904e3942c7be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7205ef0-217a-4dcd-952b-06e744ede56c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "945fb8a2-3ebd-4aa5-922e-058da63fc197",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b2afa95-b79f-4c8c-8e86-813dc6c4fc0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea43b767-b5e0-410f-a735-3c412c3b7cf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76e84889-2ce9-428b-96f4-c2345754afe8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "239cdc92-a985-4a2b-aa69-27004d3de803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "261a7cd0-40c1-4aed-97d7-523d216dc9b1"
            }
          }
        ]
      },
      {
        "id": "208fd0dd-165e-4937-bdc9-1726548a43b3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8f00451f-e820-49b6-a2ad-3fb991060f69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1028bb2-c568-4324-bfa7-f746058598cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "511034b7-3643-4053-b442-c43b7f4eef1c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cf7f5a-558f-4d8a-9e21-4dd7317e58b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1da4dfa4-70a5-4acd-9e3d-fb265f58e2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9131775c-bc85-40fc-a6ca-2708b088926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8d4bd4c-575c-4a0b-b022-1e765e2d4f09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb94d2d-12bc-4ab0-b66f-3a47c60667a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7d54e88-bc40-4f36-9985-37234d0f0f7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fac6285d-3010-4af4-babc-2b7f4a48907e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b88ec3e0-b6de-4e76-9e69-bcf7098d53f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41479ca4-5b93-43b6-8a24-d79e0066e619",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f6a7b64-297a-4c7a-b918-be4044786570"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8665c675-da3d-4ed7-b91f-2ffe06576257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6f90357-5d2b-4728-bae3-900fdbf8d539"
            }
          }
        ]
      },
      {
        "id": "c2dbaaf5-aab8-41eb-9865-bc83f965ef94",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "477d9bc6-2e2b-4708-8080-5b3dbc556fac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4170b1f2-7aac-4724-9ea1-805bb8fc757e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4276d48a-1bcd-4a84-ab0b-c56a1effe8ff",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b8fb597-d62c-449d-bb74-7434eb5c3d25",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afc44df1-54dd-4491-977c-807115bf8284",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 99.14285714285714,
      "responseMin": 9,
      "responseMax": 9677,
      "responseSd": 646.3822056510471,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718930260289,
      "completed": 1718930293388
    },
    "executions": [
      {
        "id": "01dc42b3-ae3a-4a20-9684-97bc7d718557",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6b7bed16-82ac-49fc-9175-e2dd6f13f13b",
          "httpRequestId": "663604e7-3e9e-40f0-b58f-fe0fed45ae14"
        },
        "item": {
          "id": "01dc42b3-ae3a-4a20-9684-97bc7d718557",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "67377c00-ebc8-47c5-b481-a87fb04b4461",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "9424661b-9006-415e-b8d4-e6c223b0a01b",
        "cursor": {
          "ref": "46943326-49f3-4d15-8257-a0ca74db3dcb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ca188834-af7f-43d1-84ae-b2f235617eb7"
        },
        "item": {
          "id": "9424661b-9006-415e-b8d4-e6c223b0a01b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2b61da5b-61ab-4ab7-acc5-ef567fec4aa2",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "e34687ba-010f-4af2-bf95-ee0d7aaea0e8",
        "cursor": {
          "ref": "e749e796-4436-4fbf-978b-66dc878bbfbf",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ee839dac-e5ef-4ddf-99f7-c5b8df37980f"
        },
        "item": {
          "id": "e34687ba-010f-4af2-bf95-ee0d7aaea0e8",
          "name": "did_json"
        },
        "response": {
          "id": "2fcb1254-6500-4469-bd05-460b9b30bd9c",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dfc683-83f5-4bd1-b19e-b569d238490d",
        "cursor": {
          "ref": "3bc494ad-73c0-4fc2-8f35-22b3dee65d81",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4aad9b12-1226-49dc-a0a8-651b167ad260"
        },
        "item": {
          "id": "86dfc683-83f5-4bd1-b19e-b569d238490d",
          "name": "did:invalid"
        },
        "response": {
          "id": "4588bef8-6e5d-4464-be68-dd493a4c32ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 346,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dfc683-83f5-4bd1-b19e-b569d238490d",
        "cursor": {
          "ref": "3bc494ad-73c0-4fc2-8f35-22b3dee65d81",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4aad9b12-1226-49dc-a0a8-651b167ad260"
        },
        "item": {
          "id": "86dfc683-83f5-4bd1-b19e-b569d238490d",
          "name": "did:invalid"
        },
        "response": {
          "id": "4588bef8-6e5d-4464-be68-dd493a4c32ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 346,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7148a6-efea-4a0a-951d-c635eeb6485c",
        "cursor": {
          "ref": "9d53c37c-f252-4b60-8eea-f3ea766a742f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "49002b27-de16-4a8e-ae8d-d775ffabe100"
        },
        "item": {
          "id": "6a7148a6-efea-4a0a-951d-c635eeb6485c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d6a1cfc5-a02c-4bcd-adce-521dc6a7a105",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf223d-3388-437c-aa82-4b5840cba87f",
        "cursor": {
          "ref": "3ef8ca87-8d52-4028-8a7b-cb07944eb5f2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "511d87ea-6668-47e0-bd51-9f290945d2cc"
        },
        "item": {
          "id": "0fcf223d-3388-437c-aa82-4b5840cba87f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8332d4c0-d575-4447-96dd-af6a3b6a399a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8a3e98-0a35-4e09-bc2b-2b2c6b70a34f",
        "cursor": {
          "ref": "475f99d7-eed6-43e1-8dcc-4b8b6fd4d47e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "79b40d16-2e8b-4009-8774-ba1c85a04e27"
        },
        "item": {
          "id": "eb8a3e98-0a35-4e09-bc2b-2b2c6b70a34f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "28e9e24a-43a0-4b6a-b2d1-11f850b6bb77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0452741-5aaa-4f62-9bfb-25b8217ccd67",
        "cursor": {
          "ref": "8c973b7f-a116-4a79-8ebb-a4e66c3560f5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a869b610-74f0-4e65-b4e1-445dc4ea58c7"
        },
        "item": {
          "id": "b0452741-5aaa-4f62-9bfb-25b8217ccd67",
          "name": "identifiers"
        },
        "response": {
          "id": "5c622db9-8c2a-4f01-9b6a-b15652130bed",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9ceb5a-a4c0-4765-9e71-68cac18be5fc",
        "cursor": {
          "ref": "1f056d3b-f9ce-4b9a-9743-7338b314d867",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0e0a6da2-3f5c-418a-b001-6a924f9b28f9"
        },
        "item": {
          "id": "4f9ceb5a-a4c0-4765-9e71-68cac18be5fc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1cddc846-9c93-48ef-b853-236a39eb038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c03d584-b385-4086-a96d-ced5c5088431",
        "cursor": {
          "ref": "fca25a9a-0f45-4a38-a030-7e317e718014",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d401bb7-207e-4429-9e02-988f8c9983f6"
        },
        "item": {
          "id": "9c03d584-b385-4086-a96d-ced5c5088431",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "67ad6f1d-c4dd-4b3f-806e-379c83dbfaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98012be4-3059-4c6e-be7c-20c458bb1094",
        "cursor": {
          "ref": "f695a631-3267-411a-b161-7da7d7e8eba3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "de4a2ace-e092-44a0-b54f-ffa3e9af3a38"
        },
        "item": {
          "id": "98012be4-3059-4c6e-be7c-20c458bb1094",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dfc80403-3cc9-4dfd-b4e7-fa7f0bae69e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a909c-a086-480c-8ccb-24405465c654",
        "cursor": {
          "ref": "f5c04800-c3d8-449c-9c00-dad73de970f9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d132abc-5709-4d0e-9d1d-ed1430a33406"
        },
        "item": {
          "id": "910a909c-a086-480c-8ccb-24405465c654",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2b8c72ad-0c49-4f20-90f9-f05a9aa5e86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9957a42-08b1-4b0d-9893-5d233eadca28",
        "cursor": {
          "ref": "4e8650ff-ff00-4f15-9de4-803a78befb59",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "94c7dd47-35c3-4c71-ab52-720449b06df8"
        },
        "item": {
          "id": "e9957a42-08b1-4b0d-9893-5d233eadca28",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a4fee6d-30e4-4e31-aa58-ba16ec1b153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0cf621-9dfa-42cf-bde6-de65bacb413b",
        "cursor": {
          "ref": "c2ddb1aa-d61c-45ac-a7b7-5dbd457b068b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4d8a684c-d97b-45a9-8713-0cd92b62543d"
        },
        "item": {
          "id": "3f0cf621-9dfa-42cf-bde6-de65bacb413b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f6c32c9f-db45-4401-b5e8-a25cae779fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc0398-e52a-4be9-b16a-57edb25d5b7c",
        "cursor": {
          "ref": "64a4490b-e8dc-40e4-94a8-8547fa3a91f6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5e30676e-98fe-4c8f-bd1b-3442f04e4b38"
        },
        "item": {
          "id": "30fc0398-e52a-4be9-b16a-57edb25d5b7c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d2651e4c-d43c-4668-89ec-dd115b98fd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdc0d1d-a63b-422d-8f1e-4756bf5521ae",
        "cursor": {
          "ref": "96e8254d-3c10-42fa-919d-d1cebc999c51",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d2fc265f-1725-480b-80b7-f1d9d9fd259b"
        },
        "item": {
          "id": "2cdc0d1d-a63b-422d-8f1e-4756bf5521ae",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f0c72a8-e29b-469e-9f7f-c7cd7dd66bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8deb0727-5199-4960-be3b-ccbc5cf25816",
        "cursor": {
          "ref": "6ea3bd99-cfcb-4501-823c-63e2eb488bd6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b583e65f-db1a-42e3-853a-aa182b88f000"
        },
        "item": {
          "id": "8deb0727-5199-4960-be3b-ccbc5cf25816",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f378edd2-89ef-4ec9-a668-361db9f982ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfe4565-1671-4872-9e62-2455f124b733",
        "cursor": {
          "ref": "c138c54f-8313-4025-9271-946a7ba6da23",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "73984e5b-33fc-42dc-bb36-4dabe58f7bcc"
        },
        "item": {
          "id": "edfe4565-1671-4872-9e62-2455f124b733",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "989b2cc2-8924-4b73-aa89-b1545fba34f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae3abfd-43e4-4378-8962-2e2997d65b25",
        "cursor": {
          "ref": "6d4baf96-207e-4b92-ad16-96bcd3c959f2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "79ee5cd9-c102-4164-bd4e-6bf305f02654"
        },
        "item": {
          "id": "fae3abfd-43e4-4378-8962-2e2997d65b25",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "459783d9-4b88-47af-ad05-d0cf286c32e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb796431-0ac0-4a8a-95db-752800ebcf2e",
        "cursor": {
          "ref": "5537b691-41f8-401d-bb3a-697ef99a242e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a0f050ca-5f67-49fe-bac3-b1481ef7dfef"
        },
        "item": {
          "id": "bb796431-0ac0-4a8a-95db-752800ebcf2e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "45787ebc-46ba-4c1e-b396-e5d7659ca561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3990d9b-cc9b-4f4a-bdac-75e3afd6e822",
        "cursor": {
          "ref": "36f9e527-94cb-4c55-9037-c096213e3726",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eefd76c8-ccbd-4f70-a5fe-790434f3fa64"
        },
        "item": {
          "id": "b3990d9b-cc9b-4f4a-bdac-75e3afd6e822",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9774b60e-9f25-4fb6-9e81-c06976aa1576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a300a35-1e22-4f6d-afdd-17b1b95ce289",
        "cursor": {
          "ref": "ba011a0b-da97-4713-8735-ea7cf0df9184",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bc93712e-675a-448b-b5bf-3df057dede38"
        },
        "item": {
          "id": "9a300a35-1e22-4f6d-afdd-17b1b95ce289",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55266dd0-a104-4b77-a0ca-1a01483639b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340dcfd3-9309-484b-a755-e34801c65533",
        "cursor": {
          "ref": "e2c0baf9-9c69-47dd-ad6f-ab7851655b85",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "588784ba-4213-4b2c-a096-cb3d61164d79"
        },
        "item": {
          "id": "340dcfd3-9309-484b-a755-e34801c65533",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ab6524bc-6bba-4d91-aa9b-886c95601230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a44fa1a-b2c5-4a96-9577-a8ddca7ae71e",
        "cursor": {
          "ref": "3959cc33-d7cb-4531-a8a7-42a7a833ed61",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2cb89ddf-8ee7-4a62-8b4e-05a9970880f3"
        },
        "item": {
          "id": "9a44fa1a-b2c5-4a96-9577-a8ddca7ae71e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e8a5eff3-7969-4671-99aa-344bab7e8bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00209d51-28f1-49b3-914b-b884d8a86956",
        "cursor": {
          "ref": "433bf8de-f6e6-4384-a16d-824f2725775e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "da335184-2b20-4b74-8c5b-197625651706"
        },
        "item": {
          "id": "00209d51-28f1-49b3-914b-b884d8a86956",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8689414c-37d3-4072-bf42-e633c5cd1db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d087b545-33da-47ef-a835-9ebeff0dc131",
        "cursor": {
          "ref": "2505ecbe-0d63-42ac-88b1-268a4fe2cc78",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "97b7850b-d148-475b-940d-70e6e6094d97"
        },
        "item": {
          "id": "d087b545-33da-47ef-a835-9ebeff0dc131",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "963b8afa-744d-405e-9432-46c98a63e9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295c0e33-806e-4d62-b412-5beb48cfcdc3",
        "cursor": {
          "ref": "20d6aa4f-1c7e-4112-8158-b16f02596a64",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae3537d4-097f-43de-865a-89a1f2c2a513"
        },
        "item": {
          "id": "295c0e33-806e-4d62-b412-5beb48cfcdc3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3c60ef3-16ec-4737-93e5-8d74a0437baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef366fa-0d3b-43c7-bd7b-e68093a99278",
        "cursor": {
          "ref": "d12e32f6-4ddd-41bb-8e47-cf4a1bcb2a3c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6c7ead8-16f8-4aea-a799-1f4463d05aed"
        },
        "item": {
          "id": "1ef366fa-0d3b-43c7-bd7b-e68093a99278",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c7fd8770-6d47-480a-b986-1de5d37a4f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357beb2a-f720-4de0-8b93-1e9cdb02f427",
        "cursor": {
          "ref": "04138d3b-3b36-4517-b15e-831e7fca75d9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47b7ff3f-2f6f-4231-9355-38d86afb3841"
        },
        "item": {
          "id": "357beb2a-f720-4de0-8b93-1e9cdb02f427",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "91c7322e-af30-4b49-9114-ee555fb902ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390ce1c6-ebd2-4fc0-8e94-83b1880e3b91",
        "cursor": {
          "ref": "1f71a85c-ca11-4c13-a5fb-57519189aff7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "960c42fb-f100-4e0a-a26b-09278115886f"
        },
        "item": {
          "id": "390ce1c6-ebd2-4fc0-8e94-83b1880e3b91",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "de555d10-8d7d-4cad-afaa-3aaf2e5a3e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2084e59-5c13-493f-8900-7aa82f795c07",
        "cursor": {
          "ref": "b5725682-76ad-46f7-ab68-d5ae156783e8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8ed868cd-c42c-44ec-91e1-126cfffe50b5"
        },
        "item": {
          "id": "c2084e59-5c13-493f-8900-7aa82f795c07",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a8ad6b57-1d64-4a21-8cc6-dcc44f83d2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7018173-5dff-481c-aad3-0aa7bb29190e",
        "cursor": {
          "ref": "1d83ad1f-e391-44fe-8a4a-954c624a1fc2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2fd135a8-bd22-4545-bb1b-a12e18ce191e"
        },
        "item": {
          "id": "a7018173-5dff-481c-aad3-0aa7bb29190e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8b74ed0c-e347-48be-af38-a375a4cc9db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7715c1f-221c-493e-ae4d-62e2037b2048",
        "cursor": {
          "ref": "3eb00d16-53c4-4254-b4d3-c3307b416b49",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06b9738a-7e08-4f3f-bf8e-4ab33cf1da44"
        },
        "item": {
          "id": "a7715c1f-221c-493e-ae4d-62e2037b2048",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7a52ae29-3be7-44b8-ba24-42ff3c611562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89d87ef-3cc3-47be-8c23-de1c87958cbd",
        "cursor": {
          "ref": "4af4ca50-e4c0-4eb8-9d80-4b9d9bfd5b4f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "af2b8b25-a046-4f5a-998e-ec8f07a06383"
        },
        "item": {
          "id": "d89d87ef-3cc3-47be-8c23-de1c87958cbd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "138e04bd-d8ea-4607-97ae-f0a4bb7733ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6710686f-4a71-42dd-9bda-9b908f3e7e66",
        "cursor": {
          "ref": "1eceb02c-29b0-4313-bc4c-55054212efd8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6138c5cb-65b5-451f-a3a3-138302c8dc7e"
        },
        "item": {
          "id": "6710686f-4a71-42dd-9bda-9b908f3e7e66",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8c364faf-6224-4b72-bc6a-cbe1d5e72ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f137226-4bba-4567-8795-d3f53625d4bf",
        "cursor": {
          "ref": "b9251684-5bd9-4567-87ca-173941c45388",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5537a077-e911-4b9c-bff1-742fbeb1ec7d"
        },
        "item": {
          "id": "5f137226-4bba-4567-8795-d3f53625d4bf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "78c65b40-d78b-4a5f-92e7-05496f44f49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e1cd5-9fff-49d9-a635-6a19f56ed6c1",
        "cursor": {
          "ref": "4fe2545f-d66b-4253-9998-282c7b4345cf",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2ca5202a-1ff0-4e02-a4e8-3aafc00879f5"
        },
        "item": {
          "id": "c90e1cd5-9fff-49d9-a635-6a19f56ed6c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3efc278f-170b-4baa-8dbb-5fe00670ca3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f47fdde-d637-47c7-822b-5da84955329f",
        "cursor": {
          "ref": "abcca78b-b88b-4654-be77-6b224db8e627",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "017dcde3-9d2c-4629-9e30-88c8da559ed3"
        },
        "item": {
          "id": "8f47fdde-d637-47c7-822b-5da84955329f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f3f7bd6-6a1f-4cef-a0dc-41ad998a9bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc718f7-cd8d-41ea-b4c2-d4491fc4b65f",
        "cursor": {
          "ref": "affaed89-81f0-420a-a7fe-9399d32b224b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "426d3fa1-d0c0-465b-b158-4a2e0dcd7a19"
        },
        "item": {
          "id": "3fc718f7-cd8d-41ea-b4c2-d4491fc4b65f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5281926e-ac16-4593-86ea-9ba783995e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f775cf-70ef-4a47-8688-38cced4fb63c",
        "cursor": {
          "ref": "1ba02f7d-4756-49ea-ae42-52eab0307314",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77d43282-11a6-47ea-be5a-ec2771723db8"
        },
        "item": {
          "id": "35f775cf-70ef-4a47-8688-38cced4fb63c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4864f8ac-29fd-40fa-be5b-6a8c83eea1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77db041c-598b-464a-b346-0d8a244a0504",
        "cursor": {
          "ref": "5d9ab92c-67ac-4efe-84ec-30fe16be57dc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7e7b76e6-28cb-4941-b627-bd2461ee2ed3"
        },
        "item": {
          "id": "77db041c-598b-464a-b346-0d8a244a0504",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1b2ec3b5-c576-4be9-80b1-41817c35d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f817209-9cb4-4e66-bb3a-8858bbc6ee76",
        "cursor": {
          "ref": "5168b774-cdeb-4a38-807f-b89b8195a839",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "06e17f03-d6d5-4dcb-b0cb-386f0147621c"
        },
        "item": {
          "id": "8f817209-9cb4-4e66-bb3a-8858bbc6ee76",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b7f599de-fcdf-40f7-9ec5-aba31a91064a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc54822-be80-42dc-a0cb-9b836bee7864",
        "cursor": {
          "ref": "6f3533c7-42ce-4f91-af08-2a7654b878e9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6e9e54db-4617-49ba-804f-7bbdead31c0c"
        },
        "item": {
          "id": "adc54822-be80-42dc-a0cb-9b836bee7864",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "73c046f7-5d8e-4456-9ce5-fdc2bc4a3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768f08bc-65c4-4c5e-aa97-581cb5f21a14",
        "cursor": {
          "ref": "911b26e3-8455-4c98-9c78-93637054596b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ebe0568-6b48-4e2b-9fb6-4a275edfc5df"
        },
        "item": {
          "id": "768f08bc-65c4-4c5e-aa97-581cb5f21a14",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "19aff523-5a16-4b79-ae72-c4402e094e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc0129b-e3f5-46fb-ad24-95978011bfea",
        "cursor": {
          "ref": "dc5ef622-6b25-4157-b89a-5008fded6320",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "967d0fe6-10af-4bdc-98fb-dc6703e5bdab"
        },
        "item": {
          "id": "0fc0129b-e3f5-46fb-ad24-95978011bfea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4e8490cb-7d76-4184-b323-3092dda9d169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8f461a-2231-4010-bde2-d7c259852113",
        "cursor": {
          "ref": "27522e30-0765-44a3-b134-6020367a97ff",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "309c428f-2d78-440a-951b-e2d718a29af5"
        },
        "item": {
          "id": "fb8f461a-2231-4010-bde2-d7c259852113",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "59f77502-7543-4989-97ef-9c7ed9425217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7d2017-6ce2-4881-8cf3-326c3505b7d6",
        "cursor": {
          "ref": "157bb133-03a2-495a-a5d6-274d7d8db8b4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb7f125e-5b3e-4b98-9d85-bdcdfd72d171"
        },
        "item": {
          "id": "0e7d2017-6ce2-4881-8cf3-326c3505b7d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4d06de5b-9d1a-43bf-92cf-8bfc24b37545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10025963-62ed-4fd2-8d5e-6396ffba9aef",
        "cursor": {
          "ref": "d3ff4f61-dbe6-47c0-8b26-6c974b0a1ce7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ba63fb77-5e56-4284-be7f-ee17ad10537e"
        },
        "item": {
          "id": "10025963-62ed-4fd2-8d5e-6396ffba9aef",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8667e857-657e-456b-9ee7-40507663bf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc7755-c848-4c70-afbc-b6408eab3be7",
        "cursor": {
          "ref": "e861eb95-9e16-4aca-9ad7-51e8e813d0e8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "eeb53cf0-4d34-4975-b2a8-871e65b3cb26"
        },
        "item": {
          "id": "dadc7755-c848-4c70-afbc-b6408eab3be7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "929cdf4b-8987-42c6-823b-3a4c54d89bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8c56e0-6394-4689-928c-3836590a67b2",
        "cursor": {
          "ref": "fbce6157-44b7-497c-8688-2df8b00a26ed",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "532d6877-67c8-441d-a4f0-07405296c817"
        },
        "item": {
          "id": "9f8c56e0-6394-4689-928c-3836590a67b2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ab07ac6d-df46-47f9-997b-ea4e11786a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f5d88f-2cd8-454b-abaf-d27d7eaf94e8",
        "cursor": {
          "ref": "1fe396dc-1ac0-46ae-852d-bd45be5698d6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5b82571c-a7f2-44a3-ad49-09cb9f19e4e2"
        },
        "item": {
          "id": "a6f5d88f-2cd8-454b-abaf-d27d7eaf94e8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4a4ad44e-9a90-4cd9-8164-4422ae653679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab7c5c-32dd-426d-bfc5-5cccc23f0359",
        "cursor": {
          "ref": "3c8fa84d-9d15-4148-8ae8-725bb783f438",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cf0d993c-60e0-4488-93b3-b6c5ec2991f6"
        },
        "item": {
          "id": "7dab7c5c-32dd-426d-bfc5-5cccc23f0359",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8f252dde-5e7d-4c9d-bf2b-3ee28dc62706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac258b2-0d59-4a38-9a99-0ab5c410dc3c",
        "cursor": {
          "ref": "d9603acd-b88f-4ead-bd4c-eade88a0388a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "775d77d2-f2e7-4106-b1e2-d2ae5a2fd0f1"
        },
        "item": {
          "id": "5ac258b2-0d59-4a38-9a99-0ab5c410dc3c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b5378ea-54b1-4d11-b279-ffc74adcd195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78daea2-bf6e-4478-b455-2decdfd9461e",
        "cursor": {
          "ref": "8b9c787c-ab14-4ab6-adb3-3990062cd7e2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "78deb993-abcb-4159-990c-500500e66c3f"
        },
        "item": {
          "id": "a78daea2-bf6e-4478-b455-2decdfd9461e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f462cd91-fa0d-4f8d-a0d9-27b6d84e2d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0300d4e7-9ae5-480d-8af6-62032ef9a6da",
        "cursor": {
          "ref": "0ca6a746-29ef-4f52-adfc-d331ffd4797d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e939b4ba-3ffd-4e66-a3bc-aee2fbd30448"
        },
        "item": {
          "id": "0300d4e7-9ae5-480d-8af6-62032ef9a6da",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "be19947c-6594-4f1b-ac64-3636c11ace25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084227ed-9b04-4ad2-a26c-d0f562a64c8b",
        "cursor": {
          "ref": "eb1ba04e-2584-4dd4-9808-2085cbc49741",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7f2dced-2af1-44d5-9b8f-673ba4ced3ae"
        },
        "item": {
          "id": "084227ed-9b04-4ad2-a26c-d0f562a64c8b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "90535617-0dba-44ae-a270-c01c3b9f9bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf045098-c6a2-47c3-8e36-a8c899058181",
        "cursor": {
          "ref": "8ef6e165-7cb9-49da-87c1-b233dc781f25",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9f93bc8-17c1-47f4-85b8-36f70cd3f954"
        },
        "item": {
          "id": "bf045098-c6a2-47c3-8e36-a8c899058181",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "12afbcbc-bfb3-466a-b3d8-8f738d825f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34849b28-60e9-40af-bc25-e950263ea622",
        "cursor": {
          "ref": "67cb8dcd-a901-4bee-aee0-c6aba41bf2e6",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "628ab3eb-3123-45ab-90e0-710899e6dbce"
        },
        "item": {
          "id": "34849b28-60e9-40af-bc25-e950263ea622",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e72d05c-1d55-444e-9481-51b7dd991bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83755b7f-6266-4aaa-8b5e-a47d03389b9e",
        "cursor": {
          "ref": "c64478a7-040f-46e0-8b6c-b11e23fdfd42",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "09861555-193c-471d-9fec-83a5ec2e07f0"
        },
        "item": {
          "id": "83755b7f-6266-4aaa-8b5e-a47d03389b9e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "373426ca-bc50-46c6-a373-c746d8184034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8142f6e-27d8-46e3-acbb-5a13224cd4f2",
        "cursor": {
          "ref": "0257c374-8065-444a-85f4-71cfa837bf3e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d8a83ac-8c95-4452-80e1-b460c58d9167"
        },
        "item": {
          "id": "b8142f6e-27d8-46e3-acbb-5a13224cd4f2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8b012cad-8558-47b4-9b2a-bdd9c8b35eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2957a9-12b9-4956-8a84-28545c96daeb",
        "cursor": {
          "ref": "ae8e08d0-12cb-4df4-a500-eb5733dd2455",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "342040ff-90e3-4a6b-be73-e242fa57d2c4"
        },
        "item": {
          "id": "9a2957a9-12b9-4956-8a84-28545c96daeb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ea485f7-1f33-4bb9-a5cb-50a47e014d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96231e8-5152-4dc8-847b-8d313f0eee71",
        "cursor": {
          "ref": "5a512092-263c-4aad-acf4-5663cc724a75",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5185b54c-734d-44bb-9bcb-55b6717fca9d"
        },
        "item": {
          "id": "e96231e8-5152-4dc8-847b-8d313f0eee71",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1e35a340-5963-4958-b4a0-4e8b38bd8161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d06080-e1a2-44b5-b7ad-4b871befa7e0",
        "cursor": {
          "ref": "df7b7700-64fe-4232-a35e-77abb50a9294",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6776dad7-43d0-4c4d-80cd-4c17d11b4f5d"
        },
        "item": {
          "id": "75d06080-e1a2-44b5-b7ad-4b871befa7e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6e6a99a6-8d14-4304-b613-7036d46aad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c97105-d5c0-4569-91f6-95aa8523b341",
        "cursor": {
          "ref": "1e36571d-b33a-47a3-8224-b3bd2e33c496",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a8c9fc08-e3ce-4f4c-a30c-f676ac247ce3"
        },
        "item": {
          "id": "26c97105-d5c0-4569-91f6-95aa8523b341",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "edfc4644-7669-4eeb-9218-0af556e8379a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e285e2d1-42d4-42f3-972f-e4947a7e79a9",
        "cursor": {
          "ref": "524cd7d9-9870-43fd-845d-f30b4c222238",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2dcdf6de-7263-4982-8051-c94100ae5d4f"
        },
        "item": {
          "id": "e285e2d1-42d4-42f3-972f-e4947a7e79a9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c8a808bb-ad6a-422d-8f97-5e19abfe4752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75db986-61a4-4324-8445-eed46dd46eef",
        "cursor": {
          "ref": "56b61c33-555b-4010-8f09-4b52123e86ac",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fbecf003-dabf-4a86-937a-c9715cc37f00"
        },
        "item": {
          "id": "a75db986-61a4-4324-8445-eed46dd46eef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d75a93ab-6868-46dc-9b71-e4fe1754426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087dba8e-056d-436c-a018-d79f28bbc27b",
        "cursor": {
          "ref": "2e22bd33-8505-4786-bea0-d03f5a94a7ef",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "32442842-22c0-4b07-b89a-139f506022cb"
        },
        "item": {
          "id": "087dba8e-056d-436c-a018-d79f28bbc27b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7b515f3-3292-4ced-b742-e98421df239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911b82a5-b7bf-4f06-8e9b-1a504b2a5c7b",
        "cursor": {
          "ref": "86ba554c-13cd-4ef2-b968-31f004fe3c7b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "018d372b-dfe3-40f3-8748-d8f30224b290"
        },
        "item": {
          "id": "911b82a5-b7bf-4f06-8e9b-1a504b2a5c7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2659e05e-8888-45e0-882b-08c95e45b867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c974d52f-1826-4f80-8d78-649a57673117",
        "cursor": {
          "ref": "f2105205-1439-4a37-8b1d-7d1bdfef4b5b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "daf61de0-fe8d-4708-9078-90924d686ee0"
        },
        "item": {
          "id": "c974d52f-1826-4f80-8d78-649a57673117",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "21a9746e-2832-4fcf-81e6-e2d31802f32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affdbb39-65f6-4c39-9159-9c3446ac5616",
        "cursor": {
          "ref": "f9b584ad-6e25-4395-a452-992ffa75630c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "390804b5-c163-4580-b6bc-236abf494c67"
        },
        "item": {
          "id": "affdbb39-65f6-4c39-9159-9c3446ac5616",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "83db587c-7ad6-4b4f-9bf5-069a8bc347a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac59942-dea3-47a7-b984-958ab7c0fa9f",
        "cursor": {
          "ref": "1d1809c8-e4d5-4137-80b4-be0614e0cf83",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "557a0e05-f22a-4a63-9cab-83d79caf8cf7"
        },
        "item": {
          "id": "9ac59942-dea3-47a7-b984-958ab7c0fa9f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "38deacf9-fac6-4ab4-a923-08fa181d4c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0edf69b-ce2d-45bb-b545-473fa9c9922a",
        "cursor": {
          "ref": "2e3ec357-6fd1-47ed-9736-4e9faea6f2e1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f75a4be3-eaa7-4dbe-95d6-0ef1697a71b8"
        },
        "item": {
          "id": "e0edf69b-ce2d-45bb-b545-473fa9c9922a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8793da97-b2fb-4bd5-8846-73834d64e615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bbc445-0063-4356-9340-1830c98a0c1b",
        "cursor": {
          "ref": "08b9799b-b6ad-4131-9d23-2a78ea54a536",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7865d0e9-3b48-4dd4-8020-2485ecf1c2f5"
        },
        "item": {
          "id": "04bbc445-0063-4356-9340-1830c98a0c1b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e68abf44-c5b3-43b2-bb7c-edc70a431bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f0bf52-bb57-4d0d-acea-4bbeaf953a0f",
        "cursor": {
          "ref": "f9be969c-2c56-4eae-9f16-ed969056cb1c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5027eeca-5042-4809-9461-918d61a5cdd4"
        },
        "item": {
          "id": "b0f0bf52-bb57-4d0d-acea-4bbeaf953a0f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "038a2aa1-6576-4711-85f8-69aad632cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcf19ff-aa4e-4ec0-9196-9ad7e9867966",
        "cursor": {
          "ref": "78939299-f1e2-46c5-a6d4-c8b80f6dd54b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5b11eea3-aa8f-4011-8a23-ccaf1ef5b5d6"
        },
        "item": {
          "id": "cbcf19ff-aa4e-4ec0-9196-9ad7e9867966",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "93fec369-9fea-4ce7-bfc4-c4d9a8b9b958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f042d595-6b42-4f3d-af90-56181f274768",
        "cursor": {
          "ref": "b8323487-601f-4994-823d-60d598d97123",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ebf9addb-a636-4768-8026-0d1d9f99c4ea"
        },
        "item": {
          "id": "f042d595-6b42-4f3d-af90-56181f274768",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "71b08fc9-355f-4e6a-ad15-8069bf8c6911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e595cf4a-36ee-4fd8-a3a2-99360bfbe21e",
        "cursor": {
          "ref": "2761a010-b47a-4f81-971c-3aff8ad66483",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9c129c17-359b-4349-ad2d-8f893af68079"
        },
        "item": {
          "id": "e595cf4a-36ee-4fd8-a3a2-99360bfbe21e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a981fcec-bd5e-493c-bfc1-e954997eb234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13783ec-e201-47ad-913a-289af98f6cf8",
        "cursor": {
          "ref": "95f5f0fc-b207-4008-8581-91dabde814af",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3737cede-5013-40ec-b04e-1b3876251fdf"
        },
        "item": {
          "id": "c13783ec-e201-47ad-913a-289af98f6cf8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fe19a184-aa32-48e4-90f8-09092757a674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca6d15d-c1f0-492e-91f9-cd3a51418cb4",
        "cursor": {
          "ref": "ae6fa468-4f95-4d5a-b2b8-ffa6399b3ff2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12057a1e-fead-4813-87f4-5391ce2666d3"
        },
        "item": {
          "id": "0ca6d15d-c1f0-492e-91f9-cd3a51418cb4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2a83d292-c79a-40e2-b819-67052a2bd019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f5666a-9085-4f54-8a32-b5e37155ddcd",
        "cursor": {
          "ref": "85754d91-8adb-4b41-b5ae-c53e6a3f4486",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3f8682b0-111d-49e2-a0b0-509f0950ecd8"
        },
        "item": {
          "id": "22f5666a-9085-4f54-8a32-b5e37155ddcd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1bb54ce6-2979-4ea5-b00b-28ef25c95b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051bd77f-90a9-4e32-a8fb-002ae7b7d311",
        "cursor": {
          "ref": "0045144d-daf3-442b-a21d-0e4a405edef3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "33bed06d-beba-4265-8829-f3bd203dd0cf"
        },
        "item": {
          "id": "051bd77f-90a9-4e32-a8fb-002ae7b7d311",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "76e81b59-216c-41ff-b952-c6a4e34e87db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c276117f-6e8e-4874-8af1-0512cddd14b6",
        "cursor": {
          "ref": "cb299cc5-4659-4ee5-8436-26beb3212825",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "238f7de6-6008-4e32-8d17-f6f475853dfb"
        },
        "item": {
          "id": "c276117f-6e8e-4874-8af1-0512cddd14b6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e72763d3-f6d9-4064-8a8c-bb6fbed0e3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba0e518-482b-41a4-9d1b-d4ccc39235c7",
        "cursor": {
          "ref": "b76b91c2-8a21-40ac-9b88-3e251e17c5c6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cba2c298-2d83-407c-abf6-97e89a93413a"
        },
        "item": {
          "id": "3ba0e518-482b-41a4-9d1b-d4ccc39235c7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7866727c-76c2-4729-bbda-8f485767c24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3351a0f8-02e4-4cac-9d6d-78f6d2292afc",
        "cursor": {
          "ref": "2eb9eb32-5937-4961-aa73-9be2b2f25480",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4f978357-167d-435d-9163-04cacd609b36"
        },
        "item": {
          "id": "3351a0f8-02e4-4cac-9d6d-78f6d2292afc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f0c20bfd-2465-4ab2-9795-a07fae902172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0013a5-1442-41c1-8f80-bed6eed7638e",
        "cursor": {
          "ref": "b578ea6c-f1ff-48e9-be0c-c7b5a635abfd",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc3730d2-1170-4e51-99d9-a76cc3fdb8f0"
        },
        "item": {
          "id": "0a0013a5-1442-41c1-8f80-bed6eed7638e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dba0c0b5-948d-48b1-9b1b-e316083f4f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a868ad5-c908-4270-9b5d-e89bbef58972",
        "cursor": {
          "ref": "5230eadf-0e94-4791-b5cd-ca3e8db11747",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a04c360-3172-4909-8b83-bf47d800e906"
        },
        "item": {
          "id": "9a868ad5-c908-4270-9b5d-e89bbef58972",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6e571288-78ba-4038-bdad-c0092c504b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20572c4c-2bce-4a81-badb-65d6259e10ef",
        "cursor": {
          "ref": "32551d3d-c918-42b2-b8cc-510f17add368",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "83186319-e21a-44b3-9f0a-e1aac4d84908"
        },
        "item": {
          "id": "20572c4c-2bce-4a81-badb-65d6259e10ef",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "317767c0-777e-4968-bcb2-b846ed2031e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf9d47c-d8fb-415c-a752-ddff0783a805",
        "cursor": {
          "ref": "e25113bc-67a9-4f47-b07c-0d3a5f8d0938",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e151f0d1-4c41-409e-af8a-34afe7d7b351"
        },
        "item": {
          "id": "1bf9d47c-d8fb-415c-a752-ddff0783a805",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d7136907-75c5-4253-82c2-246eb56903e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc52954-2e13-4263-a634-14a324db6b8f",
        "cursor": {
          "ref": "28582f2e-accc-4d70-bfbb-070c72eee89e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a4396d65-67dc-4132-8b9d-36e73d5f9ae9"
        },
        "item": {
          "id": "5cc52954-2e13-4263-a634-14a324db6b8f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b14b78ab-41d8-41f9-bc66-915d328e9438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b805d366-d5d6-4260-999b-ac3d0067be92",
        "cursor": {
          "ref": "d14d74ac-8f0a-4c97-a9c1-6988a4f49b43",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c3485b53-c898-49ce-9e8e-1730a944e9e0"
        },
        "item": {
          "id": "b805d366-d5d6-4260-999b-ac3d0067be92",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ff55c203-d643-439f-b6a3-bbc6b59d66d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f592a236-e85e-49a6-be4a-7386328232eb",
        "cursor": {
          "ref": "8a59892b-f1c0-46eb-8446-1db7dfd93070",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d6a6124-f6fc-4914-b544-21d6550aba31"
        },
        "item": {
          "id": "f592a236-e85e-49a6-be4a-7386328232eb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6c0efc4a-6d19-43ae-baf0-b0e6f0f524bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dacbae8-97e4-466c-9cd0-c30f2b7a4dd9",
        "cursor": {
          "ref": "b45597d2-fb73-4b5a-920e-804e2cd46191",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7460928a-9f52-42e6-9aac-22f486178d16"
        },
        "item": {
          "id": "0dacbae8-97e4-466c-9cd0-c30f2b7a4dd9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "264e210a-87be-401b-bae6-d1541ccb0e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f59eae-ed55-488a-9ebd-025220370f15",
        "cursor": {
          "ref": "d18ad172-77bb-4718-a8a8-de4fb30219cc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "30cfe5f6-1020-40aa-a4ec-e58fd7e75bfc"
        },
        "item": {
          "id": "03f59eae-ed55-488a-9ebd-025220370f15",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c9747a40-7aa9-4319-8c4f-c21a31fe3167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d42e12e-6d2b-435d-aaf0-1bf07e66d60d",
        "cursor": {
          "ref": "9557570e-52f7-4cdb-8f97-71f739be17a7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17576eb0-6641-408e-88ef-ac319c7ed9ca"
        },
        "item": {
          "id": "4d42e12e-6d2b-435d-aaf0-1bf07e66d60d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5359c9f9-4273-4deb-bff2-932611f91f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6118ec9e-1505-4341-b9c4-c694b9348780",
        "cursor": {
          "ref": "6d95bde9-3e4f-44a9-a07b-ccd6465d25c4",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "50d90386-ebd1-43aa-84c1-c68f749c9ec4"
        },
        "item": {
          "id": "6118ec9e-1505-4341-b9c4-c694b9348780",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "21e8cf76-4129-4ad9-aeed-7031d4b55ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cf766e-6b3f-45a6-8aa9-00ffa5d9cdc3",
        "cursor": {
          "ref": "6932743d-4b12-4abf-9f11-da0055a827b3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3e31b44f-5714-4106-b291-46cdd8cb091a"
        },
        "item": {
          "id": "46cf766e-6b3f-45a6-8aa9-00ffa5d9cdc3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6dbab64d-da25-4e90-81b5-304ba8865401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ca6056-d957-4c82-912c-8c94993b28be",
        "cursor": {
          "ref": "0b9cfa72-a844-4f6d-a224-27a9602d74dc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6fa62554-b48d-4a20-90a4-2cfe2d6ef3e4"
        },
        "item": {
          "id": "01ca6056-d957-4c82-912c-8c94993b28be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "95804302-91d8-4dea-9a7b-38ed49c59e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6890f70e-9acb-4cc1-96a5-009962d56cfa",
        "cursor": {
          "ref": "ff69bb15-e3be-448c-aead-e418b700613a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f16fe0c-0e4c-4a78-92ce-7b9a8b286a99"
        },
        "item": {
          "id": "6890f70e-9acb-4cc1-96a5-009962d56cfa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b7358731-8607-4ac0-bbdf-cfd5bc0eeff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9af53-7061-4842-9584-21449badd63b",
        "cursor": {
          "ref": "e310469f-7ac4-44e4-b9b5-4f99ef3e9018",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d17be7c4-739c-4315-9ad6-1b7bee7ea077"
        },
        "item": {
          "id": "36d9af53-7061-4842-9584-21449badd63b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "afb36e0d-206b-4b9e-9527-2c00ac5bb8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3681fb08-c1c4-478a-89f1-52cb1d088592",
        "cursor": {
          "ref": "4c4be139-9fcf-4f05-aa20-d62a8c278f63",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "42720972-8f51-4b02-b9a4-97e15d5808e8"
        },
        "item": {
          "id": "3681fb08-c1c4-478a-89f1-52cb1d088592",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b805969b-137e-4c1d-a619-7d56c814850c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8ab705-8933-4858-b570-c5e55fb3c14d",
        "cursor": {
          "ref": "d2b3973e-aa20-4775-ae57-8b6351b1aa64",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6c10d231-d981-44a5-8777-7482ac7b4e05"
        },
        "item": {
          "id": "8e8ab705-8933-4858-b570-c5e55fb3c14d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e53dc2a8-69cf-4ff1-8155-8c53bbce7431",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42a5b76-9d97-44d3-9037-68df57d87f92",
        "cursor": {
          "ref": "fac9bcf2-4e1f-4197-ba74-b3576d7e6e32",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "db138a48-0885-4c52-b441-ef6869c98c63"
        },
        "item": {
          "id": "f42a5b76-9d97-44d3-9037-68df57d87f92",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cc11c42f-ae8d-4383-8253-e9dd7d30da72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5aaaee44-8b9a-4cd8-859a-073a6426da1f",
        "cursor": {
          "ref": "81be5020-6f5a-411c-bd1e-97c71878a723",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7952a430-5ae7-48bd-984a-4b9f2bba4011"
        },
        "item": {
          "id": "5aaaee44-8b9a-4cd8-859a-073a6426da1f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1a3e66b2-16f9-4a7b-a23e-79df7033b2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "df4b0712-61bf-4de6-ace6-96991edf0909",
        "cursor": {
          "ref": "db081c06-d5a8-4388-9213-e190a68fb62d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "70d2ec43-ebcb-4f33-96cb-758ce26abbb0"
        },
        "item": {
          "id": "df4b0712-61bf-4de6-ace6-96991edf0909",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "816eecfd-125e-4376-8b70-0eb46ef678c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cf356692-6f8f-4b25-88b5-4186eabc8687",
        "cursor": {
          "ref": "2465fdf9-f88d-4d01-b698-fded36ca098b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5a2d6f92-b5ca-4239-bdfd-afa38a7c8b74"
        },
        "item": {
          "id": "cf356692-6f8f-4b25-88b5-4186eabc8687",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a569ec17-dcbe-40fb-891d-2867e764464a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4319a5c3-4ad7-4271-af07-2a0a6f79b956",
        "cursor": {
          "ref": "7477a828-5d38-4c36-9371-20464235ccb0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f1ba87ad-981a-48b6-af52-5d70387e60e2"
        },
        "item": {
          "id": "4319a5c3-4ad7-4271-af07-2a0a6f79b956",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fb6b0dd7-e377-4f42-8ee4-223477d96575",
          "status": "Created",
          "code": 201,
          "responseTime": 9677,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f3bf42-605e-4e9c-9612-fe4f22098d04",
        "cursor": {
          "ref": "65769bd6-9b20-4420-ab7b-0b8bfc270148",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "46a182bd-0bbd-4bcf-97c4-2b38011aeb42"
        },
        "item": {
          "id": "61f3bf42-605e-4e9c-9612-fe4f22098d04",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9669c0f4-fffb-4864-83f1-ddc425676c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f97648ac-cfc7-435e-ae76-4d17e12394b4",
        "cursor": {
          "ref": "0fe38011-e4d1-4932-948c-ea4c0087de2e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9c550e3e-1c95-40d8-bcf4-58eeecd56756"
        },
        "item": {
          "id": "f97648ac-cfc7-435e-ae76-4d17e12394b4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "596889c8-30b9-4304-b4ac-832a31adff6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "88543dae-c887-469a-a40e-14616c9ac18a",
        "cursor": {
          "ref": "22c40f0d-85d8-4054-9742-55db7cb4479c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "65f8c62c-df2a-4bcc-a880-2007931080f2"
        },
        "item": {
          "id": "88543dae-c887-469a-a40e-14616c9ac18a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "19d4df7d-ae49-435d-926d-fd2af3c80223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778ddf51-9ae8-4ae9-baab-7bba42cfb475",
        "cursor": {
          "ref": "5ab8d5ea-2638-4edf-bb17-5ceaaa661a5b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec722d37-c77a-4372-bd22-a66df452dcf9"
        },
        "item": {
          "id": "778ddf51-9ae8-4ae9-baab-7bba42cfb475",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c723f84-fafb-42a7-9c08-ab01405dd4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c0943f-29d4-4117-9adb-27bad8ecb4bc",
        "cursor": {
          "ref": "5caea23d-ea6a-4eb0-9850-fff17cef5ad1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7d31507f-9b11-432c-8fbe-dbec22d2853e"
        },
        "item": {
          "id": "51c0943f-29d4-4117-9adb-27bad8ecb4bc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "616ceb22-abaa-4294-80c4-191f9897a66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a9db8f-a223-4b71-881f-9d451e8cc0c4",
        "cursor": {
          "ref": "6766e454-92d6-4517-b2b2-c2e6c0a4f481",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a116294a-2eda-4840-8d68-e92d11d73d3d"
        },
        "item": {
          "id": "65a9db8f-a223-4b71-881f-9d451e8cc0c4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60cba69c-a78a-42e5-bc32-bd6e1c64a31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146aa0c1-f990-41fe-a2bf-836c01dbb252",
        "cursor": {
          "ref": "46210011-9c35-4424-8b86-40e3d21bb684",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0abf0c0e-26fc-4061-81bc-82804dfde6dc"
        },
        "item": {
          "id": "146aa0c1-f990-41fe-a2bf-836c01dbb252",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1bf24dcc-0363-40cf-8497-51b06298291c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec76f4-419d-45d6-80ee-9a80c245310d",
        "cursor": {
          "ref": "1cc751ec-2054-4caa-b566-cb85ce4a0fe7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "16df069b-4953-47fb-a14a-3b945a0f69fb"
        },
        "item": {
          "id": "baec76f4-419d-45d6-80ee-9a80c245310d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad86e844-455e-42be-99d9-e94cb1a3e479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd73733-34de-4a30-8c11-6293299f76ba",
        "cursor": {
          "ref": "e3d8d42f-9d8e-4eab-80af-cfb731812e25",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad346197-fe21-45dc-8148-30c47ef9c5ee"
        },
        "item": {
          "id": "ebd73733-34de-4a30-8c11-6293299f76ba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea8c63a0-f0f8-4fa3-8b4d-5a3b6e28696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730063da-2e8b-4396-a98a-8861bd540872",
        "cursor": {
          "ref": "22e6e84a-7ce0-4846-9a13-5d4b57efe7c8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4e85c608-84fb-4b17-8165-a82bc81d78ac"
        },
        "item": {
          "id": "730063da-2e8b-4396-a98a-8861bd540872",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7b756fd3-d260-4c00-9c47-64b09e01e0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7f03af-3b71-4f80-b66e-d950f5bcca12",
        "cursor": {
          "ref": "cf8b9e7f-6b2c-4857-bfd7-63c8ba150c77",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "35cefa64-d7d1-4428-aa97-1453d1f393dc"
        },
        "item": {
          "id": "ec7f03af-3b71-4f80-b66e-d950f5bcca12",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e552fc11-f0b0-42af-9618-96b666d71516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062dde8f-1025-4aac-aa2c-8e59cfb04295",
        "cursor": {
          "ref": "2c79ef19-8274-4a50-ae05-60d6d789bbe9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d0620a69-83fe-4caa-9d3f-acd6c30dd775"
        },
        "item": {
          "id": "062dde8f-1025-4aac-aa2c-8e59cfb04295",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2397019f-8216-418a-9023-ea9bc624f7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab486b30-c136-4e9a-8c0f-aa5b74dfce56",
        "cursor": {
          "ref": "7355dc8f-38c4-4617-a0e0-113648cf9467",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c3aee982-3386-46e7-acd3-98268cd16dd3"
        },
        "item": {
          "id": "ab486b30-c136-4e9a-8c0f-aa5b74dfce56",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f317b16-c96a-4afe-b522-9cf0a78f8cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3fc2c6-399a-42b3-95f9-e0690e6455b5",
        "cursor": {
          "ref": "cbcb1f0e-0ba4-475f-83ac-3d2787d08fbf",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9827fce0-c8c8-4414-8a0b-57770ce861db"
        },
        "item": {
          "id": "4e3fc2c6-399a-42b3-95f9-e0690e6455b5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c193a256-b09c-424e-a759-c4b8a4247017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb86fec6-1792-401e-87ea-1bbb56b16836",
        "cursor": {
          "ref": "279e3b0d-313c-499e-a1ab-2e5c15ec3bf9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "890210f0-0f78-4f8d-b22c-1c3a62ae31f6"
        },
        "item": {
          "id": "bb86fec6-1792-401e-87ea-1bbb56b16836",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a4de7f40-e31b-4b2b-98f3-114f6360295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec1c8ee-144e-412e-b8ac-5787de108aa0",
        "cursor": {
          "ref": "18131233-77d2-4469-bde5-cec4b92a014a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f32f1e78-446a-40b0-b4a4-eba94434360b"
        },
        "item": {
          "id": "9ec1c8ee-144e-412e-b8ac-5787de108aa0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0280de39-8501-4814-a405-f325617edb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251a7a16-2ded-4977-81f8-b0c3ac10b826",
        "cursor": {
          "ref": "aa45d82e-e01d-4628-b1a2-dffbdd207c33",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "066807fd-bf2f-4fbe-9261-3d4bbac0cde8"
        },
        "item": {
          "id": "251a7a16-2ded-4977-81f8-b0c3ac10b826",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "70aa7304-688b-4baf-ae15-7d5f3e101ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379fc610-0360-4310-ac32-8949740fa42f",
        "cursor": {
          "ref": "4ef11e3c-c54c-4bb9-8d5b-46f22521c9de",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4f45bab3-44f7-4c68-b7da-c7ff17600780"
        },
        "item": {
          "id": "379fc610-0360-4310-ac32-8949740fa42f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc5245e8-4a93-4a4c-ac59-5c543a56c03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27039bf1-f14f-4504-b13f-0e952c2faaa9",
        "cursor": {
          "ref": "335eaf8d-2135-496b-82a0-79ca79322a34",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c729184e-f372-4045-a477-4632bc31f114"
        },
        "item": {
          "id": "27039bf1-f14f-4504-b13f-0e952c2faaa9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6fbf09da-4a90-4c2a-abf2-44ac06638b31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "394f3319-1886-42c1-adf7-d162e3df5420",
        "cursor": {
          "ref": "491cdeb1-2156-49c3-8551-1e80fd322622",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ef693399-af60-4963-a113-46c76f46493a"
        },
        "item": {
          "id": "394f3319-1886-42c1-adf7-d162e3df5420",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "02e3b5db-9ea2-49b4-9b63-53b618370c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3b8e0-8637-4d4c-8d88-b4b3a82e25f1",
        "cursor": {
          "ref": "e2e5dca3-4df1-4d92-9536-bf69932a9e42",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1991964a-9a22-45e0-9290-74fd17b60268"
        },
        "item": {
          "id": "2af3b8e0-8637-4d4c-8d88-b4b3a82e25f1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "991e5069-ebdc-4008-a4aa-5f8f456bcde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df14202d-3586-4553-b6b0-17aa252e3759",
        "cursor": {
          "ref": "6ee98308-11d7-488e-869d-fc5132b7f92d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "03d421d3-b732-49ef-b605-65c8cb6f8c9c"
        },
        "item": {
          "id": "df14202d-3586-4553-b6b0-17aa252e3759",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "214aa5f2-218a-4256-9cc3-767acdfa7ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6c15e1-9e51-4e08-a770-543c61178630",
        "cursor": {
          "ref": "0c1f7345-2519-4c60-bda5-443871d25ccd",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4f387270-44bf-4aab-82ae-0667355b6fed"
        },
        "item": {
          "id": "0d6c15e1-9e51-4e08-a770-543c61178630",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a34dd8a9-bcb4-4c03-806b-94a7f57f85ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2002c039-48ee-423d-9c44-55bdb6a49f9f",
        "cursor": {
          "ref": "85d20793-d5c8-4daf-803e-af1fd83577fc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8bd20367-b67a-4469-8cb0-048e137af85d"
        },
        "item": {
          "id": "2002c039-48ee-423d-9c44-55bdb6a49f9f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3808dbf5-f5ff-48e3-8e0d-05e620246b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565e32ef-f5c2-4674-896f-b61b94f114db",
        "cursor": {
          "ref": "93fb121d-1de1-4616-a3b3-401ae5e637bb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bee4e404-4e9f-412b-94ab-fe7a82e9c0ae"
        },
        "item": {
          "id": "565e32ef-f5c2-4674-896f-b61b94f114db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ca0aa690-f9fa-476e-81ff-b84c32c4ac46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62b5cdf-72f0-4980-a61b-3adc922bf9da",
        "cursor": {
          "ref": "65de141d-dd63-410d-a31b-69cde4e504e5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "355158fe-80b6-4df6-88ec-a7b6084bb314"
        },
        "item": {
          "id": "a62b5cdf-72f0-4980-a61b-3adc922bf9da",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a4bf5057-72b2-4499-b66c-0f15a30cb461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7223e507-8318-4bb9-a7ea-f701a66d9586",
        "cursor": {
          "ref": "96b68b5d-5285-44fb-96a5-9e7d76d29b6d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "350b4b41-4f0e-433c-88d4-bad97c7357e5"
        },
        "item": {
          "id": "7223e507-8318-4bb9-a7ea-f701a66d9586",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a7e812b9-492e-43ae-a332-71b96a54ad4f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1f579755-b067-43aa-b83b-c8791e0f38fb",
        "cursor": {
          "ref": "2fa658da-d7e8-4a55-b1e1-db057ba9959d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ec56f61a-0964-48b4-922d-6e7447d9185a"
        },
        "item": {
          "id": "1f579755-b067-43aa-b83b-c8791e0f38fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "64b60810-ea26-4c3d-aa5b-c9e69601cf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964e39fe-511d-428c-b705-f003ee27c185",
        "cursor": {
          "ref": "0f558462-dbdb-4514-933d-aaf31253ad93",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0cf9bfba-68c3-44ae-ac66-31f3e312878b"
        },
        "item": {
          "id": "964e39fe-511d-428c-b705-f003ee27c185",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cca971cc-c61c-4264-9c29-9eccaf6edcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59268f76-0de8-4b67-9c45-0bb9f4319746",
        "cursor": {
          "ref": "5446b6b6-97b5-444d-847b-767a6e2c77cf",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "589b854b-fe1e-4a8f-a62b-4fef42392674"
        },
        "item": {
          "id": "59268f76-0de8-4b67-9c45-0bb9f4319746",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ee18e172-71fc-49a6-9b6e-49f4ed137006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c23fe3-71f8-43ec-88d2-81a484093b39",
        "cursor": {
          "ref": "f7a64901-185f-4f23-9ad8-33192969cee2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "644b9ade-b227-4afb-a67b-f58fd2014d72"
        },
        "item": {
          "id": "a9c23fe3-71f8-43ec-88d2-81a484093b39",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c33cd2fd-4a9d-4938-9eee-534ce0a81bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e8eadb-61d6-4228-86ae-af9dc94f1da2",
        "cursor": {
          "ref": "ec81d811-7603-4d33-908a-fe912ffb6b04",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4ba6a2ab-e47b-44e6-8f81-9fa8316698c2"
        },
        "item": {
          "id": "a2e8eadb-61d6-4228-86ae-af9dc94f1da2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38327489-f24f-4e8d-94c7-000aefdaf876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59e5f5c-e65b-4eb4-86f1-a64568a71f38",
        "cursor": {
          "ref": "682401a0-6439-4cd2-a9ec-bb5c621e2ffa",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b06f2b69-50d9-4153-8a9c-9bee6b7a3093"
        },
        "item": {
          "id": "c59e5f5c-e65b-4eb4-86f1-a64568a71f38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "93972502-0ba5-4c9f-85fd-18f389970e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df82de83-203f-478b-9aee-42302099a0f5",
        "cursor": {
          "ref": "05aace8b-46af-4c6a-aaff-ddd59c650885",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a3aea6d4-dd6a-4243-adad-224920455d71"
        },
        "item": {
          "id": "df82de83-203f-478b-9aee-42302099a0f5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5f55da20-810e-4733-abb1-9f37c2f22fdc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3918dea3-a0ff-43fd-8562-b7637c1857ad",
        "cursor": {
          "ref": "bdc94ede-d496-4ca7-9a2a-e9142d39b539",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a55d7b68-8df9-439b-b4ae-d3ecdd311263"
        },
        "item": {
          "id": "3918dea3-a0ff-43fd-8562-b7637c1857ad",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d55a1f07-8f04-401e-b593-f0dcc4e17edc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cdfa9544-23d4-467b-bc45-9afddcb7e127",
        "cursor": {
          "ref": "6c6ec5a3-22ac-4206-86a6-4385da73c511",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "afeb1754-58d7-480f-9405-a89cdd9b7da6"
        },
        "item": {
          "id": "cdfa9544-23d4-467b-bc45-9afddcb7e127",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "19faf536-8885-4434-8872-26bae866b62e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "cacbee7c-d4ca-49ca-99da-df983d68b8e7",
        "cursor": {
          "ref": "ab932233-368c-4143-836b-067def45888d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c055b126-4256-46b8-9d9e-2f23603c6836"
        },
        "item": {
          "id": "cacbee7c-d4ca-49ca-99da-df983d68b8e7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0329ca26-f24a-49da-a8ca-0fdb7df9c6bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "81781334-7a0f-4675-bfa3-b69f537b6482",
        "cursor": {
          "ref": "d5bb9298-abdb-40ab-a86e-b6d3374d0dee",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dfa319fc-515d-4ea9-8df2-d855390e58fb"
        },
        "item": {
          "id": "81781334-7a0f-4675-bfa3-b69f537b6482",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c0a54de-b7c2-46a9-b6ca-484f3d63c0b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "06d4492a-0e6b-4a19-a1c8-a600b3fc847a",
        "cursor": {
          "ref": "f31ffb49-8446-48b8-8313-65f649e221f5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3f842fc0-b996-4e59-9f6b-0b807301e2ce"
        },
        "item": {
          "id": "06d4492a-0e6b-4a19-a1c8-a600b3fc847a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0e29401e-0e22-4de2-8220-244da8a3f496",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6ac45b6f-ce53-43a2-ab45-bd7ff5644023",
        "cursor": {
          "ref": "f1e86afd-501e-4d99-aad2-9d888928fde3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b014ea38-5bd5-46f1-b4cc-d3c2ec64ef99"
        },
        "item": {
          "id": "6ac45b6f-ce53-43a2-ab45-bd7ff5644023",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "70188a60-0620-4e02-91b4-d733f7f93bfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290d4f6a-27b9-4588-b7d1-4f20ace4a75a",
        "cursor": {
          "ref": "ce1a52b4-c1df-4acb-9fc7-faedcd944d9e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "94d5c5a0-b2c1-40ce-bcdd-731bbe3f332c"
        },
        "item": {
          "id": "290d4f6a-27b9-4588-b7d1-4f20ace4a75a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba09c72d-1a94-4578-9d69-e979a407ec20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cea4f73-7e48-4a55-ad00-066188c30d5d",
        "cursor": {
          "ref": "30b37dc1-c81c-421f-a837-6cfe7d494c1a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "77f134ee-c9ae-424d-97af-9420a2518cfc"
        },
        "item": {
          "id": "1cea4f73-7e48-4a55-ad00-066188c30d5d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5daf1d20-098a-4356-b8cf-19933074af69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be65dfb-7e4c-4476-9682-699c41a3b55b",
        "cursor": {
          "ref": "bda040bf-1b6b-4aa7-b687-b3c63a17186a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b41e361a-591c-4bd7-b572-5b62da7e0699"
        },
        "item": {
          "id": "5be65dfb-7e4c-4476-9682-699c41a3b55b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "15ba1545-b198-4c63-83a0-4213f7490d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ecf99-65eb-4d1a-ac73-36571f9a22ea",
        "cursor": {
          "ref": "e622d9a9-a736-48b5-a9ce-6c476b926a24",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7d9f59a8-0b98-495c-a93b-e3a2ae5881c2"
        },
        "item": {
          "id": "581ecf99-65eb-4d1a-ac73-36571f9a22ea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8dcee9e3-8e3e-4abd-ae5c-787a803615cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bb3edd-9d3c-4763-b4ae-e1632b21b0ff",
        "cursor": {
          "ref": "9ca2b6b4-8ef8-440d-9526-be5d4b52aba3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0e8632b0-2f9d-4888-bdc0-e580a3a9d9f6"
        },
        "item": {
          "id": "13bb3edd-9d3c-4763-b4ae-e1632b21b0ff",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64169e0f-0968-4fa2-a845-c309d149ea8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d71b808-1116-4f3c-879d-5cf26ac3038b",
        "cursor": {
          "ref": "4775ade3-e6f4-41d4-a8d7-5b3b9623231d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c0b3c96e-cbd6-4332-bca5-3ca18657a4db"
        },
        "item": {
          "id": "5d71b808-1116-4f3c-879d-5cf26ac3038b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cf8b6274-bb3d-4e10-8cc9-93e434b6fbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41131593-263d-4b97-b043-a6aa4269bdcf",
        "cursor": {
          "ref": "445f11be-8231-40dd-9549-902074d4fac6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "73b8058b-366e-4f5e-967c-e45df076bd3e"
        },
        "item": {
          "id": "41131593-263d-4b97-b043-a6aa4269bdcf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fb12d6a8-6df6-48a8-832f-0ebcf5fc3372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960699ad-cc18-4c62-b310-d3f783dddf0e",
        "cursor": {
          "ref": "b865c26d-8112-4aa2-8f30-9423e2f2b5cc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9687a610-b883-495e-b51a-041597a313be"
        },
        "item": {
          "id": "960699ad-cc18-4c62-b310-d3f783dddf0e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d1021d20-b78b-40ef-86bc-28a0c0fe00e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be82664-4b03-4875-b93b-65423006b891",
        "cursor": {
          "ref": "4a3cfd07-89b1-4a47-8a23-e92a045bb505",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "db8b59c4-b25b-47ef-b8af-fcd4e9e73f40"
        },
        "item": {
          "id": "8be82664-4b03-4875-b93b-65423006b891",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "494b88f0-204e-4f2b-98fb-d25d0996519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8613d99d-0d32-4e9a-9483-757ef8f149c9",
        "cursor": {
          "ref": "3037aca0-a617-4e04-ac2a-c2cb20c517aa",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3db33e54-6d92-438a-bcb3-87da46dedea5"
        },
        "item": {
          "id": "8613d99d-0d32-4e9a-9483-757ef8f149c9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "73a4f10a-78ce-4818-bb93-6e1a01ccea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61219d4-6278-4792-b524-9f08d3bb3d6e",
        "cursor": {
          "ref": "68788a14-9f8f-4738-95fa-bf6be30a3544",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "152bbc10-af78-4609-8f01-c94784a97290"
        },
        "item": {
          "id": "d61219d4-6278-4792-b524-9f08d3bb3d6e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f9a4c9b2-3a66-43fb-b462-eae0b344a544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97a343d-4de1-405d-a5c4-2181fee9ad38",
        "cursor": {
          "ref": "cfe474a8-55fa-4446-9338-b21515c4e1c1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e521b31f-1c78-4df6-90c0-8f029a16e289"
        },
        "item": {
          "id": "a97a343d-4de1-405d-a5c4-2181fee9ad38",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e6788eb4-f7a1-4643-86da-ce9d2f0e159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5b7447-07f2-4a0b-ae92-0b6e7d86fb40",
        "cursor": {
          "ref": "cff97428-fb6d-4592-897f-8f87d76794f4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3c429902-9b7c-426d-a0a2-43f858947a8a"
        },
        "item": {
          "id": "dd5b7447-07f2-4a0b-ae92-0b6e7d86fb40",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0f36f4c2-76b7-4ef1-b012-2f09e91e2e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeec51f-de92-4c20-b3ea-1f8d244fdd80",
        "cursor": {
          "ref": "6e244585-a7da-491c-9b5a-6c6a47d5778a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b201c3ec-5044-4c49-bb06-98cd55419e63"
        },
        "item": {
          "id": "6eeec51f-de92-4c20-b3ea-1f8d244fdd80",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d5defff7-e7f7-4667-a30a-8c1fbe29b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cc1508-5500-49f1-ac47-92d0b6b258f5",
        "cursor": {
          "ref": "59fe5691-43d3-477a-93e8-0620879b9fde",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f1f090d2-97aa-42d1-a190-52575786abde"
        },
        "item": {
          "id": "30cc1508-5500-49f1-ac47-92d0b6b258f5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2453ed3f-cb68-42fb-8e83-b4efb2d0d363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07186f8-24b9-4838-a4e1-74842a2e07fd",
        "cursor": {
          "ref": "626bb64c-b9d8-476d-96d5-ddb9c6d94973",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "93f979b0-74ed-40cf-9a31-a7defbdf52a2"
        },
        "item": {
          "id": "b07186f8-24b9-4838-a4e1-74842a2e07fd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "80b1130e-58e0-4329-9b2b-a36b0aec2224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ddf95c-8922-4088-b304-7a8952b4c446",
        "cursor": {
          "ref": "20d4e51c-2ad9-4e54-862f-022cf877bd37",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c66f72fa-e92d-4634-8e27-70b37bbe79d1"
        },
        "item": {
          "id": "90ddf95c-8922-4088-b304-7a8952b4c446",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "83e11edb-939e-433e-9e19-cd41f2f1e19b",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6c4efb96-1918-4c58-ab26-3ae856672700",
        "cursor": {
          "ref": "0fbc9125-6ae2-4c0f-b62c-e1fd48414443",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "094f6d2f-287c-4083-9f5e-f9cbfa52cc04"
        },
        "item": {
          "id": "6c4efb96-1918-4c58-ab26-3ae856672700",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed0015fb-9547-4165-a6b8-782907495c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742ba645-7a74-489e-ae52-0f5dbf9e0d26",
        "cursor": {
          "ref": "3390df26-589b-43c9-b15d-612ee259ca78",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "416d436b-d767-4e42-8b24-b7e4e0ce2e7e"
        },
        "item": {
          "id": "742ba645-7a74-489e-ae52-0f5dbf9e0d26",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8fbfd7ca-c891-4066-ab38-1d9af583bcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5aaad5-0732-45b3-a792-331de75780bc",
        "cursor": {
          "ref": "5967d989-0707-4f9b-be56-4852a024bab8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0ab1fd9e-b1a1-4c1b-af67-d48b76820d42"
        },
        "item": {
          "id": "8e5aaad5-0732-45b3-a792-331de75780bc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "519440de-d3b9-4645-9460-dc82734cedf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfb9ad7-ef36-41e8-8747-55a4bcfde26c",
        "cursor": {
          "ref": "c365aad1-7165-4971-a610-cd46b61d170d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d11ecbb8-8b0d-4f78-bdbf-020ed8833567"
        },
        "item": {
          "id": "abfb9ad7-ef36-41e8-8747-55a4bcfde26c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eb4bf3c8-e522-448c-b62b-2b9214dfb391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8feec24-8f0e-4e40-85bb-44b38fa7d139",
        "cursor": {
          "ref": "c2a79691-a8e6-4357-817f-3c4f6a66b5f4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8ffd2b84-cde3-4e8d-81f9-10783b4a985c"
        },
        "item": {
          "id": "b8feec24-8f0e-4e40-85bb-44b38fa7d139",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e99b0d43-0ba9-48a2-b803-3bfadcb925cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2a840c-0110-46fb-a072-33c9a2ee65bb",
        "cursor": {
          "ref": "6dac7f78-9756-4459-915c-76d55ab0ff2e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "deed1d5c-8b15-4c29-826a-b72331a54390"
        },
        "item": {
          "id": "2c2a840c-0110-46fb-a072-33c9a2ee65bb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff1aa58a-9ea5-45c8-ad0e-10118da23d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cbd694-a4c2-4c3d-a320-f6afa159becd",
        "cursor": {
          "ref": "05ce4206-048e-4e5f-bb4f-b89cc0de2664",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9a83057c-9711-416e-a6e9-82da9e76690d"
        },
        "item": {
          "id": "13cbd694-a4c2-4c3d-a320-f6afa159becd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "efb057ad-f2c8-4834-bbf9-80ff2dc3d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4eb581d-96f5-4f0a-8e8c-226fb597987f",
        "cursor": {
          "ref": "97e3b28f-486b-4a52-8714-daca32523d9d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "37ad9f4f-0d15-4364-a193-97a22f7081c0"
        },
        "item": {
          "id": "e4eb581d-96f5-4f0a-8e8c-226fb597987f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "07221c15-9299-40fe-8907-9a4f320cf7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7662f41d-99eb-4193-8e85-630dd3e7b0bb",
        "cursor": {
          "ref": "9ae3e549-36f5-480e-9d63-d83f8b3eb6a2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "526863d7-44b7-42c7-8970-40efa699fb29"
        },
        "item": {
          "id": "7662f41d-99eb-4193-8e85-630dd3e7b0bb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "72b9817a-2577-4a0a-afbf-75cb501ebc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7a5631-78e5-43d8-9a41-72a4390ff223",
        "cursor": {
          "ref": "c7631bf2-d543-4fa1-980e-8f8eec9496cd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "efe03510-f2d7-4648-ab98-3cbbcd83e520"
        },
        "item": {
          "id": "db7a5631-78e5-43d8-9a41-72a4390ff223",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e1955537-a8f3-42e1-8f81-859ebb939bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e32ab4a-a1c4-4753-be08-11fbf0b0a95e",
        "cursor": {
          "ref": "f8a63b78-a0dc-4600-9110-579367c2be77",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd1d1919-9716-44c1-99a4-e54d4f82dec4"
        },
        "item": {
          "id": "4e32ab4a-a1c4-4753-be08-11fbf0b0a95e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9635d246-66c8-4e17-9171-cbe7d13ce7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f38a3c-12fe-4272-ad56-7c0a9b614208",
        "cursor": {
          "ref": "c0f55e22-9d93-4fde-82be-471762c5c000",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "10d643d7-7f42-402d-88ba-628ec2f57a31"
        },
        "item": {
          "id": "07f38a3c-12fe-4272-ad56-7c0a9b614208",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c1239dd3-ab09-4abd-a032-9d143f5346b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2f6578-23fc-4a78-9b08-aa76232ebd68",
        "cursor": {
          "ref": "51e94cba-1fd9-41da-8d21-4757a77a8777",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38c580dc-d9d0-4360-8ae4-2be7a12f9326"
        },
        "item": {
          "id": "0e2f6578-23fc-4a78-9b08-aa76232ebd68",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ccebc72d-df55-420d-8a64-84fc69aa039d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc2ecb5-4059-4dc9-9868-9fc8e3c39301",
        "cursor": {
          "ref": "72f04b89-b06a-423e-8e47-9988f0b3d33a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c3982b99-025f-45ff-aaa2-67857f65bf9c"
        },
        "item": {
          "id": "7dc2ecb5-4059-4dc9-9868-9fc8e3c39301",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1b88acd8-edf4-412f-a73e-42931ca0a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912d03f0-2cc9-4f1c-8cd4-e29b86a955c0",
        "cursor": {
          "ref": "f2deb4ea-af04-4526-94fe-c6d608c069d9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1da326db-0729-426e-a4b9-9859b00a9c8e"
        },
        "item": {
          "id": "912d03f0-2cc9-4f1c-8cd4-e29b86a955c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d11fb77f-ff6c-4981-bdc2-1e5c1cbac133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c4d38-9cd3-4255-bc92-1b9430a477b6",
        "cursor": {
          "ref": "66705e3e-8b92-489c-9aab-43d7ffd0f756",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a6c902b6-5f7e-4313-b216-f4529e09cfdb"
        },
        "item": {
          "id": "1f0c4d38-9cd3-4255-bc92-1b9430a477b6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "06abe125-2b63-4599-80ba-10d5e1e91643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a1ba0f-13ac-4263-84f1-462e71272d94",
        "cursor": {
          "ref": "6e9d11fc-6df6-49b6-b536-ea9dc702851a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d4e56b0f-5810-4815-8c2a-28cbc777dff5"
        },
        "item": {
          "id": "a1a1ba0f-13ac-4263-84f1-462e71272d94",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "122b112c-e89f-46cb-bf00-969923b357a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e666a6-89ee-4ef7-a3c5-78c74246ac03",
        "cursor": {
          "ref": "24074ac8-f7d2-4c67-83d6-0d59b1a9c8d4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ecdb7213-84b0-4ec1-a19d-de9eeead786a"
        },
        "item": {
          "id": "40e666a6-89ee-4ef7-a3c5-78c74246ac03",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4563b994-b62f-4dfe-861d-0f15899e588e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f86afd-b8c8-4c55-b662-06889b6aa282",
        "cursor": {
          "ref": "99364799-9c3d-40ae-aa65-cded9b6acc47",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eccc0585-6911-468b-ab08-f5f669484869"
        },
        "item": {
          "id": "51f86afd-b8c8-4c55-b662-06889b6aa282",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c0974351-d64d-4577-97c6-f17b022b348a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70711baa-5b82-468d-95f7-97538a6904ab",
        "cursor": {
          "ref": "4ee2c0d2-ce19-47fa-8529-0e0d98a120ee",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a076bc8c-7a4c-4765-8d94-cedde61036be"
        },
        "item": {
          "id": "70711baa-5b82-468d-95f7-97538a6904ab",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "19b24467-55aa-4785-a216-b676f99947d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93c261d-7bf1-46c3-bae2-1145e745941f",
        "cursor": {
          "ref": "0affa41e-4324-491d-a27b-2c7c7f9375f1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "022deff7-abf4-43ed-90fd-9a37e0988994"
        },
        "item": {
          "id": "c93c261d-7bf1-46c3-bae2-1145e745941f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "52e8a0f4-dac9-46ad-b035-d48cb37cb461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d923362-f134-4c01-b6a2-a862f6312005",
        "cursor": {
          "ref": "8b908090-26c4-4216-83a6-2e376e06a616",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b0168960-0b97-44b4-9ea8-0ca5569e4cfa"
        },
        "item": {
          "id": "2d923362-f134-4c01-b6a2-a862f6312005",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b9bab586-4bc4-461a-b3f9-2e8e639aebf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08cf437-ab78-4c66-8688-610940e0289b",
        "cursor": {
          "ref": "023c99ac-afb4-4726-b1dd-a14528fcae5e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3b45d1e5-011f-430c-8b22-b93648264290"
        },
        "item": {
          "id": "c08cf437-ab78-4c66-8688-610940e0289b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53a476a0-3e0c-487c-8692-81a36cf2f908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c1a888-6766-4832-8d9d-f92b568e29f9",
        "cursor": {
          "ref": "1a8298d3-eacf-4e46-ba4f-f179cffe2ed2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0dedf5a4-7484-4bec-a3c3-a11d0e8f80b1"
        },
        "item": {
          "id": "07c1a888-6766-4832-8d9d-f92b568e29f9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a92e976f-7781-46f8-a5cc-f3f199993baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7b515b-949a-44d1-8e0a-da2f45bbc9a9",
        "cursor": {
          "ref": "9da92ea9-45ce-494f-82dd-e66bab6f04d9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6a2221fb-7033-4075-bd91-5d0ce6736b93"
        },
        "item": {
          "id": "fd7b515b-949a-44d1-8e0a-da2f45bbc9a9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e28df2a8-75bb-45c2-ba20-071146cbdfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76ca6e2-9de1-4fa7-96a6-81e22fca6be8",
        "cursor": {
          "ref": "6a9322a9-efaa-48e1-afef-e6d16ef9dfad",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a87f3025-f578-45a8-83a6-5cf39f7f2033"
        },
        "item": {
          "id": "f76ca6e2-9de1-4fa7-96a6-81e22fca6be8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d869bbc8-55c6-4f9e-bf8d-e2a3eb6e4b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f044556-588f-4f25-bfeb-b4e6a19fca4a",
        "cursor": {
          "ref": "cdbff1fe-6861-4522-9eae-5594586d4486",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f77c971-3f87-4555-a908-0a231d3e8381"
        },
        "item": {
          "id": "3f044556-588f-4f25-bfeb-b4e6a19fca4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6dd9af48-ef8c-4df1-9eea-417cb43f1981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64b06c5-06e1-4a37-8e0d-1601cd94ce94",
        "cursor": {
          "ref": "eaf61019-b0af-46cb-8d3d-f813beae9ab9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "24ba5553-eb12-4314-8904-b522042bf4cc"
        },
        "item": {
          "id": "f64b06c5-06e1-4a37-8e0d-1601cd94ce94",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "99235d1f-633b-42d9-a708-823abfa8f5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce68fa79-566d-4e90-a455-de4db690c3ef",
        "cursor": {
          "ref": "dd11d722-91a7-45e1-9534-4bce34e188d7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7a9f7ce4-ffd1-4d27-bd4e-355d726134dd"
        },
        "item": {
          "id": "ce68fa79-566d-4e90-a455-de4db690c3ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "39110afc-4b66-4da8-b9bf-ea0e163a026c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c4c36b-472b-4bc6-b9f5-ccb1f570aac1",
        "cursor": {
          "ref": "6ff4d740-ef4f-4d2d-9f2f-4fa429257752",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cef70bcc-a5c9-4b5c-8597-06d837a8a33d"
        },
        "item": {
          "id": "77c4c36b-472b-4bc6-b9f5-ccb1f570aac1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "765286a8-d857-4366-9f46-53104c5c0638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf27aea-3a92-49de-b5f3-a1fc5eb40c54",
        "cursor": {
          "ref": "2c1a3fa7-1941-4997-bd7b-61a0acb978cb",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f03f2b66-d62e-4c40-8f73-06de9cae75f2"
        },
        "item": {
          "id": "6cf27aea-3a92-49de-b5f3-a1fc5eb40c54",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c8eb063a-b260-40fe-bf91-89c8a225b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a23383f-8c77-4052-9417-9c1ca7b14857",
        "cursor": {
          "ref": "1e3da0f1-4f75-408b-a3b0-81166695c9b2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "55f681ab-7175-4dae-8dc2-25dc3c0dd5b6"
        },
        "item": {
          "id": "7a23383f-8c77-4052-9417-9c1ca7b14857",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a233c3af-0e24-479a-a58f-9bf6ca8e3c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a8bf29-0ea6-4df8-b8d9-043cc87e03ee",
        "cursor": {
          "ref": "d1e3a15f-d078-4f5d-83e0-1bca7e2e276a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aee720b9-d1ee-4872-9aba-7882afb75ca5"
        },
        "item": {
          "id": "29a8bf29-0ea6-4df8-b8d9-043cc87e03ee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6d9954c7-7c59-485a-9551-9e609f535901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170e0334-eaaf-4797-889c-95533532a0ac",
        "cursor": {
          "ref": "49c274fb-4b4c-4f91-bfbe-32abd63ceeaa",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1a55d22b-8d45-4ac6-ba90-a523c6377281"
        },
        "item": {
          "id": "170e0334-eaaf-4797-889c-95533532a0ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1b08ae5f-4208-44cf-b75e-33467e14e5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8aeb70-7cbd-4009-aa44-275e7d9f81db",
        "cursor": {
          "ref": "2c78ba01-14c2-402e-8d59-f66c29d1943f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eaa09ff8-4ee3-4ab8-b815-7c25e9a96848"
        },
        "item": {
          "id": "1e8aeb70-7cbd-4009-aa44-275e7d9f81db",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d9fef438-0cb4-4075-a2f8-088177965fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9c0679-5655-4dc6-af72-550d65f53dfd",
        "cursor": {
          "ref": "571b1158-53af-498c-91ca-b8a08ff29148",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2763a376-d6a5-4f5c-b08d-4a3e8291810f"
        },
        "item": {
          "id": "0f9c0679-5655-4dc6-af72-550d65f53dfd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f60f6ab2-690e-403d-9b60-b185c8a31601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185d9398-8582-4666-b430-88e40bdbc45b",
        "cursor": {
          "ref": "535613b2-3ad2-454f-b661-23f899932baf",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1a533788-861d-4093-a2da-6295962a3d9d"
        },
        "item": {
          "id": "185d9398-8582-4666-b430-88e40bdbc45b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1fcb44cb-9e39-4ed5-a0c8-085829809319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e8f674-3af2-4213-9b7c-d4a6cf160f12",
        "cursor": {
          "ref": "2c3e1c4d-9aba-47d2-acc2-c8fe710784dd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e2e20682-eeaf-4c2a-9f69-b7a944e1c2de"
        },
        "item": {
          "id": "81e8f674-3af2-4213-9b7c-d4a6cf160f12",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ad1b02b6-fc83-4a00-a418-c2232c071bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acf8bbb-6691-4b29-af62-1bee18d36a6b",
        "cursor": {
          "ref": "63d3c09c-3b28-40ae-94e6-2551fee72e61",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "47ade07a-6525-4ca0-9e06-2ea57f9945c3"
        },
        "item": {
          "id": "6acf8bbb-6691-4b29-af62-1bee18d36a6b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ac6696a-abb3-4615-9b9d-967dbb583053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e92b0e-d027-47b6-bfa1-ef30c6835632",
        "cursor": {
          "ref": "55ee5768-0dc0-4ca0-a06d-0fd97122fea0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8aedaff7-850c-4520-9772-e0d369c53005"
        },
        "item": {
          "id": "59e92b0e-d027-47b6-bfa1-ef30c6835632",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "535b6b57-ad32-4c9c-ac8d-9deef654602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bd99f7-add0-4e63-8859-7860b59faa63",
        "cursor": {
          "ref": "1240efd8-637b-46ce-a042-e8cbf2514e75",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da12cc6c-e607-44c6-822f-dd10bd6cb5ac"
        },
        "item": {
          "id": "13bd99f7-add0-4e63-8859-7860b59faa63",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5382bcf5-a338-468e-a941-77e076970d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ca260-1e76-4206-af00-18c1ad0ed978",
        "cursor": {
          "ref": "d91cddac-ae57-4336-bfef-df1de66a9acb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c97006f9-08e3-4d34-b0c6-ff0c64127b21"
        },
        "item": {
          "id": "1b8ca260-1e76-4206-af00-18c1ad0ed978",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1363dbc1-ad36-4b5c-95b2-d2692e056f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba29f1-19b7-4aac-9fbd-4e411732b3d8",
        "cursor": {
          "ref": "baa55ccf-a323-4db4-9e19-3af48acb15fc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dfc79921-e945-4a95-967e-860e90aeeac5"
        },
        "item": {
          "id": "e9ba29f1-19b7-4aac-9fbd-4e411732b3d8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6195ea2a-938b-4039-bb2e-ea40ee5cbb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9bbb96-03b1-436d-a3db-c4947288e21d",
        "cursor": {
          "ref": "19d78a21-6c0f-43fa-8699-1a573d1aaeb1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f3c6cb8-c7e1-45d4-9b3b-d69343198c98"
        },
        "item": {
          "id": "bf9bbb96-03b1-436d-a3db-c4947288e21d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a4d4cc99-b6ea-43c8-b10a-55808d6e44aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed16e449-ad50-4cd5-88d2-90502d202960",
        "cursor": {
          "ref": "79523a3d-8918-45f4-a7d1-db46e03bdb5e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7eabd120-8578-4625-83b0-ffaf095cc826"
        },
        "item": {
          "id": "ed16e449-ad50-4cd5-88d2-90502d202960",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "357312b3-5476-4827-a1d2-e626091d3fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aed5641-86fb-4418-9bc1-404a14dce62e",
        "cursor": {
          "ref": "8e87a249-3864-4f8c-8761-96cd6f98dc98",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8fcd55d0-2e7c-40b0-b8c7-267d534b20ce"
        },
        "item": {
          "id": "8aed5641-86fb-4418-9bc1-404a14dce62e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50306a37-5fec-4e37-857d-6d27fffeaabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06876b3d-e3ff-409c-9afd-cd56be864ed4",
        "cursor": {
          "ref": "7b067e1b-25a8-4936-98b2-789e2cf35d33",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5e08fe31-2257-4d80-ad1a-c7c74304d740"
        },
        "item": {
          "id": "06876b3d-e3ff-409c-9afd-cd56be864ed4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1bdf3f45-0284-4532-983f-f0733d62fba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e639b6-6cd0-4b11-8b99-7fe702b4a858",
        "cursor": {
          "ref": "c4140faa-ca83-4315-9464-64de07417721",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "61915320-9313-465f-a4c9-559fe3d82909"
        },
        "item": {
          "id": "a7e639b6-6cd0-4b11-8b99-7fe702b4a858",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4a0f074-9fef-4ada-bf0c-fedfd9880656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f90834a-4bd8-4784-b896-2c4db9002658",
        "cursor": {
          "ref": "7b23705a-7774-4cca-aaa5-1a4c67d23bc9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7af2d583-07b2-4e97-9162-7296abb41e9c"
        },
        "item": {
          "id": "9f90834a-4bd8-4784-b896-2c4db9002658",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a106d0c0-7695-4513-9fa7-03fe322a87cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefb8c13-dc35-43a5-ad47-fd213ea7a8ff",
        "cursor": {
          "ref": "58c0c84d-d658-451a-976b-e9100f6e5b86",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca29eb02-d1c2-4285-91c8-c0477db60840"
        },
        "item": {
          "id": "cefb8c13-dc35-43a5-ad47-fd213ea7a8ff",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "09719c6e-0960-4e58-a48e-96a9a25b954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f8bd6d-e247-41aa-b5b0-10fbdb683d1b",
        "cursor": {
          "ref": "0789528e-d2fd-4bc4-a5f6-bf231e51eaf8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2022277d-f632-43b9-b0b0-354be6e1101a"
        },
        "item": {
          "id": "b4f8bd6d-e247-41aa-b5b0-10fbdb683d1b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c726590e-8b26-48e6-9111-ac6102c29a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0290fc-666d-4555-b4ef-c779696c285a",
        "cursor": {
          "ref": "ca0624fe-8adc-4654-9579-68d1082719c8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "17a2a87e-7adb-4578-8baf-70d82a31fe50"
        },
        "item": {
          "id": "6d0290fc-666d-4555-b4ef-c779696c285a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b39ad122-d113-4286-8399-9489b81cdc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c18628-fefc-4338-964f-561a80c10c83",
        "cursor": {
          "ref": "69650db2-dd39-4a53-ac32-a1b3b2027db7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "832ce22f-c671-4533-8277-a94b26d76c76"
        },
        "item": {
          "id": "81c18628-fefc-4338-964f-561a80c10c83",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e663bf4c-6dc6-4c79-bf28-d2f37808b9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b681b3d-67d9-492e-ab01-7426b7cff9d5",
        "cursor": {
          "ref": "4bb639ec-1cf6-464f-acc4-6a2e3558656d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "944b33f8-6f23-4036-b057-d90a7d171e24"
        },
        "item": {
          "id": "4b681b3d-67d9-492e-ab01-7426b7cff9d5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e4ee95f2-5111-49f0-be1f-fb9bf0b61edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eacafeb-b9a6-4794-8589-1311855cefda",
        "cursor": {
          "ref": "ef761a16-c78b-4b75-ace1-3fb81c6cfdd2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d2cfbcbc-a75a-4aca-ad29-5a3c26aff25e"
        },
        "item": {
          "id": "3eacafeb-b9a6-4794-8589-1311855cefda",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8b1b6301-102f-442c-aa0e-0825b976ed1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c113f0c-9633-417b-b63a-ebe859b4a01d",
        "cursor": {
          "ref": "8cad5ef2-5a96-4db7-8d82-77e5c12c4e15",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c06a5b5d-b103-4fc9-8bf3-3c340b624b13"
        },
        "item": {
          "id": "0c113f0c-9633-417b-b63a-ebe859b4a01d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2a0c4a9-ac07-4678-9093-4980569b5ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ca285b-feb1-430b-96c0-aedb664ad89e",
        "cursor": {
          "ref": "0f9bdc25-1a10-4aca-a0d2-053fd5f06bb0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2a628649-f49d-4460-91c8-ec2d0d048117"
        },
        "item": {
          "id": "61ca285b-feb1-430b-96c0-aedb664ad89e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e7a7742c-055e-4a1a-9323-1c344fe58ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780bd29d-bc9c-45d6-a19b-8719198038be",
        "cursor": {
          "ref": "df7f8790-6ac7-4ea2-8855-6542c2d685cd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b7db3810-9e4e-4ebc-a917-7aa787a336bf"
        },
        "item": {
          "id": "780bd29d-bc9c-45d6-a19b-8719198038be",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a20be38d-f6cc-4338-8b55-516a3deefdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26e6791-2e85-4da3-ab56-54c6e53c4997",
        "cursor": {
          "ref": "8d964d1b-9ca4-4a90-9211-0f1fe869ae9f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "38e4195f-dfe1-4fb4-ac4a-05f7b7d3190c"
        },
        "item": {
          "id": "e26e6791-2e85-4da3-ab56-54c6e53c4997",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b086a56d-e83d-42de-bf30-8d9a6cc474bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad49460b-75f6-4096-b126-0d458cd92a34",
        "cursor": {
          "ref": "ba4db7d4-593e-4fd9-a66b-2bc07f683c98",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4b6f27d4-67ab-423a-8a5b-e1551a84bfcb"
        },
        "item": {
          "id": "ad49460b-75f6-4096-b126-0d458cd92a34",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "82b610f8-13a5-48d2-8318-56866afb0f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834a6b7e-61e7-415c-a37e-92955ed7d1a0",
        "cursor": {
          "ref": "800cdcc2-3af5-4b42-bb68-9265f6978983",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "62337e21-a888-4169-87cd-2001809dfb10"
        },
        "item": {
          "id": "834a6b7e-61e7-415c-a37e-92955ed7d1a0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e977ab7b-a61f-46fd-a5ab-97d8e01dda1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53d4555-4cb6-430f-83f9-4fa33c48ff68",
        "cursor": {
          "ref": "16a604e2-2c48-491a-bd11-57caecad6d31",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f847d6b8-ddf9-4c1d-adcf-3a125cea20f8"
        },
        "item": {
          "id": "b53d4555-4cb6-430f-83f9-4fa33c48ff68",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd28e518-e52d-47d0-804e-26e144004a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d7b1c2-bace-4814-9c04-d2b12e9610c2",
        "cursor": {
          "ref": "b41e1bc2-3273-4a81-a98c-affc67e54ede",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "175c466c-8a9b-46a4-a892-67bb8843404a"
        },
        "item": {
          "id": "71d7b1c2-bace-4814-9c04-d2b12e9610c2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "78b2cd95-1208-4082-9fe0-865afe9c37dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15f317e-4b60-47b9-be89-0ec41ccd1c92",
        "cursor": {
          "ref": "0ebaa75f-5001-4064-a476-fa15c409acc5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4eb2d380-c465-483d-b16e-a65443300a78"
        },
        "item": {
          "id": "e15f317e-4b60-47b9-be89-0ec41ccd1c92",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c7565397-b790-46eb-8276-db3cde3f358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821d9179-f32e-46e2-a311-027e5ec17752",
        "cursor": {
          "ref": "10726e0a-9787-4646-9f84-4a5308d0e0af",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "79c5930e-0fd5-47aa-b1ad-528ffe71a002"
        },
        "item": {
          "id": "821d9179-f32e-46e2-a311-027e5ec17752",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c071d6d2-7cb4-4042-adae-e7ad6ab6e977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7a0113-5224-4c7a-893a-2aebd8f70521",
        "cursor": {
          "ref": "8afa84b3-5b14-4d2b-8f52-6ba15c09b581",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c279c12-0799-4e93-a878-80873f184dba"
        },
        "item": {
          "id": "aa7a0113-5224-4c7a-893a-2aebd8f70521",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e7732b8f-c9ee-4236-83f7-353e5d774b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7b3b6d-9037-42f9-b02d-f18ef92e4c7a",
        "cursor": {
          "ref": "4811113c-40ad-42e2-8a3f-d5fd21d1a7eb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fe9dfa3c-2d48-4eca-a864-151daf28b061"
        },
        "item": {
          "id": "1c7b3b6d-9037-42f9-b02d-f18ef92e4c7a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4367339e-f55d-40b4-8189-0bbd6bdf0400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aa24ac-8f15-47f3-a7b1-f89c1f5fd37e",
        "cursor": {
          "ref": "b40cf387-cd33-43a0-ac6e-f5a4154739a5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b79d1714-a3ea-4943-bef5-4f17a3824043"
        },
        "item": {
          "id": "72aa24ac-8f15-47f3-a7b1-f89c1f5fd37e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a584b305-6fe9-42cc-989f-2e6055124447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493cb561-582b-4d23-b1f2-a89ef82a1d5c",
        "cursor": {
          "ref": "0f15ab05-851b-49ea-9c5d-0c8512b6fdc9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b4daab01-0f14-455f-be2b-0dacff60e8d8"
        },
        "item": {
          "id": "493cb561-582b-4d23-b1f2-a89ef82a1d5c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "50b1c057-cfa3-4040-8a0c-0e333112a260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ffe48a-a20e-4164-aee3-c00688eb59b2",
        "cursor": {
          "ref": "8fb8785c-0bd7-4643-8406-f0fe3708465c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "70e99434-f64a-42e9-92e4-c3a0e58866d5"
        },
        "item": {
          "id": "88ffe48a-a20e-4164-aee3-c00688eb59b2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f99bce05-4d06-4c94-b704-84ab1b89783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fc471a-a3b8-403e-ba12-363141b083e0",
        "cursor": {
          "ref": "6dea5aca-1113-4d7b-ad93-56121ee3f463",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7972e5a-6f9c-4f97-bec9-4f668f30a2a3"
        },
        "item": {
          "id": "49fc471a-a3b8-403e-ba12-363141b083e0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "39dde416-4922-4f7c-8ee6-87d0ae22c3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66e4454-7225-4736-b5a6-246ca2d6732d",
        "cursor": {
          "ref": "9e51b4fb-b11f-4385-818f-5bdf735ac0f9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f04e6187-4e5d-4632-a945-903acea7e728"
        },
        "item": {
          "id": "a66e4454-7225-4736-b5a6-246ca2d6732d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c505d877-251a-49cc-bc8b-57706c86697e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34d68c1-4498-4bdd-9e54-436c80c49d98",
        "cursor": {
          "ref": "850ce12a-d10b-439b-94b4-e92dd2b6365e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5e1a25f7-d921-486d-88aa-d9bd4c4da4ad"
        },
        "item": {
          "id": "b34d68c1-4498-4bdd-9e54-436c80c49d98",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c19f0d09-ce23-4fb5-9f01-b79d80132398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadb764a-05cb-4454-8701-a30d1f8d4fd6",
        "cursor": {
          "ref": "7a3526a5-a07e-4692-b837-95850c3d35e2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2ca701ac-635f-42ce-ac79-eecc8adfb892"
        },
        "item": {
          "id": "fadb764a-05cb-4454-8701-a30d1f8d4fd6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "81e77398-5d75-4858-ad82-0378f789948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7349bc8b-3c15-4039-804d-5fb0d7a1fa6d",
        "cursor": {
          "ref": "f283404c-e3d0-4580-b14e-050e47ea3b33",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3dbc8689-66be-43d2-b49d-f13494eae6de"
        },
        "item": {
          "id": "7349bc8b-3c15-4039-804d-5fb0d7a1fa6d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b0b9e51e-11ba-486c-8d27-7eddfa475317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ed0ab8-b412-4328-be26-99a162fd5b1c",
        "cursor": {
          "ref": "4dcae918-a2fe-4594-82bf-c4d72fd25b2c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9c22302c-60bd-4a2c-88dd-ac75b3995e2e"
        },
        "item": {
          "id": "c2ed0ab8-b412-4328-be26-99a162fd5b1c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "60beaf3d-95c9-4484-89b7-e23581deb71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b44e73-c09b-430d-92fd-fbfc32ef2667",
        "cursor": {
          "ref": "09b17b22-d739-4fee-a994-bf7161cd31f6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7efae809-cee7-42b7-b3f1-397b622fe28f"
        },
        "item": {
          "id": "c4b44e73-c09b-430d-92fd-fbfc32ef2667",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4ad5f3a7-9fdf-4d8b-acf8-0046e90f3dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5d1b02-d6af-4e40-ab32-a3d19f701a97",
        "cursor": {
          "ref": "e26e7980-7ae1-4654-86d5-982dd8b6c114",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5f25634-996b-46d8-b31a-a32c08e0e311"
        },
        "item": {
          "id": "fb5d1b02-d6af-4e40-ab32-a3d19f701a97",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0695fc86-50ce-4594-abc6-92aea55d3e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce169553-db03-438d-b548-64b170b58f7f",
        "cursor": {
          "ref": "cd4c9240-a43e-4d62-b442-a7985f805c52",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "65655c4e-602e-4e9d-a9de-ea80ccb97917"
        },
        "item": {
          "id": "ce169553-db03-438d-b548-64b170b58f7f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2940754f-eb60-4dc3-b4f0-5fdac455b889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8e0ad7-96d2-40ed-bed4-870880d39d7d",
        "cursor": {
          "ref": "2b02466a-4f5c-4767-967c-381135edd580",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ca62edd0-834d-467b-b33b-654cd5beede6"
        },
        "item": {
          "id": "0a8e0ad7-96d2-40ed-bed4-870880d39d7d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fec7abdc-3582-4962-9573-89f341230898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf217d2-9e78-4910-8abd-3747277cb4bf",
        "cursor": {
          "ref": "723dd92f-a9b8-4c3d-8e40-a4d174ba1a80",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e1c4c7e9-aa12-48b5-bde3-d327c96243d8"
        },
        "item": {
          "id": "adf217d2-9e78-4910-8abd-3747277cb4bf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "69ce9c4a-300b-44ae-947b-3fdd3417de3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97520c2f-9fb7-4c52-857f-bb55175061d8",
        "cursor": {
          "ref": "b24f118d-efcc-465c-8a55-e516050f4f64",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "950e3c2f-f73d-4d05-bfb7-f42a93f74b5f"
        },
        "item": {
          "id": "97520c2f-9fb7-4c52-857f-bb55175061d8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7d177f67-8c0d-4372-9010-3b39cffbe623",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abd23c3-bd58-4e7a-a20c-b94a623ebe0e",
        "cursor": {
          "ref": "f56788b1-57bc-42e0-aa92-28ddad371971",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "928f481a-612f-498b-b1b9-5cbb1ecd1884"
        },
        "item": {
          "id": "6abd23c3-bd58-4e7a-a20c-b94a623ebe0e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0eda8908-d290-4c16-8f65-055f90f15842",
          "status": "OK",
          "code": 200,
          "responseTime": 2172,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "399f77b1-7538-4dbf-ba53-49799fd595c3",
        "cursor": {
          "ref": "c23357f9-8c6a-4291-813f-acdaf211b5e4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "75a4fbb0-753c-4168-b95c-2483ca0a215d"
        },
        "item": {
          "id": "399f77b1-7538-4dbf-ba53-49799fd595c3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ded84595-75d6-4248-a120-8f8873899e1b",
          "status": "OK",
          "code": 200,
          "responseTime": 2713,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6a7615-60c4-4ce9-8ba1-0709f275cb83",
        "cursor": {
          "ref": "3b2047c5-759e-4a16-b277-735bd3d1a9ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "990cdee3-5f4e-4d93-998d-6a6e52440660"
        },
        "item": {
          "id": "fd6a7615-60c4-4ce9-8ba1-0709f275cb83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd31ab97-0c66-4808-a702-fd538da7dfdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6a7615-60c4-4ce9-8ba1-0709f275cb83",
        "cursor": {
          "ref": "3b2047c5-759e-4a16-b277-735bd3d1a9ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "990cdee3-5f4e-4d93-998d-6a6e52440660"
        },
        "item": {
          "id": "fd6a7615-60c4-4ce9-8ba1-0709f275cb83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd31ab97-0c66-4808-a702-fd538da7dfdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cc1114-6007-490a-8d8a-27fa340bdb7c",
        "cursor": {
          "ref": "31d7c960-f5e1-47c2-8020-a10b5f81a85e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6f52bef8-d034-46c2-95a3-ec976807f015"
        },
        "item": {
          "id": "80cc1114-6007-490a-8d8a-27fa340bdb7c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8647fc42-0d1f-4bc4-a628-f82358a0eccb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511034b7-3643-4053-b442-c43b7f4eef1c",
        "cursor": {
          "ref": "8a697c59-148c-4a90-b786-7615d6dc7ba8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7a9d541c-e633-4b81-b7e7-e257ba541e46"
        },
        "item": {
          "id": "511034b7-3643-4053-b442-c43b7f4eef1c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea46769a-add7-4768-94f0-67405c62086e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}